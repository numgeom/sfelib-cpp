// Copyright 2022 The NumGeom Group, Stony Brook University
//
// sfe_shapefuncs_rowmajor.cpp
//
// Code generation for function 'sfe_shapefuncs_rowmajor'
//

// Include files
#include "sfe_shapefuncs_rowmajor.h"
#include "m2c_lib.h"
#include "sfe_shapefuncs_rowmajor.h"
#include <algorithm>
#include <cmath>

// Variable Definitions
namespace sfe_sfuncs {
static const signed char iv[125]{
    1, 2, 2, 1, 1, 2, 2, 1, 3, 4, 5, 2, 2, 2, 5, 4, 3, 1, 1, 1, 1, 1, 1, 2, 2,
    2, 2, 2, 2, 1, 1, 1, 3, 4, 5, 2, 2, 2, 5, 4, 3, 1, 1, 1, 3, 4, 5, 5, 5, 4,
    3, 3, 4, 3, 4, 5, 5, 5, 4, 3, 3, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 4, 3, 3,
    3, 4, 5, 5, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 5, 5, 5, 4, 3, 3, 4, 3, 4,
    5, 5, 5, 4, 3, 3, 4, 3, 4, 5, 5, 5, 4, 3, 3, 4, 3, 4, 5, 5, 5, 4, 3, 3, 4};

static const signed char iv1[125]{
    1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 3, 4, 5, 2, 2, 2, 5, 4, 3, 1, 1, 1, 1, 1,
    1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 4, 5, 2, 2, 2, 5, 4, 3, 3, 3, 3, 4, 5, 5,
    5, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 5, 5, 5, 4, 3, 3, 4, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 5, 4, 3, 3, 3, 4, 5, 5, 4, 3, 3, 3, 4, 5, 5, 5, 4, 4, 3, 3,
    3, 4, 5, 5, 5, 4, 4, 3, 3, 3, 4, 5, 5, 5, 4, 4, 3, 3, 3, 4, 5, 5, 5, 4, 4};

static const signed char iv2[125]{
    1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 5, 3, 4,
    5, 3, 4, 5, 3, 4, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 3, 3, 3, 4, 5, 5, 5, 4, 4, 3, 3, 3, 4, 5, 5, 5, 4, 4, 3, 3, 3, 4,
    5, 5, 5, 4, 4, 3, 3, 3, 4, 5, 5, 5, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5};

static const signed char iv3[216]{
    1, 2, 2, 1, 1, 2, 2, 1, 3, 4, 5, 6, 2, 2, 2, 2, 6, 5, 4, 3, 1, 1, 1, 1,
    1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 4, 5, 6, 2, 2, 2, 2,
    6, 5, 4, 3, 1, 1, 1, 1, 3, 4, 5, 6, 6, 6, 6, 5, 4, 3, 3, 3, 4, 5, 5, 4,
    3, 4, 5, 6, 6, 6, 6, 5, 4, 3, 3, 3, 4, 5, 5, 4, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 6, 5, 4, 3, 3, 3, 3, 4, 5, 6, 6, 6, 5, 4, 4, 5,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 5, 6, 6, 6, 6, 5,
    4, 3, 3, 3, 4, 5, 5, 4, 3, 4, 5, 6, 6, 6, 6, 5, 4, 3, 3, 3, 4, 5, 5, 4,
    3, 4, 5, 6, 6, 6, 6, 5, 4, 3, 3, 3, 4, 5, 5, 4, 3, 4, 5, 6, 6, 6, 6, 5,
    4, 3, 3, 3, 4, 5, 5, 4, 3, 4, 5, 6, 6, 6, 6, 5, 4, 3, 3, 3, 4, 5, 5, 4};

static const signed char iv4[216]{
    1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 3, 4, 5, 6, 2, 2, 2, 2, 6, 5, 4, 3,
    1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 4, 5, 6,
    2, 2, 2, 2, 6, 5, 4, 3, 3, 3, 3, 3, 4, 5, 6, 6, 6, 6, 5, 4, 4, 4, 5, 5,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 5, 6, 6, 6, 6, 5,
    4, 3, 3, 3, 4, 5, 5, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    6, 5, 4, 3, 3, 3, 3, 4, 5, 6, 6, 6, 5, 4, 4, 5, 3, 3, 3, 3, 4, 5, 6, 6,
    6, 6, 5, 4, 4, 4, 5, 5, 3, 3, 3, 3, 4, 5, 6, 6, 6, 6, 5, 4, 4, 4, 5, 5,
    3, 3, 3, 3, 4, 5, 6, 6, 6, 6, 5, 4, 4, 4, 5, 5, 3, 3, 3, 3, 4, 5, 6, 6,
    6, 6, 5, 4, 4, 4, 5, 5, 3, 3, 3, 3, 4, 5, 6, 6, 6, 6, 5, 4, 4, 4, 5, 5};

static const signed char iv5[216]{
    1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    3, 4, 5, 6, 3, 4, 5, 6, 3, 4, 5, 6, 3, 4, 5, 6, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    3, 3, 3, 3, 4, 5, 6, 6, 6, 6, 5, 4, 4, 4, 5, 5, 3, 3, 3, 3, 4, 5, 6, 6,
    6, 6, 5, 4, 4, 4, 5, 5, 3, 3, 3, 3, 4, 5, 6, 6, 6, 6, 5, 4, 4, 4, 5, 5,
    3, 3, 3, 3, 4, 5, 6, 6, 6, 6, 5, 4, 4, 4, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6};

static const signed char iv6[27]{1, 2, 2, 1, 1, 2, 2, 1, 3, 2, 3, 1, 1, 2,
                                 2, 1, 3, 2, 3, 1, 3, 3, 2, 3, 1, 3, 3};

static const signed char iv7[27]{1, 1, 2, 2, 1, 1, 2, 2, 1, 3, 2, 3, 1, 1,
                                 2, 2, 1, 3, 2, 3, 3, 1, 3, 2, 3, 3, 3};

static const signed char iv8[27]{1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3,
                                 3, 3, 2, 2, 2, 2, 1, 3, 3, 3, 3, 2, 3};

static const signed char iv9[343]{
    1, 2, 2, 1, 1, 2, 2, 1, 3, 4, 5, 6, 7, 2, 2, 2, 2, 2, 7, 6, 5, 4, 3, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 4,
    5, 6, 7, 2, 2, 2, 2, 2, 7, 6, 5, 4, 3, 1, 1, 1, 1, 1, 3, 4, 5, 6, 7, 7, 7,
    7, 7, 6, 5, 4, 3, 3, 3, 3, 4, 5, 6, 6, 6, 5, 4, 4, 5, 3, 4, 5, 6, 7, 7, 7,
    7, 7, 6, 5, 4, 3, 3, 3, 3, 4, 5, 6, 6, 6, 5, 4, 4, 5, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 6, 5, 4, 3, 3, 3,
    3, 3, 4, 5, 6, 7, 7, 7, 7, 6, 5, 4, 4, 4, 5, 6, 6, 5, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 5, 6, 7, 7, 7,
    7, 7, 6, 5, 4, 3, 3, 3, 3, 4, 5, 6, 6, 6, 5, 4, 4, 5, 3, 4, 5, 6, 7, 7, 7,
    7, 7, 6, 5, 4, 3, 3, 3, 3, 4, 5, 6, 6, 6, 5, 4, 4, 5, 3, 4, 5, 6, 7, 7, 7,
    7, 7, 6, 5, 4, 3, 3, 3, 3, 4, 5, 6, 6, 6, 5, 4, 4, 5, 3, 4, 5, 6, 7, 7, 7,
    7, 7, 6, 5, 4, 3, 3, 3, 3, 4, 5, 6, 6, 6, 5, 4, 4, 5, 3, 4, 5, 6, 7, 7, 7,
    7, 7, 6, 5, 4, 3, 3, 3, 3, 4, 5, 6, 6, 6, 5, 4, 4, 5, 3, 4, 5, 6, 7, 7, 7,
    7, 7, 6, 5, 4, 3, 3, 3, 3, 4, 5, 6, 6, 6, 5, 4, 4, 5};

static const signed char iv10[343]{
    1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 3, 4, 5, 6, 7, 2, 2, 2, 2, 2, 7, 6,
    5, 4, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
    1, 1, 1, 3, 4, 5, 6, 7, 2, 2, 2, 2, 2, 7, 6, 5, 4, 3, 3, 3, 3, 3, 3, 4, 5,
    6, 7, 7, 7, 7, 7, 6, 5, 4, 4, 4, 4, 5, 6, 6, 6, 5, 5, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 5, 6, 7, 7, 7,
    7, 7, 6, 5, 4, 3, 3, 3, 3, 4, 5, 6, 6, 6, 5, 4, 4, 5, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 6, 5, 4, 3, 3, 3,
    3, 3, 4, 5, 6, 7, 7, 7, 7, 6, 5, 4, 4, 4, 5, 6, 6, 5, 3, 3, 3, 3, 3, 4, 5,
    6, 7, 7, 7, 7, 7, 6, 5, 4, 4, 4, 4, 5, 6, 6, 6, 5, 5, 3, 3, 3, 3, 3, 4, 5,
    6, 7, 7, 7, 7, 7, 6, 5, 4, 4, 4, 4, 5, 6, 6, 6, 5, 5, 3, 3, 3, 3, 3, 4, 5,
    6, 7, 7, 7, 7, 7, 6, 5, 4, 4, 4, 4, 5, 6, 6, 6, 5, 5, 3, 3, 3, 3, 3, 4, 5,
    6, 7, 7, 7, 7, 7, 6, 5, 4, 4, 4, 4, 5, 6, 6, 6, 5, 5, 3, 3, 3, 3, 3, 4, 5,
    6, 7, 7, 7, 7, 7, 6, 5, 4, 4, 4, 4, 5, 6, 6, 6, 5, 5, 3, 3, 3, 3, 3, 4, 5,
    6, 7, 7, 7, 7, 7, 6, 5, 4, 4, 4, 4, 5, 6, 6, 6, 5, 5};

static const signed char iv11[343]{
    1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 3, 4, 5, 6, 7, 3, 4, 5, 6, 7, 3, 4, 5, 6, 7, 3, 4, 5, 6, 7, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 4, 5,
    6, 7, 7, 7, 7, 7, 6, 5, 4, 4, 4, 4, 5, 6, 6, 6, 5, 5, 3, 3, 3, 3, 3, 4, 5,
    6, 7, 7, 7, 7, 7, 6, 5, 4, 4, 4, 4, 5, 6, 6, 6, 5, 5, 3, 3, 3, 3, 3, 4, 5,
    6, 7, 7, 7, 7, 7, 6, 5, 4, 4, 4, 4, 5, 6, 6, 6, 5, 5, 3, 3, 3, 3, 3, 4, 5,
    6, 7, 7, 7, 7, 7, 6, 5, 4, 4, 4, 4, 5, 6, 6, 6, 5, 5, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6,
    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7};

static const signed char iv12[64]{
    1, 2, 2, 1, 1, 2, 2, 1, 3, 4, 2, 2, 4, 3, 1, 1, 1, 1, 2, 2, 2, 2,
    1, 1, 3, 4, 2, 2, 4, 3, 1, 1, 3, 4, 4, 3, 3, 4, 4, 3, 2, 2, 2, 2,
    4, 3, 3, 4, 1, 1, 1, 1, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3};

static const signed char iv13[64]{
    1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 3, 4, 2, 2, 4, 3, 1, 1, 1, 1, 2, 2,
    2, 2, 1, 1, 3, 4, 2, 2, 4, 3, 3, 3, 4, 4, 1, 1, 1, 1, 3, 4, 4, 3,
    2, 2, 2, 2, 4, 3, 3, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4};

static const signed char iv14[64]{
    1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 4, 3, 4,
    3, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 4, 4, 3, 3, 4, 4,
    3, 3, 4, 4, 3, 3, 4, 4, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4};

static const signed char iv15[126]{
    1,  2,  3,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15,
    1,  1,  1,  1,  2,  2,  2,  2,  3,  3,  3,  3,  4,  5,  6,  7,  8,  9,
    10, 11, 12, 13, 14, 15, 4,  5,  6,  7,  7,  7,  7,  6,  5,  4,  4,  4,
    5,  6,  6,  5,  8,  9,  10, 11, 11, 11, 11, 10, 9,  8,  8,  8,  9,  10,
    10, 9,  12, 13, 14, 15, 15, 15, 15, 14, 13, 12, 12, 12, 13, 14, 14, 13,
    16, 17, 18, 19, 20, 21, 16, 17, 18, 19, 20, 21, 16, 17, 18, 19, 20, 21,
    16, 17, 18, 19, 20, 21, 16, 17, 18, 19, 20, 21, 16, 17, 18, 19, 20, 21};

static const signed char iv16[126]{
    1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 5,
    6, 3, 4, 5, 6, 3, 4, 5, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    3, 3, 3, 3, 4, 5, 6, 6, 6, 6, 5, 4, 4, 4, 5, 5, 3, 3, 3, 3, 4,
    5, 6, 6, 6, 6, 5, 4, 4, 4, 5, 5, 3, 3, 3, 3, 4, 5, 6, 6, 6, 6,
    5, 4, 4, 4, 5, 5, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3,
    3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6};

static const signed char iv17[18]{1, 2, 3, 1, 2, 3, 4, 5, 6,
                                  1, 2, 3, 4, 5, 6, 4, 5, 6};

static const signed char iv18[18]{1, 1, 1, 2, 2, 2, 1, 1, 1,
                                  3, 3, 3, 2, 2, 2, 3, 3, 3};

static const signed char iv19[196]{
    1,  2,  3,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15,
    16, 17, 18, 1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  3,  3,  3,  3,  3,
    4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 4,  5,  6,
    7,  8,  8,  8,  8,  8,  7,  6,  5,  4,  4,  4,  4,  5,  6,  7,  7,  7,
    6,  5,  5,  6,  9,  10, 11, 12, 13, 13, 13, 13, 13, 12, 11, 10, 9,  9,
    9,  9,  10, 11, 12, 12, 12, 11, 10, 10, 11, 14, 15, 16, 17, 18, 18, 18,
    18, 18, 17, 16, 15, 14, 14, 14, 14, 15, 16, 17, 17, 17, 16, 15, 15, 16,
    19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 19, 20, 21, 22, 23, 24, 25, 26,
    27, 28, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 19, 20, 21, 22, 23, 24,
    25, 26, 27, 28, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 19, 20, 21, 22,
    23, 24, 25, 26, 27, 28, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28};

static const signed char iv20[196]{
    1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 5, 6,
    7, 3, 4, 5, 6, 7, 3, 4, 5, 6, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 3, 3, 3, 3, 3, 4, 5, 6, 7, 7, 7, 7, 7, 6, 5, 4, 4, 4, 4, 5, 6, 6, 6, 5,
    5, 3, 3, 3, 3, 3, 4, 5, 6, 7, 7, 7, 7, 7, 6, 5, 4, 4, 4, 4, 5, 6, 6, 6, 5,
    5, 3, 3, 3, 3, 3, 4, 5, 6, 7, 7, 7, 7, 7, 6, 5, 4, 4, 4, 4, 5, 6, 6, 6, 5,
    5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
    5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7};

static const signed char iv21[40]{1, 2, 3, 1, 2, 3, 4, 5, 6, 7,  8,  9, 1, 1,
                                  2, 2, 3, 3, 4, 5, 6, 7, 8, 9,  10, 4, 5, 5,
                                  4, 6, 7, 7, 6, 8, 9, 9, 8, 10, 10, 10};

static const signed char iv22[40]{1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 4,
                                  3, 4, 3, 4, 2, 2, 2, 2, 2, 2, 1, 3, 3, 4,
                                  4, 3, 3, 4, 4, 3, 3, 4, 4, 2, 3, 4};

static const signed char iv23[75]{
    1,  2,  3,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 1,  1,  1,  2,
    2,  2,  3,  3,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 4,  5,
    6,  6,  6,  5,  4,  4,  5,  7,  8,  9,  9,  9,  8,  7,  7,  8,  10, 11, 12,
    12, 12, 11, 10, 10, 11, 13, 14, 15, 13, 14, 15, 13, 14, 15, 13, 14, 15};

static const signed char iv24[75]{
    1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 5, 3, 4, 5, 3, 4, 5, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 4, 5, 5, 5, 4, 4, 3, 3, 3, 4, 5,
    5, 5, 4, 4, 3, 3, 3, 4, 5, 5, 5, 4, 4, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5};

static const signed char iv25[16]{1, 2, 2, 1, 3, 4, 2, 2,
                                  4, 3, 1, 1, 3, 4, 4, 3};

static const signed char iv26[16]{1, 1, 2, 2, 1, 1, 3, 4,
                                  2, 2, 4, 3, 3, 3, 4, 4};

static const signed char iv27[25]{1, 2, 2, 1, 3, 4, 5, 2, 2, 2, 5, 4, 3,
                                  1, 1, 1, 3, 4, 5, 5, 5, 4, 3, 3, 4};

static const signed char iv28[25]{1, 1, 2, 2, 1, 1, 1, 3, 4, 5, 2, 2, 2,
                                  5, 4, 3, 3, 3, 3, 4, 5, 5, 5, 4, 4};

static const signed char iv29[36]{1, 2, 2, 1, 3, 4, 5, 6, 2, 2, 2, 2,
                                  6, 5, 4, 3, 1, 1, 1, 1, 3, 4, 5, 6,
                                  6, 6, 6, 5, 4, 3, 3, 3, 4, 5, 5, 4};

static const signed char iv30[36]{1, 1, 2, 2, 1, 1, 1, 1, 3, 4, 5, 6,
                                  2, 2, 2, 2, 6, 5, 4, 3, 3, 3, 3, 3,
                                  4, 5, 6, 6, 6, 6, 5, 4, 4, 4, 5, 5};

static const signed char iv31[49]{
    1, 2, 2, 1, 3, 4, 5, 6, 7, 2, 2, 2, 2, 2, 7, 6, 5, 4, 3, 1, 1, 1, 1, 1, 3,
    4, 5, 6, 7, 7, 7, 7, 7, 6, 5, 4, 3, 3, 3, 3, 4, 5, 6, 6, 6, 5, 4, 4, 5};

static const signed char iv32[49]{
    1, 1, 2, 2, 1, 1, 1, 1, 1, 3, 4, 5, 6, 7, 2, 2, 2, 2, 2, 7, 6, 5, 4, 3, 3,
    3, 3, 3, 3, 4, 5, 6, 7, 7, 7, 7, 7, 6, 5, 4, 4, 4, 4, 5, 6, 6, 6, 5, 5};

static const signed char iv33[9]{1, 2, 2, 1, 3, 2, 3, 1, 3};

static const signed char iv34[9]{1, 1, 2, 2, 1, 3, 2, 3, 3};

} // namespace sfe_sfuncs

// Function Definitions
namespace sfe_sfuncs {
// bar_2_ncoords - Obtain nodal coordinates in master element for bar_2
void bar_2_ncoords(double natcoords[2])
{
  natcoords[0] = 0.0;
  natcoords[1] = 1.0;
}

// bar_2_sfunc - Compute shape functions and their derivatives of bar_2
void bar_2_sfunc(double xi, double sfvals[2])
{
  sfvals[0] = -xi + 1.0;
  sfvals[1] = xi;
}

// bar_2_sfunc - Compute shape functions and their derivatives of bar_2
void bar_2_sfunc(double xi, double sfvals[2], double sdvals[2])
{
  sfvals[0] = -xi + 1.0;
  sfvals[1] = xi;
  sdvals[0] = -1.0;
  sdvals[1] = 1.0;
}

// bar_3_ncoords - Obtain nodal coordinates in master element for bar_3
void bar_3_ncoords(double natcoords[3])
{
  natcoords[0] = 0.0;
  natcoords[1] = 1.0;
  natcoords[2] = 0.5;
}

// bar_3_sfunc - Compute shape functions and their derivatives of bar_3
void bar_3_sfunc(double xi, double sfvals[3])
{
  double t3;
  double t4;
  t3 = xi * xi;
  t4 = t3 * 2.0;
  sfvals[0] = (t4 - 3.0 * xi) + 1.0;
  sfvals[1] = t4 - xi;
  sfvals[2] = xi * 4.0 - t3 * 4.0;
}

// bar_3_sfunc - Compute shape functions and their derivatives of bar_3
void bar_3_sfunc(double xi, double sfvals[3], double sdvals[3])
{
  double t2;
  double t3;
  double t4;
  t2 = xi * 4.0;
  t3 = xi * xi;
  t4 = t3 * 2.0;
  sfvals[0] = (t4 - 3.0 * xi) + 1.0;
  sfvals[1] = t4 - xi;
  sfvals[2] = t2 - t3 * 4.0;
  sdvals[0] = t2 - 3.0;
  sdvals[1] = t2 - 1.0;
  sdvals[2] = -8.0 * xi + 4.0;
}

// bar_4_ncoords - Obtain nodal coordinates in master element for bar_4
void bar_4_ncoords(double natcoords[4])
{
  natcoords[0] = 0.0;
  natcoords[1] = 1.0;
  natcoords[2] = 0.33333333333333331;
  natcoords[3] = 0.66666666666666663;
}

// bar_4_sfunc - Compute shape functions and their derivatives of bar_4
void bar_4_sfunc(double xi, double sfvals[4])
{
  double t2;
  double t3;
  double t5;
  double t7;
  t2 = xi * xi;
  t3 = std::pow(xi, 3.0);
  t5 = t3 * 4.5;
  t7 = t3 * 13.5;
  sfvals[0] = ((t2 * 9.0 - t5) + -5.5 * xi) + 1.0;
  sfvals[1] = (t2 * -4.5 + t5) + xi;
  sfvals[2] = (t2 * -22.5 + xi * 9.0) + t7;
  sfvals[3] = (t2 * 18.0 - t7) + -4.5 * xi;
}

// bar_4_sfunc - Compute shape functions and their derivatives of bar_4
void bar_4_sfunc(double xi, double sfvals[4], double sdvals[4])
{
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  t2 = xi * xi;
  t3 = std::pow(xi, 3.0);
  t4 = xi * 9.0;
  t5 = t3 * 4.5;
  t6 = t2 * 13.5;
  t7 = t3 * 13.5;
  sfvals[0] = ((t2 * 9.0 - t5) + -5.5 * xi) + 1.0;
  sfvals[1] = (t2 * -4.5 + t5) + xi;
  sfvals[2] = (t2 * -22.5 + t4) + t7;
  sfvals[3] = (t2 * 18.0 - t7) + -4.5 * xi;
  t8 = t2 * 40.5;
  sdvals[0] = (-t6 + 18.0 * xi) - 5.5;
  sdvals[1] = (-t4 + t6) + 1.0;
  sdvals[2] = (t8 - 45.0 * xi) + 9.0;
  sdvals[3] = (-t8 + 36.0 * xi) - 4.5;
}

// bar_5_ncoords - Obtain nodal coordinates in master element for bar_5
void bar_5_ncoords(double natcoords[5])
{
  static const double dv[5]{0.0, 1.0, 0.25, 0.5, 0.75};
  for (int i{0}; i < 5; i++) {
    natcoords[i] = dv[i];
  }
}

// bar_5_sfunc - Compute shape functions and their derivatives of bar_5
void bar_5_sfunc(double xi, double sfvals[5])
{
  double t2;
  double t3;
  double t4;
  double t5;
  double t7;
  t2 = xi * xi;
  t3 = std::pow(xi, 3.0);
  t4 = t2 * t2;
  t5 = t4 * 10.666666666666666;
  t7 = t4 * 42.666666666666664;
  sfvals[0] = (((t2 * 23.333333333333332 - t3 * 26.666666666666668) + t5) +
               -8.3333333333333339 * xi) +
              1.0;
  sfvals[1] = ((t2 * 7.333333333333333 - t3 * 16.0) + t5) - xi;
  sfvals[2] = ((t2 * -69.333333333333329 + t3 * 96.0) - t7) + 16.0 * xi;
  sfvals[3] = ((t2 * 76.0 - t3 * 128.0) + t4 * 64.0) - 12.0 * xi;
  sfvals[4] = ((t2 * -37.333333333333336 + t3 * 74.666666666666671) - t7) +
              5.333333333333333 * xi;
}

// bar_5_sfunc - Compute shape functions and their derivatives of bar_5
void bar_5_sfunc(double xi, double sfvals[5], double sdvals[5])
{
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t9;
  t2 = xi * xi;
  t3 = std::pow(xi, 3.0);
  t4 = t2 * t2;
  t6 = t3 * 42.666666666666664;
  t9 = t3 * 170.66666666666666;
  t5 = t4 * 10.666666666666666;
  t7 = t4 * 42.666666666666664;
  sfvals[0] = (((t2 * 23.333333333333332 - t3 * 26.666666666666668) + t5) +
               -8.3333333333333339 * xi) +
              1.0;
  sfvals[1] = ((t2 * 7.333333333333333 - t3 * 16.0) + t5) - xi;
  sfvals[2] = ((t2 * -69.333333333333329 + t3 * 96.0) - t7) + 16.0 * xi;
  sfvals[3] = ((t2 * 76.0 - t3 * 128.0) + t4 * 64.0) - 12.0 * xi;
  sfvals[4] = ((t2 * -37.333333333333336 + t3 * 74.666666666666671) - t7) +
              5.333333333333333 * xi;
  sdvals[0] =
      ((t2 * -80.0 + t6) + 46.666666666666664 * xi) - 8.3333333333333339;
  sdvals[1] = ((t2 * -48.0 + t6) + 14.666666666666666 * xi) - 1.0;
  sdvals[2] = ((t2 * 288.0 - t9) + -138.66666666666666 * xi) + 16.0;
  sdvals[3] = ((t2 * -384.0 + t3 * 256.0) + 152.0 * xi) - 12.0;
  sdvals[4] =
      ((t2 * 224.0 - t9) + -74.666666666666671 * xi) + 5.333333333333333;
}

// bar_6_ncoords - Obtain nodal coordinates in master element for bar_6
void bar_6_ncoords(double natcoords[6])
{
  static const double dv[6]{0.0, 1.0, 0.2, 0.4, 0.6, 0.8};
  for (int i{0}; i < 6; i++) {
    natcoords[i] = dv[i];
  }
}

// bar_6_sfunc - Compute shape functions and their derivatives of bar_6
void bar_6_sfunc(double xi, double sfvals[6])
{
  double t10;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  t2 = xi * xi;
  t3 = std::pow(xi, 3.0);
  t5 = std::pow(xi, 5.0);
  t6 = xi * 25.0;
  t4 = t2 * t2;
  t7 = t5 * 26.041666666666668;
  t8 = t5 * 260.41666666666669;
  t10 = t5 * 130.20833333333329;
  sfvals[0] = ((((t2 * 46.875 - t3 * 88.541666666666671) + t4 * 78.125) - t7) +
               -11.416666666666666 * xi) +
              1.0;
  sfvals[1] = (((t2 * -10.416666666666666 + t3 * 36.458333333333336) -
                t4 * 52.083333333333336) +
               t7) +
              xi;
  sfvals[2] = (((t2 * -160.41666666666671 + t3 * 369.79166666666669) -
                t4 * 364.58333333333331) +
               t6) +
              t10;
  sfvals[3] = (((t2 * 222.91666666666671 - t3 * 614.58333333333326) +
                t4 * 677.08333333333326) -
               t6) -
              t8;
  sfvals[4] = (((t2 * -162.5 + t3 * 510.41666666666669) - t4 * 625.0) + t8) +
              16.666666666666668 * xi;
  sfvals[5] = (((t2 * 63.541666666666671 - t3 * 213.54166666666671) +
                t4 * 286.45833333333331) -
               t10) +
              -6.25 * xi;
}

// bar_6_sfunc - Compute shape functions and their derivatives of bar_6
void bar_6_sfunc(double xi, double sfvals[6], double sdvals[6])
{
  double t10;
  double t11;
  double t12;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;
  t2 = xi * xi;
  t3 = std::pow(xi, 3.0);
  t5 = std::pow(xi, 5.0);
  t6 = xi * 25.0;
  t4 = t2 * t2;
  t7 = t5 * 26.041666666666668;
  t8 = t5 * 260.41666666666669;
  t10 = t5 * 130.20833333333329;
  sfvals[0] = ((((t2 * 46.875 - t3 * 88.541666666666671) + t4 * 78.125) - t7) +
               -11.416666666666666 * xi) +
              1.0;
  sfvals[1] = (((t2 * -10.416666666666666 + t3 * 36.458333333333336) -
                t4 * 52.083333333333336) +
               t7) +
              xi;
  sfvals[2] = (((t2 * -160.41666666666671 + t3 * 369.79166666666669) -
                t4 * 364.58333333333331) +
               t6) +
              t10;
  sfvals[3] = (((t2 * 222.91666666666671 - t3 * 614.58333333333326) +
                t4 * 677.08333333333326) -
               t6) -
              t8;
  sfvals[4] = (((t2 * -162.5 + t3 * 510.41666666666669) - t4 * 625.0) + t8) +
              16.666666666666668 * xi;
  sfvals[5] = (((t2 * 63.541666666666671 - t3 * 213.54166666666671) +
                t4 * 286.45833333333331) -
               t10) +
              -6.25 * xi;
  t9 = t4 * 130.20833333333329;
  t11 = t4 * 1302.083333333333;
  t12 = t4 * 651.04166666666674;
  sdvals[0] =
      (((t2 * -265.625 + t3 * 312.5) - t9) + 93.75 * xi) - 11.416666666666666;
  sdvals[1] = (((t2 * 109.375 - t3 * 208.33333333333334) + t9) +
               -20.833333333333332 * xi) +
              1.0;
  sdvals[2] = (((t2 * 1109.375 - t3 * 1458.333333333333) + t12) +
               -320.83333333333331 * xi) +
              25.0;
  sdvals[3] = (((t2 * -1843.75 + t3 * 2708.333333333333) - t11) +
               445.83333333333331 * xi) -
              25.0;
  sdvals[4] =
      (((t2 * 1531.25 - t3 * 2500.0) + t11) - 325.0 * xi) + 16.666666666666668;
  sdvals[5] = (((t2 * -640.625 + t3 * 1145.833333333333) - t12) +
               127.0833333333333 * xi) -
              6.25;
}

// bar_7_ncoords - Obtain nodal coordinates in master element for bar_7
void bar_7_ncoords(double natcoords[7])
{
  static const double dv[7]{0.0,
                            1.0,
                            0.16666666666666671,
                            0.33333333333333331,
                            0.5,
                            0.66666666666666663,
                            0.83333333333333337};
  for (int i{0}; i < 7; i++) {
    natcoords[i] = dv[i];
  }
}

// bar_7_sfunc - Compute shape functions and their derivatives of bar_7
void bar_7_sfunc(double xi, double sfvals[7])
{
  double t11;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t9;
  t2 = xi * xi;
  t3 = std::pow(xi, 3.0);
  t5 = std::pow(xi, 5.0);
  t4 = t2 * t2;
  t6 = std::pow(t2, 3.0);
  t7 = t6 * 972.0;
  t9 = t6 * 64.8;
  t11 = t6 * 388.8;
  sfvals[0] = (((((t2 * 81.2 - t3 * 220.5) + t4 * 315.0) - t5 * 226.8) + t9) +
               -14.7 * xi) +
              1.0;
  sfvals[1] = ((((t2 * 13.7 - t3 * 67.5) + t4 * 153.0) - t5 * 162.0) + t9) - xi;
  sfvals[2] =
      ((((t2 * -313.2 + t3 * 1044.0) - t4 * 1674.0) + t5 * 1296.0) - t11) +
      36.0 * xi;
  sfvals[3] =
      ((((t2 * 526.5 - t3 * 2074.5) + t4 * 3699.0) - t5 * 3078.0) + t7) -
      45.0 * xi;
  sfvals[4] = ((((t2 * -508.0 + t3 * 2232.0) - t4 * 4356.0) + t5 * 3888.0) -
               t6 * 1296.0) +
              40.0 * xi;
  sfvals[5] =
      ((((t2 * 297.0 - t3 * 1381.5) + t4 * 2889.0) - t5 * 2754.0) + t7) +
      -22.5 * xi;
  sfvals[6] =
      ((((t2 * -97.2 + t3 * 468.0) - t4 * 1026.0) + t5 * 1036.8) - t11) +
      7.2 * xi;
}

// bar_7_sfunc - Compute shape functions and their derivatives of bar_7
void bar_7_sfunc(double xi, double sfvals[7], double sdvals[7])
{
  double t10;
  double t11;
  double t13;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;
  t2 = xi * xi;
  t3 = std::pow(xi, 3.0);
  t5 = std::pow(xi, 5.0);
  t4 = t2 * t2;
  t6 = std::pow(t2, 3.0);
  t8 = t5 * 5832.0;
  t10 = t5 * 388.8;
  t13 = t5 * 2332.8;
  t7 = t6 * 972.0;
  t9 = t6 * 64.8;
  t11 = t6 * 388.8;
  sfvals[0] = (((((t2 * 81.2 - t3 * 220.5) + t4 * 315.0) - t5 * 226.8) + t9) +
               -14.7 * xi) +
              1.0;
  sfvals[1] = ((((t2 * 13.7 - t3 * 67.5) + t4 * 153.0) - t5 * 162.0) + t9) - xi;
  sfvals[2] =
      ((((t2 * -313.2 + t3 * 1044.0) - t4 * 1674.0) + t5 * 1296.0) - t11) +
      36.0 * xi;
  sfvals[3] =
      ((((t2 * 526.5 - t3 * 2074.5) + t4 * 3699.0) - t5 * 3078.0) + t7) -
      45.0 * xi;
  sfvals[4] = ((((t2 * -508.0 + t3 * 2232.0) - t4 * 4356.0) + t5 * 3888.0) -
               t6 * 1296.0) +
              40.0 * xi;
  sfvals[5] =
      ((((t2 * 297.0 - t3 * 1381.5) + t4 * 2889.0) - t5 * 2754.0) + t7) +
      -22.5 * xi;
  sfvals[6] =
      ((((t2 * -97.2 + t3 * 468.0) - t4 * 1026.0) + t5 * 1036.8) - t11) +
      7.2 * xi;
  sdvals[0] =
      ((((t2 * -661.5 + t3 * 1260.0) - t4 * 1134.0) + t10) + 162.4 * xi) - 14.7;
  sdvals[1] =
      ((((t2 * -202.5 + t3 * 612.0) - t4 * 810.0) + t10) + 27.4 * xi) - 1.0;
  sdvals[2] =
      ((((t2 * 3132.0 - t3 * 6696.0) + t4 * 6480.0) - t13) + -626.4 * xi) +
      36.0;
  sdvals[3] =
      ((((t2 * -6223.5 + t3 * 14796.0) - t4 * 15390.0) + t8) + 1053.0 * xi) -
      45.0;
  sdvals[4] = ((((t2 * 6696.0 - t3 * 17424.0) + t4 * 19440.0) - t5 * 7776.0) -
               1016.0 * xi) +
              40.0;
  sdvals[5] =
      ((((t2 * -4144.5 + t3 * 11556.0) - t4 * 13770.0) + t8) + 594.0 * xi) -
      22.5;
  sdvals[6] =
      ((((t2 * 1404.0 - t3 * 4104.0) + t4 * 5184.0) - t13) + -194.4 * xi) + 7.2;
}

// bar_gl_4_ncoords - Obtain nodal coordinates in master element for bar_gl_4
void bar_gl_4_ncoords(double natcoords[4])
{
  natcoords[0] = 0.0;
  natcoords[1] = 1.0;
  natcoords[2] = 0.276393202250021;
  natcoords[3] = 0.72360679774997894;
}

// bar_gl_4_sfunc - Compute shape functions and their derivatives of bar_gl_4
void bar_gl_4_sfunc(double xi, double sfvals[4])
{
  double t2;
  double t3;
  double t4;
  t2 = xi * xi;
  t3 = std::pow(xi, 3.0);
  t4 = t3 * 5.0;
  sfvals[0] = ((t2 * 10.0 - t4) - 6.0 * xi) + 1.0;
  sfvals[1] = (t2 * -5.0 + t4) + xi;
  sfvals[2] = (t2 * -19.270509831248422 + t4 * 2.23606797749979) +
              8.0901699437494745 * xi;
  sfvals[3] = (t2 * 14.27050983124842 - t3 * 2.23606797749979 * 5.0) +
              -3.0901699437494741 * xi;
}

// bar_gl_4_sfunc - Compute shape functions and their derivatives of bar_gl_4
void bar_gl_4_sfunc(double xi, double sfvals[4], double sdvals[4])
{
  double t2;
  double t3;
  double t4;
  double t6;
  t2 = xi * xi;
  t3 = std::pow(xi, 3.0);
  t4 = t3 * 5.0;
  sfvals[0] = ((t2 * 10.0 - t4) - 6.0 * xi) + 1.0;
  sfvals[1] = (t2 * -5.0 + t4) + xi;
  sfvals[2] = (t2 * -19.270509831248422 + t4 * 2.23606797749979) +
              8.0901699437494745 * xi;
  sfvals[3] = (t2 * 14.27050983124842 - t3 * 2.23606797749979 * 5.0) +
              -3.0901699437494741 * xi;
  t6 = t2 * 15.0;
  sdvals[0] = (-t6 + 20.0 * xi) - 6.0;
  sdvals[1] = (t6 - 10.0 * xi) + 1.0;
  sdvals[2] =
      (2.23606797749979 * t6 + -38.541019662496844 * xi) + 8.0901699437494745;
  sdvals[3] = (28.541019662496851 * xi - t2 * 2.23606797749979 * 15.0) -
              3.0901699437494741;
}

// bar_gl_5_ncoords - Obtain nodal coordinates in master element for bar_gl_5
void bar_gl_5_ncoords(double natcoords[5])
{
  static const double dv[5]{0.0, 1.0, 0.1726731646460114, 0.5,
                            0.82732683535398854};
  for (int i{0}; i < 5; i++) {
    natcoords[i] = dv[i];
  }
}

// bar_gl_5_sfunc - Compute shape functions and their derivatives of bar_gl_5
void bar_gl_5_sfunc(double xi, double sfvals[5])
{
  double t2;
  double t3;
  double t4;
  double t5;
  double t7;
  t2 = xi * xi;
  t3 = std::pow(xi, 3.0);
  t4 = t2 * t2;
  t5 = t4 * 14.0;
  t7 = t4 * 32.666666666666664;
  sfvals[0] = (((t2 * 30.0 - t3 * 35.0) + t5) - 10.0 * xi) + 1.0;
  sfvals[1] = ((t2 * 9.0 - t3 * 21.0) + t5) - xi;
  sfvals[2] = ((t2 * -56.872348265678767 + t3 * 76.026009954896963) - t7) +
              13.51300497744848 * xi;
  sfvals[3] = ((t2 * 42.666666666666664 - t3 * 74.666666666666671) +
               t4 * 37.333333333333336) +
              -5.333333333333333 * xi;
  sfvals[4] = ((t2 * -24.794318400987891 + t3 * 54.640656711769708) - t7) +
              2.820328355884854 * xi;
}

// bar_gl_5_sfunc - Compute shape functions and their derivatives of bar_gl_5
void bar_gl_5_sfunc(double xi, double sfvals[5], double sdvals[5])
{
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  t2 = xi * xi;
  t3 = std::pow(xi, 3.0);
  t4 = t2 * t2;
  t6 = t3 * 56.0;
  t8 = t3 * 130.66666666666666;
  t5 = t4 * 14.0;
  t7 = t4 * 32.666666666666664;
  sfvals[0] = (((t2 * 30.0 - t3 * 35.0) + t5) - 10.0 * xi) + 1.0;
  sfvals[1] = ((t2 * 9.0 - t3 * 21.0) + t5) - xi;
  sfvals[2] = ((t2 * -56.872348265678767 + t3 * 76.026009954896963) - t7) +
              13.51300497744848 * xi;
  sfvals[3] = ((t2 * 42.666666666666664 - t3 * 74.666666666666671) +
               t4 * 37.333333333333336) +
              -5.333333333333333 * xi;
  sfvals[4] = ((t2 * -24.794318400987891 + t3 * 54.640656711769708) - t7) +
              2.820328355884854 * xi;
  sdvals[0] = ((t2 * -105.0 + t6) + 60.0 * xi) - 10.0;
  sdvals[1] = ((t2 * -63.0 + t6) + 18.0 * xi) - 1.0;
  sdvals[2] = ((t2 * 228.0780298646909 - t8) + -113.7446965313575 * xi) +
              13.51300497744848;
  sdvals[3] =
      ((t2 * -224.0 + t3 * 149.33333333333334) + 85.333333333333329 * xi) -
      5.333333333333333;
  sdvals[4] = ((t2 * 163.9219701353091 - t8) + -49.588636801975788 * xi) +
              2.820328355884854;
}

// bar_gl_6_ncoords - Obtain nodal coordinates in master element for bar_gl_6
void bar_gl_6_ncoords(double natcoords[6])
{
  static const double dv[6]{0.0,
                            1.0,
                            0.1174723380352677,
                            0.35738424175967748,
                            0.64261575824032258,
                            0.88252766196473231};
  for (int i{0}; i < 6; i++) {
    natcoords[i] = dv[i];
  }
}

// bar_gl_6_sfunc - Compute shape functions and their derivatives of bar_gl_6
void bar_gl_6_sfunc(double xi, double sfvals[6])
{
  double t10;
  double t11;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  t2 = xi * xi;
  t3 = std::pow(xi, 3.0);
  t5 = std::pow(xi, 5.0);
  t4 = t2 * t2;
  t6 = t5 * 42.0;
  t10 = t5 * 100.0722106463179;
  t11 = t5 * 121.1674570846437;
  sfvals[0] =
      ((((t2 * 70.0 - t3 * 140.0) + t4 * 126.0) - t6) - 15.0 * xi) + 1.0;
  sfvals[1] = (((t2 * -14.0 + t3 * 56.0) - t4 * 84.0) + t6) + xi;
  sfvals[2] = (((t2 * -131.58198446299679 + t3 * 299.68785732601259) -
                t4 * 288.46091538197311) +
               t10) +
              20.282831872639338 * xi;
  sfvals[3] = (((t2 * 98.49823568607377 - t3 * 289.45743553860677) +
                t4 * 320.1990314777874) -
               t11) +
              -8.0723745406106957 * xi;
  sfvals[4] = (((t2 * -60.354452909459013 + t3 * 220.335880473894) -
                t4 * 285.638253945431) +
               t11) +
              4.4893692963523337 * xi;
  sfvals[5] = (((t2 * 37.438201686382072 - t3 * 146.5663022612998) +
                t4 * 211.9001378496167) -
               t10) +
              -2.699826628380976 * xi;
}

// bar_gl_6_sfunc - Compute shape functions and their derivatives of bar_gl_6
void bar_gl_6_sfunc(double xi, double sfvals[6], double sdvals[6])
{
  double t10;
  double t11;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;
  t2 = xi * xi;
  t3 = std::pow(xi, 3.0);
  t5 = std::pow(xi, 5.0);
  t4 = t2 * t2;
  t6 = t5 * 42.0;
  t10 = t5 * 100.0722106463179;
  t11 = t5 * 121.1674570846437;
  sfvals[0] =
      ((((t2 * 70.0 - t3 * 140.0) + t4 * 126.0) - t6) - 15.0 * xi) + 1.0;
  sfvals[1] = (((t2 * -14.0 + t3 * 56.0) - t4 * 84.0) + t6) + xi;
  sfvals[2] = (((t2 * -131.58198446299679 + t3 * 299.68785732601259) -
                t4 * 288.46091538197311) +
               t10) +
              20.282831872639338 * xi;
  sfvals[3] = (((t2 * 98.49823568607377 - t3 * 289.45743553860677) +
                t4 * 320.1990314777874) -
               t11) +
              -8.0723745406106957 * xi;
  sfvals[4] = (((t2 * -60.354452909459013 + t3 * 220.335880473894) -
                t4 * 285.638253945431) +
               t11) +
              4.4893692963523337 * xi;
  sfvals[5] = (((t2 * 37.438201686382072 - t3 * 146.5663022612998) +
                t4 * 211.9001378496167) -
               t10) +
              -2.699826628380976 * xi;
  t7 = t4 * 210.0;
  t8 = t4 * 605.83728542321842;
  t9 = t4 * 500.36105323158972;
  sdvals[0] = (((t2 * -420.0 + t3 * 504.0) - t7) + 140.0 * xi) - 15.0;
  sdvals[1] = (((t2 * 168.0 - t3 * 336.0) + t7) - 28.0 * xi) + 1.0;
  sdvals[2] = (((t2 * 899.06357197803788 - t3 * 1153.843661527892) + t9) +
               -263.16396892599357 * xi) +
              20.282831872639338;
  sdvals[3] = (((t2 * -868.37230661582043 + t3 * 1280.79612591115) - t8) +
               196.99647137214751 * xi) -
              8.0723745406106957;
  sdvals[4] = (((t2 * 661.007641421682 - t3 * 1142.5530157817241) + t8) +
               -120.708905818918 * xi) +
              4.4893692963523337;
  sdvals[5] = (((t2 * -439.69890678389942 + t3 * 847.60055139846668) - t9) +
               74.87640337276413 * xi) -
              2.699826628380976;
}

// bar_gl_7_ncoords - Obtain nodal coordinates in master element for bar_gl_7
void bar_gl_7_ncoords(double natcoords[7])
{
  static const double dv[7]{0.0,
                            1.0,
                            0.084888051860716532,
                            0.26557560326464291,
                            0.5,
                            0.73442439673535709,
                            0.91511194813928343};
  for (int i{0}; i < 7; i++) {
    natcoords[i] = dv[i];
  }
}

// bar_gl_7_sfunc - Compute shape functions and their derivatives of bar_gl_7
void bar_gl_7_sfunc(double xi, double sfvals[7])
{
  double t10;
  double t12;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  t2 = xi * xi;
  t3 = std::pow(xi, 3.0);
  t5 = std::pow(xi, 5.0);
  t4 = t2 * t2;
  t6 = std::pow(t2, 3.0);
  t7 = t6 * 132.0;
  t10 = t6 * 397.4636611895653;
  t12 = t6 * 318.26366118956531;
  sfvals[0] = (((((t2 * 140.0 - t3 * 420.0) + t4 * 630.0) - t5 * 462.0) + t7) -
               21.0 * xi) +
              1.0;
  sfvals[1] =
      ((((t2 * 20.0 - t3 * 120.0) + t4 * 300.0) - t5 * 330.0) + t7) - xi;
  sfvals[2] = ((((t2 * -261.87079920132538 + t3 * 891.54559526444336) -
                 t4 * 1426.72032006643) +
                t5 * 1086.9060319870371) -
               t12) +
              28.403153205839629 * xi;
  sfvals[3] = ((((t2 * 195.405316227204 - t3 * 851.53549091544392) +
                 t4 * 1555.570646517052) -
                t5 * 1285.566162567286) +
               t10) +
              -11.337970451091021 * xi;
  sfvals[4] = ((((t2 * -121.6 + t3 * 652.8) - t4 * 1382.4) + t5 * 1267.2) -
               t6 * 422.4) +
              6.4 * xi;
  sfvals[5] = ((((t2 * 80.516014753801173 - t3 * 464.358693271208) +
                 t4 * 1089.6947515241011) -
                t5 * 1099.215804570106) +
               t10) +
              -4.0999296261534859 * xi;
  sfvals[6] = ((((t2 * -52.450531779679778 + t3 * 311.54858892220858) -
                 t4 * 766.145077974723) +
                t5 * 822.67593515035469) -
               t12) +
              2.634746871404869 * xi;
}

// bar_gl_7_sfunc - Compute shape functions and their derivatives of bar_gl_7
void bar_gl_7_sfunc(double xi, double sfvals[7], double sdvals[7])
{
  double t10;
  double t11;
  double t12;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;
  t2 = xi * xi;
  t3 = std::pow(xi, 3.0);
  t5 = std::pow(xi, 5.0);
  t4 = t2 * t2;
  t6 = std::pow(t2, 3.0);
  t8 = t5 * 792.0;
  t9 = t5 * 2384.7819671373918;
  t11 = t5 * 1909.581967137392;
  t7 = t6 * 132.0;
  t10 = t6 * 397.4636611895653;
  t12 = t6 * 318.26366118956531;
  sfvals[0] = (((((t2 * 140.0 - t3 * 420.0) + t4 * 630.0) - t5 * 462.0) + t7) -
               21.0 * xi) +
              1.0;
  sfvals[1] =
      ((((t2 * 20.0 - t3 * 120.0) + t4 * 300.0) - t5 * 330.0) + t7) - xi;
  sfvals[2] = ((((t2 * -261.87079920132538 + t3 * 891.54559526444336) -
                 t4 * 1426.72032006643) +
                t5 * 1086.9060319870371) -
               t12) +
              28.403153205839629 * xi;
  sfvals[3] = ((((t2 * 195.405316227204 - t3 * 851.53549091544392) +
                 t4 * 1555.570646517052) -
                t5 * 1285.566162567286) +
               t10) +
              -11.337970451091021 * xi;
  sfvals[4] = ((((t2 * -121.6 + t3 * 652.8) - t4 * 1382.4) + t5 * 1267.2) -
               t6 * 422.4) +
              6.4 * xi;
  sfvals[5] = ((((t2 * 80.516014753801173 - t3 * 464.358693271208) +
                 t4 * 1089.6947515241011) -
                t5 * 1099.215804570106) +
               t10) +
              -4.0999296261534859 * xi;
  sfvals[6] = ((((t2 * -52.450531779679778 + t3 * 311.54858892220858) -
                 t4 * 766.145077974723) +
                t5 * 822.67593515035469) -
               t12) +
              2.634746871404869 * xi;
  sdvals[0] =
      ((((t2 * -1260.0 + t3 * 2520.0) - t4 * 2310.0) + t8) + 280.0 * xi) - 21.0;
  sdvals[1] =
      ((((t2 * -360.0 + t3 * 1200.0) - t4 * 1650.0) + t8) + 40.0 * xi) - 1.0;
  sdvals[2] = ((((t2 * 2674.63678579333 - t3 * 5706.8812802657176) +
                 t4 * 5434.530159935186) -
                t11) +
               -523.74159840265077 * xi) +
              28.403153205839629;
  sdvals[3] = ((((t2 * -2554.6064727463322 + t3 * 6222.2825860682078) -
                 t4 * 6427.8308128364306) +
                t9) +
               390.810632454408 * xi) -
              11.337970451091021;
  sdvals[4] = ((((t2 * 1958.4 - t3 * 5529.6) + t4 * 6336.0) - t5 * 2534.4) +
               -243.2 * xi) +
              6.4;
  sdvals[5] = ((((t2 * -1393.0760798136239 + t3 * 4358.7790060964026) -
                 t4 * 5496.0790228505284) +
                t9) +
               161.03202950760229 * xi) -
              4.0999296261534859;
  sdvals[6] = ((((t2 * 934.64576676662568 - t3 * 3064.580311898892) +
                 t4 * 4113.379675751773) -
                t11) +
               -104.9010635593596 * xi) +
              2.634746871404869;
}

// hexa_125_ncoords - Obtain nodal coordinates in master element for hexa_125
void hexa_125_ncoords(double natcoords[375])
{
  double xis[5];
  ::sfe_sfuncs::bar_5_ncoords(&xis[0]);
  for (int m{0}; m < 125; m++) {
    natcoords[3 * m] = xis[iv[m] - 1];
    natcoords[3 * m + 1] = xis[iv1[m] - 1];
    natcoords[3 * m + 2] = xis[iv2[m] - 1];
  }
}

// hexa_125_sfunc - Triquartic hexahedral element with equidistant points
void hexa_125_sfunc(double xi, double eta, double zeta, double sfvals[125])
{
  double N_eta[5];
  double N_xi[5];
  double N_zeta[5];
  ::sfe_sfuncs::bar_5_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_5_sfunc(eta, &N_eta[0]);
  ::sfe_sfuncs::bar_5_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 125; m++) {
    sfvals[m] = N_xi[iv[m] - 1] * N_eta[iv1[m] - 1] * N_zeta[iv2[m] - 1];
  }
}

// hexa_125_sfunc - Triquartic hexahedral element with equidistant points
void hexa_125_sfunc(double xi, double eta, double zeta, double sfvals[125],
                    double sdvals[375])
{
  double N_eta[5];
  double N_xi[5];
  double N_zeta[5];
  double sdvals_eta[5];
  double sdvals_xi[5];
  double sdvals_zeta[5];
  ::sfe_sfuncs::bar_5_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_5_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  ::sfe_sfuncs::bar_5_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 125; m++) {
    double c_sfvals_tmp;
    double e_sfvals_tmp;
    double f_sfvals_tmp;
    double g_sfvals_tmp;
    int b_sfvals_tmp;
    int d_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv[m] - 1;
    b_sfvals_tmp = iv1[m] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = iv2[m] - 1;
    e_sfvals_tmp = N_zeta[d_sfvals_tmp];
    f_sfvals_tmp = N_xi[sfvals_tmp];
    g_sfvals_tmp = f_sfvals_tmp * c_sfvals_tmp;
    sfvals[m] = g_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m + 1] = f_sfvals_tmp * sdvals_eta[b_sfvals_tmp] * e_sfvals_tmp;
    sdvals[3 * m + 2] = g_sfvals_tmp * sdvals_zeta[d_sfvals_tmp];
  }
}

// hexa_216_ncoords - Obtain nodal coordinates in master element for hexa_216
void hexa_216_ncoords(double natcoords[648])
{
  double xis[6];
  ::sfe_sfuncs::bar_6_ncoords(&xis[0]);
  for (int m{0}; m < 216; m++) {
    natcoords[3 * m] = xis[iv3[m] - 1];
    natcoords[3 * m + 1] = xis[iv4[m] - 1];
    natcoords[3 * m + 2] = xis[iv5[m] - 1];
  }
}

// hexa_216_sfunc - Triquintic hexahedral element with equidistant points
void hexa_216_sfunc(double xi, double eta, double zeta, double sfvals[216])
{
  double N_eta[6];
  double N_xi[6];
  double N_zeta[6];
  ::sfe_sfuncs::bar_6_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_6_sfunc(eta, &N_eta[0]);
  ::sfe_sfuncs::bar_6_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 216; m++) {
    sfvals[m] = N_xi[iv3[m] - 1] * N_eta[iv4[m] - 1] * N_zeta[iv5[m] - 1];
  }
}

// hexa_216_sfunc - Triquintic hexahedral element with equidistant points
void hexa_216_sfunc(double xi, double eta, double zeta, double sfvals[216],
                    double sdvals[648])
{
  double N_eta[6];
  double N_xi[6];
  double N_zeta[6];
  double sdvals_eta[6];
  double sdvals_xi[6];
  double sdvals_zeta[6];
  ::sfe_sfuncs::bar_6_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_6_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  ::sfe_sfuncs::bar_6_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 216; m++) {
    double c_sfvals_tmp;
    double e_sfvals_tmp;
    double f_sfvals_tmp;
    double g_sfvals_tmp;
    int b_sfvals_tmp;
    int d_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv3[m] - 1;
    b_sfvals_tmp = iv4[m] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = iv5[m] - 1;
    e_sfvals_tmp = N_zeta[d_sfvals_tmp];
    f_sfvals_tmp = N_xi[sfvals_tmp];
    g_sfvals_tmp = f_sfvals_tmp * c_sfvals_tmp;
    sfvals[m] = g_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m + 1] = f_sfvals_tmp * sdvals_eta[b_sfvals_tmp] * e_sfvals_tmp;
    sdvals[3 * m + 2] = g_sfvals_tmp * sdvals_zeta[d_sfvals_tmp];
  }
}

// hexa_27_ncoords - Obtain nodal coordinates in master element for hexa_27
void hexa_27_ncoords(double natcoords[81])
{
  double xis[3];
  ::sfe_sfuncs::bar_3_ncoords(&xis[0]);
  for (int m{0}; m < 27; m++) {
    natcoords[3 * m] = xis[iv6[m] - 1];
    natcoords[3 * m + 1] = xis[iv7[m] - 1];
    natcoords[3 * m + 2] = xis[iv8[m] - 1];
  }
}

// hexa_27_sfunc - Triquadratic hexahedral element with equidistant nodes
void hexa_27_sfunc(double xi, double eta, double zeta, double sfvals[27])
{
  double N_eta[3];
  double N_xi[3];
  double N_zeta[3];
  ::sfe_sfuncs::bar_3_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_3_sfunc(eta, &N_eta[0]);
  ::sfe_sfuncs::bar_3_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 27; m++) {
    sfvals[m] = N_xi[iv6[m] - 1] * N_eta[iv7[m] - 1] * N_zeta[iv8[m] - 1];
  }
}

// hexa_27_sfunc - Triquadratic hexahedral element with equidistant nodes
void hexa_27_sfunc(double xi, double eta, double zeta, double sfvals[27],
                   double sdvals[81])
{
  double N_eta[3];
  double N_xi[3];
  double N_zeta[3];
  double sdvals_eta[3];
  double sdvals_xi[3];
  double sdvals_zeta[3];
  ::sfe_sfuncs::bar_3_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_3_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  ::sfe_sfuncs::bar_3_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 27; m++) {
    double c_sfvals_tmp;
    double e_sfvals_tmp;
    double f_sfvals_tmp;
    double g_sfvals_tmp;
    int b_sfvals_tmp;
    int d_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv6[m] - 1;
    b_sfvals_tmp = iv7[m] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = iv8[m] - 1;
    e_sfvals_tmp = N_zeta[d_sfvals_tmp];
    f_sfvals_tmp = N_xi[sfvals_tmp];
    g_sfvals_tmp = f_sfvals_tmp * c_sfvals_tmp;
    sfvals[m] = g_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m + 1] = f_sfvals_tmp * sdvals_eta[b_sfvals_tmp] * e_sfvals_tmp;
    sdvals[3 * m + 2] = g_sfvals_tmp * sdvals_zeta[d_sfvals_tmp];
  }
}

// hexa_343_ncoords - Obtain nodal coordinates in master element for hexa_343
void hexa_343_ncoords(double natcoords[1029])
{
  double xis[7];
  ::sfe_sfuncs::bar_7_ncoords(&xis[0]);
  for (int m{0}; m < 343; m++) {
    natcoords[3 * m] = xis[iv9[m] - 1];
    natcoords[3 * m + 1] = xis[iv10[m] - 1];
    natcoords[3 * m + 2] = xis[iv11[m] - 1];
  }
}

// hexa_343_sfunc - Trisextic hexahedral element with equidistant points
void hexa_343_sfunc(double xi, double eta, double zeta, double sfvals[343])
{
  double N_eta[7];
  double N_xi[7];
  double N_zeta[7];
  ::sfe_sfuncs::bar_7_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_7_sfunc(eta, &N_eta[0]);
  ::sfe_sfuncs::bar_7_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 343; m++) {
    sfvals[m] = N_xi[iv9[m] - 1] * N_eta[iv10[m] - 1] * N_zeta[iv11[m] - 1];
  }
}

// hexa_343_sfunc - Trisextic hexahedral element with equidistant points
void hexa_343_sfunc(double xi, double eta, double zeta, double sfvals[343],
                    double sdvals[1029])
{
  double N_eta[7];
  double N_xi[7];
  double N_zeta[7];
  double sdvals_eta[7];
  double sdvals_xi[7];
  double sdvals_zeta[7];
  ::sfe_sfuncs::bar_7_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_7_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  ::sfe_sfuncs::bar_7_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 343; m++) {
    double c_sfvals_tmp;
    double e_sfvals_tmp;
    double f_sfvals_tmp;
    double g_sfvals_tmp;
    int b_sfvals_tmp;
    int d_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv9[m] - 1;
    b_sfvals_tmp = iv10[m] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = iv11[m] - 1;
    e_sfvals_tmp = N_zeta[d_sfvals_tmp];
    f_sfvals_tmp = N_xi[sfvals_tmp];
    g_sfvals_tmp = f_sfvals_tmp * c_sfvals_tmp;
    sfvals[m] = g_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m + 1] = f_sfvals_tmp * sdvals_eta[b_sfvals_tmp] * e_sfvals_tmp;
    sdvals[3 * m + 2] = g_sfvals_tmp * sdvals_zeta[d_sfvals_tmp];
  }
}

// hexa_64_ncoords - Obtain nodal coordinates in master element for hexa_64
void hexa_64_ncoords(double natcoords[192])
{
  double xis[4];
  ::sfe_sfuncs::bar_4_ncoords(&xis[0]);
  for (int m{0}; m < 64; m++) {
    natcoords[3 * m] = xis[iv12[m] - 1];
    natcoords[3 * m + 1] = xis[iv13[m] - 1];
    natcoords[3 * m + 2] = xis[iv14[m] - 1];
  }
}

// hexa_64_sfunc - Tricubic hexahedral element with equidistant nodes
void hexa_64_sfunc(double xi, double eta, double zeta, double sfvals[64])
{
  double N_eta[4];
  double N_xi[4];
  double N_zeta[4];
  ::sfe_sfuncs::bar_4_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_4_sfunc(eta, &N_eta[0]);
  ::sfe_sfuncs::bar_4_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 64; m++) {
    sfvals[m] = N_xi[iv12[m] - 1] * N_eta[iv13[m] - 1] * N_zeta[iv14[m] - 1];
  }
}

// hexa_64_sfunc - Tricubic hexahedral element with equidistant nodes
void hexa_64_sfunc(double xi, double eta, double zeta, double sfvals[64],
                   double sdvals[192])
{
  double N_eta[4];
  double N_xi[4];
  double N_zeta[4];
  double sdvals_eta[4];
  double sdvals_xi[4];
  double sdvals_zeta[4];
  ::sfe_sfuncs::bar_4_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_4_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  ::sfe_sfuncs::bar_4_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 64; m++) {
    double c_sfvals_tmp;
    double e_sfvals_tmp;
    double f_sfvals_tmp;
    double g_sfvals_tmp;
    int b_sfvals_tmp;
    int d_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv12[m] - 1;
    b_sfvals_tmp = iv13[m] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = iv14[m] - 1;
    e_sfvals_tmp = N_zeta[d_sfvals_tmp];
    f_sfvals_tmp = N_xi[sfvals_tmp];
    g_sfvals_tmp = f_sfvals_tmp * c_sfvals_tmp;
    sfvals[m] = g_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m + 1] = f_sfvals_tmp * sdvals_eta[b_sfvals_tmp] * e_sfvals_tmp;
    sdvals[3 * m + 2] = g_sfvals_tmp * sdvals_zeta[d_sfvals_tmp];
  }
}

// hexa_8_ncoords - Obtain nodal coordinates in master element for hexa_8
void hexa_8_ncoords(double natcoords[24])
{
  static const signed char b_iv[8]{1, 2, 2, 1, 1, 2, 2, 1};
  static const signed char b_iv1[8]{1, 1, 2, 2, 1, 1, 2, 2};
  static const signed char b_iv2[8]{1, 1, 1, 1, 2, 2, 2, 2};
  double xis[2];
  ::sfe_sfuncs::bar_2_ncoords(&xis[0]);
  for (int m{0}; m < 8; m++) {
    natcoords[3 * m] = xis[b_iv[m] - 1];
    natcoords[3 * m + 1] = xis[b_iv1[m] - 1];
    natcoords[3 * m + 2] = xis[b_iv2[m] - 1];
  }
}

// hexa_8_sfunc - Trilinear hexahedral element
void hexa_8_sfunc(double xi, double eta, double zeta, double sfvals[8])
{
  static const signed char b_iv[8]{1, 2, 2, 1, 1, 2, 2, 1};
  static const signed char b_iv1[8]{1, 1, 2, 2, 1, 1, 2, 2};
  static const signed char b_iv2[8]{1, 1, 1, 1, 2, 2, 2, 2};
  double N_eta[2];
  double N_xi[2];
  double N_zeta[2];
  ::sfe_sfuncs::bar_2_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_2_sfunc(eta, &N_eta[0]);
  ::sfe_sfuncs::bar_2_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 8; m++) {
    sfvals[m] = N_xi[b_iv[m] - 1] * N_eta[b_iv1[m] - 1] * N_zeta[b_iv2[m] - 1];
  }
}

// hexa_8_sfunc - Trilinear hexahedral element
void hexa_8_sfunc(double xi, double eta, double zeta, double sfvals[8],
                  double sdvals[24])
{
  static const signed char b_iv[8]{1, 2, 2, 1, 1, 2, 2, 1};
  static const signed char b_iv1[8]{1, 1, 2, 2, 1, 1, 2, 2};
  static const signed char b_iv2[8]{1, 1, 1, 1, 2, 2, 2, 2};
  double N_eta[2];
  double N_xi[2];
  double N_zeta[2];
  double sdvals_eta[2];
  double sdvals_xi[2];
  double sdvals_zeta[2];
  ::sfe_sfuncs::bar_2_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_2_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  ::sfe_sfuncs::bar_2_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 8; m++) {
    double c_sfvals_tmp;
    double e_sfvals_tmp;
    double f_sfvals_tmp;
    double g_sfvals_tmp;
    int b_sfvals_tmp;
    int d_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = b_iv[m] - 1;
    b_sfvals_tmp = b_iv1[m] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = b_iv2[m] - 1;
    e_sfvals_tmp = N_zeta[d_sfvals_tmp];
    f_sfvals_tmp = N_xi[sfvals_tmp];
    g_sfvals_tmp = f_sfvals_tmp * c_sfvals_tmp;
    sfvals[m] = g_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m + 1] = f_sfvals_tmp * sdvals_eta[b_sfvals_tmp] * e_sfvals_tmp;
    sdvals[3 * m + 2] = g_sfvals_tmp * sdvals_zeta[d_sfvals_tmp];
  }
}

// hexa_gl_125_ncoords - Obtain nodal coordinates in master element for
void hexa_gl_125_ncoords(double natcoords[375])
{
  double xis[5];
  ::sfe_sfuncs::bar_gl_5_ncoords(&xis[0]);
  for (int m{0}; m < 125; m++) {
    natcoords[3 * m] = xis[iv[m] - 1];
    natcoords[3 * m + 1] = xis[iv1[m] - 1];
    natcoords[3 * m + 2] = xis[iv2[m] - 1];
  }
}

// hexa_gl_125_sfunc - Triquartic hexahedral element with Gauss-Lobatto points
void hexa_gl_125_sfunc(double xi, double eta, double zeta, double sfvals[125])
{
  double N_eta[5];
  double N_xi[5];
  double N_zeta[5];
  ::sfe_sfuncs::bar_gl_5_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_gl_5_sfunc(eta, &N_eta[0]);
  ::sfe_sfuncs::bar_gl_5_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 125; m++) {
    sfvals[m] = N_xi[iv[m] - 1] * N_eta[iv1[m] - 1] * N_zeta[iv2[m] - 1];
  }
}

// hexa_gl_125_sfunc - Triquartic hexahedral element with Gauss-Lobatto points
void hexa_gl_125_sfunc(double xi, double eta, double zeta, double sfvals[125],
                       double sdvals[375])
{
  double N_eta[5];
  double N_xi[5];
  double N_zeta[5];
  double sdvals_eta[5];
  double sdvals_xi[5];
  double sdvals_zeta[5];
  ::sfe_sfuncs::bar_gl_5_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_gl_5_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  ::sfe_sfuncs::bar_gl_5_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 125; m++) {
    double c_sfvals_tmp;
    double e_sfvals_tmp;
    double f_sfvals_tmp;
    double g_sfvals_tmp;
    int b_sfvals_tmp;
    int d_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv[m] - 1;
    b_sfvals_tmp = iv1[m] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = iv2[m] - 1;
    e_sfvals_tmp = N_zeta[d_sfvals_tmp];
    f_sfvals_tmp = N_xi[sfvals_tmp];
    g_sfvals_tmp = f_sfvals_tmp * c_sfvals_tmp;
    sfvals[m] = g_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m + 1] = f_sfvals_tmp * sdvals_eta[b_sfvals_tmp] * e_sfvals_tmp;
    sdvals[3 * m + 2] = g_sfvals_tmp * sdvals_zeta[d_sfvals_tmp];
  }
}

// hexa_gl_216_ncoords - Obtain nodal coordinates in master element for
void hexa_gl_216_ncoords(double natcoords[648])
{
  double xis[6];
  ::sfe_sfuncs::bar_gl_6_ncoords(&xis[0]);
  for (int m{0}; m < 216; m++) {
    natcoords[3 * m] = xis[iv3[m] - 1];
    natcoords[3 * m + 1] = xis[iv4[m] - 1];
    natcoords[3 * m + 2] = xis[iv5[m] - 1];
  }
}

// hexa_gl_216_sfunc - Triquintic hexahedral element with equidistant points
void hexa_gl_216_sfunc(double xi, double eta, double zeta, double sfvals[216])
{
  double N_eta[6];
  double N_xi[6];
  double N_zeta[6];
  ::sfe_sfuncs::bar_gl_6_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_gl_6_sfunc(eta, &N_eta[0]);
  ::sfe_sfuncs::bar_gl_6_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 216; m++) {
    sfvals[m] = N_xi[iv3[m] - 1] * N_eta[iv4[m] - 1] * N_zeta[iv5[m] - 1];
  }
}

// hexa_gl_216_sfunc - Triquintic hexahedral element with equidistant points
void hexa_gl_216_sfunc(double xi, double eta, double zeta, double sfvals[216],
                       double sdvals[648])
{
  double N_eta[6];
  double N_xi[6];
  double N_zeta[6];
  double sdvals_eta[6];
  double sdvals_xi[6];
  double sdvals_zeta[6];
  ::sfe_sfuncs::bar_gl_6_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_gl_6_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  ::sfe_sfuncs::bar_gl_6_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 216; m++) {
    double c_sfvals_tmp;
    double e_sfvals_tmp;
    double f_sfvals_tmp;
    double g_sfvals_tmp;
    int b_sfvals_tmp;
    int d_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv3[m] - 1;
    b_sfvals_tmp = iv4[m] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = iv5[m] - 1;
    e_sfvals_tmp = N_zeta[d_sfvals_tmp];
    f_sfvals_tmp = N_xi[sfvals_tmp];
    g_sfvals_tmp = f_sfvals_tmp * c_sfvals_tmp;
    sfvals[m] = g_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m + 1] = f_sfvals_tmp * sdvals_eta[b_sfvals_tmp] * e_sfvals_tmp;
    sdvals[3 * m + 2] = g_sfvals_tmp * sdvals_zeta[d_sfvals_tmp];
  }
}

// hexa_gl_343_ncoords - Obtain nodal coordinates in master element for
void hexa_gl_343_ncoords(double natcoords[1029])
{
  double xis[7];
  ::sfe_sfuncs::bar_gl_7_ncoords(&xis[0]);
  for (int m{0}; m < 343; m++) {
    natcoords[3 * m] = xis[iv9[m] - 1];
    natcoords[3 * m + 1] = xis[iv10[m] - 1];
    natcoords[3 * m + 2] = xis[iv11[m] - 1];
  }
}

// hexa_gl_343_sfunc - Triquintic hexahedral element with equidistant points
void hexa_gl_343_sfunc(double xi, double eta, double zeta, double sfvals[343])
{
  double N_eta[7];
  double N_xi[7];
  double N_zeta[7];
  ::sfe_sfuncs::bar_gl_7_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_gl_7_sfunc(eta, &N_eta[0]);
  ::sfe_sfuncs::bar_gl_7_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 343; m++) {
    sfvals[m] = N_xi[iv9[m] - 1] * N_eta[iv10[m] - 1] * N_zeta[iv11[m] - 1];
  }
}

// hexa_gl_343_sfunc - Triquintic hexahedral element with equidistant points
void hexa_gl_343_sfunc(double xi, double eta, double zeta, double sfvals[343],
                       double sdvals[1029])
{
  double N_eta[7];
  double N_xi[7];
  double N_zeta[7];
  double sdvals_eta[7];
  double sdvals_xi[7];
  double sdvals_zeta[7];
  ::sfe_sfuncs::bar_gl_7_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_gl_7_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  ::sfe_sfuncs::bar_gl_7_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 343; m++) {
    double c_sfvals_tmp;
    double e_sfvals_tmp;
    double f_sfvals_tmp;
    double g_sfvals_tmp;
    int b_sfvals_tmp;
    int d_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv9[m] - 1;
    b_sfvals_tmp = iv10[m] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = iv11[m] - 1;
    e_sfvals_tmp = N_zeta[d_sfvals_tmp];
    f_sfvals_tmp = N_xi[sfvals_tmp];
    g_sfvals_tmp = f_sfvals_tmp * c_sfvals_tmp;
    sfvals[m] = g_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m + 1] = f_sfvals_tmp * sdvals_eta[b_sfvals_tmp] * e_sfvals_tmp;
    sdvals[3 * m + 2] = g_sfvals_tmp * sdvals_zeta[d_sfvals_tmp];
  }
}

// hexa_gl_64_ncoords - Obtain nodal coordinates in master element for
void hexa_gl_64_ncoords(double natcoords[192])
{
  double xis[4];
  ::sfe_sfuncs::bar_gl_4_ncoords(&xis[0]);
  for (int m{0}; m < 64; m++) {
    natcoords[3 * m] = xis[iv12[m] - 1];
    natcoords[3 * m + 1] = xis[iv13[m] - 1];
    natcoords[3 * m + 2] = xis[iv14[m] - 1];
  }
}

// hexa_gl_64_sfunc - Tricubic hexahedral element with Gauss-Lobatto nodes
void hexa_gl_64_sfunc(double xi, double eta, double zeta, double sfvals[64])
{
  double N_eta[4];
  double N_xi[4];
  double N_zeta[4];
  ::sfe_sfuncs::bar_gl_4_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_gl_4_sfunc(eta, &N_eta[0]);
  ::sfe_sfuncs::bar_gl_4_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 64; m++) {
    sfvals[m] = N_xi[iv12[m] - 1] * N_eta[iv13[m] - 1] * N_zeta[iv14[m] - 1];
  }
}

// hexa_gl_64_sfunc - Tricubic hexahedral element with Gauss-Lobatto nodes
void hexa_gl_64_sfunc(double xi, double eta, double zeta, double sfvals[64],
                      double sdvals[192])
{
  double N_eta[4];
  double N_xi[4];
  double N_zeta[4];
  double sdvals_eta[4];
  double sdvals_xi[4];
  double sdvals_zeta[4];
  ::sfe_sfuncs::bar_gl_4_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_gl_4_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  ::sfe_sfuncs::bar_gl_4_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 64; m++) {
    double c_sfvals_tmp;
    double e_sfvals_tmp;
    double f_sfvals_tmp;
    double g_sfvals_tmp;
    int b_sfvals_tmp;
    int d_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv12[m] - 1;
    b_sfvals_tmp = iv13[m] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = iv14[m] - 1;
    e_sfvals_tmp = N_zeta[d_sfvals_tmp];
    f_sfvals_tmp = N_xi[sfvals_tmp];
    g_sfvals_tmp = f_sfvals_tmp * c_sfvals_tmp;
    sfvals[m] = g_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp * e_sfvals_tmp;
    sdvals[3 * m + 1] = f_sfvals_tmp * sdvals_eta[b_sfvals_tmp] * e_sfvals_tmp;
    sdvals[3 * m + 2] = g_sfvals_tmp * sdvals_zeta[d_sfvals_tmp];
  }
}

// prism_126_ncoords - Obtain nodal coordinates in master element for
void prism_126_ncoords(double natcoords[378])
{
  double xietas[42];
  double zetas[6];
  ::sfe_sfuncs::tri_21_ncoords(&xietas[0]);
  ::sfe_sfuncs::bar_6_ncoords(&zetas[0]);
  for (int m{0}; m < 126; m++) {
    int natcoords_tmp;
    natcoords_tmp = (iv15[m] - 1) << 1;
    natcoords[3 * m] = xietas[natcoords_tmp];
    natcoords[3 * m + 1] = xietas[natcoords_tmp + 1];
    natcoords[3 * m + 2] = zetas[iv16[m] - 1];
  }
}

// prism_126_sfunc - Quintic prismatic element with equidistant nodes
void prism_126_sfunc(double xi, double eta, double zeta, double sfvals[126])
{
  double N_xieta[21];
  double N_zeta[6];
  ::sfe_sfuncs::tri_21_sfunc(xi, eta, &N_xieta[0]);
  ::sfe_sfuncs::bar_6_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 126; m++) {
    sfvals[m] = N_xieta[iv15[m] - 1] * N_zeta[iv16[m] - 1];
  }
}

// prism_126_sfunc - Quintic prismatic element with equidistant nodes
void prism_126_sfunc(double xi, double eta, double zeta, double sfvals[126],
                     double sdvals[378])
{
  double sdvals_xieta[42];
  double N_xieta[21];
  double N_zeta[6];
  double sdvals_zeta[6];
  ::sfe_sfuncs::tri_21_sfunc(xi, eta, &N_xieta[0], &sdvals_xieta[0]);
  ::sfe_sfuncs::bar_6_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 126; m++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv15[m] - 1;
    b_sfvals_tmp = iv16[m] - 1;
    c_sfvals_tmp = N_zeta[b_sfvals_tmp];
    d_sfvals_tmp = N_xieta[sfvals_tmp];
    sfvals[m] = d_sfvals_tmp * c_sfvals_tmp;
    sfvals_tmp <<= 1;
    sdvals[3 * m] = sdvals_xieta[sfvals_tmp] * c_sfvals_tmp;
    sdvals[3 * m + 1] = sdvals_xieta[sfvals_tmp + 1] * c_sfvals_tmp;
    sdvals[3 * m + 2] = d_sfvals_tmp * sdvals_zeta[b_sfvals_tmp];
  }
}

// prism_18_ncoords - Obtain nodal coordinates in master element for prism_18
void prism_18_ncoords(double natcoords[54])
{
  double xietas[12];
  double zetas[3];
  ::sfe_sfuncs::tri_6_ncoords(&xietas[0]);
  ::sfe_sfuncs::bar_3_ncoords(&zetas[0]);
  for (int m{0}; m < 18; m++) {
    int natcoords_tmp;
    natcoords_tmp = (iv17[m] - 1) << 1;
    natcoords[3 * m] = xietas[natcoords_tmp];
    natcoords[3 * m + 1] = xietas[natcoords_tmp + 1];
    natcoords[3 * m + 2] = zetas[iv18[m] - 1];
  }
}

// prism_18_sfunc - Quadratic prismatic element
void prism_18_sfunc(double xi, double eta, double zeta, double sfvals[18])
{
  double N_xieta[6];
  double N_zeta[3];
  ::sfe_sfuncs::tri_6_sfunc(xi, eta, &N_xieta[0]);
  ::sfe_sfuncs::bar_3_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 18; m++) {
    sfvals[m] = N_xieta[iv17[m] - 1] * N_zeta[iv18[m] - 1];
  }
}

// prism_18_sfunc - Quadratic prismatic element
void prism_18_sfunc(double xi, double eta, double zeta, double sfvals[18],
                    double sdvals[54])
{
  double sdvals_xieta[12];
  double N_xieta[6];
  double N_zeta[3];
  double sdvals_zeta[3];
  ::sfe_sfuncs::tri_6_sfunc(xi, eta, &N_xieta[0], &sdvals_xieta[0]);
  ::sfe_sfuncs::bar_3_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 18; m++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv17[m] - 1;
    b_sfvals_tmp = iv18[m] - 1;
    c_sfvals_tmp = N_zeta[b_sfvals_tmp];
    d_sfvals_tmp = N_xieta[sfvals_tmp];
    sfvals[m] = d_sfvals_tmp * c_sfvals_tmp;
    sfvals_tmp <<= 1;
    sdvals[3 * m] = sdvals_xieta[sfvals_tmp] * c_sfvals_tmp;
    sdvals[3 * m + 1] = sdvals_xieta[sfvals_tmp + 1] * c_sfvals_tmp;
    sdvals[3 * m + 2] = d_sfvals_tmp * sdvals_zeta[b_sfvals_tmp];
  }
}

// prism_196_ncoords - Obtain nodal coordinates in master element for
void prism_196_ncoords(double natcoords[588])
{
  double xietas[56];
  double zetas[7];
  ::sfe_sfuncs::tri_28_ncoords(&xietas[0]);
  ::sfe_sfuncs::bar_7_ncoords(&zetas[0]);
  for (int m{0}; m < 196; m++) {
    int natcoords_tmp;
    natcoords_tmp = (iv19[m] - 1) << 1;
    natcoords[3 * m] = xietas[natcoords_tmp];
    natcoords[3 * m + 1] = xietas[natcoords_tmp + 1];
    natcoords[3 * m + 2] = zetas[iv20[m] - 1];
  }
}

// prism_196_sfunc - Sextic prismatic element with equidistant nodes
void prism_196_sfunc(double xi, double eta, double zeta, double sfvals[196])
{
  double N_xieta[28];
  double N_zeta[7];
  ::sfe_sfuncs::tri_28_sfunc(xi, eta, &N_xieta[0]);
  ::sfe_sfuncs::bar_7_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 196; m++) {
    sfvals[m] = N_xieta[iv19[m] - 1] * N_zeta[iv20[m] - 1];
  }
}

// prism_196_sfunc - Sextic prismatic element with equidistant nodes
void prism_196_sfunc(double xi, double eta, double zeta, double sfvals[196],
                     double sdvals[588])
{
  double sdvals_xieta[56];
  double N_xieta[28];
  double N_zeta[7];
  double sdvals_zeta[7];
  ::sfe_sfuncs::tri_28_sfunc(xi, eta, &N_xieta[0], &sdvals_xieta[0]);
  ::sfe_sfuncs::bar_7_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 196; m++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv19[m] - 1;
    b_sfvals_tmp = iv20[m] - 1;
    c_sfvals_tmp = N_zeta[b_sfvals_tmp];
    d_sfvals_tmp = N_xieta[sfvals_tmp];
    sfvals[m] = d_sfvals_tmp * c_sfvals_tmp;
    sfvals_tmp <<= 1;
    sdvals[3 * m] = sdvals_xieta[sfvals_tmp] * c_sfvals_tmp;
    sdvals[3 * m + 1] = sdvals_xieta[sfvals_tmp + 1] * c_sfvals_tmp;
    sdvals[3 * m + 2] = d_sfvals_tmp * sdvals_zeta[b_sfvals_tmp];
  }
}

// prism_40_ncoords - Obtain nodal coordinates in master element for prism_40
void prism_40_ncoords(double natcoords[120])
{
  double xietas[20];
  double zetas[4];
  ::sfe_sfuncs::tri_10_ncoords(&xietas[0]);
  ::sfe_sfuncs::bar_4_ncoords(&zetas[0]);
  for (int m{0}; m < 40; m++) {
    int natcoords_tmp;
    natcoords_tmp = (iv21[m] - 1) << 1;
    natcoords[3 * m] = xietas[natcoords_tmp];
    natcoords[3 * m + 1] = xietas[natcoords_tmp + 1];
    natcoords[3 * m + 2] = zetas[iv22[m] - 1];
  }
}

// prism_40_sfunc - Cubic prismatic element
void prism_40_sfunc(double xi, double eta, double zeta, double sfvals[40])
{
  double N_xieta[10];
  double N_zeta[4];
  ::sfe_sfuncs::tri_10_sfunc(xi, eta, &N_xieta[0]);
  ::sfe_sfuncs::bar_4_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 40; m++) {
    sfvals[m] = N_xieta[iv21[m] - 1] * N_zeta[iv22[m] - 1];
  }
}

// prism_40_sfunc - Cubic prismatic element
void prism_40_sfunc(double xi, double eta, double zeta, double sfvals[40],
                    double sdvals[120])
{
  double sdvals_xieta[20];
  double N_xieta[10];
  double N_zeta[4];
  double sdvals_zeta[4];
  ::sfe_sfuncs::tri_10_sfunc(xi, eta, &N_xieta[0], &sdvals_xieta[0]);
  ::sfe_sfuncs::bar_4_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 40; m++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv21[m] - 1;
    b_sfvals_tmp = iv22[m] - 1;
    c_sfvals_tmp = N_zeta[b_sfvals_tmp];
    d_sfvals_tmp = N_xieta[sfvals_tmp];
    sfvals[m] = d_sfvals_tmp * c_sfvals_tmp;
    sfvals_tmp <<= 1;
    sdvals[3 * m] = sdvals_xieta[sfvals_tmp] * c_sfvals_tmp;
    sdvals[3 * m + 1] = sdvals_xieta[sfvals_tmp + 1] * c_sfvals_tmp;
    sdvals[3 * m + 2] = d_sfvals_tmp * sdvals_zeta[b_sfvals_tmp];
  }
}

// prism_6_ncoords - Obtain nodal coordinates in master element for prism_6
void prism_6_ncoords(double natcoords[18])
{
  static const signed char b_iv[6]{1, 2, 3, 1, 2, 3};
  static const signed char b_iv1[6]{1, 1, 1, 2, 2, 2};
  double xietas[6];
  double zetas[2];
  ::sfe_sfuncs::tri_3_ncoords(&xietas[0]);
  ::sfe_sfuncs::bar_2_ncoords(&zetas[0]);
  for (int m{0}; m < 6; m++) {
    int natcoords_tmp;
    natcoords_tmp = (b_iv[m] - 1) << 1;
    natcoords[3 * m] = xietas[natcoords_tmp];
    natcoords[3 * m + 1] = xietas[natcoords_tmp + 1];
    natcoords[3 * m + 2] = zetas[b_iv1[m] - 1];
  }
}

// prism_6_sfunc - Linear prismatic element
void prism_6_sfunc(double xi, double eta, double zeta, double sfvals[6])
{
  static const signed char b_iv[6]{1, 2, 3, 1, 2, 3};
  static const signed char b_iv1[6]{1, 1, 1, 2, 2, 2};
  double N_xieta[3];
  double N_zeta[2];
  ::sfe_sfuncs::tri_3_sfunc(xi, eta, &N_xieta[0]);
  ::sfe_sfuncs::bar_2_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 6; m++) {
    sfvals[m] = N_xieta[b_iv[m] - 1] * N_zeta[b_iv1[m] - 1];
  }
}

// prism_6_sfunc - Linear prismatic element
void prism_6_sfunc(double xi, double eta, double zeta, double sfvals[6],
                   double sdvals[18])
{
  static const signed char b_iv[6]{1, 2, 3, 1, 2, 3};
  static const signed char b_iv1[6]{1, 1, 1, 2, 2, 2};
  double sdvals_xieta[6];
  double N_xieta[3];
  double N_zeta[2];
  double sdvals_zeta[2];
  ::sfe_sfuncs::tri_3_sfunc(xi, eta, &N_xieta[0], &sdvals_xieta[0]);
  ::sfe_sfuncs::bar_2_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 6; m++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = b_iv[m] - 1;
    b_sfvals_tmp = b_iv1[m] - 1;
    c_sfvals_tmp = N_zeta[b_sfvals_tmp];
    d_sfvals_tmp = N_xieta[sfvals_tmp];
    sfvals[m] = d_sfvals_tmp * c_sfvals_tmp;
    sfvals_tmp <<= 1;
    sdvals[3 * m] = sdvals_xieta[sfvals_tmp] * c_sfvals_tmp;
    sdvals[3 * m + 1] = sdvals_xieta[sfvals_tmp + 1] * c_sfvals_tmp;
    sdvals[3 * m + 2] = d_sfvals_tmp * sdvals_zeta[b_sfvals_tmp];
  }
}

// prism_75_ncoords - Obtain nodal coordinates in master element for prism_75
void prism_75_ncoords(double natcoords[225])
{
  double xietas[30];
  double zetas[5];
  ::sfe_sfuncs::tri_15_ncoords(&xietas[0]);
  ::sfe_sfuncs::bar_5_ncoords(&zetas[0]);
  for (int m{0}; m < 75; m++) {
    int natcoords_tmp;
    natcoords_tmp = (iv23[m] - 1) << 1;
    natcoords[3 * m] = xietas[natcoords_tmp];
    natcoords[3 * m + 1] = xietas[natcoords_tmp + 1];
    natcoords[3 * m + 2] = zetas[iv24[m] - 1];
  }
}

// prism_75_sfunc - Quartic prismatic element with equidistant nodes
void prism_75_sfunc(double xi, double eta, double zeta, double sfvals[75])
{
  double N_xieta[15];
  double N_zeta[5];
  ::sfe_sfuncs::tri_15_sfunc(xi, eta, &N_xieta[0]);
  ::sfe_sfuncs::bar_5_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 75; m++) {
    sfvals[m] = N_xieta[iv23[m] - 1] * N_zeta[iv24[m] - 1];
  }
}

// prism_75_sfunc - Quartic prismatic element with equidistant nodes
void prism_75_sfunc(double xi, double eta, double zeta, double sfvals[75],
                    double sdvals[225])
{
  double sdvals_xieta[30];
  double N_xieta[15];
  double N_zeta[5];
  double sdvals_zeta[5];
  ::sfe_sfuncs::tri_15_sfunc(xi, eta, &N_xieta[0], &sdvals_xieta[0]);
  ::sfe_sfuncs::bar_5_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 75; m++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv23[m] - 1;
    b_sfvals_tmp = iv24[m] - 1;
    c_sfvals_tmp = N_zeta[b_sfvals_tmp];
    d_sfvals_tmp = N_xieta[sfvals_tmp];
    sfvals[m] = d_sfvals_tmp * c_sfvals_tmp;
    sfvals_tmp <<= 1;
    sdvals[3 * m] = sdvals_xieta[sfvals_tmp] * c_sfvals_tmp;
    sdvals[3 * m + 1] = sdvals_xieta[sfvals_tmp + 1] * c_sfvals_tmp;
    sdvals[3 * m + 2] = d_sfvals_tmp * sdvals_zeta[b_sfvals_tmp];
  }
}

// prism_fek_75_ncoords - Obtain nodal coordinates in master element for
void prism_fek_75_ncoords(double natcoords[225])
{
  double xietas[30];
  double zetas[5];
  ::sfe_sfuncs::tri_fek_15_ncoords(&xietas[0]);
  ::sfe_sfuncs::bar_gl_5_ncoords(&zetas[0]);
  for (int m{0}; m < 75; m++) {
    int natcoords_tmp;
    natcoords_tmp = (iv23[m] - 1) << 1;
    natcoords[3 * m] = xietas[natcoords_tmp];
    natcoords[3 * m + 1] = xietas[natcoords_tmp + 1];
    natcoords[3 * m + 2] = zetas[iv24[m] - 1];
  }
}

// prism_fek_75_sfunc - Quartic prismatic element with Fekete points
void prism_fek_75_sfunc(double xi, double eta, double zeta, double sfvals[75])
{
  double N_xieta[15];
  double N_zeta[5];
  ::sfe_sfuncs::tri_fek_15_sfunc(xi, eta, &N_xieta[0]);
  ::sfe_sfuncs::bar_gl_5_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 75; m++) {
    sfvals[m] = N_xieta[iv23[m] - 1] * N_zeta[iv24[m] - 1];
  }
}

// prism_fek_75_sfunc - Quartic prismatic element with Fekete points
void prism_fek_75_sfunc(double xi, double eta, double zeta, double sfvals[75],
                        double sdvals[225])
{
  double sdvals_xieta[30];
  double N_xieta[15];
  double N_zeta[5];
  double sdvals_zeta[5];
  ::sfe_sfuncs::tri_fek_15_sfunc(xi, eta, &N_xieta[0], &sdvals_xieta[0]);
  ::sfe_sfuncs::bar_gl_5_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 75; m++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv23[m] - 1;
    b_sfvals_tmp = iv24[m] - 1;
    c_sfvals_tmp = N_zeta[b_sfvals_tmp];
    d_sfvals_tmp = N_xieta[sfvals_tmp];
    sfvals[m] = d_sfvals_tmp * c_sfvals_tmp;
    sfvals_tmp <<= 1;
    sdvals[3 * m] = sdvals_xieta[sfvals_tmp] * c_sfvals_tmp;
    sdvals[3 * m + 1] = sdvals_xieta[sfvals_tmp + 1] * c_sfvals_tmp;
    sdvals[3 * m + 2] = d_sfvals_tmp * sdvals_zeta[b_sfvals_tmp];
  }
}

// prism_gl_126_ncoords - Obtain nodal coordinates in master element for
void prism_gl_126_ncoords(double natcoords[378])
{
  double xietas[42];
  double zetas[6];
  ::sfe_sfuncs::tri_gl_21_ncoords(&xietas[0]);
  ::sfe_sfuncs::bar_6_ncoords(&zetas[0]);
  for (int m{0}; m < 126; m++) {
    int natcoords_tmp;
    natcoords_tmp = (iv15[m] - 1) << 1;
    natcoords[3 * m] = xietas[natcoords_tmp];
    natcoords[3 * m + 1] = xietas[natcoords_tmp + 1];
    natcoords[3 * m + 2] = zetas[iv16[m] - 1];
  }
}

// prism_gl_126_sfunc - Quintic prismatic element with equidistant nodes
void prism_gl_126_sfunc(double xi, double eta, double zeta, double sfvals[126])
{
  double N_xieta[21];
  double N_zeta[6];
  ::sfe_sfuncs::tri_gl_21_sfunc(xi, eta, &N_xieta[0]);
  ::sfe_sfuncs::bar_6_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 126; m++) {
    sfvals[m] = N_xieta[iv15[m] - 1] * N_zeta[iv16[m] - 1];
  }
}

// prism_gl_126_sfunc - Quintic prismatic element with equidistant nodes
void prism_gl_126_sfunc(double xi, double eta, double zeta, double sfvals[126],
                        double sdvals[378])
{
  double sdvals_xieta[42];
  double N_xieta[21];
  double N_zeta[6];
  double sdvals_zeta[6];
  ::sfe_sfuncs::tri_gl_21_sfunc(xi, eta, &N_xieta[0], &sdvals_xieta[0]);
  ::sfe_sfuncs::bar_6_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 126; m++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv15[m] - 1;
    b_sfvals_tmp = iv16[m] - 1;
    c_sfvals_tmp = N_zeta[b_sfvals_tmp];
    d_sfvals_tmp = N_xieta[sfvals_tmp];
    sfvals[m] = d_sfvals_tmp * c_sfvals_tmp;
    sfvals_tmp <<= 1;
    sdvals[3 * m] = sdvals_xieta[sfvals_tmp] * c_sfvals_tmp;
    sdvals[3 * m + 1] = sdvals_xieta[sfvals_tmp + 1] * c_sfvals_tmp;
    sdvals[3 * m + 2] = d_sfvals_tmp * sdvals_zeta[b_sfvals_tmp];
  }
}

// prism_gl_40_ncoords - Obtain nodal coordinates in master element for
void prism_gl_40_ncoords(double natcoords[120])
{
  double xietas[20];
  double zetas[4];
  ::sfe_sfuncs::tri_gl_10_ncoords(&xietas[0]);
  ::sfe_sfuncs::bar_gl_4_ncoords(&zetas[0]);
  for (int m{0}; m < 40; m++) {
    int natcoords_tmp;
    natcoords_tmp = (iv21[m] - 1) << 1;
    natcoords[3 * m] = xietas[natcoords_tmp];
    natcoords[3 * m + 1] = xietas[natcoords_tmp + 1];
    natcoords[3 * m + 2] = zetas[iv22[m] - 1];
  }
}

// prism_gl_40_sfunc - Quadratic prismatic element with Gauss-Lobatto nodes
void prism_gl_40_sfunc(double xi, double eta, double zeta, double sfvals[40])
{
  double N_xieta[10];
  double N_zeta[4];
  ::sfe_sfuncs::tri_gl_10_sfunc(xi, eta, &N_xieta[0]);
  ::sfe_sfuncs::bar_gl_4_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 40; m++) {
    sfvals[m] = N_xieta[iv21[m] - 1] * N_zeta[iv22[m] - 1];
  }
}

// prism_gl_40_sfunc - Quadratic prismatic element with Gauss-Lobatto nodes
void prism_gl_40_sfunc(double xi, double eta, double zeta, double sfvals[40],
                       double sdvals[120])
{
  double sdvals_xieta[20];
  double N_xieta[10];
  double N_zeta[4];
  double sdvals_zeta[4];
  ::sfe_sfuncs::tri_gl_10_sfunc(xi, eta, &N_xieta[0], &sdvals_xieta[0]);
  ::sfe_sfuncs::bar_gl_4_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 40; m++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv21[m] - 1;
    b_sfvals_tmp = iv22[m] - 1;
    c_sfvals_tmp = N_zeta[b_sfvals_tmp];
    d_sfvals_tmp = N_xieta[sfvals_tmp];
    sfvals[m] = d_sfvals_tmp * c_sfvals_tmp;
    sfvals_tmp <<= 1;
    sdvals[3 * m] = sdvals_xieta[sfvals_tmp] * c_sfvals_tmp;
    sdvals[3 * m + 1] = sdvals_xieta[sfvals_tmp + 1] * c_sfvals_tmp;
    sdvals[3 * m + 2] = d_sfvals_tmp * sdvals_zeta[b_sfvals_tmp];
  }
}

// prism_gl_75_ncoords - Obtain nodal coordinates in master element for
void prism_gl_75_ncoords(double natcoords[225])
{
  double xietas[30];
  double zetas[5];
  ::sfe_sfuncs::tri_gl_15_ncoords(&xietas[0]);
  ::sfe_sfuncs::bar_gl_5_ncoords(&zetas[0]);
  for (int m{0}; m < 75; m++) {
    int natcoords_tmp;
    natcoords_tmp = (iv23[m] - 1) << 1;
    natcoords[3 * m] = xietas[natcoords_tmp];
    natcoords[3 * m + 1] = xietas[natcoords_tmp + 1];
    natcoords[3 * m + 2] = zetas[iv24[m] - 1];
  }
}

// prism_gl_75_sfunc - Quartic prismatic element with Gauss-Lobatto nodes
void prism_gl_75_sfunc(double xi, double eta, double zeta, double sfvals[75])
{
  double N_xieta[15];
  double N_zeta[5];
  ::sfe_sfuncs::tri_gl_15_sfunc(xi, eta, &N_xieta[0]);
  ::sfe_sfuncs::bar_gl_5_sfunc(zeta, &N_zeta[0]);
  for (int m{0}; m < 75; m++) {
    sfvals[m] = N_xieta[iv23[m] - 1] * N_zeta[iv24[m] - 1];
  }
}

// prism_gl_75_sfunc - Quartic prismatic element with Gauss-Lobatto nodes
void prism_gl_75_sfunc(double xi, double eta, double zeta, double sfvals[75],
                       double sdvals[225])
{
  double sdvals_xieta[30];
  double N_xieta[15];
  double N_zeta[5];
  double sdvals_zeta[5];
  ::sfe_sfuncs::tri_gl_15_sfunc(xi, eta, &N_xieta[0], &sdvals_xieta[0]);
  ::sfe_sfuncs::bar_gl_5_sfunc(zeta, &N_zeta[0], &sdvals_zeta[0]);
  for (int m{0}; m < 75; m++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv23[m] - 1;
    b_sfvals_tmp = iv24[m] - 1;
    c_sfvals_tmp = N_zeta[b_sfvals_tmp];
    d_sfvals_tmp = N_xieta[sfvals_tmp];
    sfvals[m] = d_sfvals_tmp * c_sfvals_tmp;
    sfvals_tmp <<= 1;
    sdvals[3 * m] = sdvals_xieta[sfvals_tmp] * c_sfvals_tmp;
    sdvals[3 * m + 1] = sdvals_xieta[sfvals_tmp + 1] * c_sfvals_tmp;
    sdvals[3 * m + 2] = d_sfvals_tmp * sdvals_zeta[b_sfvals_tmp];
  }
}

void pyra_14_ncoords(double natcoords[42])
{
  static const double dv[42]{-1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0,  1.0,  0.0,
                             -1.0, 1.0,  0.0, 0.0, 0.0,  1.0, 0.0,  -1.0, 0.0,
                             1.0,  0.0,  0.0, 0.0, 1.0,  0.0, -1.0, 0.0,  0.0,
                             -0.5, -0.5, 0.5, 0.5, -0.5, 0.5, 0.5,  0.5,  0.5,
                             -0.5, 0.5,  0.5, 0.0, 0.0,  0.0};
  std::copy(&dv[0], &dv[42], &natcoords[0]);
}

// pyra_14_sfunc - Compute shape functions and their derivatives of pyra_14
void pyra_14_sfunc(double xi, double eta, double zeta, double sfvals[14])
{
  double b_sfvals_tmp;
  double sfvals_tmp;
  double t19;
  double t2;
  double t22;
  double t26;
  double t27;
  double t28;
  double t29;
  double t3;
  double t30_tmp;
  double t37;
  double t39;
  double t4;
  double t46;
  double t5;
  double t6;
  double t60;
  double t64;
  double t72;
  double t8;
  double t87;
  t2 = eta * zeta;
  t3 = eta * (1.0 / ((zeta - 1.0) + 1.0E-100));
  t4 = eta * eta;
  t5 = xi * xi;
  t6 = zeta * 2.0;
  t8 = zeta * zeta;
  t19 = eta / 2.0;
  t22 = zeta / 4.0;
  t26 = t2 / 2.0;
  t27 = t2 / 4.0;
  t28 = t3 / 2.0;
  t29 = t3 / 4.0;
  t30_tmp = eta + t3;
  t37 = t4 / 2.0;
  t39 = t8 / 4.0;
  t46 = t3 * t3;
  t60 = t3 * t28;
  t64 = (t2 - t8) + zeta;
  t72 = (-t2 - t8) + zeta;
  t87 = -t5 * (t60 - 0.5);
  sfvals_tmp = ((t27 - t22) + t39) + t5 * (t29 + t3 * t29);
  b_sfvals_tmp = (((t19 + t22) + t29) + t3 * (eta / 4.0)) * xi;
  sfvals[0] = sfvals_tmp + b_sfvals_tmp;
  sfvals[1] = sfvals_tmp - b_sfvals_tmp;
  sfvals_tmp = ((-t22 + t39) - t27) + -t5 * (t29 + t46 * -0.25);
  b_sfvals_tmp = (((t19 + t29) - t22) + eta * t3 * -0.25) * xi;
  sfvals[2] = sfvals_tmp + b_sfvals_tmp;
  sfvals[3] = sfvals_tmp - b_sfvals_tmp;
  sfvals[4] = -zeta + t6 * zeta;
  sfvals[5] = ((t26 - t19) + t37) - t5 * (t28 + t60);
  sfvals_tmp = ((-(zeta / 2.0) + t3 * t19) + 0.5) * xi;
  sfvals[6] = t87 + sfvals_tmp;
  sfvals[7] = ((t19 - t26) + t37) + t5 * (t28 + t46 * -0.5);
  sfvals[8] = t87 - sfvals_tmp;
  sfvals_tmp = (t30_tmp + zeta) * xi;
  sfvals[9] = t72 - sfvals_tmp;
  sfvals[10] = t72 + sfvals_tmp;
  sfvals_tmp = (t30_tmp - zeta) * xi;
  sfvals[11] = t64 - sfvals_tmp;
  sfvals[12] = t64 + sfvals_tmp;
  sfvals[13] = (((-t4 + t8) - t6) + t5 * (t46 - 1.0)) + 1.0;
}

// pyra_14_sfunc - Compute shape functions and their derivatives of pyra_14
void pyra_14_sfunc(double xi, double eta, double zeta, double sfvals[14],
                   double sdvals[42])
{
  double b_sfvals_tmp;
  double sdvals_tmp;
  double sfvals_tmp;
  double t17;
  double t18;
  double t19;
  double t2;
  double t20;
  double t21;
  double t22;
  double t23;
  double t24;
  double t26;
  double t27;
  double t28;
  double t29;
  double t3;
  double t30;
  double t30_tmp;
  double t37;
  double t39;
  double t4;
  double t43;
  double t44;
  double t46;
  double t47;
  double t48;
  double t5;
  double t51;
  double t52;
  double t56;
  double t56_tmp;
  double t57;
  double t59;
  double t6;
  double t60;
  double t62;
  double t63;
  double t64;
  double t66;
  double t70;
  double t71;
  double t72;
  double t79;
  double t8;
  double t84;
  double t86;
  double t87;
  double t89;
  double t98;
  double t99;
  double zeta_1_inv;
  zeta_1_inv = 1.0 / ((zeta - 1.0) + 1.0E-100);
  t2 = eta * zeta;
  t3 = eta * zeta_1_inv;
  t4 = eta * eta;
  t5 = xi * xi;
  t6 = zeta * 2.0;
  t8 = zeta * zeta;
  t19 = eta / 2.0;
  t20 = eta / 4.0;
  t21 = zeta / 2.0;
  t22 = zeta / 4.0;
  t23 = zeta_1_inv / 2.0;
  t24 = zeta_1_inv / 4.0;
  t17 = t3 * zeta_1_inv;
  t18 = (zeta_1_inv + 1.0) * xi;
  t26 = t2 / 2.0;
  t27 = t2 / 4.0;
  t28 = t3 / 2.0;
  t29 = t3 / 4.0;
  t30_tmp = eta + t3;
  t30 = t30_tmp + zeta;
  t37 = t4 / 2.0;
  t39 = t8 / 4.0;
  t44 = t3 * -zeta_1_inv;
  t46 = t3 * t3;
  t52 = t3 * t20;
  t56_tmp = eta * t3;
  t56 = t56_tmp * -0.25;
  t57 = t30_tmp - zeta;
  t43 = (eta - t6) + 1.0;
  t59 = (-eta - t6) + 1.0;
  t60 = t3 * t28;
  t62 = t3 * t29;
  t64 = (t2 - t8) + zeta;
  t70 = t46 * -0.25;
  t71 = -xi * (t46 - 1.0);
  t72 = (-t2 - t8) + zeta;
  t84 = (-t21 + t3 * t19) + 0.5;
  t98 = ((t19 + t22) + t29) + t52;
  t99 = ((t19 + t29) - t22) + t56;
  t47 = t3 * t17;
  t48 = t17 / 2.0;
  t51 = t17 / 4.0;
  t66 = t5 * t44;
  t79 = t28 + t60;
  t87 = -t5 * (t60 - 0.5);
  t30_tmp = t28 + t46 * -0.5;
  t89 = -xi * t30_tmp;
  t63 = t5 * t47;
  t86 = t79 * xi;
  sfvals_tmp = ((t27 - t22) + t39) + t5 * (t29 + t62);
  b_sfvals_tmp = t98 * xi;
  sfvals[0] = sfvals_tmp + b_sfvals_tmp;
  sfvals[1] = sfvals_tmp - b_sfvals_tmp;
  sfvals_tmp = ((-t22 + t39) - t27) + -t5 * (t29 + t70);
  b_sfvals_tmp = t99 * xi;
  sfvals[2] = sfvals_tmp + b_sfvals_tmp;
  sfvals[3] = sfvals_tmp - b_sfvals_tmp;
  sfvals[4] = -zeta + t6 * zeta;
  sfvals[5] = ((t26 - t19) + t37) - t5 * t79;
  sfvals_tmp = t84 * xi;
  sfvals[6] = t87 + sfvals_tmp;
  sfvals[7] = ((t19 - t26) + t37) + t5 * t30_tmp;
  sfvals[8] = t87 - sfvals_tmp;
  sfvals_tmp = t30 * xi;
  sfvals[9] = t72 - sfvals_tmp;
  sfvals[10] = t72 + sfvals_tmp;
  sfvals_tmp = t57 * xi;
  sfvals[11] = t64 - sfvals_tmp;
  sfvals[12] = t64 + sfvals_tmp;
  sfvals[13] = (((-t4 + t8) - t6) + t5 * (t46 - 1.0)) + 1.0;
  sdvals[0] = t86 + t98;
  sfvals_tmp = t22 + t5 * (t24 + t48);
  b_sfvals_tmp = xi * ((t24 + t28) + 0.5);
  sdvals[1] = sfvals_tmp + b_sfvals_tmp;
  sdvals_tmp = ((t20 + t21) - 0.25) + -t5 * (t51 + t28 * t17);
  t30_tmp = xi * ((t51 + t62) - 0.25);
  sdvals[2] = sdvals_tmp - t30_tmp;
  sdvals[3] = t86 + (((-t19 - t22) - t29) + t56);
  sdvals[4] = sfvals_tmp - b_sfvals_tmp;
  sdvals[5] = sdvals_tmp + t30_tmp;
  sdvals[6] = t89 + t99;
  sfvals_tmp = -t22 + -t5 * (t24 - t48);
  b_sfvals_tmp = xi * ((t24 - t28) + 0.5);
  sdvals[7] = sfvals_tmp + b_sfvals_tmp;
  sdvals_tmp = ((t21 - t20) - 0.25) + -t5 * (t47 / 2.0 - t51);
  t30_tmp = xi * ((t51 + t70) + 0.25);
  sdvals[8] = sdvals_tmp - t30_tmp;
  sdvals[9] = t89 + (((t22 - t19) - t29) + t52);
  sdvals[10] = sfvals_tmp - b_sfvals_tmp;
  sdvals[11] = sdvals_tmp + t30_tmp;
  sdvals[12] = 0.0;
  sdvals[13] = 0.0;
  sdvals[14] = zeta * 4.0 - 1.0;
  sdvals[15] = -xi * (t3 + t46);
  sdvals[16] = ((eta + t21) - t5 * (t23 + t17)) - 0.5;
  sdvals[17] = t19 + t5 * (t47 + t48);
  sdvals[18] = t71 + t84;
  sfvals_tmp = t3 * xi;
  sdvals[19] = t66 + sfvals_tmp;
  b_sfvals_tmp = xi * (t60 + 0.5);
  sdvals[20] = t63 - b_sfvals_tmp;
  sdvals[21] = xi * (t3 + t3 * -t3);
  sdvals[22] = ((eta - t21) + t5 * (t23 + t44)) + 0.5;
  sdvals[23] = -t19 - t5 * (t48 + t3 * t44);
  sdvals[24] = t71 + ((t21 + t56_tmp * -0.5) - 0.5);
  sdvals[25] = t66 - sfvals_tmp;
  sdvals[26] = t63 + b_sfvals_tmp;
  sdvals[27] = (-eta - zeta) - t3;
  sdvals[28] = -zeta - t18;
  sfvals_tmp = xi * (t17 - 1.0);
  sdvals[29] = t59 + sfvals_tmp;
  sdvals[30] = t30;
  sdvals[31] = -zeta + t18;
  sdvals[32] = t59 - sfvals_tmp;
  sdvals[33] = (-eta - t3) + zeta;
  sdvals[34] = -t18 + zeta;
  sfvals_tmp = xi * (t17 + 1.0);
  sdvals[35] = t43 + sfvals_tmp;
  sdvals[36] = t57;
  sdvals[37] = t18 + zeta;
  sdvals[38] = t43 - sfvals_tmp;
  sdvals[39] = xi * (t46 * 2.0 - 2.0);
  sdvals[40] = eta * -2.0 + t5 * t17 * 2.0;
  sdvals[41] = (t6 - t63 * 2.0) - 2.0;
}

void pyra_30_ncoords(double natcoords[90])
{
  static const double dv[90]{-1.0,
                             -1.0,
                             0.0,
                             1.0,
                             -1.0,
                             0.0,
                             1.0,
                             1.0,
                             0.0,
                             -1.0,
                             1.0,
                             0.0,
                             0.0,
                             0.0,
                             1.0,
                             -0.33333333333333331,
                             -1.0,
                             0.0,
                             0.33333333333333331,
                             -1.0,
                             0.0,
                             1.0,
                             -0.33333333333333331,
                             0.0,
                             1.0,
                             0.33333333333333331,
                             0.0,
                             0.33333333333333331,
                             1.0,
                             0.0,
                             -0.33333333333333331,
                             1.0,
                             0.0,
                             -1.0,
                             0.33333333333333331,
                             0.0,
                             -1.0,
                             -0.33333333333333331,
                             0.0,
                             -0.66666666666666663,
                             -0.66666666666666663,
                             0.33333333333333331,
                             -0.33333333333333331,
                             -0.33333333333333331,
                             0.66666666666666663,
                             0.66666666666666663,
                             -0.66666666666666663,
                             0.33333333333333331,
                             0.33333333333333331,
                             -0.33333333333333331,
                             0.66666666666666663,
                             0.66666666666666663,
                             0.66666666666666663,
                             0.33333333333333331,
                             0.33333333333333331,
                             0.33333333333333331,
                             0.66666666666666663,
                             -0.66666666666666663,
                             0.66666666666666663,
                             0.33333333333333331,
                             -0.33333333333333331,
                             0.33333333333333331,
                             0.66666666666666663,
                             -0.33333333333333331,
                             -0.33333333333333331,
                             0.0,
                             0.33333333333333331,
                             -0.33333333333333331,
                             0.0,
                             0.33333333333333331,
                             0.33333333333333331,
                             0.0,
                             -0.33333333333333331,
                             0.33333333333333331,
                             0.0,
                             0.0,
                             -0.66666666666666663,
                             0.33333333333333331,
                             0.66666666666666663,
                             0.0,
                             0.33333333333333331,
                             0.0,
                             0.66666666666666663,
                             0.33333333333333331,
                             -0.66666666666666663,
                             0.0,
                             0.33333333333333331,
                             0.0,
                             0.0,
                             0.33333333333333331};
  std::copy(&dv[0], &dv[90], &natcoords[0]);
}

// pyra_30_sfunc - Compute shape functions and their derivatives of pyra_30
void pyra_30_sfunc(double xi, double eta, double zeta, double sfvals[30])
{
  double b_sfvals_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double sfvals_tmp;
  double t100;
  double t101;
  double t116;
  double t118;
  double t126;
  double t128;
  double t129;
  double t132;
  double t135;
  double t136;
  double t138;
  double t14;
  double t144;
  double t145;
  double t146;
  double t152;
  double t152_tmp;
  double t159;
  double t160;
  double t161;
  double t166;
  double t17;
  double t171;
  double t173;
  double t180;
  double t195;
  double t196;
  double t197;
  double t198;
  double t199;
  double t2;
  double t203;
  double t204;
  double t205;
  double t206;
  double t207;
  double t217;
  double t219;
  double t219_tmp;
  double t222;
  double t228;
  double t228_tmp;
  double t251;
  double t253;
  double t257;
  double t257_tmp;
  double t26;
  double t261;
  double t27;
  double t273;
  double t274;
  double t277;
  double t285;
  double t29;
  double t296;
  double t3;
  double t30;
  double t31;
  double t310;
  double t310_tmp;
  double t316;
  double t317;
  double t322;
  double t33;
  double t333;
  double t335;
  double t335_tmp;
  double t34;
  double t342;
  double t347;
  double t36;
  double t378;
  double t390_tmp;
  double t4;
  double t401_tmp;
  double t406;
  double t407;
  double t42;
  double t43;
  double t451_tmp;
  double t48;
  double t482;
  double t483;
  double t495;
  double t5;
  double t504;
  double t51;
  double t510_tmp;
  double t6;
  double t65;
  double t66;
  double t67;
  double t7;
  double t71;
  double t72;
  double t73;
  double t74;
  double t75;
  double t76;
  double t8;
  double t82;
  double t83;
  double t85;
  double t86;
  double t87;
  double t88;
  double zeta_1_inv;
  zeta_1_inv = 1.0 / ((zeta - 1.0) + 1.0E-100);
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t4 = xi * xi;
  t5 = std::pow(xi, 3.0);
  t6 = zeta * zeta;
  t7 = std::pow(zeta, 3.0);
  t8 = zeta_1_inv * zeta_1_inv;
  t14 = eta * 2.25;
  t17 = zeta * 6.75;
  t26 = eta * 1.125;
  t27 = eta * 0.5625;
  t29 = eta * 3.375;
  t30 = eta * 1.6875;
  t31 = eta / 256.0;
  t33 = zeta * 1.125;
  t34 = zeta * 0.5625;
  t36 = zeta * 3.375;
  t65 = eta * 0.03515625;
  t66 = eta * 0.10546875;
  t67 = eta * 0.24609375;
  t71 = zeta * 0.0703125;
  t72 = zeta * 0.2109375;
  t73 = zeta * 0.4921875;
  t74 = zeta * 0.10546875;
  t75 = zeta * 0.14453125;
  t76 = zeta * 0.17578125;
  t116 = eta * 0.52734375;
  t118 = eta * 0.94921875;
  t126 = zeta * 1.8984375;
  t128 = zeta * 0.94921875;
  t129 = zeta * 1.58203125;
  t132 = zeta_1_inv * 0.94921875;
  t152_tmp = eta * zeta;
  t152 = t152_tmp * -0.10546875;
  t180 = eta * 2.84765625;
  t253 = t152_tmp * -2.84765625;
  t42 = t6 * 4.5;
  t43 = t6 * 2.25;
  t48 = t29 * zeta;
  t51 = t27 * zeta_1_inv;
  t82 = t2 * 3.375;
  t83 = t2 * 1.6875;
  t85 = t6 * 3.375;
  t86 = t7 * 3.375;
  t87 = t6 * 1.6875;
  t88 = t7 * 1.6875;
  t100 = t65 * zeta_1_inv;
  t101 = t66 * zeta_1_inv;
  t135 = t2 * 0.03515625;
  t136 = t3 * 0.03515625;
  t138 = t3 * 0.10546875;
  t144 = t6 * 0.10546875;
  t145 = t7 * 0.10546875;
  t146 = t6 * 0.24609375;
  t159 = t118 * zeta_1_inv;
  t160 = t6 * t29;
  t161 = t2 * t36;
  t166 = t2 * (zeta_1_inv * 0.5625);
  t171 = t2 * (zeta_1_inv * 3.375);
  t173 = t2 * (zeta_1_inv * 1.6875);
  t195 = t2 * 0.31640625;
  t196 = t3 * 0.31640625;
  t197 = t2 * 0.52734375;
  t198 = t2 * 0.94921875;
  t199 = t3 * 0.94921875;
  t203 = t6 * 0.31640625;
  t204 = t7 * 0.38671875;
  t205 = t6 * 0.52734375;
  t206 = t6 * 0.94921875;
  t207 = t7 * 0.94921875;
  t217 = t180 * zeta_1_inv;
  t219_tmp = eta * t6;
  t219 = t219_tmp * -3.375;
  t222 = t2 * t74;
  t228_tmp = t2 * zeta_1_inv;
  t228 = t228_tmp * -1.6875;
  t251 = t6 * 2.21484375;
  t257_tmp = t2 * zeta;
  t257 = t257_tmp * -0.10546875;
  t261 = t2 * t128;
  t273 = t2 * t132;
  t274 = t3 * t132;
  t285 = t257_tmp * -0.94921875;
  t296 = t3 * (zeta_1_inv * 2.84765625);
  t310_tmp = t2 * t8;
  t310 = t310_tmp * 0.6328125;
  t333 = t310_tmp * -0.31640625;
  t335_tmp = t3 * std::pow(zeta_1_inv, 3.0);
  t335 = t335_tmp * -0.31640625;
  t342 = t335_tmp * -0.94921875;
  t347 = t335_tmp * 2.84765625;
  t277 = t8 * t82;
  t316 = t8 * t195;
  t317 = t8 * t196;
  t322 = t8 * t198;
  t401_tmp = t30 + t30 * zeta_1_inv;
  t510_tmp = t3 * zeta_1_inv;
  t378 = -t4 * ((-t36 + t171) + t277);
  t390_tmp = (t14 + t14 * zeta_1_inv) + t48;
  t406 = (((t42 + t26 * zeta) - t33) - t86) + t219;
  t407 = (((t42 - t33) + t152_tmp * -1.125) - t86) + t160;
  t451_tmp = (t26 + t48) + t26 * zeta_1_inv;
  t482 = t4 * (((((t118 - t128) + t273) + t310) + t3 * t8 * -0.94921875) +
               0.31640625);
  t483 = t4 * (((((-t118 - t128) + t273) + t310) + t8 * t199) + 0.31640625);
  t495 = t4 * ((((((t51 + t116) - t74) + t273) + t310) + t317) + 0.03515625);
  t504 =
      t4 * ((((((t51 + t74) + t116) + t228_tmp * -0.94921875) + t317) - t310) -
            0.03515625);
  sfvals_tmp =
      -t495 +
      (((((((((-t31 + eta * 0.0703125 * zeta) - t75) + t136) - t135) + t205) +
          t222) -
         t204) +
        t219_tmp * -0.31640625) +
       0.00390625);
  b_sfvals_tmp = ((((((((eta * (zeta_1_inv / 4.0) + t67) - t71) +
                       eta * 0.87890625 * zeta) +
                      t166) +
                     t197) +
                    t203) +
                   t510_tmp * -0.03515625) +
                  0.00390625) *
                 xi;
  c_sfvals_tmp = t5 * (((t100 + t333) + t335) + 0.03515625);
  sfvals[0] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[1] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp =
      t504 +
      (((((((((t31 - t75) + t152_tmp * -0.0703125) - t135) - t136) + t205) +
          t222) -
         t204) +
        eta * t203) +
       0.00390625);
  b_sfvals_tmp =
      ((((((((eta * zeta_1_inv * -0.25 - t67) - t71) + t166) + t197) + t203) +
         t152_tmp * -0.87890625) +
        t3 * (zeta_1_inv * 0.03515625)) +
       0.00390625) *
      xi;
  c_sfvals_tmp = t5 * (((t100 + t316) + t335) - 0.03515625);
  sfvals[2] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[3] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[4] = (t7 * 4.5 - t42) + zeta;
  sfvals_tmp =
      t495 +
      (((((((((t65 + t76) + eta * 0.4921875 * zeta) + t145) + t195) - t146) -
          t196) +
         t219_tmp * -0.52734375) +
        t285) -
       0.03515625);
  b_sfvals_tmp = t5 * (((t101 + t310_tmp * -0.94921875) + t342) + 0.10546875);
  c_sfvals_tmp =
      ((((((t66 + t72) + t152) + t198) - t144) + t274) - 0.10546875) * xi;
  sfvals[5] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[6] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      t483 +
      (((((((((t66 + t76) + t135) + t145) + t152_tmp * -0.2109375) - t138) -
          t146) +
         t6 * t66) +
        t257) -
       0.03515625);
  b_sfvals_tmp = (((((((t73 + t66 * zeta) - t66) + t166) + t197) - t205) +
                   t510_tmp * -0.10546875) +
                  0.03515625) *
                 xi;
  c_sfvals_tmp = t5 * (((t159 + t333) + t342) + 0.31640625);
  sfvals[7] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  d_sfvals_tmp =
      t482 +
      (((((((((t76 + eta * 0.2109375 * zeta) - t66) + t135) + t138) + t145) -
          t146) +
         t219_tmp * -0.10546875) +
        t257) -
       0.03515625);
  e_sfvals_tmp = (((((((t66 + t73) + t152) + t166) + t197) +
                    t3 * (zeta_1_inv * 0.10546875)) -
                   t205) +
                  0.03515625) *
                 xi;
  f_sfvals_tmp = t5 * (((t159 + t316) + t342) - 0.31640625);
  sfvals[8] = (d_sfvals_tmp - e_sfvals_tmp) - f_sfvals_tmp;
  g_sfvals_tmp =
      -t504 +
      (((((((((t76 - t65) + t145) + t152_tmp * -0.4921875) + t195) + t196) -
          t146) +
         t6 * t116) +
        t285) -
       0.03515625);
  t510_tmp = t5 * (((t101 + t322) + t342) - 0.10546875);
  t335_tmp =
      ((((((t66 - t72) + t144) + t152) - t198) + t274) + 0.10546875) * xi;
  sfvals[9] = (g_sfvals_tmp - t510_tmp) - t335_tmp;
  sfvals[10] = (g_sfvals_tmp + t510_tmp) + t335_tmp;
  sfvals[11] = (d_sfvals_tmp + e_sfvals_tmp) + f_sfvals_tmp;
  sfvals[12] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp = t4 * ((t401_tmp + t173) + t8 * t83) +
               ((((t34 - t43) + t88) + t152_tmp * -0.5625) + t6 * t30);
  b_sfvals_tmp = (((t451_tmp + t83) + t173) + (-t34 + t87)) * xi;
  sfvals[13] = sfvals_tmp + b_sfvals_tmp;
  c_sfvals_tmp = (t390_tmp + (-t33 + t85)) * xi;
  sfvals[14] = t406 - c_sfvals_tmp;
  sfvals[15] = sfvals_tmp - b_sfvals_tmp;
  sfvals[16] = t406 + c_sfvals_tmp;
  sfvals_tmp = -t4 * ((t401_tmp + t228) + t310_tmp * -1.6875) +
               ((((t34 + t27 * zeta) - t43) + t88) + t219_tmp * -1.6875);
  b_sfvals_tmp = (((t451_tmp - t83) + t228) + (t34 - t87)) * xi;
  sfvals[17] = sfvals_tmp + b_sfvals_tmp;
  c_sfvals_tmp = (t390_tmp + (t33 - t85)) * xi;
  sfvals[18] = t407 - c_sfvals_tmp;
  sfvals[19] = sfvals_tmp - b_sfvals_tmp;
  sfvals[20] = t407 + c_sfvals_tmp;
  sfvals_tmp =
      -t483 +
      (((((((((eta * 1.8984375 * zeta - t118) - t129) + t199) - t195) - t207) +
          t251) +
         t261) +
        t219_tmp * -0.94921875) +
       0.31640625);
  b_sfvals_tmp =
      ((((((t126 + t180) + t198) - t206) + t253) + t296) - 0.94921875) * xi;
  c_sfvals_tmp = t5 * (((t217 - t347) + t8 * -t198) + 0.94921875);
  sfvals[21] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[22] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp =
      -t482 +
      (((((((((t118 - t129) + t152_tmp * -1.8984375) - t195) - t199) - t207) +
          t251) +
         t6 * t118) +
        t261) +
       0.31640625);
  b_sfvals_tmp = t5 * (((t217 + t322) - t347) - 0.94921875);
  c_sfvals_tmp =
      ((((((t180 - t126) + t206) - t198) + t253) + t296) + 0.94921875) * xi;
  sfvals[23] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[24] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp = t29 + t29 * zeta_1_inv;
  sfvals[25] =
      ((t152_tmp * -3.375 + t160) + t161) - t4 * ((sfvals_tmp + t171) + t277);
  b_sfvals_tmp = (((t36 + t82) - t85) + t171) * xi;
  sfvals[26] = t378 + b_sfvals_tmp;
  sfvals[27] = ((t48 + t161) + t219) +
               t4 * ((sfvals_tmp + t228_tmp * -3.375) + t310_tmp * -3.375);
  sfvals[28] = t378 - b_sfvals_tmp;
  sfvals[29] = (((t7 * 6.75 + t17) - t6 * 13.5) - t257_tmp * 6.75) +
               t4 * ((-t17 + t228_tmp * 6.75) + t310_tmp * 6.75);
}

// pyra_30_sfunc - Compute shape functions and their derivatives of pyra_30
void pyra_30_sfunc(double xi, double eta, double zeta, double sfvals[30],
                   double sdvals[90])
{
  double b_sdvals_tmp;
  double b_sfvals_tmp;
  double b_t400_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double h_sfvals_tmp;
  double sdvals_tmp;
  double sfvals_tmp;
  double sfvals_tmp_tmp;
  double t10;
  double t100;
  double t101;
  double t104;
  double t106;
  double t106_tmp;
  double t11;
  double t110;
  double t111;
  double t115;
  double t116;
  double t117;
  double t118;
  double t12;
  double t122;
  double t123;
  double t126;
  double t127;
  double t128;
  double t129;
  double t132;
  double t135;
  double t136;
  double t137;
  double t138;
  double t14;
  double t142;
  double t143;
  double t144;
  double t145;
  double t146;
  double t148;
  double t15;
  double t152;
  double t153;
  double t154;
  double t157;
  double t158;
  double t159;
  double t16;
  double t160;
  double t161;
  double t166;
  double t17;
  double t170;
  double t171;
  double t173;
  double t180;
  double t187;
  double t189;
  double t190;
  double t195;
  double t196;
  double t197;
  double t198;
  double t199;
  double t2;
  double t20;
  double t203;
  double t204;
  double t205;
  double t206;
  double t207;
  double t208;
  double t21;
  double t211;
  double t212;
  double t216;
  double t217;
  double t218;
  double t219;
  double t219_tmp;
  double t21_tmp;
  double t222;
  double t225;
  double t226;
  double t228;
  double t23;
  double t230;
  double t233;
  double t237;
  double t237_tmp;
  double t238;
  double t238_tmp;
  double t244;
  double t251;
  double t252;
  double t253;
  double t257;
  double t257_tmp;
  double t26;
  double t261;
  double t262;
  double t263;
  double t265;
  double t265_tmp;
  double t268;
  double t27;
  double t270;
  double t271;
  double t273;
  double t274;
  double t275;
  double t277;
  double t278;
  double t279;
  double t285;
  double t29;
  double t293;
  double t296;
  double t297;
  double t3;
  double t30;
  double t302;
  double t303;
  double t306;
  double t308;
  double t309;
  double t31;
  double t310;
  double t311;
  double t312;
  double t312_tmp;
  double t313;
  double t313_tmp;
  double t316;
  double t317;
  double t319;
  double t320;
  double t321;
  double t322;
  double t324;
  double t33;
  double t333;
  double t335;
  double t34;
  double t342;
  double t343_tmp;
  double t344;
  double t345;
  double t346;
  double t347;
  double t348;
  double t349;
  double t350;
  double t351;
  double t352;
  double t353;
  double t36;
  double t361;
  double t362;
  double t363;
  double t364;
  double t366;
  double t368;
  double t373;
  double t373_tmp;
  double t376;
  double t376_tmp;
  double t378;
  double t379;
  double t38;
  double t380_tmp;
  double t381;
  double t382;
  double t384;
  double t39;
  double t390;
  double t391;
  double t394;
  double t4;
  double t40;
  double t400;
  double t400_tmp;
  double t401_tmp;
  double t406;
  double t407;
  double t408;
  double t409;
  double t41;
  double t415;
  double t416;
  double t418;
  double t42;
  double t429;
  double t43;
  double t430;
  double t431;
  double t439;
  double t44;
  double t451;
  double t451_tmp;
  double t453;
  double t457;
  double t462;
  double t466;
  double t466_tmp;
  double t467;
  double t47;
  double t474;
  double t475;
  double t47_tmp;
  double t48;
  double t482;
  double t483;
  double t488;
  double t491;
  double t491_tmp;
  double t492;
  double t492_tmp;
  double t495;
  double t498;
  double t499;
  double t5;
  double t50;
  double t501;
  double t504;
  double t51;
  double t510;
  double t510_tmp;
  double t511;
  double t54;
  double t56_tmp;
  double t6;
  double t61;
  double t62;
  double t63;
  double t65;
  double t66;
  double t67;
  double t7;
  double t71;
  double t72;
  double t73;
  double t74;
  double t75;
  double t76;
  double t8;
  double t80;
  double t81;
  double t82;
  double t83;
  double t85;
  double t86;
  double t87;
  double t88;
  double t9;
  double t91;
  double t93;
  double t95;
  double t96;
  double t98;
  double zeta_1_inv;
  zeta_1_inv = 1.0 / ((zeta - 1.0) + 1.0E-100);
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t4 = xi * xi;
  t5 = std::pow(xi, 3.0);
  t6 = zeta * zeta;
  t7 = std::pow(zeta, 3.0);
  t8 = zeta_1_inv * zeta_1_inv;
  t9 = std::pow(zeta_1_inv, 3.0);
  t11 = zeta * 9.0;
  t12 = zeta_1_inv / 4.0;
  t14 = eta * 2.25;
  t15 = eta * 6.75;
  t16 = zeta * 4.5;
  t17 = zeta * 6.75;
  t21_tmp = eta * zeta_1_inv;
  t21 = t21_tmp * -0.25;
  t26 = eta * 1.125;
  t27 = eta * 0.5625;
  t29 = eta * 3.375;
  t30 = eta * 1.6875;
  t31 = eta / 256.0;
  t33 = zeta * 1.125;
  t34 = zeta * 0.5625;
  t36 = zeta * 3.375;
  t38 = zeta_1_inv * 1.125;
  t39 = zeta_1_inv * 0.5625;
  t40 = zeta_1_inv * 3.375;
  t41 = zeta_1_inv * 1.6875;
  t47_tmp = eta * zeta;
  t47 = t47_tmp * -6.75;
  t61 = eta * 0.0703125;
  t62 = eta * 0.2109375;
  t63 = eta * 0.4921875;
  t65 = eta * 0.03515625;
  t66 = eta * 0.10546875;
  t67 = eta * 0.24609375;
  t71 = zeta * 0.0703125;
  t72 = zeta * 0.2109375;
  t73 = zeta * 0.4921875;
  t74 = zeta * 0.10546875;
  t75 = zeta * 0.14453125;
  t76 = zeta * 0.17578125;
  t80 = zeta_1_inv * 0.03515625;
  t81 = zeta_1_inv * 0.10546875;
  t91 = t47_tmp * -3.375;
  t96 = t21_tmp * -1.125;
  t98 = t21_tmp * -3.375;
  t110 = eta * 0.6328125;
  t111 = eta * 1.0546875;
  t115 = eta * 1.8984375;
  t116 = eta * 0.52734375;
  t117 = eta * 0.87890625;
  t118 = eta * 0.94921875;
  t122 = zeta * 0.6328125;
  t123 = zeta * 1.0546875;
  t126 = zeta * 1.8984375;
  t127 = zeta * 0.87890625;
  t128 = zeta * 0.94921875;
  t129 = zeta * 1.58203125;
  t132 = zeta_1_inv * 0.94921875;
  t148 = t47_tmp * -0.2109375;
  t152 = t47_tmp * -0.10546875;
  t157 = t21_tmp * 0.31640625;
  t180 = eta * 2.84765625;
  t187 = zeta * 4.4296875;
  t189 = zeta * 2.84765625;
  t190 = zeta_1_inv * 2.84765625;
  t211 = t47_tmp * -1.8984375;
  t212 = t47_tmp * -0.87890625;
  t218 = t21_tmp * 8.54296875;
  t253 = t47_tmp * -2.84765625;
  t10 = t8 * t8;
  t20 = t15 * zeta;
  t23 = t15 * zeta_1_inv;
  t42 = t6 * 4.5;
  t43 = t6 * 2.25;
  t44 = t6 * 13.5;
  t48 = t29 * zeta;
  t50 = t26 * zeta_1_inv;
  t51 = t27 * zeta_1_inv;
  t54 = t29 * zeta_1_inv;
  t56_tmp = eta * t8;
  t82 = t2 * 3.375;
  t83 = t2 * 1.6875;
  t85 = t6 * 3.375;
  t86 = t7 * 3.375;
  t87 = t6 * 1.6875;
  t88 = t7 * 1.6875;
  t93 = t62 * zeta;
  t95 = t66 * zeta;
  t100 = t65 * zeta_1_inv;
  t101 = t66 * zeta_1_inv;
  t104 = t8 * t15;
  t106_tmp = t2 * zeta_1_inv;
  t106 = t106_tmp * 6.75;
  t135 = t2 * 0.03515625;
  t136 = t3 * 0.03515625;
  t137 = t2 * 0.10546875;
  t138 = t3 * 0.10546875;
  t142 = t6 * 10.125;
  t143 = t6 * 5.0625;
  t144 = t6 * 0.10546875;
  t145 = t7 * 0.10546875;
  t146 = t6 * 0.24609375;
  t153 = t115 * zeta;
  t154 = t117 * zeta;
  t158 = t115 * zeta_1_inv;
  t159 = t118 * zeta_1_inv;
  t160 = t6 * t29;
  t161 = t2 * t36;
  t166 = t2 * t39;
  t170 = t8 * t29;
  t171 = t2 * t40;
  t173 = t2 * t41;
  t195 = t2 * 0.31640625;
  t196 = t3 * 0.31640625;
  t197 = t2 * 0.52734375;
  t198 = t2 * 0.94921875;
  t199 = t3 * 0.94921875;
  t203 = t6 * 0.31640625;
  t204 = t7 * 0.38671875;
  t205 = t6 * 0.52734375;
  t206 = t6 * 0.94921875;
  t207 = t7 * 0.94921875;
  t208 = t6 * 1.16015625;
  t216 = t180 * zeta;
  t217 = t180 * zeta_1_inv;
  t219_tmp = eta * t6;
  t219 = t219_tmp * -3.375;
  t222 = t2 * t74;
  t225 = t106_tmp * -0.5625;
  t226 = t106_tmp * -3.375;
  t228 = t106_tmp * -1.6875;
  t230 = t3 * t80;
  t233 = t3 * t81;
  t237_tmp = t2 * t8;
  t237 = t237_tmp * 6.75;
  t238_tmp = t2 * t9;
  t238 = t238_tmp * 6.75;
  t244 = t2 * 2.84765625;
  t251 = t6 * 2.21484375;
  t252 = t6 * 2.84765625;
  t257_tmp = t2 * zeta;
  t257 = t257_tmp * -0.10546875;
  t261 = t2 * t128;
  t262 = t56_tmp * 1.265625;
  t263 = t8 * t110;
  t265_tmp = t3 * zeta_1_inv;
  t265 = t265_tmp * -0.03515625;
  t268 = t265_tmp * -0.10546875;
  t270 = t8 * t115;
  t271 = t106_tmp * 1.8984375;
  t273 = t2 * t132;
  t274 = t3 * t132;
  t275 = t237_tmp * 0.5625;
  t285 = t257_tmp * -0.94921875;
  t293 = t265_tmp * -0.94921875;
  t296 = t3 * t190;
  t297 = t106_tmp * 8.54296875;
  t306 = t265_tmp * -2.84765625;
  t308 = t237_tmp * 1.265625;
  t309 = t238_tmp * 1.265625;
  t310 = t237_tmp * 0.6328125;
  t311 = t238_tmp * 0.6328125;
  t312_tmp = t3 * t8;
  t312 = t312_tmp * 0.6328125;
  t313_tmp = t3 * t9;
  t313 = t313_tmp * 0.6328125;
  t319 = t238_tmp * 1.8984375;
  t320 = t312_tmp * 1.8984375;
  t321 = t313_tmp * 1.8984375;
  t333 = t237_tmp * -0.31640625;
  t335 = t313_tmp * -0.31640625;
  t342 = t313_tmp * -0.94921875;
  t346 = t312_tmp * 2.84765625;
  t347 = t313_tmp * 2.84765625;
  t349 = t238_tmp * 8.54296875;
  t350 = t313_tmp * 8.54296875;
  t352 = t237_tmp * -2.84765625;
  t353 = t238_tmp * -2.84765625;
  t380_tmp = t56_tmp * 3.375;
  t277 = t8 * t82;
  t278 = t9 * t82;
  t279 = t8 * t83;
  t302 = t8 * t136;
  t303 = t8 * t138;
  t316 = t8 * t195;
  t317 = t8 * t196;
  t322 = t8 * t198;
  t324 = t8 * t199;
  t343_tmp = t3 * t10;
  t344 = t8 * t244;
  t345 = t9 * t244;
  t348 = t343_tmp * 2.84765625;
  t351 = t343_tmp * 8.54296875;
  t361 = -t33 + t85;
  t363 = -t34 + t87;
  t366 = ((zeta_1_inv * 2.25 + t36) + 2.25) * xi;
  t373_tmp = (-t17 + t106) + t237;
  t373 = -xi * t373_tmp;
  t400_tmp = t29 + t54;
  b_t400_tmp = (t400_tmp + t226) + t237_tmp * -3.375;
  t400 = -xi * b_t400_tmp;
  t401_tmp = t30 + t30 * zeta_1_inv;
  t408 = ((t101 + t237_tmp * -0.94921875) + t342) + 0.10546875;
  t510_tmp = eta * t12 + t67;
  t510 = ((((((t510_tmp - t71) + t154) + t166) + t197) + t203) + t265) +
         0.00390625;
  t511 = (((((((t21 - t67) - t71) + t166) + t197) + t203) + t212) + t230) +
         0.00390625;
  t362 = t33 - t85;
  t364 = t34 - t87;
  t368 = -t4 * (t23 + t104);
  t378 = -t4 * ((-t36 + t171) + t277);
  t379 = ((t36 + t82) - t85) + t171;
  t381 = (((t11 + t26) + t47) - t142) - 1.125;
  t382 = (((t11 + t20) - t26) - t142) - 1.125;
  t384 = (t400_tmp + t171) + t277;
  t313_tmp = (t14 + t14 * zeta_1_inv) + t48;
  t390 = t313_tmp + t361;
  t406 = (((t42 + t26 * zeta) - t33) - t86) + t219;
  t407 = (((t42 - t33) + t47_tmp * -1.125) - t86) + t160;
  t409 = ((t101 + t322) + t342) - 0.10546875;
  t265_tmp = t158 + t262;
  t415 = t4 * ((t265_tmp + t352) + 0.94921875);
  t418 = ((t217 + t322) - t347) - 0.94921875;
  t451_tmp = (t26 + t48) + t50;
  t451 = ((t451_tmp + t83) + t173) + t363;
  t466_tmp = t66 - t72;
  t466 = ((((t466_tmp + t144) + t152) - t198) + t274) + 0.10546875;
  t400_tmp = t66 + t72;
  t467 = ((((t400_tmp + t152) + t198) - t144) + t274) - 0.10546875;
  t475 = (((((-t115 - t126) + t271) + t308) + t320) + 0.6328125) * xi;
  t482 = t4 * (((((t118 - t128) + t273) + t310) + t312_tmp * -0.94921875) +
               0.31640625);
  t312_tmp = t50 + t111;
  t488 = (((((t312_tmp - t72) + t271) + t308) + t312) + 0.0703125) * xi;
  t491_tmp = t180 - t126;
  t491 = ((((t491_tmp + t206) - t198) + t253) + t296) + 0.94921875;
  t492_tmp = t126 + t180;
  t492 = ((((t492_tmp + t198) - t206) + t253) + t296) - 0.94921875;
  t499 = ((((((t66 + t73) + t152) + t166) + t197) + t233) - t205) + 0.03515625;
  t501 = ((((((t73 + t95) - t66) + t166) + t197) - t205) + t268) + 0.03515625;
  t376_tmp = t238 + t277;
  t376 = t4 * (t376_tmp + 3.375);
  t391 = t313_tmp + t362;
  t394 = t384 * xi;
  t416 = t4 * ((t265_tmp + t344) - 0.94921875);
  t429 = t4 * (((t309 + t321) + t322) + 0.94921875);
  t430 = t4 * ((((t39 + t158) + t262) + t322) + 0.52734375);
  t431 = t4 * (((t309 + t322) - t321) + 0.94921875);
  t439 = t4 * ((((t39 + t21_tmp * -1.8984375) - t262) + t322) + 0.52734375);
  t453 = ((t451_tmp - t83) + t228) + t364;
  t457 = t4 * ((((t8 * t27 + t309) + t313) + t322) + 0.10546875);
  t462 = t4 * ((((t56_tmp * -0.5625 + t309) + t322) - t313) + 0.10546875);
  t474 = (((((t115 - t126) + t271) + t308) - t320) + 0.6328125) * xi;
  t483 = t4 * (((((-t118 - t128) + t273) + t310) + t324) + 0.31640625);
  t495 = t4 * ((((((t51 + t116) - t74) + t273) + t310) + t317) + 0.03515625);
  t498 = ((((((t50 + t72) + t111) - t271) + t312) - t308) - 0.0703125) * xi;
  t504 =
      t4 * ((((((t51 + t74) + t116) + t106_tmp * -0.94921875) + t317) - t310) -
            0.03515625);
  t265_tmp =
      -t495 +
      (((((((((-t31 + t61 * zeta) - t75) + t136) - t135) + t205) + t222) -
         t204) +
        t219_tmp * -0.31640625) +
       0.00390625);
  sfvals_tmp = t510 * xi;
  b_sfvals_tmp = t5 * (((t100 + t333) + t335) + 0.03515625);
  sfvals[0] = (t265_tmp - sfvals_tmp) + b_sfvals_tmp;
  sfvals[1] = (t265_tmp + sfvals_tmp) - b_sfvals_tmp;
  t265_tmp =
      t504 +
      (((((((((t31 - t75) + t47_tmp * -0.0703125) - t135) - t136) + t205) +
          t222) -
         t204) +
        eta * t203) +
       0.00390625);
  sfvals_tmp = t511 * xi;
  b_sfvals_tmp = t5 * (((t100 + t316) + t335) - 0.03515625);
  sfvals[2] = (t265_tmp + sfvals_tmp) + b_sfvals_tmp;
  sfvals[3] = (t265_tmp - sfvals_tmp) - b_sfvals_tmp;
  sfvals[4] = (t7 * 4.5 - t42) + zeta;
  t265_tmp =
      t495 + (((((((((t65 + t76) + t63 * zeta) + t145) + t195) - t146) - t196) +
                t219_tmp * -0.52734375) +
               t285) -
              0.03515625);
  sfvals_tmp = t5 * t408;
  b_sfvals_tmp = t467 * xi;
  sfvals[5] = (t265_tmp - sfvals_tmp) - b_sfvals_tmp;
  sfvals[6] = (t265_tmp + sfvals_tmp) + b_sfvals_tmp;
  t265_tmp =
      t483 +
      (((((((((t66 + t76) + t135) + t145) + t148) - t138) - t146) + t6 * t66) +
        t257) -
       0.03515625);
  sfvals_tmp = t501 * xi;
  b_sfvals_tmp = t5 * (((t159 + t333) + t342) + 0.31640625);
  sfvals[7] = (t265_tmp - sfvals_tmp) + b_sfvals_tmp;
  c_sfvals_tmp =
      t482 + (((((((((t76 + t93) - t66) + t135) + t138) + t145) - t146) +
                t219_tmp * -0.10546875) +
               t257) -
              0.03515625);
  d_sfvals_tmp = t499 * xi;
  e_sfvals_tmp = t5 * (((t159 + t316) + t342) - 0.31640625);
  sfvals[8] = (c_sfvals_tmp - d_sfvals_tmp) - e_sfvals_tmp;
  f_sfvals_tmp =
      -t504 +
      (((((((((t76 - t65) + t145) + t47_tmp * -0.4921875) + t195) + t196) -
          t146) +
         t6 * t116) +
        t285) -
       0.03515625);
  g_sfvals_tmp = t5 * t409;
  h_sfvals_tmp = t466 * xi;
  sfvals[9] = (f_sfvals_tmp - g_sfvals_tmp) - h_sfvals_tmp;
  sfvals[10] = (f_sfvals_tmp + g_sfvals_tmp) + h_sfvals_tmp;
  sfvals[11] = (c_sfvals_tmp + d_sfvals_tmp) + e_sfvals_tmp;
  sfvals[12] = (t265_tmp + sfvals_tmp) - b_sfvals_tmp;
  t265_tmp = t4 * ((t401_tmp + t173) + t279) +
             ((((t34 - t43) + t88) + t47_tmp * -0.5625) + t6 * t30);
  sfvals_tmp = t451 * xi;
  sfvals[13] = t265_tmp + sfvals_tmp;
  b_sfvals_tmp = t390 * xi;
  sfvals[14] = t406 - b_sfvals_tmp;
  sfvals[15] = t265_tmp - sfvals_tmp;
  sfvals[16] = t406 + b_sfvals_tmp;
  t265_tmp = -t4 * ((t401_tmp + t228) + t237_tmp * -1.6875) +
             ((((t34 + t27 * zeta) - t43) + t88) + t219_tmp * -1.6875);
  sfvals_tmp = t453 * xi;
  sfvals[17] = t265_tmp + sfvals_tmp;
  b_sfvals_tmp = t391 * xi;
  sfvals[18] = t407 - b_sfvals_tmp;
  sfvals[19] = t265_tmp - sfvals_tmp;
  sfvals[20] = t407 + b_sfvals_tmp;
  t265_tmp =
      -t483 +
      (((((((((t153 - t118) - t129) + t199) - t195) - t207) + t251) + t261) +
        t219_tmp * -0.94921875) +
       0.31640625);
  sfvals_tmp = t492 * xi;
  sfvals_tmp_tmp = ((t217 - t347) + t8 * -t198) + 0.94921875;
  b_sfvals_tmp = t5 * sfvals_tmp_tmp;
  sfvals[21] = (t265_tmp + sfvals_tmp) + b_sfvals_tmp;
  sfvals[22] = (t265_tmp - sfvals_tmp) - b_sfvals_tmp;
  t265_tmp =
      -t482 + (((((((((t118 - t129) + t211) - t195) - t199) - t207) + t251) +
                 t6 * t118) +
                t261) +
               0.31640625);
  sfvals_tmp = t5 * t418;
  b_sfvals_tmp = t491 * xi;
  sfvals[23] = (t265_tmp + sfvals_tmp) + b_sfvals_tmp;
  sfvals[24] = (t265_tmp - sfvals_tmp) - b_sfvals_tmp;
  sfvals[25] = ((t91 + t160) + t161) - t4 * t384;
  t265_tmp = t379 * xi;
  sfvals[26] = t378 + t265_tmp;
  sfvals[27] = ((t48 + t161) + t219) + t4 * b_t400_tmp;
  sfvals[28] = t378 - t265_tmp;
  sfvals[29] = (((t7 * 6.75 + t17) - t44) - t257_tmp * 6.75) + t4 * t373_tmp;
  sdvals_tmp = t4 * t408;
  sdvals[0] =
      (-t488 +
       ((((((((t21 + t71) - t67) + t212) + t225) + t230) - t197) - t203) -
        0.00390625)) +
      sdvals_tmp;
  t257_tmp = (((((t71 + t93) - t61) + t137) - t203) - 0.00390625) - t430;
  b_sdvals_tmp =
      xi *
      (((((t12 + t50) + t111) + t127) + t106_tmp * -0.10546875) + 0.24609375);
  b_t400_tmp = t5 * ((-t80 + t263) + t9 * t198);
  sdvals[1] = (t257_tmp - b_sdvals_tmp) - b_t400_tmp;
  t219_tmp =
      (((((t61 + t123) + t137) + t47_tmp * -0.6328125) - t208) - 0.14453125) +
      t457;
  t451_tmp = -(t56_tmp / 4.0) + t117;
  t373_tmp = xi * ((((t451_tmp + t122) - t275) + t302) - 0.0703125);
  t401_tmp = t5 * ((t56_tmp * -0.03515625 + t311) + t10 * t199);
  sdvals[2] = (t219_tmp - t373_tmp) + t401_tmp;
  sdvals[3] = (-t488 + t510) - sdvals_tmp;
  sdvals[4] = (t257_tmp + b_sdvals_tmp) + b_t400_tmp;
  sdvals[5] = (t219_tmp + t373_tmp) - t401_tmp;
  sdvals_tmp = t4 * t409;
  sdvals[6] = (t498 + t511) + sdvals_tmp;
  t257_tmp = (((((t93 - t61) - t71) - t137) + t203) + 0.00390625) + t439;
  b_sdvals_tmp =
      xi * (((((-t12 + t50) + t111) - t127) + t2 * t81) - 0.24609375);
  b_t400_tmp = t5 * ((t80 + t263) + t238_tmp * -0.94921875);
  sdvals[7] = (t257_tmp + b_sdvals_tmp) + b_t400_tmp;
  t219_tmp =
      (((((-t61 + t123) + t137) + t110 * zeta) - t208) - 0.14453125) + t462;
  t373_tmp = xi * ((((t451_tmp - t122) + t275) + t302) + 0.0703125);
  t401_tmp = t5 * ((t8 * t65 + t311) + t343_tmp * -0.94921875);
  sdvals[8] = (t219_tmp - t373_tmp) - t401_tmp;
  sdvals[9] =
      (t498 + (((((((t510_tmp + t71) + t154) + t225) - t197) - t203) + t265) -
               0.00390625)) -
      sdvals_tmp;
  sdvals[10] = (t257_tmp - b_sdvals_tmp) - b_t400_tmp;
  sdvals[11] = (t219_tmp + t373_tmp) + t401_tmp;
  sdvals[12] = 0.0;
  sdvals[13] = 0.0;
  sdvals[14] = (-t11 + t44) + 1.0;
  sdvals_tmp = t4 * (((t157 + t352) - t347) + 0.31640625);
  t257_tmp = t95 - t66;
  sdvals[15] =
      ((((((t257_tmp - t72) + t144) - t198) + t293) + 0.10546875) + t488) -
      sdvals_tmp;
  b_sdvals_tmp = t430 + (((((t73 + t110) + t211) - t198) - t205) + 0.03515625);
  b_t400_tmp = t5 * ((-t81 + t270) + t345);
  t219_tmp = xi * (((t115 - t74) + t2 * t190) + 0.10546875);
  sdvals[16] = (b_sdvals_tmp + b_t400_tmp) - t219_tmp;
  t373_tmp =
      (((((t63 - t73) + t203) + t47_tmp * -1.0546875) - t198) + 0.17578125) -
      t457;
  t401_tmp = t5 * ((t56_tmp * -0.10546875 + t319) + t348);
  b_sfvals_tmp = xi * ((t400_tmp + t324) - 0.2109375);
  sdvals[17] = (t373_tmp - t401_tmp) + b_sfvals_tmp;
  sdvals[18] = (t467 + t488) + sdvals_tmp;
  sdvals[19] = (b_sdvals_tmp - b_t400_tmp) + t219_tmp;
  sdvals[20] = (t373_tmp + t401_tmp) - b_sfvals_tmp;
  sdvals_tmp = t4 * sfvals_tmp_tmp;
  sdvals[21] =
      (t475 + (((((((t66 - t73) + t152) + t205) + t225) + t233) - t197) -
               0.03515625)) +
      sdvals_tmp;
  b_sdvals_tmp = t416 + (((((t61 - t72) + t144) + t148) - t195) + 0.10546875);
  b_t400_tmp =
      xi * ((((t50 + t74) + t111) + t106_tmp * -0.31640625) - 0.10546875);
  t219_tmp = t5 * ((-t132 + t263) + t345);
  sdvals[22] = (b_sdvals_tmp - b_t400_tmp) - t219_tmp;
  t373_tmp = (((((t93 - t62) - t73) - t137) + t203) + 0.17578125) - t429;
  t401_tmp = xi * ((((t66 - t123) - t275) + t303) + 0.4921875);
  b_sfvals_tmp = t5 * ((t56_tmp * -0.94921875 + t311) + t348);
  sdvals[23] = (t373_tmp - t401_tmp) + b_sfvals_tmp;
  sfvals_tmp = t4 * t418;
  sdvals[24] = (t474 + ((((((t257_tmp - t73) + t205) + t225) - t197) + t268) -
                        0.03515625)) -
               sfvals_tmp;
  t257_tmp = t415 + (((((t61 + t72) + t148) + t195) - t144) - 0.10546875);
  t312_tmp = xi * (((t312_tmp - t74) + t195 * zeta_1_inv) + 0.10546875);
  d_sfvals_tmp = t5 * ((t132 + t263) + t353);
  sdvals[25] = (t257_tmp - t312_tmp) - d_sfvals_tmp;
  c_sfvals_tmp = (((((t62 - t73) + t148) - t137) + t203) + 0.17578125) - t431;
  e_sfvals_tmp = xi * ((((t66 + t123) + t275) + t303) - 0.4921875);
  t400_tmp = t5 * ((t8 * t118 + t311) - t348);
  sdvals[26] = (c_sfvals_tmp + e_sfvals_tmp) + t400_tmp;
  h_sfvals_tmp = t4 * (((t157 + t344) - t347) - 0.31640625);
  sdvals[27] =
      (((((((t72 + t95) - t66) + t198) - t144) + t293) - 0.10546875) - t498) -
      h_sfvals_tmp;
  g_sfvals_tmp = -t439 + (((((t110 - t73) + t198) + t205) + t211) - 0.03515625);
  f_sfvals_tmp = t5 * ((t81 + t270) + t353);
  sfvals_tmp_tmp = xi * (((t74 + t115) + t106_tmp * -2.84765625) - 0.10546875);
  sdvals[28] = (g_sfvals_tmp - f_sfvals_tmp) + sfvals_tmp_tmp;
  t451_tmp =
      (((((-t63 - t73) + t111 * zeta) + t203) - t198) + 0.17578125) - t462;
  t313_tmp = t5 * ((t8 * t66 + t319) - t348);
  t265_tmp = xi * ((t466_tmp + t324) + 0.2109375);
  sdvals[29] = (t451_tmp + t313_tmp) + t265_tmp;
  sdvals[30] = (t466 - t498) + h_sfvals_tmp;
  sdvals[31] = (g_sfvals_tmp + f_sfvals_tmp) - sfvals_tmp_tmp;
  sdvals[32] = (t451_tmp - t313_tmp) - t265_tmp;
  sdvals[33] = (t474 + t499) + sfvals_tmp;
  sdvals[34] = (t257_tmp + t312_tmp) + d_sfvals_tmp;
  sdvals[35] = (c_sfvals_tmp - e_sfvals_tmp) - t400_tmp;
  sdvals[36] = (t475 + t501) - sdvals_tmp;
  sdvals[37] = (b_sdvals_tmp + b_t400_tmp) + t219_tmp;
  sdvals[38] = (t373_tmp + t401_tmp) - b_sfvals_tmp;
  sdvals[39] = t394 + t451;
  sdvals_tmp = (t29 + t36) + t38;
  t257_tmp = t363 + t4 * (((t41 + t54) + t170) + 1.6875);
  sdvals[40] = t257_tmp + xi * ((sdvals_tmp + t54) + 1.125);
  b_sdvals_tmp = ((((-t16 + t48) - t27) + t143) + 0.5625) +
                 -t4 * ((t8 * t30 + t278) + t279);
  b_t400_tmp = xi * ((((-t29 - t36) + t8 * t26) + t279) + 0.5625);
  sdvals[41] = b_sdvals_tmp - b_t400_tmp;
  t219_tmp = (-t14 + t21_tmp * -2.25) + t91;
  sdvals[42] = t219_tmp + t362;
  sdvals[43] = t362 - t366;
  t373_tmp = xi * (((t17 + t29) + t56_tmp * -2.25) - 1.125);
  sdvals[44] = t381 - t373_tmp;
  sdvals[45] = t394 + (((((-t26 + t91) + t96) - t83) + t228) + t364);
  sdvals[46] = t257_tmp - xi * ((sdvals_tmp + eta * t40) + 1.125);
  sdvals[47] = b_sdvals_tmp + b_t400_tmp;
  sdvals[48] = t390;
  sdvals[49] = t362 + t366;
  sdvals[50] = t381 + t373_tmp;
  sdvals[51] = t400 + t453;
  sdvals_tmp = t36 + t38;
  t257_tmp = t364 + -t4 * (((t41 + t98) - t380_tmp) + 1.6875);
  sdvals[52] = t257_tmp + xi * (((sdvals_tmp - t29) + t98) + 1.125);
  b_sdvals_tmp = ((((t27 - t16) + t91) + t143) + 0.5625) +
                 -t4 * ((t56_tmp * -1.6875 + t278) + t279);
  b_t400_tmp = xi * ((((t29 - t36) + t56_tmp * -1.125) + t279) + 0.5625);
  sdvals[53] = b_sdvals_tmp + b_t400_tmp;
  sdvals[54] = t219_tmp + t361;
  sdvals[55] = t361 - t366;
  t219_tmp = xi * (((t17 - t29) + t56_tmp * 2.25) - 1.125);
  sdvals[56] = t382 + t219_tmp;
  sdvals[57] = t400 + (((((-t26 + t83) + t91) + t96) + t173) + t363);
  sdvals[58] = t257_tmp - xi * (((sdvals_tmp - t54) - t29) + 1.125);
  sdvals[59] = b_sdvals_tmp - b_t400_tmp;
  sdvals[60] = t391;
  sdvals[61] = t361 + t366;
  sdvals[62] = t382 - t219_tmp;
  sdvals_tmp = t4 * (((t218 + t352) - t350) + 2.84765625);
  sdvals[63] = (-t475 + t492) + sdvals_tmp;
  t257_tmp = -t416 + (((((t126 + t153) - t110) + t244) - t206) - 0.94921875);
  b_sdvals_tmp = t5 * ((-t190 + t270) + t349);
  b_t400_tmp = xi * (((t115 - t189) + t297) + 2.84765625);
  sdvals[64] = (t257_tmp - b_sdvals_tmp) + b_t400_tmp;
  t219_tmp = t429 + (((((t115 + t187) + t198) + t211) - t252) - 1.58203125);
  t373_tmp = t5 * ((t56_tmp * -2.84765625 + t319) + t351);
  t401_tmp = xi * ((t492_tmp + t346) - 1.8984375);
  sdvals[65] = (t219_tmp + t373_tmp) - t401_tmp;
  sdvals[66] = (-t475 + ((((((-t126 + t206) + t216) - t180) - t198) + t306) +
                         0.94921875)) -
               sdvals_tmp;
  sdvals[67] = (t257_tmp + b_sdvals_tmp) - b_t400_tmp;
  sdvals[68] = (t219_tmp - t373_tmp) + t401_tmp;
  sdvals_tmp = t4 * (((t218 + t344) - t350) - 2.84765625);
  sdvals[69] = (-t474 + t491) + sdvals_tmp;
  t257_tmp = -t415 + (((((t153 - t110) - t126) + t206) - t244) + 0.94921875);
  b_sdvals_tmp = t5 * ((t190 + t270) - t349);
  b_t400_tmp = xi * (((t115 + t189) - t297) - 2.84765625);
  sdvals[70] = (t257_tmp + b_sdvals_tmp) - b_t400_tmp;
  t219_tmp = t431 + (((((t153 - t115) + t187) + t198) - t252) - 1.58203125);
  t373_tmp = t5 * ((t8 * t180 + t319) - t351);
  t401_tmp = xi * ((t491_tmp + t346) + 1.8984375);
  sdvals[71] = (t219_tmp - t373_tmp) - t401_tmp;
  sdvals[72] = (-t474 + ((((((t126 + t198) + t216) - t180) - t206) + t306) -
                         0.94921875)) -
               sdvals_tmp;
  sdvals[73] = (t257_tmp - b_sdvals_tmp) + b_t400_tmp;
  sdvals[74] = (t219_tmp + t373_tmp) + t401_tmp;
  sdvals_tmp = t15 + t23;
  sdvals[75] = -xi * ((sdvals_tmp + t106) + t237);
  sdvals[76] = ((t20 - t36) + t85) - t4 * (((t23 + t40) + t104) + 3.375);
  sdvals[77] = ((t20 - t29) + t82) + t4 * ((t170 + t238) + t277);
  sdvals[78] = t373 + t379;
  sdvals[79] = t368 + xi * sdvals_tmp;
  t257_tmp = xi * ((t17 + t277) - 3.375);
  sdvals[80] = t376 - t257_tmp;
  sdvals[81] = xi * ((sdvals_tmp - t106) - t237);
  sdvals[82] = ((t20 + t36) - t85) +
               t4 * ((t40 + (t21_tmp * -6.75 + t56_tmp * -6.75)) + 3.375);
  sdvals[83] = ((t29 + t47) + t82) + t4 * (t376_tmp - t380_tmp);
  sdvals[84] = t373 + (((-t36 + t85) - t82) + t226);
  sdvals[85] = t368 - xi * (t15 + t21_tmp * 6.75);
  sdvals[86] = t376 + t257_tmp;
  sdvals[87] = xi * ((zeta * -13.5 + t237_tmp * 13.5) + t106_tmp * 13.5);
  sdvals[88] =
      t47_tmp * -13.5 + t4 * (t56_tmp * 13.5 + 13.5 * eta * zeta_1_inv);
  sdvals[89] = (((t2 * -6.75 + t6 * 20.25) - zeta * 27.0) -
                t4 * ((t237 + t238_tmp * 13.5) + 6.75)) +
               6.75;
}

void pyra_55_ncoords(double natcoords[165])
{
  static const double dv[165]{
      -1.0,  -1.0,  0.0,   1.0,  -1.0,  0.0,   1.0,  1.0,   0.0,   -1.0,
      1.0,   0.0,   0.0,   0.0,  1.0,   -0.5,  -1.0, 0.0,   0.0,   -1.0,
      0.0,   0.5,   -1.0,  0.0,  1.0,   -0.5,  0.0,  1.0,   0.0,   0.0,
      1.0,   0.5,   0.0,   0.5,  1.0,   0.0,   0.0,  1.0,   0.0,   -0.5,
      1.0,   0.0,   -1.0,  0.5,  0.0,   -1.0,  0.0,  0.0,   -1.0,  -0.5,
      0.0,   -0.75, -0.75, 0.25, -0.5,  -0.5,  0.5,  -0.25, -0.25, 0.75,
      0.75,  -0.75, 0.25,  0.5,  -0.5,  0.5,   0.25, -0.25, 0.75,  0.75,
      0.75,  0.25,  0.5,   0.5,  0.5,   0.25,  0.25, 0.75,  -0.75, 0.75,
      0.25,  -0.5,  0.5,   0.5,  -0.25, 0.25,  0.75, -0.5,  -0.5,  0.0,
      0.0,   -0.5,  0.0,   0.5,  -0.5,  0.0,   0.5,  0.0,   0.0,   0.5,
      0.5,   0.0,   0.0,   0.5,  0.0,   -0.5,  0.5,  0.0,   -0.5,  0.0,
      0.0,   0.0,   0.0,   0.0,  -0.25, -0.75, 0.25, 0.25,  -0.75, 0.25,
      0.0,   -0.5,  0.5,   0.75, -0.25, 0.25,  0.75, 0.25,  0.25,  0.5,
      0.0,   0.5,   0.25,  0.75, 0.25,  -0.25, 0.75, 0.25,  0.0,   0.5,
      0.5,   -0.75, 0.25,  0.25, -0.75, -0.25, 0.25, -0.5,  0.0,   0.5,
      -0.25, -0.25, 0.25,  0.25, -0.25, 0.25,  0.25, 0.25,  0.25,  -0.25,
      0.25,  0.25,  0.0,   0.0,  0.5};
  std::copy(&dv[0], &dv[165], &natcoords[0]);
}

// pyra_55_sfunc - Compute shape functions and their derivatives of pyra_55
void pyra_55_sfunc(double xi, double eta, double zeta, double sfvals[55])
{
  double b_sfvals_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double h_sfvals_tmp;
  double i_sfvals_tmp;
  double j_sfvals_tmp;
  double sfvals_tmp;
  double t10;
  double t1029;
  double t1030;
  double t1045;
  double t1047;
  double t1049;
  double t105;
  double t1050;
  double t1051;
  double t1056;
  double t1057;
  double t106;
  double t1080;
  double t1082;
  double t1083;
  double t1085;
  double t1086;
  double t1090;
  double t1094;
  double t1095;
  double t1096;
  double t11;
  double t110;
  double t1123;
  double t1125;
  double t1126;
  double t1135;
  double t114;
  double t1141_tmp;
  double t1143;
  double t1147;
  double t1147_tmp;
  double t115;
  double t1153;
  double t1155;
  double t116;
  double t1163;
  double t1163_tmp;
  double t1164;
  double t1165;
  double t117;
  double t1180;
  double t1187;
  double t119;
  double t1191;
  double t12;
  double t120;
  double t1200;
  double t121;
  double t122;
  double t123;
  double t1236;
  double t1238;
  double t1246;
  double t1247;
  double t1252;
  double t1254;
  double t1264;
  double t1265;
  double t1266;
  double t1272;
  double t1274;
  double t1281;
  double t1283;
  double t1298;
  double t13;
  double t1300;
  double t1304;
  double t1306;
  double t1313;
  double t1314;
  double t1315;
  double t1317;
  double t132;
  double t133;
  double t1335;
  double t1337;
  double t1338;
  double t134;
  double t1351;
  double t1352;
  double t1354;
  double t1358;
  double t1360;
  double t1361;
  double t1361_tmp;
  double t1363;
  double t1392;
  double t1393;
  double t1395;
  double t14;
  double t1414;
  double t1421;
  double t1431;
  double t1433;
  double t1434;
  double t1461;
  double t15;
  double t1528;
  double t1534_tmp;
  double t1551_tmp;
  double t156;
  double t157;
  double t1572_tmp;
  double t158;
  double t16;
  double t160;
  double t1611_tmp;
  double t163;
  double t1637_tmp;
  double t1647;
  double t1655;
  double t166;
  double t1691_tmp;
  double t1698_tmp;
  double t17;
  double t1710;
  double t1716;
  double t1717;
  double t172;
  double t1721;
  double t173;
  double t1737_tmp;
  double t175;
  double t176;
  double t177;
  double t179;
  double t181;
  double t182;
  double t1833_tmp;
  double t1836_tmp;
  double t192;
  double t193;
  double t2;
  double t205;
  double t206;
  double t207;
  double t208;
  double t209;
  double t21;
  double t22;
  double t220;
  double t227;
  double t228;
  double t23;
  double t232;
  double t234;
  double t235;
  double t237;
  double t241;
  double t243;
  double t245;
  double t246;
  double t256;
  double t260;
  double t261;
  double t262;
  double t274;
  double t275;
  double t276;
  double t278;
  double t280;
  double t29;
  double t292;
  double t3;
  double t30;
  double t311;
  double t313;
  double t314;
  double t32;
  double t320;
  double t321;
  double t322;
  double t324;
  double t326;
  double t328;
  double t33;
  double t335;
  double t34;
  double t341;
  double t344;
  double t353;
  double t374;
  double t375;
  double t378;
  double t386;
  double t387;
  double t392;
  double t395;
  double t4;
  double t400;
  double t41;
  double t42;
  double t420;
  double t423;
  double t424;
  double t428;
  double t434;
  double t442;
  double t443;
  double t448;
  double t449;
  double t453;
  double t454;
  double t46;
  double t464;
  double t465;
  double t466;
  double t469;
  double t471;
  double t472;
  double t475;
  double t476;
  double t481;
  double t484;
  double t485;
  double t491;
  double t492;
  double t498;
  double t499;
  double t5;
  double t504;
  double t507;
  double t508;
  double t513;
  double t515;
  double t520;
  double t529;
  double t53;
  double t537;
  double t538;
  double t539;
  double t54;
  double t566;
  double t588;
  double t594;
  double t597;
  double t602;
  double t604;
  double t608;
  double t610;
  double t624;
  double t625;
  double t633;
  double t634;
  double t639;
  double t657;
  double t659;
  double t660;
  double t662;
  double t664;
  double t666;
  double t667;
  double t669;
  double t670;
  double t671;
  double t673;
  double t674;
  double t676;
  double t694;
  double t695;
  double t7;
  double t71;
  double t72;
  double t721;
  double t722;
  double t723;
  double t726;
  double t728;
  double t731;
  double t744;
  double t75;
  double t750;
  double t753;
  double t76;
  double t779;
  double t780;
  double t781;
  double t794;
  double t797;
  double t799;
  double t8;
  double t80;
  double t802;
  double t82;
  double t836;
  double t845;
  double t865;
  double t866;
  double t867;
  double t868;
  double t87;
  double t870;
  double t871;
  double t873;
  double t874;
  double t876;
  double t88;
  double t898;
  double t9;
  double t901;
  double t903;
  double t909;
  double t91;
  double t911;
  double t912;
  double t914;
  double t916;
  double t917;
  double t918;
  double t919;
  double t922;
  double t923;
  double t924;
  double t925;
  double t926;
  double t927;
  double t928;
  double t929;
  double t934;
  double t934_tmp;
  double t94;
  double t940;
  double t945;
  double t949;
  double t950;
  double t959;
  double t960;
  double t962;
  double t964;
  double t965;
  double t972;
  double t974;
  double t976;
  double t983;
  double t995;
  double t999;
  t2 = eta * zeta;
  t3 = eta * (1.0 / ((zeta - 1.0) + 1.0E-100));
  t4 = eta * 3.0;
  t5 = eta * 4.0;
  t7 = eta * 6.0;
  t8 = eta * eta;
  t9 = std::pow(eta, 3.0);
  t11 = xi * xi;
  t12 = std::pow(xi, 3.0);
  t14 = zeta * 2.0;
  t15 = zeta * 3.0;
  t16 = zeta * 4.0;
  t17 = zeta * 5.0;
  t21 = zeta * zeta;
  t22 = std::pow(zeta, 3.0);
  t41 = eta * 9.0;
  t42 = eta * 12.0;
  t46 = eta * 27.0;
  t53 = zeta * 8.0;
  t54 = zeta * 9.0;
  t121 = eta / 3.0;
  t122 = eta / 6.0;
  t123 = eta * 1.3333333333333333;
  t132 = zeta / 2.0;
  t133 = zeta / 3.0;
  t134 = zeta * 1.3333333333333333;
  t241 = eta * 0.22222222222222221;
  t243 = eta * 0.44444444444444442;
  t245 = eta * 0.27777777777777779;
  t246 = eta * 6.666666666666667;
  t256 = zeta * 4.5;
  t260 = zeta * 0.07407407407407407;
  t261 = zeta * 0.14814814814814814;
  t262 = zeta * 0.18518518518518517;
  t392 = eta * 0.88888888888888884;
  t395 = eta * 1.7777777777777777;
  t400 = eta * 3.5555555555555554;
  t420 = zeta * 0.29629629629629628;
  t423 = zeta * 0.59259259259259256;
  t424 = zeta * 0.7407407407407407;
  t428 = zeta * 1.1851851851851851;
  t434 = zeta * 0.064814814814814811;
  t566 = eta * 7.1111111111111107;
  t588 = zeta * 0.098765432098765427;
  t594 = zeta * 0.39506172839506171;
  t597 = zeta * 0.76543209876543206;
  t602 = zeta * 0.19135802469135801;
  t604 = zeta * 0.10802469135802469;
  t10 = t8 * t8;
  t13 = t11 * t11;
  t23 = t21 * t21;
  t29 = t2 * 4.0;
  t30 = t2 * 5.0;
  t32 = t3 * 3.0;
  t33 = t3 * 4.0;
  t34 = t3 * 6.0;
  t71 = eta * t4;
  t72 = eta * t5;
  t75 = eta * t7;
  t76 = t14 * zeta;
  t80 = t21 * 6.0;
  t82 = t21 * 7.0;
  t87 = t2 * 8.0;
  t88 = t2 * 9.0;
  t91 = t2 * 16.0;
  t94 = t2 * 27.0;
  t105 = t3 * 9.0;
  t106 = t3 * 12.0;
  t110 = t3 * 27.0;
  t114 = t2 * zeta;
  t115 = eta * t2;
  t116 = t2 * t21;
  t117 = t2 * t8;
  t119 = eta * t3;
  t120 = t3 * t8;
  t156 = t8 * 8.0;
  t157 = t8 * 9.0;
  t158 = t9 * 9.0;
  t160 = t8 * 16.0;
  t163 = t9 * 27.0;
  t166 = t21 * -2.0;
  t172 = t21 * 8.0;
  t173 = t21 * 9.0;
  t175 = t22 * 9.0;
  t179 = t22 * 14.0;
  t181 = t22 * 16.0;
  t182 = t21 * 18.0;
  t192 = t2 / 3.0;
  t193 = t2 * 1.3333333333333333;
  t205 = t3 / 2.0;
  t206 = t3 / 3.0;
  t207 = t3 / 4.0;
  t208 = t3 * 0.66666666666666663;
  t209 = t3 * 1.3333333333333333;
  t220 = t2 * t14;
  t227 = t2 * (eta * 5.0);
  t232 = t3 * t4;
  t234 = t3 * t5;
  t237 = t3 * t7;
  t274 = t9 / 3.0;
  t275 = t9 * 0.66666666666666663;
  t276 = t8 / 6.0;
  t280 = t9 * 1.3333333333333333;
  t292 = t22 * 2.5;
  t311 = t2 * 0.22222222222222221;
  t313 = t2 * 0.44444444444444442;
  t314 = t2 * 0.07407407407407407;
  t320 = t3 / 9.0;
  t321 = t3 * 2.6666666666666665;
  t322 = t3 * 0.44444444444444442;
  t324 = t3 * 5.333333333333333;
  t326 = t2 * -zeta;
  t341 = t2 * (eta * 8.0);
  t344 = t2 * t41;
  t374 = t3 * t41;
  t442 = t2 * t2;
  t448 = t8 * 0.22222222222222221;
  t449 = t8 * 2.6666666666666665;
  t454 = t9 * 0.44444444444444442;
  t464 = t21 * 3.3333333333333335;
  t465 = t22 * 6.5;
  t469 = t21 * 9.3333333333333339;
  t471 = t22 * 10.666666666666666;
  t475 = t22 * 22.5;
  t476 = t22 * 18.666666666666668;
  t481 = t2 * 1.1111111111111112;
  t484 = t2 * 0.61111111111111116;
  t485 = t2 * 0.29629629629629628;
  t491 = t2 * 1.1851851851851851;
  t492 = t2 * 6.2222222222222223;
  t498 = t2 * 2.074074074074074;
  t499 = t2 * 0.064814814814814811;
  t504 = t3 * 0.88888888888888884;
  t507 = t3 * 1.7777777777777777;
  t508 = t3 * 3.5555555555555554;
  t624 = t8 * 0.88888888888888884;
  t625 = t9 * 0.88888888888888884;
  t633 = t8 * 3.5555555555555554;
  t634 = t9 * 3.5555555555555554;
  t639 = t8 * 1.037037037037037;
  t657 = t21 * 0.29629629629629628;
  t659 = t22 * 0.29629629629629628;
  t660 = t21 * 0.37037037037037035;
  t664 = t22 * 0.48148148148148145;
  t666 = t21 * 0.59259259259259256;
  t667 = t21 * 0.7407407407407407;
  t669 = t22 * 0.7407407407407407;
  t670 = t21 * 0.81481481481481477;
  t671 = t22 * 0.92592592592592593;
  t673 = t22 * 1.1851851851851851;
  t674 = t21 * 1.4814814814814814;
  t694 = t2 * 8.88888888888889;
  t695 = t2 * 2.3703703703703702;
  t836 = t9 * 7.1111111111111107;
  t845 = t8 * 11.851851851851851;
  t865 = t21 * 2.3703703703703702;
  t866 = t21 * 0.19753086419753085;
  t868 = t21 * 2.9629629629629628;
  t870 = t21 * 0.38271604938271603;
  t871 = t21 * 0.39506172839506171;
  t873 = t22 * 0.49382716049382713;
  t874 = t22 * 3.7037037037037037;
  t934_tmp = t3 * t9;
  t934 = t934_tmp * -0.1111111111111111;
  t1029 = t8 * 1.9753086419753085;
  t1030 = t8 * 2.4938271604938271;
  t1045 = t21 * 0.79012345679012341;
  t1049 = t21 * 1.5308641975308641;
  t1050 = t21 * 1.5802469135802468;
  t1051 = t22 * 1.9753086419753085;
  t1056 = t22 * 1.2901234567901234;
  t1057 = t21 * 0.6820987654320988;
  t1141_tmp = std::pow(t3, 3.0);
  t1147_tmp = t3 * t3;
  t1147 = t1147_tmp * 4.5;
  t1180 = t1147_tmp * 10.666666666666666;
  t1200 = t8 * 7.9012345679012341;
  t1246 = t1147_tmp * -0.44444444444444442;
  t1300 = t1147_tmp * 0.59259259259259256;
  t1306 = t1147_tmp * 0.7407407407407407;
  t1313 = t1147_tmp * 1.1481481481481481;
  t1314 = t1147_tmp * 1.1851851851851851;
  t1335 = t1147_tmp * 2.2962962962962963;
  t1338 = t1147_tmp * 0.68518518518518523;
  t1354 = t1141_tmp * -0.88888888888888884;
  t1358 = t1147_tmp * -1.7777777777777777;
  t1392 = t1147_tmp * 7.1111111111111107;
  t1414 = t1147_tmp * 0.39506172839506171;
  t1421 = t1147_tmp * 0.76543209876543206;
  t1461 = t1147_tmp * 1.1080246913580247;
  t176 = t23 * 8.0;
  t177 = t23 * 9.0;
  t228 = t114 * 6.0;
  t235 = t3 * t71;
  t278 = t10 * 0.66666666666666663;
  t328 = t114 * -2.0;
  t335 = t115 * -4.0;
  t353 = t114 * 20.0;
  t375 = t8 * t105;
  t378 = t119 * 14.0;
  t386 = eta * (t3 * 28.0);
  t387 = t8 * t110;
  t443 = t3 * t119;
  t453 = t10 * 2.6666666666666665;
  t466 = t23 * 3.6666666666666665;
  t472 = t23 * 10.666666666666666;
  t513 = t115 / 2.0;
  t515 = t117 / 3.0;
  t520 = t115 * -9.0;
  t529 = t114 * -27.0;
  t537 = t119 * 0.66666666666666663;
  t538 = t120 / 3.0;
  t539 = t120 * 0.66666666666666663;
  t608 = t3 * t32;
  t610 = t3 * t232;
  t662 = t23 * 0.37037037037037035;
  t676 = t23 * 1.4814814814814814;
  t721 = t114 * 0.22222222222222221;
  t722 = t115 * 4.5;
  t723 = t116 * 0.22222222222222221;
  t726 = t114 * 8.3333333333333339;
  t728 = t117 * 0.14814814814814814;
  t731 = t116 * 10.666666666666666;
  t744 = t120 * 2.6666666666666665;
  t750 = t120 * 5.333333333333333;
  t753 = t119 * 13.5;
  t779 = t2 * -t2;
  t780 = t2 * t88;
  t794 = t3 * t105;
  t797 = t3 * t374;
  t802 = t3 * t106;
  t867 = t23 * 0.19753086419753085;
  t876 = t23 * 0.71604938271604934;
  t898 = t114 * 0.88888888888888884;
  t901 = t114 * 1.7777777777777777;
  t903 = t117 * 1.7777777777777777;
  t909 = t114 * 0.29629629629629628;
  t911 = t116 * 0.29629629629629628;
  t912 = t117 * 0.29629629629629628;
  t914 = t116 * 0.48148148148148145;
  t916 = t116 * 3.5555555555555554;
  t917 = t117 * 3.5555555555555554;
  t918 = t114 * 0.59259259259259256;
  t919 = t117 * 0.59259259259259256;
  t922 = t116 * 0.7407407407407407;
  t923 = t114 * 0.81481481481481477;
  t924 = t115 * 0.85185185185185186;
  t925 = t115 * 0.96296296296296291;
  t926 = t115 * 1.1851851851851851;
  t927 = t116 * 1.1851851851851851;
  t928 = t117 * 1.1851851851851851;
  t929 = t115 * 2.074074074074074;
  t940 = t9 * t504;
  t945 = t119 * 0.91666666666666663;
  t949 = t119 * 2.2222222222222223;
  t950 = t119 * 2.5555555555555554;
  t959 = t120 * 4.4444444444444446;
  t960 = t119 * 1.037037037037037;
  t962 = t120 * 1.037037037037037;
  t964 = t119 * 1.1851851851851851;
  t965 = t120 * 1.1851851851851851;
  t972 = t119 * 2.074074074074074;
  t974 = t120 * 2.074074074074074;
  t976 = t119 * 2.2962962962962963;
  t983 = t442 * -9.0;
  t999 = t3 * (t1147_tmp * -9.0);
  t1047 = t23 * 0.79012345679012341;
  t1080 = t114 * 7.1111111111111107;
  t1082 = t114 * 8.4444444444444446;
  t1083 = t115 * 0.098765432098765427;
  t1085 = t114 * 2.3703703703703702;
  t1086 = t115 * 2.3703703703703702;
  t1090 = t115 * 0.39506172839506171;
  t1094 = t115 * 0.76543209876543206;
  t1095 = t115 * 4.5925925925925926;
  t1096 = t115 * 0.19135802469135801;
  t1123 = t120 * 8.88888888888889;
  t1125 = t119 * 2.3703703703703702;
  t1126 = t120 * 2.3703703703703702;
  t1135 = t119 * 3.574074074074074;
  t1143 = t3 * t320;
  t1153 = t3 * t322;
  t1163_tmp = t3 * t120;
  t1163 = t1163_tmp * 3.3333333333333335;
  t1191 = t1163_tmp * 13.333333333333334;
  t1236 = t442 * 1.1851851851851851;
  t1238 = t442 * 1.7037037037037037;
  t1247 = t3 * (t1147_tmp * -2.6666666666666665);
  t1252 = t3 * t1246;
  t1254 = t1163_tmp * -0.44444444444444442;
  t1266 = t3 * (t1147_tmp * -5.333333333333333);
  t1272 = t3 * t507;
  t1351 = t442 * 0.19753086419753085;
  t1352 = t442 * 0.38271604938271603;
  t1360 = t3 * t1358;
  t1395 = t1163_tmp * 7.1111111111111107;
  t1433 = t442 * 0.79012345679012341;
  t1434 = t442 * 1.5308641975308641;
  t1611_tmp = t2 + t9;
  t781 = t2 * t91;
  t799 = t3 * t794;
  t995 = t443 * -9.0;
  t1155 = t3 * (t3 * t321);
  t1165 = t322 * t443;
  t1187 = t3 * (t3 * t1180);
  t1264 = t443 * 1.1111111111111112;
  t1265 = t443 * t504;
  t1274 = t443 * 1.7777777777777777;
  t1283 = t443 * 2.2222222222222223;
  t1298 = t443 * 3.5555555555555554;
  t1304 = t443 * 0.59259259259259256;
  t1315 = t443 * 1.1481481481481481;
  t1317 = t443 * 1.1851851851851851;
  t1337 = t443 * 2.2962962962962963;
  t1361_tmp = t3 * t443;
  t1361 = t1361_tmp * -1.7777777777777777;
  t1363 = t3 * t1360;
  t1393 = t443 * 7.1111111111111107;
  t1431 = (-t80 + t22 * 8.0) + zeta;
  t1528 = -t11 * ((((t16 + t160) - t21 * 16.0) + t386) + t802);
  t1534_tmp = (t7 + t34) + t87;
  t1572_tmp = t2 - zeta;
  t1691_tmp = (t2 + t23) + t76;
  t1698_tmp = (t23 + t76) - t2;
  t1164 = t3 * t1155;
  t1281 = t3 * (t3 * t1272);
  t1551_tmp =
      ((t5 + t33) + t2 * 2.6666666666666665) + t114 * 10.666666666666666;
  t1637_tmp = t508 + t3 * (t1147_tmp * -3.5555555555555554);
  t1647 = (((((t134 + t193) + t476) + t114 * -8.0) - t469) - t472) + t731;
  t1655 = (((((t134 - t193) + t2 * t53) + t476) - t469) - t472) - t731;
  t1710 =
      t11 * (((((((t157 - t88) + t256) - t173) + t375) + t753) + t797) + t1147);
  t1717 =
      t11 *
      (((((((((t5 + t30) + t33) + t132) + t157) - t21) + t235) + t610) + t753) +
       t1147);
  t1737_tmp = t72 + t15 * t21;
  t1833_tmp = (t208 + t241) + t491;
  t1836_tmp = (t392 + t2 * 0.96296296296296291) + t3 * 0.91666666666666663;
  t1716 =
      t11 * (((((((t88 + t157) + t256) - t173) + t120 * -9.0) + t753) + t995) +
             t1147);
  t1721 =
      t11 *
      (((((((((t5 + t21) + t30) + t33) + t235) - t132) - t157) + t610) - t753) -
       t1147);
  sfvals_tmp =
      (-t13 * (((t320 + t1143) + t1252) + t3 * t1252) +
       (((((((((t499 - t604) + t876) - t728) + t914) + t1057) - t909) + t1096) -
         t1056) -
        t1352)) +
      t11 * ((((((((t1836_tmp + t602) + t962) + t1030) - t870) + t1135) +
               t1163_tmp * -0.1111111111111111) +
              t1315) +
             t1461);
  b_sfvals_tmp =
      ((((((((((((t207 + t245) + t434) - t311) - t454) + t624) + t664) - t538) -
           t657) +
          t901) +
         t925) +
        t934) +
       t945) *
      xi;
  c_sfvals_tmp =
      t12 * (((((((-t206 - t243) - t261) + t960) + t1147_tmp * t209) + t1165) +
              t1274) +
             t1313);
  sfvals[0] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[1] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp =
      (t13 * (((t320 + t3 * (t3 * t1153)) + t1147_tmp * -0.1111111111111111) +
              t1252) +
       (((((((((-t499 + t728) - t604) + t876) + t909) + t1057) - t914) +
          t1096) -
         t1056) -
        t1352)) +
      -t11 * ((((((((t1836_tmp - t602) + t870) + t962) - t1030) - t1135) +
                t120 * t320) +
               t1315) -
              t1461);
  b_sfvals_tmp =
      ((((((((((((t311 - t207) - t245) + t434) + t454) + t538) + t624) + t664) -
           t657) +
          t925) +
         t934) +
        t945) -
       t901) *
      xi;
  c_sfvals_tmp =
      t12 *
      (((((((t206 + t243) - t261) + t960) + t1141_tmp * -1.3333333333333333) +
         t1165) +
        t1313) -
       t1274);
  sfvals[2] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[3] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[4] = ((t21 * 7.333333333333333 - zeta) - t181) + t472;
  sfvals_tmp =
      (t13 * (((t322 + t1153) + t1360) + t1363) +
       (((((((((t314 + t588) + t873) + t919) + t922) - t867) - t871) - t923) -
         t1094) +
        t1434)) +
      -t11 *
          ((((((((t1833_tmp + t588) - t866) + t976) + t1029) - t965) + t1304) +
            t1421) -
           t1163_tmp * 1.7777777777777777);
  b_sfvals_tmp =
      ((((((((((-t241 + t448) + t481) - t420) + t634) + t666) + t744) - t659) +
         t929) +
        t940) -
       t898) *
      xi;
  c_sfvals_tmp =
      t12 *
      (((((((-t208 - t392) - t420) + t972) + t1155) + t1265) + t1298) + t1335);
  sfvals[5] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[6] =
      ((((((((((((((t122 + t262) - t275) + t278) - t276) - t484) + t671) +
              t721) +
             t723) -
            t662) -
           t667) +
          t903) -
         t924) +
        t1238) -
       t13 * (((t208 + t3 * t208) + t1247) + t3 * t1247)) -
      t11 * ((((((((((t123 + t205) + t262) - t313) + t639) - t660) + t950) +
                t959) +
               t1163) +
              t1264) +
             t1338);
  sfvals[7] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      (t13 * (((t504 + t1272) + t1354) + t1363) +
       (((((((((t588 - t485) + t873) + t912) + t918) - t867) - t871) - t911) -
         t1083) +
        t1351)) +
      -t11 * (((((((((-t241 + t597) - t498) + t974) + t976) + t1029) - t1049) +
                t1254) +
               t1337) +
              t1421);
  b_sfvals_tmp =
      (((((((((((t260 - t241) + t481) + t539) - t448) + t625) + t669) - t537) +
          t9 * t322) -
         t670) -
        t898) -
       t926) *
      xi;
  c_sfvals_tmp =
      t12 *
      (((((((t321 + t400) + t423) + t964) + t1247) + t1361) - t1298) - t1300);
  sfvals[8] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      (t13 * ((t1164 - t1147_tmp * 3.3333333333333335) + 0.66666666666666663) +
       (((((t262 + t671) - t662) - t667) - t115 * 0.18518518518518517) +
        t442 * 0.37037037037037035)) +
      -t11 *
          ((((((zeta * 0.85185185185185186 + t639) - t21 * 1.7037037037037037) +
              t950) +
             t120 * t208) +
            t1338) +
           0.16666666666666666);
  e_sfvals_tmp =
      t12 * ((((-(zeta * 1.7777777777777777) + t119 * 4.4444444444444446) +
               t3 * (t443 * -2.6666666666666665)) +
              t1147_tmp * 1.1111111111111112) +
             0.66666666666666663);
  f_sfvals_tmp =
      xi * (((((((-(t8 * 1.3333333333333333) + t21 * 0.22222222222222221) +
                 t22 * 0.22222222222222221) -
                zeta * 0.61111111111111116) +
               t115 * 0.44444444444444442) -
              t119 / 2.0) +
             t9 * -t208) +
            0.16666666666666666);
  sfvals[9] = (d_sfvals_tmp + e_sfvals_tmp) - f_sfvals_tmp;
  g_sfvals_tmp =
      (-t13 * (((t504 + t1281) + t1354) + t1358) +
       (((((((((t485 + t588) + t873) + t911) - t867) - t871) - t912) - t918) -
         t1083) +
        t1351)) +
      -t11 * (((((((((t241 + t498) + t597) + t976) + t1029) - t1049) - t974) +
                t1254) -
               t1337) +
              t1421);
  h_sfvals_tmp =
      (((((((((((-t241 - t260) + t448) + t481) + t537) + t539) + t625) + t670) -
          t669) +
         t926) +
        t934_tmp * -0.44444444444444442) -
       t898) *
      xi;
  i_sfvals_tmp =
      t12 * (((((((t423 - t321) - t400) + t964) + t1298) + t1361) - t1300) +
             t1141_tmp * 2.6666666666666665);
  sfvals[10] = (g_sfvals_tmp + h_sfvals_tmp) - i_sfvals_tmp;
  j_sfvals_tmp =
      (-t13 * (((t322 + t1246) + t1281) + t1360) +
       (((((((((-t314 + t588) + t873) + t923) - t867) - t871) - t919) - t922) -
         t1094) +
        t1434)) +
      t11 * ((((((((t1833_tmp - t588) + t866) - t965) - t976) - t1029) +
               t120 * t507) +
              t1304) -
             t1421);
  t1833_tmp =
      ((((((((((t241 + t448) - t420) + t666) - t481) - t634) - t659) + t898) +
         t929) -
        t744) +
       t940) *
      xi;
  t1836_tmp =
      t12 *
      (((((((t208 + t392) - t420) + t972) + t1247) + t1265) + t1335) - t1298);
  sfvals[11] = (j_sfvals_tmp - t1833_tmp) + t1836_tmp;
  sfvals[12] =
      ((((((((((((((-t122 + t262) + t275) + t278) - t276) + t484) + t671) -
              t721) -
             t723) -
            t662) -
           t667) -
          t903) -
         t924) +
        t1238) +
       t13 * (((t208 + t1147_tmp * -0.66666666666666663) + t1164) + t1247)) -
      t11 * ((((((((((-t205 - t123) + t262) + t313) + t639) - t660) + t950) -
                t959) +
               t1163) -
              t1264) +
             t1338);
  sfvals[13] = (j_sfvals_tmp + t1833_tmp) - t1836_tmp;
  sfvals[14] = (g_sfvals_tmp - h_sfvals_tmp) + i_sfvals_tmp;
  sfvals[15] = (d_sfvals_tmp - e_sfvals_tmp) + f_sfvals_tmp;
  sfvals[16] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      -t1717 +
      (((((((((t132 + t220) - t192) + t116 * -3.0) + t442) + t465) + t515) -
         t464) -
        t466) -
       t513);
  b_sfvals_tmp =
      ((((((((((t1737_tmp + t123) + t133) + t166) + t209) + t227) + t234) -
          t192) -
         t274) +
        t726) -
       t538) *
      xi;
  c_sfvals_tmp =
      t12 * ((((((t232 - t121) - t133) - t206) + t608) + t610) + t3 * t608);
  sfvals[17] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp = t11 * (((t1534_tmp + t156) + t378) + t3 * t34) +
                 (((((t1572_tmp + t82) + t176) - t179) - t228) + t21 * t87);
  e_sfvals_tmp =
      ((((((t4 + t32) + t75) + t237) + t341) + t2 * (zeta * 16.0)) + t1431) *
      xi;
  sfvals[18] = d_sfvals_tmp + e_sfvals_tmp;
  f_sfvals_tmp = (t1551_tmp + ((t134 - t172) + t471)) * xi;
  sfvals[19] = t1655 - f_sfvals_tmp;
  sfvals[20] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[21] = d_sfvals_tmp - e_sfvals_tmp;
  sfvals[22] = t1655 + f_sfvals_tmp;
  sfvals_tmp =
      t1721 +
      (((((((((t132 + t192) + t2 * (t15 * zeta)) + t328) + t442) + t465) -
          t464) -
         t466) -
        t513) -
       t515);
  b_sfvals_tmp =
      ((((((((((t1737_tmp + t133) + t166) + t192) + t227) + t234) - t123) +
          t274) -
         t209) +
        t538) -
       t726) *
      xi;
  c_sfvals_tmp =
      t12 * ((((((t121 + t206) + t232) - t133) + t608) + t3 * (t119 * -3.0)) +
             t3 * (t1147_tmp * -3.0));
  sfvals[23] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  d_sfvals_tmp =
      -t11 * (((t1534_tmp - t156) - t378) + t1147_tmp * -6.0) +
      ((((((-zeta + t82) - t2) + t176) + t228) - t179) + t116 * -8.0);
  e_sfvals_tmp =
      ((((((-t4 + t75) - t32) + t237) + t341) + t114 * -16.0) + t1431) * xi;
  sfvals[24] = d_sfvals_tmp - e_sfvals_tmp;
  f_sfvals_tmp = (t1551_tmp + ((t172 - t134) - t471)) * xi;
  sfvals[25] = t1647 - f_sfvals_tmp;
  sfvals[26] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[27] = d_sfvals_tmp + e_sfvals_tmp;
  sfvals[28] = t1647 + f_sfvals_tmp;
  sfvals_tmp =
      (-t13 * ((t1637_tmp + t1392) + t3 * (t1141_tmp * -7.1111111111111107)) +
       (((((((((t491 - t594) + t927) + t1047) + t1050) - t928) + t1090) -
          t1051) -
         t1085) -
        t1433)) +
      t11 * (((((((((-t400 + t594) + t695) + t964) + t1200) - t1045) - t1126) +
               t1317) +
              t1414) -
             t1395);
  b_sfvals_tmp =
      ((((((((((-t395 - t428) + t633) + t694) + t750) + t836) - t673) + t865) +
         t9 * t508) -
        t1080) -
       t1086) *
      xi;
  c_sfvals_tmp = t12 * (((((((t324 + t428) + t566) + t1125) + t1266) +
                          t1361_tmp * -3.5555555555555554) -
                         t1314) -
                        t1393);
  sfvals[29] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[30] =
      ((((((((((((((-t123 + t280) + t449) + t492) - t424) - t453) + t676) +
              t868) +
             t916) -
            t917) -
           t874) -
          t1082) -
         t1095) +
        t1236) +
       t13 * (((t324 + t1180) + t1266) +
              t3 * (t1141_tmp * -10.666666666666666))) +
      t11 * (((((((((t246 + t424) - t674) - t694) + t949) - t845) + t1123) +
               t1191) +
              t1283) +
             t1306);
  sfvals[31] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      (-t13 * ((t1187 - t1147_tmp * 13.333333333333334) + 2.6666666666666665) +
       (((((-t424 + t676) + t868) + t115 * 0.7407407407407407) - t874) -
        t442 * 1.4814814814814814)) +
      t11 *
          ((((((t21 * 1.1851851851851851 - zeta * 4.5925925925925926) + t949) -
              t845) +
             t1163_tmp * 10.666666666666666) +
            t1306) +
           2.6666666666666665);
  b_sfvals_tmp =
      t12 * ((((-(zeta * 3.5555555555555554) + t119 * 8.88888888888889) +
               t3 * (t443 * -5.333333333333333)) +
              t1147_tmp * 2.2222222222222223) +
             1.3333333333333333);
  c_sfvals_tmp = ((((((zeta * 6.2222222222222223 + t8 * 6.666666666666667) +
                      t22 * 3.5555555555555554) +
                     t9 * t324) -
                    t21 * 8.4444444444444446) -
                   t115 * 8.88888888888889) -
                  1.3333333333333333) *
                 xi;
  sfvals[32] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      (t13 * ((t1637_tmp + t3 * (t3 * t1392)) - t1392) +
       (((((((((-t491 - t594) + t928) + t1047) + t1050) - t927) + t1085) +
          t1090) -
         t1051) -
        t1433)) +
      t11 * (((((((((t400 + t594) - t695) + t964) + t1126) + t1200) - t1045) -
               t1317) +
              t1414) -
             t1395);
  e_sfvals_tmp =
      ((((((((((t428 - t395) + t673) + t694) + t750) - t633) + t836) - t865) +
         t1086) +
        t934_tmp * -3.5555555555555554) -
       t1080) *
      xi;
  f_sfvals_tmp =
      t12 *
      (((((((-t324 + t428) - t566) + t1125) - t1314) + t1393) + t443 * -t508) +
       t1141_tmp * 5.333333333333333);
  sfvals[33] = (d_sfvals_tmp - e_sfvals_tmp) + f_sfvals_tmp;
  sfvals[34] =
      ((((((((((((((t123 - t280) + t449) - t492) - t424) - t453) + t676) +
              t868) -
             t916) +
            t917) -
           t874) +
          t1082) -
         t1095) +
        t1236) -
       t13 * (((t324 + t1187) + t1266) - t1180)) +
      t11 * (((((((((-t246 + t424) + t694) - t674) + t949) - t845) + t1191) -
               t1123) +
              t1306) -
             t1283);
  sfvals[35] = (d_sfvals_tmp + e_sfvals_tmp) - f_sfvals_tmp;
  sfvals[36] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[37] =
      (((((((((t21 * 8.5555555555555554 - t22 * 6.4444444444444446) +
              t23 * 1.7777777777777777) +
             t115 * 10.888888888888889) +
            t8 * -5.0) -
           t442 * 5.7777777777777777) -
          zeta * 4.8888888888888893) +
         t5 * t9) +
        t13 * ((t3 * (t1147_tmp * (t3 * 16.0)) - t1147_tmp * 20.0) + 4.0)) -
       t11 *
           ((((((t8 * -25.777777777777779 + t21 * 5.7777777777777777) - t537) +
               t1143) -
              zeta * 10.888888888888889) +
             t1163_tmp * 20.0) +
            5.0)) +
      1.0;
  sfvals_tmp =
      (((((((t1698_tmp + t228) - t132) + t117 * -3.0) + t116 * -5.0) - t292) +
        t722) +
       t983) +
      t1717;
  b_sfvals_tmp = t12 * ((((((-eta - zeta) - t3) + t374) + t794) + t797) + t799);
  c_sfvals_tmp =
      ((((((t1572_tmp + t76) + t158) - t22) + t326) + t344) + t375) * xi;
  sfvals[38] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[39] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[40] = ((((t29 + t335) + t21 * t91) - t353) + t781) -
               t11 * (((((t42 + t91) + t106) + t160) + t386) + t802);
  sfvals_tmp =
      (((((((t1691_tmp + t116) - t132) + t328) + t8 * -t2) - t292) + t513) +
       t779) +
      t1710;
  b_sfvals_tmp =
      ((((((((t1611_tmp + t17 * t21) + t120) + t8 * -4.0) - t80) + t326) +
         t115 * -5.0) +
        t119 * -4.0) +
       zeta) *
      xi;
  c_sfvals_tmp =
      t12 * ((((((-t15 - t41) - t105) + t232) + t608) + t797) + t799);
  sfvals[41] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      (((((((t1698_tmp + t117) + t220) - t132) + t21 * -t2) - t292) + t513) +
       t779) +
      t1716;
  e_sfvals_tmp =
      ((((((((t1611_tmp - zeta) + t72) + t80) + t120) + t22 * -5.0) + t227) +
        t234) +
       t326) *
      xi;
  f_sfvals_tmp = t12 * ((((((t41 - t15) + t105) + t232) + t608) + t995) + t999);
  sfvals[42] = (d_sfvals_tmp - e_sfvals_tmp) - f_sfvals_tmp;
  g_sfvals_tmp =
      (((((-t16 + t8 * 12.0) + t21 * 20.0) - t181) + t2 * (eta * 16.0)) +
       t3 * t42) *
      xi;
  sfvals[43] = t1528 + g_sfvals_tmp;
  h_sfvals_tmp =
      (((((((t1691_tmp + t2 * t71) + t17 * t114) - t132) - t228) - t292) +
        t722) +
       t983) -
      t1721;
  i_sfvals_tmp = t12 * ((((((eta + t3) - zeta) + t374) + t794) + t995) + t999);
  j_sfvals_tmp =
      (((((((t2 + t22) + t158) + t166) + t326) + t375) + t520) + zeta) * xi;
  sfvals[44] = (h_sfvals_tmp - i_sfvals_tmp) - j_sfvals_tmp;
  sfvals[45] = (h_sfvals_tmp + i_sfvals_tmp) + j_sfvals_tmp;
  sfvals[46] =
      ((((-t29 - t116 * 16.0) + t335) + t353) + t781) -
      t11 * (((((-t42 + t160) - t91) - t106) + t386) + t1147_tmp * 12.0);
  sfvals[47] = (d_sfvals_tmp + e_sfvals_tmp) + f_sfvals_tmp;
  sfvals[48] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[49] = t1528 - g_sfvals_tmp;
  sfvals_tmp =
      -t1710 +
      (((((((((-t88 + t256) - t177) - t182) + t8 * t88) + t2 * (zeta * 18.0)) +
          t475) +
         t116 * -9.0) +
        t780) -
       t722);
  b_sfvals_tmp =
      t12 * ((((((-t46 - t54) - t110) + t374) + t794) + t3 * (t3 * t46)) +
             t3 * (t3 * t110));
  c_sfvals_tmp =
      (((((((t94 - t54) + t163) + t182) - t175) + t344) + t387) + t529) * xi;
  sfvals[50] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[51] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp =
      -t1716 +
      (((((((((t88 + t256) - t177) - t182) + t21 * t88) + t475) + t117 * -9.0) +
         t114 * -18.0) +
        t780) -
       t722);
  b_sfvals_tmp =
      t12 * ((((((t46 + t110) - t54) + t374) + t794) + t443 * -27.0) +
             t3 * (t1147_tmp * -27.0));
  c_sfvals_tmp =
      (((((((t54 + t94) + t163) + t175) - t182) + t387) + t520) + t529) * xi;
  sfvals[52] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[53] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[54] = (((((t22 * -72.0 + t23 * 32.0) - t53) + t21 * 48.0) + t341) -
                t442 * 32.0) +
               t11 * ((((t53 + t8 * 32.0) - t21 * 32.0) + eta * (t3 * 56.0)) +
                      t3 * (t3 * 24.0));
}

// pyra_55_sfunc - Compute shape functions and their derivatives of pyra_55
void pyra_55_sfunc(double xi, double eta, double zeta, double sfvals[55],
                   double sdvals[165])
{
  double b_sdvals_tmp;
  double b_sfvals_tmp;
  double b_t1638_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double h_sfvals_tmp;
  double i_sfvals_tmp;
  double j_sfvals_tmp;
  double k_sfvals_tmp;
  double l_sfvals_tmp;
  double sdvals_tmp;
  double sfvals_tmp;
  double sfvals_tmp_tmp;
  double t10;
  double t1000;
  double t1001;
  double t1006;
  double t1007;
  double t1011;
  double t1013;
  double t1014;
  double t1015;
  double t1016;
  double t1017;
  double t1019;
  double t1029;
  double t1030;
  double t1032;
  double t1033;
  double t1034;
  double t104;
  double t1045;
  double t1046;
  double t1047;
  double t1049;
  double t105;
  double t1050;
  double t1051;
  double t1053;
  double t1054;
  double t1055;
  double t1056;
  double t1057;
  double t106;
  double t107;
  double t108;
  double t1080;
  double t1082;
  double t1083;
  double t1084;
  double t1085;
  double t1086;
  double t1089;
  double t109;
  double t1090;
  double t1091;
  double t1092;
  double t1093;
  double t1094;
  double t1095;
  double t1096;
  double t1098;
  double t11;
  double t110;
  double t1107;
  double t111;
  double t1116;
  double t112;
  double t1123;
  double t1124;
  double t1125;
  double t1126;
  double t1127;
  double t1128;
  double t1129;
  double t1130;
  double t1131;
  double t1132;
  double t1133;
  double t1134;
  double t1135;
  double t1136;
  double t1137;
  double t114;
  double t1140;
  double t1143;
  double t1146;
  double t1147;
  double t1149;
  double t115;
  double t1151;
  double t1152;
  double t1153;
  double t1154;
  double t1155;
  double t1156;
  double t1156_tmp;
  double t1159;
  double t1159_tmp;
  double t116;
  double t1160;
  double t1163;
  double t1164;
  double t1165;
  double t1167;
  double t1169;
  double t117;
  double t1174;
  double t1175;
  double t1177;
  double t1178;
  double t1179;
  double t118;
  double t1180;
  double t1181;
  double t1182;
  double t1183;
  double t1187;
  double t119;
  double t1190;
  double t1191;
  double t1192;
  double t12;
  double t120;
  double t1200;
  double t1201;
  double t121;
  double t1217;
  double t1218;
  double t1219;
  double t122;
  double t1220;
  double t1229;
  double t123;
  double t1233;
  double t1234;
  double t1236;
  double t1238;
  double t1241;
  double t1246;
  double t1247;
  double t1252;
  double t1254;
  double t1258;
  double t1263;
  double t1264;
  double t1265;
  double t1266;
  double t1267;
  double t1268;
  double t1272;
  double t1274;
  double t1275;
  double t1280;
  double t1281;
  double t1283;
  double t1285;
  double t1286;
  double t1290;
  double t1291;
  double t1291_tmp;
  double t1293;
  double t1294;
  double t1295;
  double t1296;
  double t1298;
  double t13;
  double t1300;
  double t1301;
  double t1302;
  double t1304;
  double t1306;
  double t1307;
  double t1309;
  double t131;
  double t1310;
  double t1311;
  double t1312;
  double t1313;
  double t1314;
  double t1315;
  double t1316;
  double t1317;
  double t1319;
  double t132;
  double t1320;
  double t1321;
  double t1323;
  double t1325;
  double t1329;
  double t133;
  double t1330;
  double t1332;
  double t1333;
  double t1334;
  double t1335;
  double t1336;
  double t1337;
  double t1338;
  double t1339;
  double t134;
  double t1340;
  double t1343;
  double t1346;
  double t1351;
  double t1352;
  double t1354;
  double t1355;
  double t1357;
  double t1358;
  double t1360;
  double t1361;
  double t1363;
  double t1367;
  double t1371;
  double t1374;
  double t1385;
  double t1389;
  double t1392;
  double t1393;
  double t1394;
  double t1395;
  double t1397;
  double t1398;
  double t14;
  double t1407;
  double t1411;
  double t1412;
  double t1414;
  double t1415;
  double t1418;
  double t142;
  double t1421;
  double t1422;
  double t1423;
  double t1424;
  double t1425;
  double t1426;
  double t1427;
  double t143;
  double t1431;
  double t1433;
  double t1434;
  double t1437;
  double t1439;
  double t144;
  double t1440;
  double t1441;
  double t1444;
  double t1445;
  double t1446;
  double t1448;
  double t145;
  double t1453;
  double t1454;
  double t1459;
  double t146;
  double t1461;
  double t1466;
  double t1466_tmp;
  double t1470;
  double t1472;
  double t1473;
  double t1476;
  double t1486;
  double t1487_tmp;
  double t1491;
  double t1493_tmp;
  double t1496_tmp;
  double t1496_tmp_tmp;
  double t1497;
  double t15;
  double t1507;
  double t1515;
  double t1516;
  double t1519;
  double t1519_tmp;
  double t152;
  double t1520_tmp;
  double t1521_tmp;
  double t1522;
  double t1528;
  double t1534_tmp;
  double t1535;
  double t1536;
  double t1536_tmp;
  double t1539;
  double t154;
  double t1543;
  double t1546_tmp;
  double t155;
  double t1550;
  double t1550_tmp;
  double t1551;
  double t1551_tmp;
  double t1556;
  double t1558;
  double t1559;
  double t156;
  double t1560;
  double t1562;
  double t1569;
  double t157;
  double t1570;
  double t1570_tmp;
  double t1572;
  double t1576;
  double t158;
  double t1585;
  double t1589_tmp;
  double t159;
  double t1591_tmp;
  double t1594;
  double t1599;
  double t1599_tmp;
  double t16;
  double t160;
  double t1601;
  double t1603;
  double t1604;
  double t161;
  double t1611;
  double t1611_tmp;
  double t1617;
  double t1618;
  double t1619;
  double t162;
  double t1621_tmp;
  double t1626;
  double t1627;
  double t163;
  double t1630_tmp;
  double t1632;
  double t1633;
  double t1634;
  double t1635;
  double t1638_tmp;
  double t164;
  double t1641_tmp;
  double t1647;
  double t1649;
  double t1650;
  double t1650_tmp;
  double t1653;
  double t1655;
  double t166;
  double t1665;
  double t1669;
  double t1670;
  double t1677;
  double t1679;
  double t1679_tmp;
  double t1680;
  double t1682;
  double t169;
  double t1691_tmp;
  double t1697;
  double t1698_tmp;
  double t17;
  double t1705;
  double t1706;
  double t171;
  double t1710;
  double t1716;
  double t1717;
  double t172;
  double t1721;
  double t1724;
  double t173;
  double t1730;
  double t1737;
  double t1737_tmp;
  double t1738;
  double t174;
  double t175;
  double t1755_tmp;
  double t1759_tmp;
  double t176;
  double t177;
  double t1776;
  double t178;
  double t1780;
  double t1786;
  double t179;
  double t1790;
  double t1797;
  double t1798;
  double t18;
  double t180;
  double t181;
  double t1810;
  double t1811;
  double t1814;
  double t182;
  double t1820;
  double t1821;
  double t1829;
  double t183;
  double t1830;
  double t1831;
  double t1833_tmp;
  double t1834;
  double t1834_tmp;
  double t1835;
  double t1836_tmp;
  double t184;
  double t185;
  double t186;
  double t187;
  double t188;
  double t189;
  double t19;
  double t190;
  double t191;
  double t192;
  double t193;
  double t2;
  double t20;
  double t205;
  double t206;
  double t207;
  double t208;
  double t209;
  double t21;
  double t219;
  double t22;
  double t220;
  double t221;
  double t227;
  double t228;
  double t23;
  double t232;
  double t233;
  double t234;
  double t235;
  double t236;
  double t237;
  double t238;
  double t241;
  double t242;
  double t243;
  double t244;
  double t245;
  double t246;
  double t247;
  double t249;
  double t254;
  double t256;
  double t257;
  double t259;
  double t260;
  double t261;
  double t262;
  double t264;
  double t269;
  double t270;
  double t271;
  double t272;
  double t273;
  double t274;
  double t275;
  double t276;
  double t277;
  double t278;
  double t28;
  double t280;
  double t289;
  double t29;
  double t292;
  double t3;
  double t30;
  double t31;
  double t311;
  double t312;
  double t313;
  double t314;
  double t315;
  double t32;
  double t320;
  double t321;
  double t322;
  double t323;
  double t324;
  double t326;
  double t328;
  double t33;
  double t330;
  double t335;
  double t337;
  double t34;
  double t341;
  double t344;
  double t347;
  double t348;
  double t351;
  double t352;
  double t353;
  double t354;
  double t355;
  double t357;
  double t358;
  double t359;
  double t361;
  double t363;
  double t365;
  double t366;
  double t367;
  double t370;
  double t373;
  double t374;
  double t375;
  double t376;
  double t378;
  double t380;
  double t382;
  double t384;
  double t385;
  double t386;
  double t387;
  double t388;
  double t392;
  double t393;
  double t395;
  double t397;
  double t399;
  double t4;
  double t40;
  double t400;
  double t402;
  double t403;
  double t404;
  double t406;
  double t407;
  double t41;
  double t412;
  double t413;
  double t415;
  double t417;
  double t42;
  double t420;
  double t421;
  double t422;
  double t423;
  double t424;
  double t428;
  double t429;
  double t43;
  double t430;
  double t431;
  double t433;
  double t434;
  double t438;
  double t44;
  double t441;
  double t442;
  double t443;
  double t448;
  double t449;
  double t45;
  double t450;
  double t451;
  double t453;
  double t454;
  double t455;
  double t457;
  double t458;
  double t459;
  double t46;
  double t462;
  double t463;
  double t464;
  double t465;
  double t466;
  double t467;
  double t468;
  double t469;
  double t47;
  double t470;
  double t471;
  double t472;
  double t473;
  double t474;
  double t475;
  double t476;
  double t480;
  double t481;
  double t482;
  double t484;
  double t485;
  double t487;
  double t488;
  double t491;
  double t492;
  double t494;
  double t495;
  double t496;
  double t497;
  double t498;
  double t499;
  double t5;
  double t504;
  double t507;
  double t508;
  double t509;
  double t510;
  double t511;
  double t512;
  double t513;
  double t514;
  double t515;
  double t517;
  double t520;
  double t524;
  double t526;
  double t527;
  double t529;
  double t53;
  double t532;
  double t533;
  double t534;
  double t535;
  double t536;
  double t537;
  double t538;
  double t539;
  double t54;
  double t540;
  double t543;
  double t545;
  double t55;
  double t552;
  double t553;
  double t555;
  double t557;
  double t56;
  double t566;
  double t568;
  double t569;
  double t57;
  double t58;
  double t588;
  double t589;
  double t59;
  double t590;
  double t591;
  double t592;
  double t593;
  double t594;
  double t597;
  double t599;
  double t6;
  double t60;
  double t601;
  double t602;
  double t604;
  double t608;
  double t609;
  double t61;
  double t610;
  double t611;
  double t613;
  double t615;
  double t616;
  double t618;
  double t624;
  double t625;
  double t627;
  double t632;
  double t633;
  double t634;
  double t635;
  double t637;
  double t638;
  double t639;
  double t640;
  double t641;
  double t642;
  double t643;
  double t649;
  double t650;
  double t651;
  double t653;
  double t655;
  double t657;
  double t659;
  double t660;
  double t662;
  double t663;
  double t664;
  double t665;
  double t666;
  double t667;
  double t669;
  double t67;
  double t670;
  double t671;
  double t673;
  double t674;
  double t675;
  double t676;
  double t678;
  double t679;
  double t68;
  double t69;
  double t694;
  double t695;
  double t696;
  double t697;
  double t699;
  double t7;
  double t70;
  double t700;
  double t701;
  double t702;
  double t703;
  double t704;
  double t71;
  double t711;
  double t712;
  double t713;
  double t714;
  double t715;
  double t716;
  double t718;
  double t72;
  double t721;
  double t722;
  double t723;
  double t724;
  double t725;
  double t726;
  double t728;
  double t729;
  double t730;
  double t731;
  double t742;
  double t743;
  double t744;
  double t745;
  double t746;
  double t747;
  double t748;
  double t749;
  double t75;
  double t750;
  double t752;
  double t753;
  double t754;
  double t759;
  double t76;
  double t760;
  double t761;
  double t769;
  double t77;
  double t772;
  double t773;
  double t775;
  double t776;
  double t778;
  double t779;
  double t78;
  double t780;
  double t781;
  double t784;
  double t784_tmp;
  double t785;
  double t786;
  double t788;
  double t79;
  double t793;
  double t794;
  double t795;
  double t796;
  double t797;
  double t799;
  double t8;
  double t80;
  double t800;
  double t802;
  double t805;
  double t806;
  double t807;
  double t809;
  double t81;
  double t813;
  double t815;
  double t816;
  double t817;
  double t818;
  double t819;
  double t82;
  double t820;
  double t821;
  double t822;
  double t823;
  double t823_tmp;
  double t836;
  double t838;
  double t840;
  double t841;
  double t842;
  double t843;
  double t844;
  double t845;
  double t863;
  double t864;
  double t865;
  double t866;
  double t867;
  double t868;
  double t869;
  double t87;
  double t870;
  double t871;
  double t873;
  double t874;
  double t876;
  double t877;
  double t878;
  double t879;
  double t88;
  double t880;
  double t886;
  double t889;
  double t89;
  double t898;
  double t899;
  double t9;
  double t90;
  double t900;
  double t901;
  double t902;
  double t903;
  double t905;
  double t909;
  double t91;
  double t911;
  double t912;
  double t913;
  double t914;
  double t915;
  double t916;
  double t917;
  double t918;
  double t919;
  double t921;
  double t922;
  double t923;
  double t924;
  double t925;
  double t926;
  double t927;
  double t928;
  double t929;
  double t93;
  double t934;
  double t934_tmp;
  double t937;
  double t938;
  double t94;
  double t940;
  double t944;
  double t945;
  double t946;
  double t947;
  double t949;
  double t95;
  double t950;
  double t951;
  double t952;
  double t953;
  double t954;
  double t956;
  double t958;
  double t959;
  double t96;
  double t960;
  double t961;
  double t962;
  double t963;
  double t964;
  double t965;
  double t966;
  double t967;
  double t968;
  double t969;
  double t97;
  double t971;
  double t972;
  double t973;
  double t974;
  double t975;
  double t976;
  double t979;
  double t98;
  double t983;
  double t985;
  double t986;
  double t987;
  double t988;
  double t989;
  double t990;
  double t991;
  double t991_tmp;
  double t992;
  double t994;
  double t995;
  double t996;
  double t998;
  double t999;
  double zeta_1_inv;
  zeta_1_inv = 1.0 / ((zeta - 1.0) + 1.0E-100);
  t2 = eta * zeta;
  t3 = eta * zeta_1_inv;
  t4 = eta * 3.0;
  t5 = eta * 4.0;
  t6 = eta * 5.0;
  t7 = eta * 6.0;
  t8 = eta * eta;
  t9 = std::pow(eta, 3.0);
  t11 = xi * xi;
  t12 = std::pow(xi, 3.0);
  t14 = zeta * 2.0;
  t15 = zeta * 3.0;
  t16 = zeta * 4.0;
  t17 = zeta * 5.0;
  t18 = zeta_1_inv * 3.0;
  t19 = zeta_1_inv * 4.0;
  t20 = zeta_1_inv * 6.0;
  t21 = zeta * zeta;
  t22 = std::pow(zeta, 3.0);
  t40 = eta * 8.0;
  t41 = eta * 9.0;
  t42 = eta * 12.0;
  t43 = eta * 16.0;
  t44 = eta * 18.0;
  t45 = eta * 24.0;
  t46 = eta * 27.0;
  t47 = eta * 32.0;
  t53 = zeta * 8.0;
  t54 = zeta * 9.0;
  t55 = zeta * 12.0;
  t56 = zeta * 14.0;
  t57 = zeta * 16.0;
  t58 = zeta * 18.0;
  t59 = zeta * 27.0;
  t60 = zeta * 32.0;
  t61 = zeta * 36.0;
  t67 = zeta_1_inv * 9.0;
  t68 = zeta_1_inv * 12.0;
  t69 = zeta_1_inv * 27.0;
  t121 = eta / 3.0;
  t122 = eta / 6.0;
  t123 = eta * 1.3333333333333333;
  t131 = eta * 81.0;
  t132 = zeta / 2.0;
  t133 = zeta / 3.0;
  t134 = zeta * 1.3333333333333333;
  t142 = zeta_1_inv / 2.0;
  t143 = zeta_1_inv / 3.0;
  t144 = zeta_1_inv / 4.0;
  t145 = zeta_1_inv * 0.66666666666666663;
  t146 = zeta_1_inv * 1.3333333333333333;
  t241 = eta * 0.22222222222222221;
  t242 = eta * 2.6666666666666665;
  t243 = eta * 0.44444444444444442;
  t244 = eta * 5.333333333333333;
  t245 = eta * 0.27777777777777779;
  t246 = eta * 6.666666666666667;
  t247 = eta * 0.07407407407407407;
  t249 = eta * 13.333333333333334;
  t254 = zeta * 0.22222222222222221;
  t256 = zeta * 4.5;
  t257 = zeta * 0.44444444444444442;
  t259 = zeta * 6.666666666666667;
  t260 = zeta * 0.07407407407407407;
  t261 = zeta * 0.14814814814814814;
  t262 = zeta * 0.18518518518518517;
  t264 = zeta * 18.666666666666668;
  t269 = zeta_1_inv / 9.0;
  t270 = zeta_1_inv * 2.6666666666666665;
  t271 = zeta_1_inv * 0.44444444444444442;
  t272 = zeta_1_inv * 5.333333333333333;
  t392 = eta * 0.88888888888888884;
  t393 = eta * 1.1111111111111112;
  t395 = eta * 1.7777777777777777;
  t397 = eta * 0.61111111111111116;
  t399 = eta * 0.29629629629629628;
  t400 = eta * 3.5555555555555554;
  t402 = eta * 0.96296296296296291;
  t403 = eta * 1.1851851851851851;
  t404 = eta * 6.2222222222222223;
  t406 = eta * 2.074074074074074;
  t407 = eta * 0.064814814814814811;
  t412 = zeta * 0.88888888888888884;
  t413 = zeta * 1.1111111111111112;
  t415 = zeta * 1.7777777777777777;
  t417 = zeta * 0.61111111111111116;
  t420 = zeta * 0.29629629629629628;
  t421 = zeta * 0.37037037037037035;
  t422 = zeta * 3.5555555555555554;
  t423 = zeta * 0.59259259259259256;
  t424 = zeta * 0.7407407407407407;
  t428 = zeta * 1.1851851851851851;
  t429 = zeta * 6.2222222222222223;
  t430 = zeta * 1.4814814814814814;
  t431 = zeta * 1.6296296296296295;
  t433 = zeta * 2.074074074074074;
  t434 = zeta * 0.064814814814814811;
  t438 = zeta_1_inv * 0.88888888888888884;
  t441 = zeta_1_inv * 3.5555555555555554;
  t566 = eta * 7.1111111111111107;
  t568 = eta * 8.88888888888889;
  t569 = eta * 2.3703703703703702;
  t588 = zeta * 0.098765432098765427;
  t589 = zeta * 8.88888888888889;
  t590 = zeta * 2.3703703703703702;
  t591 = zeta * 0.19753086419753085;
  t592 = zeta * 2.9629629629629628;
  t593 = zeta * 0.38271604938271603;
  t594 = zeta * 0.39506172839506171;
  t597 = zeta * 0.76543209876543206;
  t599 = zeta * 4.7407407407407405;
  t601 = zeta * 5.9259259259259256;
  t602 = zeta * 0.19135802469135801;
  t604 = zeta * 0.10802469135802469;
  t759 = eta * 3.9506172839506171;
  t760 = eta * 4.9876543209876543;
  t761 = eta * 23.703703703703702;
  t769 = zeta * 0.79012345679012341;
  t772 = zeta * 1.5308641975308641;
  t773 = zeta * 1.5802469135802468;
  t775 = zeta * 3.0617283950617282;
  t776 = zeta * 3.1604938271604937;
  t778 = zeta * 1.3641975308641976;
  t979 = eta * 15.80246913580247;
  t10 = t8 * t8;
  t13 = t11 * t11;
  t23 = t21 * t21;
  t28 = t2 * 2.0;
  t29 = t2 * 4.0;
  t30 = t2 * 5.0;
  t31 = t3 * 2.0;
  t32 = t3 * 3.0;
  t33 = t3 * 4.0;
  t34 = t3 * 6.0;
  t70 = t8 * 2.0;
  t71 = eta * t4;
  t72 = eta * t5;
  t75 = eta * t7;
  t76 = t14 * zeta;
  t77 = t15 * zeta;
  t78 = t15 * t21;
  t79 = t16 * t21;
  t80 = t21 * 6.0;
  t81 = t17 * t21;
  t82 = t21 * 7.0;
  t87 = t2 * 8.0;
  t88 = t2 * 9.0;
  t89 = t2 * 10.0;
  t90 = t2 * 12.0;
  t91 = t2 * 16.0;
  t93 = t2 * 18.0;
  t94 = t2 * 27.0;
  t95 = t2 * 32.0;
  t96 = t2 * 36.0;
  t97 = t2 * 40.0;
  t98 = t2 * 54.0;
  t104 = t3 * 8.0;
  t105 = t3 * 9.0;
  t106 = t3 * 12.0;
  t107 = t3 * 16.0;
  t108 = t3 * 18.0;
  t109 = t3 * 24.0;
  t110 = t3 * 27.0;
  t111 = t3 * 28.0;
  t112 = t3 * 56.0;
  t114 = t2 * zeta;
  t115 = eta * t2;
  t116 = t2 * t21;
  t117 = t2 * t8;
  t118 = t3 * zeta_1_inv;
  t119 = eta * t3;
  t120 = t3 * t8;
  t152 = t8 * -4.0;
  t154 = t8 * -5.0;
  t155 = t8 * -6.0;
  t156 = t8 * 8.0;
  t157 = t8 * 9.0;
  t158 = t9 * 9.0;
  t159 = t8 * 12.0;
  t160 = t8 * 16.0;
  t161 = t8 * 18.0;
  t162 = t8 * 27.0;
  t163 = t9 * 27.0;
  t164 = t8 * 32.0;
  t166 = t21 * -2.0;
  t169 = t22 * -3.0;
  t171 = t22 * -5.0;
  t172 = t21 * 8.0;
  t173 = t21 * 9.0;
  t174 = t22 * 8.0;
  t175 = t22 * 9.0;
  t178 = t21 * 15.0;
  t179 = t22 * 14.0;
  t180 = t21 * 16.0;
  t181 = t22 * 16.0;
  t182 = t21 * 18.0;
  t183 = t21 * 20.0;
  t184 = t21 * 24.0;
  t185 = t21 * 27.0;
  t186 = t21 * 32.0;
  t187 = t22 * 32.0;
  t188 = t22 * 36.0;
  t189 = t21 * 42.0;
  t190 = t21 * 48.0;
  t191 = t21 * 56.0;
  t192 = t2 / 3.0;
  t193 = t2 * 1.3333333333333333;
  t205 = t3 / 2.0;
  t206 = t3 / 3.0;
  t207 = t3 / 4.0;
  t208 = t3 * 0.66666666666666663;
  t209 = t3 * 1.3333333333333333;
  t219 = t3 * 81.0;
  t220 = t2 * t14;
  t227 = t2 * t6;
  t232 = t3 * t4;
  t233 = t3 * t19;
  t234 = t3 * t5;
  t236 = t3 * t20;
  t237 = t3 * t7;
  t273 = t8 / 2.0;
  t274 = t9 / 3.0;
  t275 = t9 * 0.66666666666666663;
  t276 = t8 / 6.0;
  t277 = t8 * 1.3333333333333333;
  t280 = t9 * 1.3333333333333333;
  t289 = t8 * 81.0;
  t292 = t22 * 2.5;
  t311 = t2 * 0.22222222222222221;
  t312 = t2 * 2.6666666666666665;
  t313 = t2 * 0.44444444444444442;
  t314 = t2 * 0.07407407407407407;
  t315 = t2 * 16.666666666666668;
  t320 = t3 / 9.0;
  t321 = t3 * 2.6666666666666665;
  t322 = t3 * 0.44444444444444442;
  t323 = t3 * 1.8333333333333333;
  t324 = t3 * 5.333333333333333;
  t326 = t2 * -zeta;
  t341 = t2 * t40;
  t344 = t2 * t41;
  t348 = t2 * t57;
  t351 = t2 * t58;
  t352 = t2 * t44;
  t355 = t2 * t59;
  t357 = t2 * t60;
  t358 = t2 * t47;
  t361 = t3 * -eta;
  t373 = t3 * t67;
  t374 = t3 * t41;
  t376 = t3 * t68;
  t384 = t3 * t69;
  t385 = t3 * t46;
  t442 = t2 * t2;
  t448 = t8 * 0.22222222222222221;
  t449 = t8 * 2.6666666666666665;
  t450 = t8 * 4.5;
  t451 = t9 * 2.6666666666666665;
  t454 = t9 * 0.44444444444444442;
  t455 = t8 * 6.666666666666667;
  t457 = t9 * 0.14814814814814814;
  t458 = t8 * 10.666666666666666;
  t459 = t9 * 10.666666666666666;
  t462 = t21 * 0.22222222222222221;
  t463 = t22 * 0.22222222222222221;
  t464 = t21 * 3.3333333333333335;
  t465 = t22 * 6.5;
  t467 = t21 * 7.5;
  t468 = t21 * 8.3333333333333339;
  t469 = t21 * 9.3333333333333339;
  t470 = t21 * 10.666666666666666;
  t471 = t22 * 10.666666666666666;
  t473 = t21 * 19.5;
  t474 = t22 * 14.666666666666666;
  t475 = t22 * 22.5;
  t476 = t22 * 18.666666666666668;
  t480 = t2 * 0.88888888888888884;
  t481 = t2 * 1.1111111111111112;
  t482 = t2 * 1.7777777777777777;
  t484 = t2 * 0.61111111111111116;
  t485 = t2 * 0.29629629629629628;
  t487 = t2 * 3.5555555555555554;
  t488 = t2 * 0.59259259259259256;
  t491 = t2 * 1.1851851851851851;
  t492 = t2 * 6.2222222222222223;
  t494 = t2 * 21.333333333333332;
  t495 = t2 * 1.6296296296296295;
  t496 = t2 * 1.7037037037037037;
  t497 = t2 * 1.9259259259259258;
  t498 = t2 * 2.074074074074074;
  t499 = t2 * 0.064814814814814811;
  t504 = t3 * 0.88888888888888884;
  t507 = t3 * 1.7777777777777777;
  t508 = t3 * 3.5555555555555554;
  t509 = t3 * 4.4444444444444446;
  t510 = t3 * 5.1111111111111107;
  t511 = t3 * 21.333333333333332;
  t512 = t3 * 2.074074074074074;
  t624 = t8 * 0.88888888888888884;
  t625 = t9 * 0.88888888888888884;
  t627 = t9 * 1.7777777777777777;
  t632 = t9 * 0.29629629629629628;
  t633 = t8 * 3.5555555555555554;
  t634 = t9 * 3.5555555555555554;
  t635 = t9 * 0.59259259259259256;
  t637 = t8 * 0.85185185185185186;
  t638 = t8 * 0.96296296296296291;
  t639 = t8 * 1.037037037037037;
  t640 = t8 * 1.1851851851851851;
  t641 = t9 * 1.1851851851851851;
  t642 = t8 * 21.333333333333332;
  t643 = t8 * 2.074074074074074;
  t649 = t21 * 0.88888888888888884;
  t650 = t21 * 1.4444444444444444;
  t651 = t21 * 1.7777777777777777;
  t653 = t21 * 2.2222222222222223;
  t655 = t21 * 2.7777777777777777;
  t657 = t21 * 0.29629629629629628;
  t659 = t22 * 0.29629629629629628;
  t660 = t21 * 0.37037037037037035;
  t663 = t21 * 3.5555555555555554;
  t664 = t22 * 0.48148148148148145;
  t665 = t22 * 3.5555555555555554;
  t666 = t21 * 0.59259259259259256;
  t667 = t21 * 0.7407407407407407;
  t669 = t22 * 0.7407407407407407;
  t670 = t21 * 0.81481481481481477;
  t671 = t22 * 0.92592592592592593;
  t673 = t22 * 1.1851851851851851;
  t674 = t21 * 1.4814814814814814;
  t675 = t22 * 1.4814814814814814;
  t678 = t22 * 42.666666666666664;
  t679 = t21 * 67.5;
  t694 = t2 * 8.88888888888889;
  t695 = t2 * 2.3703703703703702;
  t696 = t2 * 0.19753086419753085;
  t697 = t2 * 0.38271604938271603;
  t699 = t2 * 14.222222222222221;
  t700 = t2 * 4.1481481481481479;
  t701 = t2 * 4.7407407407407405;
  t702 = t2 * 16.888888888888889;
  t703 = t2 * 17.777777777777779;
  t704 = t2 * 9.1851851851851851;
  t711 = t3 * 8.88888888888889;
  t712 = t3 * 2.3703703703703702;
  t713 = t3 * 14.222222222222221;
  t714 = t3 * 4.1481481481481479;
  t715 = t3 * 4.5925925925925926;
  t716 = t3 * 4.7407407407407405;
  t718 = t3 * 7.1481481481481479;
  t784_tmp = t3 * t3;
  t784 = t784_tmp * -4.0;
  t788 = t784_tmp * -6.0;
  t806 = t784_tmp * 14.0;
  t823_tmp = std::pow(t3, 3.0);
  t823 = t823_tmp * 54.0;
  t836 = t9 * 7.1111111111111107;
  t838 = t8 * 0.098765432098765427;
  t840 = t8 * 2.3703703703703702;
  t841 = t8 * 0.39506172839506171;
  t842 = t8 * 0.76543209876543206;
  t843 = t8 * 4.5925925925925926;
  t844 = t8 * 0.19135802469135801;
  t845 = t8 * 11.851851851851851;
  t863 = t21 * 7.1111111111111107;
  t864 = t21 * 8.4444444444444446;
  t865 = t21 * 2.3703703703703702;
  t866 = t21 * 0.19753086419753085;
  t868 = t21 * 2.9629629629629628;
  t869 = t21 * 11.111111111111111;
  t870 = t21 * 0.38271604938271603;
  t871 = t21 * 0.39506172839506171;
  t873 = t22 * 0.49382716049382713;
  t874 = t22 * 3.7037037037037037;
  t877 = t21 * 0.76543209876543206;
  t878 = t21 * 5.9259259259259256;
  t879 = t22 * 5.9259259259259256;
  t880 = t21 * 3.8703703703703702;
  t886 = t2 * 0.79012345679012341;
  t889 = t2 * 1.5308641975308641;
  t934_tmp = t3 * t9;
  t934 = t934_tmp * -0.1111111111111111;
  t937 = t934_tmp * -0.44444444444444442;
  t990 = t784_tmp * -9.0;
  t996 = t823_tmp * -8.0;
  t1007 = t823_tmp * -16.0;
  t1011 = t823_tmp * -18.0;
  t1013 = t784_tmp * -27.0;
  t1029 = t8 * 1.9753086419753085;
  t1030 = t8 * 2.4938271604938271;
  t1032 = t8 * 3.9506172839506171;
  t1033 = t8 * 4.9876543209876543;
  t1034 = t8 * 23.703703703703702;
  t1045 = t21 * 0.79012345679012341;
  t1046 = t22 * 0.79012345679012341;
  t1049 = t21 * 1.5308641975308641;
  t1050 = t21 * 1.5802469135802468;
  t1051 = t22 * 1.9753086419753085;
  t1053 = t22 * 2.8641975308641974;
  t1054 = t21 * 3.0617283950617282;
  t1055 = t22 * 3.1604938271604937;
  t1056 = t22 * 1.2901234567901234;
  t1057 = t21 * 0.6820987654320988;
  t1098 = t934_tmp * -0.88888888888888884;
  t1107 = t934_tmp * -3.5555555555555554;
  t1136 = t784_tmp * -0.66666666666666663;
  t1147 = t784_tmp * 4.5;
  t1154 = t784_tmp * 3.3333333333333335;
  t1174 = t784_tmp * 6.666666666666667;
  t1179 = t784_tmp * 13.5;
  t1180 = t784_tmp * 10.666666666666666;
  t1192 = t784_tmp * -81.0;
  t1200 = t8 * 7.9012345679012341;
  t1201 = t8 * 15.80246913580247;
  t1241 = t784_tmp * -2.6666666666666665;
  t1246 = t784_tmp * -0.44444444444444442;
  t1258 = t784_tmp * -5.333333333333333;
  t1280 = t784_tmp * 2.2222222222222223;
  t1286 = t784_tmp * 2.5555555555555554;
  t1290 = t823_tmp * -10.666666666666666;
  t1294 = t784_tmp * 3.4444444444444446;
  t1300 = t784_tmp * 0.59259259259259256;
  t1306 = t784_tmp * 0.7407407407407407;
  t1311 = t784_tmp * 1.037037037037037;
  t1313 = t784_tmp * 1.1481481481481481;
  t1314 = t784_tmp * 1.1851851851851851;
  t1319 = t784_tmp * 1.3703703703703705;
  t1321 = t784_tmp * 1.4814814814814814;
  t1329 = t784_tmp * 6.8888888888888893;
  t1335 = t784_tmp * 2.2962962962962963;
  t1338 = t784_tmp * 0.68518518518518523;
  t1340 = t784_tmp * 42.666666666666664;
  t1354 = t823_tmp * -0.88888888888888884;
  t1357 = t784_tmp * -0.91666666666666663;
  t1358 = t784_tmp * -1.7777777777777777;
  t1367 = t784_tmp * -3.5555555555555554;
  t1385 = t784_tmp * -21.333333333333332;
  t1392 = t784_tmp * 7.1111111111111107;
  t1414 = t784_tmp * 0.39506172839506171;
  t1421 = t784_tmp * 0.76543209876543206;
  t1425 = t784_tmp * 3.574074074074074;
  t1426 = t784_tmp * 28.444444444444443;
  t1437 = t823_tmp * -7.1111111111111107;
  t1441 = t784_tmp * -2.3703703703703702;
  t1445 = t823_tmp * -14.222222222222221;
  t1448 = t784_tmp * 0.79012345679012341;
  t1453 = t784_tmp * 1.5308641975308641;
  t1459 = t784_tmp * 2.2160493827160495;
  t1461 = t784_tmp * 1.1080246913580247;
  t176 = t23 * 8.0;
  t177 = t23 * 9.0;
  t221 = eta * t28;
  t228 = t114 * 6.0;
  t235 = t3 * t71;
  t238 = t3 * t75;
  t278 = t10 * 0.66666666666666663;
  t328 = t114 * -2.0;
  t330 = t115 * -2.0;
  t335 = t115 * -4.0;
  t337 = t115 * -5.0;
  t347 = t114 * 15.0;
  t353 = t114 * 20.0;
  t354 = t114 * 24.0;
  t359 = t114 * 48.0;
  t363 = t8 * -t3;
  t365 = t119 * -3.0;
  t366 = t118 * -4.0;
  t367 = t119 * -4.0;
  t370 = t119 * -6.0;
  t375 = t8 * t105;
  t378 = t119 * 14.0;
  t380 = t108 * zeta_1_inv;
  t382 = t109 * zeta_1_inv;
  t386 = eta * t111;
  t387 = t8 * t110;
  t443 = t3 * t119;
  t453 = t10 * 2.6666666666666665;
  t466 = t23 * 3.6666666666666665;
  t472 = t23 * 10.666666666666666;
  t513 = t115 / 2.0;
  t514 = t114 * 0.66666666666666663;
  t515 = t117 / 3.0;
  t517 = t115 * -8.0;
  t520 = t115 * -9.0;
  t524 = t114 * -16.0;
  t526 = t114 * -18.0;
  t527 = t115 * -18.0;
  t529 = t114 * -27.0;
  t532 = t118 / 2.0;
  t533 = t119 / 2.0;
  t534 = t118 / 3.0;
  t535 = t118 / 4.0;
  t536 = t118 * 0.66666666666666663;
  t537 = t119 * 0.66666666666666663;
  t538 = t120 / 3.0;
  t539 = t120 * 0.66666666666666663;
  t540 = t118 * 1.3333333333333333;
  t543 = t118 * -9.0;
  t545 = t120 * -9.0;
  t552 = t118 * -27.0;
  t553 = t119 * -27.0;
  t555 = t120 * -27.0;
  t557 = t119 * 81.0;
  t608 = t3 * t32;
  t609 = t3 * t33;
  t610 = t3 * t232;
  t611 = t3 * t233;
  t613 = t3 * t34;
  t615 = t3 * t236;
  t616 = t3 * t237;
  t662 = t23 * 0.37037037037037035;
  t676 = t23 * 1.4814814814814814;
  t721 = t114 * 0.22222222222222221;
  t722 = t115 * 4.5;
  t723 = t116 * 0.22222222222222221;
  t724 = t115 * 0.44444444444444442;
  t725 = t115 * 5.333333333333333;
  t726 = t114 * 8.3333333333333339;
  t728 = t117 * 0.14814814814814814;
  t729 = t114 * 10.666666666666666;
  t730 = t115 * 10.666666666666666;
  t731 = t116 * 10.666666666666666;
  t742 = t118 * 0.22222222222222221;
  t743 = t118 * 2.6666666666666665;
  t744 = t120 * 2.6666666666666665;
  t745 = t9 * t320;
  t746 = t118 * 0.44444444444444442;
  t747 = t120 * 0.44444444444444442;
  t748 = t9 * t322;
  t749 = t118 * 5.333333333333333;
  t750 = t120 * 5.333333333333333;
  t752 = t118 * 6.666666666666667;
  t753 = t119 * 13.5;
  t754 = t119 * 13.333333333333334;
  t779 = t2 * -t2;
  t780 = t2 * t88;
  t793 = t3 * t788;
  t794 = t3 * t105;
  t795 = t104 * t118;
  t796 = t3 * t373;
  t797 = t3 * t374;
  t802 = t3 * t106;
  t805 = t3 * t376;
  t807 = t107 * t118;
  t809 = t108 * t118;
  t813 = t784_tmp * t108;
  t815 = t3 * t109;
  t816 = t109 * t118;
  t817 = t3 * t110;
  t818 = t3 * t111;
  t819 = t3 * t384;
  t820 = t3 * t385;
  t867 = t23 * 0.19753086419753085;
  t876 = t23 * 0.71604938271604934;
  t898 = t114 * 0.88888888888888884;
  t899 = t115 * 0.88888888888888884;
  t900 = t114 * 1.4444444444444444;
  t901 = t114 * 1.7777777777777777;
  t902 = t115 * 1.7777777777777777;
  t903 = t117 * 1.7777777777777777;
  t905 = t114 * 2.2222222222222223;
  t909 = t114 * 0.29629629629629628;
  t911 = t116 * 0.29629629629629628;
  t912 = t117 * 0.29629629629629628;
  t913 = t114 * 3.5555555555555554;
  t914 = t116 * 0.48148148148148145;
  t915 = t115 * 3.5555555555555554;
  t916 = t116 * 3.5555555555555554;
  t917 = t117 * 3.5555555555555554;
  t918 = t114 * 0.59259259259259256;
  t919 = t117 * 0.59259259259259256;
  t921 = t115 * 0.7407407407407407;
  t922 = t116 * 0.7407407407407407;
  t923 = t114 * 0.81481481481481477;
  t924 = t115 * 0.85185185185185186;
  t925 = t115 * 0.96296296296296291;
  t926 = t115 * 1.1851851851851851;
  t927 = t116 * 1.1851851851851851;
  t928 = t117 * 1.1851851851851851;
  t929 = t115 * 2.074074074074074;
  t938 = t118 * 0.88888888888888884;
  t940 = t9 * t504;
  t944 = t118 * 0.91666666666666663;
  t945 = t119 * 0.91666666666666663;
  t946 = t120 * 1.7777777777777777;
  t947 = t118 * 2.2222222222222223;
  t949 = t119 * 2.2222222222222223;
  t950 = t119 * 2.5555555555555554;
  t951 = t119 * 3.1111111111111112;
  t952 = t118 * 3.5555555555555554;
  t953 = t119 * 3.5555555555555554;
  t954 = t120 * 3.5555555555555554;
  t956 = t9 * t508;
  t958 = t119 * 4.4444444444444446;
  t959 = t120 * 4.4444444444444446;
  t960 = t119 * 1.037037037037037;
  t961 = t119 * 5.1111111111111107;
  t962 = t120 * 1.037037037037037;
  t963 = t118 * 1.1851851851851851;
  t964 = t119 * 1.1851851851851851;
  t965 = t120 * 1.1851851851851851;
  t966 = t118 * 1.3703703703703705;
  t967 = t119 * 6.2222222222222223;
  t968 = t118 * 1.4814814814814814;
  t969 = t118 * 21.333333333333332;
  t971 = t118 * 26.666666666666668;
  t972 = t119 * 2.074074074074074;
  t973 = t119 * 26.666666666666668;
  t974 = t120 * 2.074074074074074;
  t975 = t118 * 2.2962962962962963;
  t976 = t119 * 2.2962962962962963;
  t983 = t442 * -9.0;
  t985 = t3 * t208;
  t986 = t119 * t206;
  t987 = t119 * t208;
  t988 = t120 * t208;
  t989 = t118 * t209;
  t991_tmp = t3 * t118;
  t991 = t991_tmp * -8.0;
  t992 = t784_tmp * t209;
  t999 = t3 * t990;
  t1006 = t991_tmp * -16.0;
  t1016 = t3 * t1013;
  t1019 = t3 * t219;
  t1047 = t23 * 0.79012345679012341;
  t1080 = t114 * 7.1111111111111107;
  t1082 = t114 * 8.4444444444444446;
  t1083 = t115 * 0.098765432098765427;
  t1084 = t115 * 8.88888888888889;
  t1085 = t114 * 2.3703703703703702;
  t1086 = t115 * 2.3703703703703702;
  t1089 = t114 * 0.39506172839506171;
  t1090 = t115 * 0.39506172839506171;
  t1091 = t114 * 3.4074074074074074;
  t1092 = t115 * 3.4074074074074074;
  t1093 = t114 * 0.76543209876543206;
  t1094 = t115 * 0.76543209876543206;
  t1095 = t115 * 4.5925925925925926;
  t1096 = t115 * 0.19135802469135801;
  t1116 = t119 * 7.1111111111111107;
  t1123 = t120 * 8.88888888888889;
  t1124 = t118 * 2.3703703703703702;
  t1125 = t119 * 2.3703703703703702;
  t1126 = t120 * 2.3703703703703702;
  t1127 = t118 * 14.222222222222221;
  t1128 = t120 * 14.222222222222221;
  t1129 = t120 * 4.1481481481481479;
  t1130 = t118 * 4.5925925925925926;
  t1131 = t119 * 4.5925925925925926;
  t1132 = t120 * 4.7407407407407405;
  t1133 = t120 * 17.777777777777779;
  t1134 = t119 * 7.1481481481481479;
  t1135 = t119 * 3.574074074074074;
  t1140 = t991_tmp * -1.3333333333333333;
  t1143 = t3 * t320;
  t1146 = t3 * t321;
  t1151 = t119 * t321;
  t1152 = t120 * t320;
  t1153 = t3 * t322;
  t1156_tmp = t3 * t120;
  t1156 = t1156_tmp * 0.22222222222222221;
  t1163 = t1156_tmp * 3.3333333333333335;
  t1167 = t3 * t324;
  t1169 = t119 * t324;
  t1177 = t1156_tmp * 6.666666666666667;
  t1181 = t991_tmp * 10.666666666666666;
  t1183 = t3 * t1180;
  t1191 = t1156_tmp * 13.333333333333334;
  t1217 = t114 * 1.5802469135802468;
  t1218 = t115 * 1.5802469135802468;
  t1219 = t114 * 3.0617283950617282;
  t1220 = t115 * 3.0617283950617282;
  t1229 = t118 * 0.79012345679012341;
  t1233 = t118 * 1.5308641975308641;
  t1234 = t118 * 2.2160493827160495;
  t1236 = t442 * 1.1851851851851851;
  t1238 = t442 * 1.7037037037037037;
  t1247 = t3 * t1241;
  t1252 = t3 * t1246;
  t1254 = t1156_tmp * -0.44444444444444442;
  t1266 = t3 * t1258;
  t1267 = t118 * t1258;
  t1272 = t3 * t507;
  t1285 = t3 * t1280;
  t1291_tmp = t784_tmp * t118;
  t1291 = t1291_tmp * -10.666666666666666;
  t1293 = t3 * t1290;
  t1295 = t118 * t1290;
  t1296 = t3 * t508;
  t1302 = t120 * t508;
  t1307 = t3 * t509;
  t1330 = t3 * t512;
  t1333 = t1156_tmp * 26.666666666666668;
  t1339 = t3 * t1335;
  t1343 = t784_tmp * t1340;
  t1351 = t442 * 0.19753086419753085;
  t1352 = t442 * 0.38271604938271603;
  t1355 = t1156_tmp * -0.88888888888888884;
  t1360 = t3 * t1358;
  t1371 = t3 * t1367;
  t1389 = t3 * t1385;
  t1394 = t3 * t1392;
  t1395 = t1156_tmp * 7.1111111111111107;
  t1411 = t118 * t712;
  t1415 = t1291_tmp * -42.666666666666664;
  t1418 = t784_tmp * t713;
  t1422 = t118 * t715;
  t1424 = t784_tmp * t715;
  t1433 = t442 * 0.79012345679012341;
  t1434 = t442 * 1.5308641975308641;
  t1439 = t1291_tmp * -7.1111111111111107;
  t1440 = t3 * t1437;
  t1444 = t3 * t1441;
  t1446 = t1156_tmp * -14.222222222222221;
  t1611_tmp = t2 + t9;
  t1611 =
      (((((((t1611_tmp - zeta) + t72) + t80) + t120) + t171) + t227) + t234) +
      t326;
  t1650_tmp = std::pow(t3, 4.0);
  t1650 = -t12 * (((t713 + t1426) + t1445) - t1650_tmp * 28.444444444444443);
  t388 = eta * t112;
  t618 = t3 * t613;
  t781 = t2 * t91;
  t785 = t3 * t365;
  t786 = t3 * t366;
  t799 = t3 * t794;
  t800 = t3 * t795;
  t821 = t3 * t817;
  t822 = t3 * t819;
  t994 = t3 * t543;
  t995 = t443 * -9.0;
  t998 = t209 * t443;
  t1000 = t3 * t991;
  t1001 = t3 * t992;
  t1014 = t3 * t552;
  t1015 = t443 * -27.0;
  t1137 = t443 * -0.33333333333333331;
  t1149 = t3 * t742;
  t1155 = t3 * t1146;
  t1159_tmp = t3 * t443;
  t1159 = t1159_tmp * 0.22222222222222221;
  t1160 = t321 * t443;
  t1165 = t322 * t443;
  t1178 = t1159_tmp * 6.666666666666667;
  t1182 = t443 * 10.666666666666666;
  t1187 = t3 * t1183;
  t1190 = t443 * 13.333333333333334;
  t1263 = t443 * -5.333333333333333;
  t1264 = t443 * 1.1111111111111112;
  t1265 = t443 * t504;
  t1274 = t443 * 1.7777777777777777;
  t1275 = t3 * t1272;
  t1283 = t443 * 2.2222222222222223;
  t1298 = t443 * 3.5555555555555554;
  t1301 = t3 * t1296;
  t1304 = t443 * 0.59259259259259256;
  t1309 = t443 * 4.4444444444444446;
  t1310 = t3 * t1307;
  t1312 = t443 * 1.037037037037037;
  t1315 = t443 * 1.1481481481481481;
  t1316 = t3 * t963;
  t1317 = t443 * 1.1851851851851851;
  t1320 = t3 * t966;
  t1323 = t3 * t968;
  t1325 = t443 * 21.333333333333332;
  t1332 = t443 * 2.074074074074074;
  t1334 = t1159_tmp * 26.666666666666668;
  t1336 = t3 * t975;
  t1337 = t443 * 2.2962962962962963;
  t1346 = t443 * 53.333333333333336;
  t1361 = t1159_tmp * -1.7777777777777777;
  t1363 = t3 * t1360;
  t1374 = t1159_tmp * -3.5555555555555554;
  t1393 = t443 * 7.1111111111111107;
  t1397 = t3 * t1394;
  t1398 = t118 * t1394;
  t1407 = t443 * 8.88888888888889;
  t1412 = t443 * 2.3703703703703702;
  t1423 = t443 * 4.5925925925925926;
  t1427 = t443 * 28.444444444444443;
  t1431 = (-t80 + t174) + zeta;
  t1454 = t3 * t1233;
  t1466_tmp = -zeta + t80;
  t1466 = t1466_tmp - t174;
  t1470 = (((t19 + zeta * 2.6666666666666665) + t470) + 4.0) * xi;
  t1472 = (t134 - t172) + t471;
  t1473 = (t172 - t134) - t471;
  t1487_tmp = t2 + t22;
  t1496_tmp_tmp = t2 - zeta;
  t1496_tmp = t1496_tmp_tmp + t76;
  t1507 = -t12 * ((t1343 - t784_tmp * 53.333333333333336) + 10.666666666666666);
  t1515 = ((((t42 + t91) + t106) + t160) + t386) + t802;
  t1516 = ((((-t16 + t159) + t183) - t181) + t2 * t43) + t3 * t42;
  t1520_tmp = t54 + t175;
  t1521_tmp = -t54 + t182;
  t1528 = -t11 * ((((t16 + t160) - t180) + t386) + t802);
  t1534_tmp = (t7 + t34) + t87;
  t1535 = (((((t1487_tmp + t158) + t166) + t326) + t375) + t520) + zeta;
  t1546_tmp = t118 * t1358;
  t1569 = (((((t91 + t191) - t123) - t264) + t114 * -32.0) - t678) +
          1.3333333333333333;
  t1572 = ((((t1496_tmp + t158) - t22) + t326) + t344) + t375;
  t1589_tmp = t1291_tmp * 28.444444444444443;
  t1599_tmp = t508 + t1371;
  t1599 = (t1599_tmp + t1392) + t1440;
  t1619 =
      (((((((t1611_tmp + t81) + t120) + t152) - t80) + t326) + t337) + t367) +
      zeta;
  t1621_tmp = t118 * t1437;
  t1626 = ((((((t54 + t94) + t163) + t175) - t182) + t387) + t520) + t529;
  t1627 = ((((((t94 - t54) + t163) + t182) - t175) + t344) + t387) + t529;
  t1630_tmp = t938 + t118 * t1241;
  t1641_tmp = eta + t16;
  t1691_tmp = (t2 + t23) + t76;
  t1697 = ((((((((t40 - zeta) + t76) + t89) + t104) + t238) - t161) + t553) +
           t616) +
          t990;
  t1698_tmp = (t23 + t76) - t2;
  t1724 = -xi *
          ((((((zeta * 1.7037037037037037 + t643) - t21 * 3.4074074074074074) +
              t961) +
             t120 * t209) +
            t1319) +
           0.33333333333333331);
  t1759_tmp = zeta * 0.96296296296296291 + zeta_1_inv * 0.91666666666666663;
  t1017 = t3 * t1014;
  t1164 = t3 * t1155;
  t1175 = t3 * (t3 * t1167);
  t1268 = t3 * t1263;
  t1281 = t3 * t1275;
  t1476 = -t11 * ((t47 + t112) + t382);
  t1486 = (t1187 - t784_tmp * 13.333333333333334) + 2.6666666666666665;
  t1491 = t11 * (((t60 + t816) + t818) - 4.0);
  t1493_tmp = t3 * t1415;
  t1519_tmp = (((t53 + t164) - t186) + t388) + t815;
  t1519 = -xi * t1519_tmp;
  t1522 = t1515 * xi;
  t1539 = t11 * (((((t44 + t110) - t54) + t373) + t385) + t817);
  t1543 = t11 * (((((t44 + t54) + t110) + t373) + t553) + t1013);
  t1550_tmp = t17 + t19;
  t1550 = t11 * ((((((t1550_tmp + t44) + t110) + t373) + t374) + t794) + 4.0);
  t1551_tmp = ((t5 + t33) + t312) + t729;
  t1551 = t1551_tmp + t1472;
  t1558 = (((((eta + t3) - zeta) + t374) + t794) + t995) + t999;
  t1559 = t1551_tmp + t1473;
  t1560 = ((t322 + t1153) + t1360) + t1363;
  t1570_tmp = t4 + t32;
  t1570 = ((((t1570_tmp + t75) + t237) + t341) + t348) + t1431;
  t1576 = t11 * ((((((t1550_tmp - t44) - t110) + t374) + t543) + t794) + 4.0);
  t1585 = (((((-eta - zeta) - t3) + t374) + t794) + t797) + t799;
  t1594 = (((((-t4 + t75) - t32) + t237) + t341) + t524) + t1431;
  t1601 = (t1599_tmp + t1397) - t1392;
  t1617 = (((((t46 + t110) - t54) + t374) + t794) + t1015) + t1016;
  t1618 = (((((-t46 - t54) - t110) + t374) + t794) + t820) + t821;
  t1632 = t12 * (((t507 + t1272) + t1437) + t1440);
  t1633 = -t12 * (((t507 + t1358) + t1397) + t1437);
  t1634 = t12 * t1599;
  t1638_tmp = t952 + t1291;
  b_t1638_tmp = t823_tmp * t118;
  t1647 = (((((t134 + t193) + t476) + t114 * -8.0) - t469) - t472) + t731;
  t1649 = t12 * (((t713 + t784_tmp * t1426) + t1445) - t1426);
  t1653 = t11 * ((((((t41 + t58) + t796) + t797) + t813) + t1179) - 4.5);
  t1655 = (((((t134 - t193) + t2 * t53) + t476) - t469) - t472) - t731;
  t1670 = (((((((t54 + t161) - t93) - t182) + t8 * t108) + t385) + t794) +
           t784_tmp * t44) *
          xi;
  t1679_tmp = (t40 + t89) + t104;
  t1679 =
      (((((((t1679_tmp + t161) + t166) + t238) + t385) + t616) + t794) + zeta) *
      xi;
  t1682 = (((((t429 + t455) + t665) + t9 * t324) - t864) - t1084) -
          1.3333333333333333;
  t1705 = -t1697 * xi;
  t1706 = t1697 * xi;
  t1710 =
      t11 * (((((((t157 - t88) + t256) - t173) + t375) + t753) + t797) + t1147);
  t1717 =
      t11 *
      (((((((((t5 + t30) + t33) + t132) + t157) - t21) + t235) + t610) + t753) +
       t1147);
  t1730 = ((((((-(zeta * 9.1851851851851851) + t865) + t958) - t1034) + t1321) +
            t120 * t511) +
           5.333333333333333) *
          xi;
  t1737_tmp = t72 + t78;
  t1737 = (((((((((t1737_tmp + t123) + t133) + t166) + t209) + t227) + t234) -
             t192) -
            t274) +
           t726) -
          t538;
  t1738 = (((((((((t1737_tmp + t133) + t166) + t192) + t227) + t234) - t123) +
             t274) -
            t209) +
           t538) -
          t726;
  t1776 =
      (((((((((-t241 + t448) + t481) - t420) + t634) + t666) + t744) - t659) +
        t929) +
       t940) -
      t898;
  t1780 =
      (((((((((t241 + t448) - t420) + t666) - t481) - t634) - t659) + t898) +
        t929) -
       t744) +
      t940;
  t1786 =
      ((((((((((-t241 - t260) + t448) + t481) + t537) + t539) + t625) + t670) -
         t669) +
        t926) +
       t937) -
      t898;
  t1790 =
      ((((((((((t260 - t241) + t481) + t539) - t448) + t625) + t669) - t537) +
         t748) -
        t670) -
       t898) -
      t926;
  t1797 =
      (((((((((t428 - t395) + t673) + t694) + t750) - t633) + t836) - t865) +
        t1086) +
       t1107) -
      t1080;
  t1798 =
      (((((((((-t395 - t428) + t633) + t694) + t750) + t836) - t673) + t865) +
        t956) -
       t1080) -
      t1086;
  t1550_tmp = t207 + t245;
  t1810 = ((((((((((t1550_tmp + t434) - t311) - t454) + t624) + t664) - t538) -
              t657) +
             t901) +
            t925) +
           t934) +
          t945;
  t1611_tmp = (t311 - t207) - t245;
  t1811 = (((((((((t1611_tmp + t434) + t454) + t538) + t624) + t664) - t657) +
             t925) +
            t934) +
           t945) -
          t901;
  t1820 =
      -xi * (((((((((-t243 + t772) - t700) + t1032) - t1054) + t1129) + t1131) +
               t1355) +
              t1423) +
             t1453);
  t1833_tmp = (t208 + t241) + t491;
  t1834_tmp = (t323 + t395) + t497;
  t1834 = -xi *
          ((((((((t1834_tmp - t593) + t877) + t974) - t1033) - t1134) + t1156) +
            t1337) -
           t1459);
  t1551_tmp = t209 + t243;
  t1835 =
      -xi *
      (((((((((t1551_tmp + t591) + t695) + t1032) - t871) + t1131) - t1126) +
         t1317) +
        t1156_tmp * -3.5555555555555554) +
       t1453);
  t1836_tmp = (t392 + t2 * 0.96296296296296291) + t3 * 0.91666666666666663;
  t1497 = t12 * t1486;
  t1536_tmp = ((((-t42 + t160) - t91) - t106) + t386) + t784_tmp * 12.0;
  t1536 = xi * t1536_tmp;
  t1556 = (((((t123 + t191) - t91) + t357) - t264) - t678) + 1.3333333333333333;
  t1562 = ((t322 + t1246) + t1281) + t1360;
  t1591_tmp = t118 / 9.0 + t3 * t1140;
  t1604 = -t12 * t1560;
  t1635 = -t12 * t1601;
  t1665 = t11 * ((((((t41 - t58) + t797) + t813) + t994) - t1179) + 4.5);
  t1669 =
      t11 * (((((((t14 - t6) + t233) + t610) + t618) + t796) + t1179) - 0.5);
  t1677 = (((((((t54 + t93) + t161) - t182) + t385) + t120 * -18.0) + t794) +
           t443 * -18.0) *
          xi;
  t1680 =
      t11 * (((((((t6 + t14) + t366) + t785) + t793) + t796) + t1179) - 0.5);
  t1716 =
      t11 * (((((((t88 + t157) + t256) - t173) + t545) + t753) + t995) + t1147);
  t1721 =
      t11 *
      (((((((((t5 + t21) + t30) + t33) + t235) - t132) - t157) + t610) - t753) -
       t1147);
  t1755_tmp = t145 + t428;
  t1814 = ((((((((t1834_tmp + t593) + t974) + t1033) - t877) + t1134) - t1156) +
            t1337) +
           t1459) *
          xi;
  t1821 =
      -xi * (((((((((t243 + t700) + t772) + t1032) - t1054) + t1131) - t1129) +
               t1355) -
              t1423) +
             t1453);
  t1830 = (((((((((t701 - t566) + t769) + t1125) + t1201) - t1050) - t1132) +
             t1412) +
            t1446) +
           t1448) *
          xi;
  t1831 =
      (((((((((t1551_tmp + t695) - t591) + t871) - t1032) - t1126) - t1131) +
         t1302) +
        t1317) -
       t1453) *
      xi;
  t1603 = t12 * t1562;
  sfvals_tmp =
      (-t13 * (((t320 + t1143) + t1252) + t3 * t1252) +
       (((((((((t499 - t604) + t876) - t728) + t914) + t1057) - t909) + t1096) -
         t1056) -
        t1352)) +
      t11 * ((((((((t1836_tmp + t602) + t962) + t1030) - t870) + t1135) +
               t1156_tmp * -0.1111111111111111) +
              t1315) +
             t1461);
  b_sfvals_tmp = t1810 * xi;
  c_sfvals_tmp =
      t12 *
      (((((((-t206 - t243) - t261) + t960) + t992) + t1165) + t1274) + t1313);
  sfvals[0] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[1] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp =
      (t13 * (((t320 + t3 * (t3 * t1153)) + t784_tmp * -0.1111111111111111) +
              t1252) +
       (((((((((-t499 + t728) - t604) + t876) + t909) + t1057) - t914) +
          t1096) -
         t1056) -
        t1352)) +
      -t11 *
          ((((((((t1836_tmp - t602) + t870) + t962) - t1030) - t1135) + t1152) +
            t1315) -
           t1461);
  b_sfvals_tmp = t1811 * xi;
  c_sfvals_tmp =
      t12 *
      (((((((t206 + t243) - t261) + t960) + t823_tmp * -1.3333333333333333) +
         t1165) +
        t1313) -
       t1274);
  sfvals[2] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[3] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[4] = ((t21 * 7.333333333333333 - zeta) - t181) + t472;
  sfvals_tmp =
      (t13 * t1560 +
       (((((((((t314 + t588) + t873) + t919) + t922) - t867) - t871) - t923) -
         t1094) +
        t1434)) +
      -t11 *
          ((((((((t1833_tmp + t588) - t866) + t976) + t1029) - t965) + t1304) +
            t1421) -
           t1156_tmp * 1.7777777777777777);
  b_sfvals_tmp = t1776 * xi;
  c_sfvals_tmp =
      t12 *
      (((((((-t208 - t392) - t420) + t972) + t1155) + t1265) + t1298) + t1335);
  sfvals[5] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[6] =
      ((((((((((((((t122 + t262) - t275) + t278) - t276) - t484) + t671) +
              t721) +
             t723) -
            t662) -
           t667) +
          t903) -
         t924) +
        t1238) -
       t13 * (((t208 + t985) + t1247) + t3 * t1247)) -
      t11 * ((((((((((t123 + t205) + t262) - t313) + t639) - t660) + t950) +
                t959) +
               t1163) +
              t1264) +
             t1338);
  sfvals[7] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      (t13 * (((t504 + t1272) + t1354) + t1363) +
       (((((((((t588 - t485) + t873) + t912) + t918) - t867) - t871) - t911) -
         t1083) +
        t1351)) +
      -t11 * (((((((((-t241 + t597) - t498) + t974) + t976) + t1029) - t1049) +
                t1254) +
               t1337) +
              t1421);
  b_sfvals_tmp = t1790 * xi;
  c_sfvals_tmp =
      t12 *
      (((((((t321 + t400) + t423) + t964) + t1247) + t1361) - t1298) - t1300);
  sfvals[8] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      (t13 * ((t1164 - t1154) + 0.66666666666666663) +
       (((((t262 + t671) - t662) - t667) - t115 * 0.18518518518518517) +
        t442 * 0.37037037037037035)) +
      -t11 *
          ((((((zeta * 0.85185185185185186 + t639) - t21 * 1.7037037037037037) +
              t950) +
             t988) +
            t1338) +
           0.16666666666666666);
  e_sfvals_tmp = t12 * ((((-t415 + t958) + t3 * (t443 * -2.6666666666666665)) +
                         t784_tmp * 1.1111111111111112) +
                        0.66666666666666663);
  sfvals_tmp_tmp = ((((-t277 + t462) + t463) - t417) + t724) - t533;
  f_sfvals_tmp = xi * ((sfvals_tmp_tmp + t9 * -t208) + 0.16666666666666666);
  sfvals[9] = (d_sfvals_tmp + e_sfvals_tmp) - f_sfvals_tmp;
  g_sfvals_tmp =
      (-t13 * (((t504 + t1281) + t1354) + t1358) +
       (((((((((t485 + t588) + t873) + t911) - t867) - t871) - t912) - t918) -
         t1083) +
        t1351)) +
      -t11 * (((((((((t241 + t498) + t597) + t976) + t1029) - t1049) - t974) +
                t1254) -
               t1337) +
              t1421);
  h_sfvals_tmp = t1786 * xi;
  i_sfvals_tmp =
      t12 * (((((((t423 - t321) - t400) + t964) + t1298) + t1361) - t1300) +
             t823_tmp * 2.6666666666666665);
  sfvals[10] = (g_sfvals_tmp + h_sfvals_tmp) - i_sfvals_tmp;
  j_sfvals_tmp =
      (-t13 * t1562 +
       (((((((((-t314 + t588) + t873) + t923) - t867) - t871) - t919) - t922) -
         t1094) +
        t1434)) +
      t11 * ((((((((t1833_tmp - t588) + t866) - t965) - t976) - t1029) +
               t120 * t507) +
              t1304) -
             t1421);
  k_sfvals_tmp = t1780 * xi;
  l_sfvals_tmp =
      t12 *
      (((((((t208 + t392) - t420) + t972) + t1247) + t1265) + t1335) - t1298);
  sfvals[11] = (j_sfvals_tmp - k_sfvals_tmp) + l_sfvals_tmp;
  sfvals[12] =
      ((((((((((((((-t122 + t262) + t275) + t278) - t276) + t484) + t671) -
              t721) -
             t723) -
            t662) -
           t667) -
          t903) -
         t924) +
        t1238) +
       t13 * (((t208 + t1136) + t1164) + t1247)) -
      t11 * ((((((((((-t205 - t123) + t262) + t313) + t639) - t660) + t950) -
                t959) +
               t1163) -
              t1264) +
             t1338);
  sfvals[13] = (j_sfvals_tmp + k_sfvals_tmp) - l_sfvals_tmp;
  sfvals[14] = (g_sfvals_tmp - h_sfvals_tmp) + i_sfvals_tmp;
  sfvals[15] = (d_sfvals_tmp - e_sfvals_tmp) + f_sfvals_tmp;
  sfvals[16] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      -t1717 +
      (((((((((t132 + t220) - t192) + t116 * -3.0) + t442) + t465) + t515) -
         t464) -
        t466) -
       t513);
  b_sfvals_tmp = t1737 * xi;
  c_sfvals_tmp =
      t12 * ((((((t232 - t121) - t133) - t206) + t608) + t610) + t3 * t608);
  sfvals[17] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp = t11 * (((t1534_tmp + t156) + t378) + t613) +
                 (((((t1496_tmp_tmp + t82) + t176) - t179) - t228) + t21 * t87);
  e_sfvals_tmp = t1570 * xi;
  sfvals[18] = d_sfvals_tmp + e_sfvals_tmp;
  f_sfvals_tmp = t1551 * xi;
  sfvals[19] = t1655 - f_sfvals_tmp;
  sfvals[20] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[21] = d_sfvals_tmp - e_sfvals_tmp;
  sfvals[22] = t1655 + f_sfvals_tmp;
  sfvals_tmp =
      t1721 +
      (((((((((t132 + t192) + t2 * t77) + t328) + t442) + t465) - t464) -
         t466) -
        t513) -
       t515);
  b_sfvals_tmp = t1738 * xi;
  c_sfvals_tmp = t12 * ((((((t121 + t206) + t232) - t133) + t608) + t785) +
                        t3 * (t784_tmp * -3.0));
  sfvals[23] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  d_sfvals_tmp =
      -t11 * (((t1534_tmp - t156) - t378) + t788) +
      ((((((-zeta + t82) - t2) + t176) + t228) - t179) + t116 * -8.0);
  e_sfvals_tmp = t1594 * xi;
  sfvals[24] = d_sfvals_tmp - e_sfvals_tmp;
  f_sfvals_tmp = t1559 * xi;
  sfvals[25] = t1647 - f_sfvals_tmp;
  sfvals[26] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[27] = d_sfvals_tmp + e_sfvals_tmp;
  sfvals[28] = t1647 + f_sfvals_tmp;
  sfvals_tmp =
      (-t13 * t1599 +
       (((((((((t491 - t594) + t927) + t1047) + t1050) - t928) + t1090) -
          t1051) -
         t1085) -
        t1433)) +
      t11 * (((((((((-t400 + t594) + t695) + t964) + t1200) - t1045) - t1126) +
               t1317) +
              t1414) -
             t1395);
  b_sfvals_tmp = t1798 * xi;
  c_sfvals_tmp =
      t12 *
      (((((((t324 + t428) + t566) + t1125) + t1266) + t1374) - t1314) - t1393);
  sfvals[29] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[30] =
      ((((((((((((((-t123 + t280) + t449) + t492) - t424) - t453) + t676) +
              t868) +
             t916) -
            t917) -
           t874) -
          t1082) -
         t1095) +
        t1236) +
       t13 * (((t324 + t1180) + t1266) + t1293)) +
      t11 * (((((((((t246 + t424) - t674) - t694) + t949) - t845) + t1123) +
               t1191) +
              t1283) +
             t1306);
  sfvals[31] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      (-t13 * t1486 + (((((-t424 + t676) + t868) + t921) - t874) -
                       t442 * 1.4814814814814814)) +
      t11 *
          ((((((t21 * 1.1851851851851851 - zeta * 4.5925925925925926) + t949) -
              t845) +
             t1156_tmp * 10.666666666666666) +
            t1306) +
           2.6666666666666665);
  b_sfvals_tmp = t12 * ((((-t422 + t119 * 8.88888888888889) + t1268) + t1280) +
                        1.3333333333333333);
  c_sfvals_tmp = t1682 * xi;
  sfvals[32] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      (t13 * t1601 +
       (((((((((-t491 - t594) + t928) + t1047) + t1050) - t927) + t1085) +
          t1090) -
         t1051) -
        t1433)) +
      t11 * (((((((((t400 + t594) - t695) + t964) + t1126) + t1200) - t1045) -
               t1317) +
              t1414) -
             t1395);
  e_sfvals_tmp = t1797 * xi;
  f_sfvals_tmp =
      t12 *
      (((((((-t324 + t428) - t566) + t1125) - t1314) + t1393) + t443 * -t508) +
       t823_tmp * 5.333333333333333);
  sfvals[33] = (d_sfvals_tmp - e_sfvals_tmp) + f_sfvals_tmp;
  sfvals[34] =
      ((((((((((((((t123 - t280) + t449) - t492) - t424) - t453) + t676) +
              t868) -
             t916) +
            t917) -
           t874) +
          t1082) -
         t1095) +
        t1236) -
       t13 * (((t324 + t1187) + t1266) - t1180)) +
      t11 * (((((((((-t246 + t424) + t694) - t674) + t949) - t845) + t1191) -
               t1123) +
              t1306) -
             t1283);
  sfvals[35] = (d_sfvals_tmp + e_sfvals_tmp) - f_sfvals_tmp;
  sfvals[36] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[37] =
      (((((((((t21 * 8.5555555555555554 - t22 * 6.4444444444444446) +
              t23 * 1.7777777777777777) +
             t115 * 10.888888888888889) +
            t154) -
           t442 * 5.7777777777777777) -
          zeta * 4.8888888888888893) +
         t5 * t9) +
        t13 * ((t3 * (t784_tmp * t107) - t784_tmp * 20.0) + 4.0)) -
       t11 *
           ((((((t8 * -25.777777777777779 + t21 * 5.7777777777777777) - t537) +
               t1143) -
              zeta * 10.888888888888889) +
             t1156_tmp * 20.0) +
            5.0)) +
      1.0;
  sfvals_tmp =
      (((((((t1698_tmp + t228) - t132) + t117 * -3.0) + t116 * -5.0) - t292) +
        t722) +
       t983) +
      t1717;
  b_sfvals_tmp = t12 * t1585;
  c_sfvals_tmp = t1572 * xi;
  sfvals[38] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[39] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[40] = ((((t29 + t335) + t21 * t91) - t353) + t781) - t11 * t1515;
  sfvals_tmp =
      (((((((t1691_tmp + t116) - t132) + t328) + t8 * -t2) - t292) + t513) +
       t779) +
      t1710;
  b_sfvals_tmp = t1619 * xi;
  c_sfvals_tmp =
      t12 * ((((((-t15 - t41) - t105) + t232) + t608) + t797) + t799);
  sfvals[41] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      (((((((t1698_tmp + t117) + t220) - t132) + t21 * -t2) - t292) + t513) +
       t779) +
      t1716;
  e_sfvals_tmp = t1611 * xi;
  f_sfvals_tmp = t12 * ((((((t41 - t15) + t105) + t232) + t608) + t995) + t999);
  sfvals[42] = (d_sfvals_tmp - e_sfvals_tmp) - f_sfvals_tmp;
  g_sfvals_tmp = t1516 * xi;
  sfvals[43] = t1528 + g_sfvals_tmp;
  h_sfvals_tmp =
      (((((((t1691_tmp + t2 * t71) + t17 * t114) - t132) - t228) - t292) +
        t722) +
       t983) -
      t1721;
  i_sfvals_tmp = t12 * t1558;
  j_sfvals_tmp = t1535 * xi;
  sfvals[44] = (h_sfvals_tmp - i_sfvals_tmp) - j_sfvals_tmp;
  sfvals[45] = (h_sfvals_tmp + i_sfvals_tmp) + j_sfvals_tmp;
  sfvals[46] =
      ((((-t29 - t116 * 16.0) + t335) + t353) + t781) - t11 * t1536_tmp;
  sfvals[47] = (d_sfvals_tmp + e_sfvals_tmp) + f_sfvals_tmp;
  sfvals[48] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[49] = t1528 - g_sfvals_tmp;
  sfvals_tmp =
      -t1710 +
      (((((((((-t88 + t256) - t177) - t182) + t8 * t88) + t351) + t475) +
         t116 * -9.0) +
        t780) -
       t722);
  b_sfvals_tmp = t12 * t1618;
  c_sfvals_tmp = t1627 * xi;
  sfvals[50] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[51] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp =
      -t1716 +
      (((((((((t88 + t256) - t177) - t182) + t21 * t88) + t475) + t117 * -9.0) +
         t526) +
        t780) -
       t722);
  b_sfvals_tmp = t12 * t1617;
  c_sfvals_tmp = t1626 * xi;
  sfvals[52] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[53] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[54] =
      (((((t22 * -72.0 + t23 * 32.0) - t53) + t190) + t341) - t442 * 32.0) +
      t11 * t1519_tmp;
  t1829 = (((((((((t566 + t769) - t701) + t1125) + t1132) + t1201) - t1050) -
             t1412) +
            t1446) +
           t1448) *
          xi;
  sdvals_tmp =
      t11 *
      (((((((-t3 - t123) - t257) + t3 * t609) + t951) + t998) + t1169) + t1294);
  sdvals[0] = ((t1604 + t1810) + t1814) + sdvals_tmp;
  t1496_tmp_tmp = (-t13 * (((t269 + t742) + t1140) + t1546_tmp) +
                   (((((t434 + t664) + t697) - t657) - t724) - t1093)) +
                  t11 * (((((((t1759_tmp + t718) + t760) + t951) + t1234) +
                           t443 * -0.44444444444444442) +
                          t1294) +
                         0.88888888888888884);
  b_sdvals_tmp =
      xi *
      (((((((((t144 + t323) + t361) + t395) - t254) - t277) + t497) + t651) -
        t747) +
       0.27777777777777779);
  t1534_tmp = t12 * ((((((-t143 + t512) + t611) + t975) + t1167) + t1275) -
                     0.44444444444444442);
  sdvals[1] = (t1496_tmp_tmp + b_sdvals_tmp) + t1534_tmp;
  t1691_tmp =
      (t13 * ((t1591_tmp + t1149) + t118 * t1360) +
       (((((((((t407 - t457) - t488) + t778) + t844) + t900) - t880) + t1053) -
         t1094) -
        0.10802469135802469)) +
      -t11 * ((((((((-t402 + t597) + t944) - t1159) + t1312) + t1339) + t1425) +
               t3 * t1234) -
              0.19135802469135801);
  t1698_tmp =
      xi *
      (((((((((-t241 + t487) - t423) + t638) + t650) - t535) + t986) + t1152) +
        t1357) +
       0.064814814814814811);
  t1519_tmp =
      t12 * ((((((t3 * t611 - t534) + t1001) + t1301) + t1311) + t1336) +
             0.14814814814814814);
  sdvals[2] = (t1691_tmp + t1698_tmp) - t1519_tmp;
  sdvals[3] =
      ((t1604 + t1814) +
       ((((((((((t1611_tmp + t454) + t538) - t434) + t657) + t745) - t624) -
           t664) -
          t901) -
         t925) -
        t945)) -
      sdvals_tmp;
  sdvals[4] = (t1496_tmp_tmp - b_sdvals_tmp) - t1534_tmp;
  sdvals[5] = (t1691_tmp - t1698_tmp) + t1519_tmp;
  sdvals_tmp =
      t11 *
      (((((((t3 + t123) - t257) + t3 * t784) + t951) + t998) + t1263) + t1294);
  sdvals[6] =
      ((t1603 +
        (((((((((((t1550_tmp - t311) - t434) - t454) + t657) - t538) + t745) -
             t624) -
            t664) +
           t901) -
          t925) -
         t945)) +
       t1834) -
      sdvals_tmp;
  t1496_tmp_tmp =
      (-t13 * (((-t269 + t742) + t989) + t1546_tmp) +
       (((((-t434 + t657) + t697) + t724) - t664) - t1093)) +
      -t11 * (((((((t1759_tmp - t718) - t760) + t951) + t119 * t322) - t1234) +
               t1294) +
              0.88888888888888884);
  b_sdvals_tmp =
      xi *
      (((((((((t119 + t254) - t144) + t277) + t323) + t395) + t497) - t651) -
        t747) -
       0.27777777777777779);
  t1534_tmp = t12 * ((((((t143 + t512) + t786) + t975) + t1258) + t1275) +
                     0.44444444444444442);
  sdvals[7] = (t1496_tmp_tmp - b_sdvals_tmp) - t1534_tmp;
  t1691_tmp =
      (-t13 * ((t1591_tmp + t118 * t1275) - t991_tmp * 0.22222222222222221) +
       (((((((((t457 + t488) - t407) + t778) + t844) - t880) + t1053) - t900) -
         t1094) -
        0.10802469135802469)) +
      t11 * ((((((((-t402 - t597) + t944) + t1159) + t1312) + t1339) - t1425) +
              t991_tmp * -2.2160493827160495) +
             0.19135802469135801);
  t1698_tmp =
      xi *
      (((((((((t241 + t535) - t423) + t638) + t650) - t487) + t1137) + t1152) +
        t1357) +
       0.064814814814814811);
  t1519_tmp =
      t12 * ((((((t534 + t3 * t786) + t1001) + t1311) + t1336) + t1371) +
             0.14814814814814814);
  sdvals[8] = (t1691_tmp - t1698_tmp) + t1519_tmp;
  sdvals[9] = ((t1603 + t1811) + t1834) + sdvals_tmp;
  sdvals[10] = (t1496_tmp_tmp + b_sdvals_tmp) + t1534_tmp;
  sdvals[11] = (t1691_tmp + t1698_tmp) - t1519_tmp;
  sdvals[12] = 0.0;
  sdvals[13] = 0.0;
  sdvals[14] = ((-t190 + t678) + zeta * 14.666666666666666) - 1.0;
  sdvals_tmp =
      t11 *
      (((((((-t31 - t242) - t412) + t784_tmp * t104) + t967) + t1160) + t1182) +
       t1329);
  sdvals[15] = ((t1632 + t1776) + t1835) - sdvals_tmp;
  t1496_tmp_tmp =
      (t13 * (((t271 + t938) + t991_tmp * -5.333333333333333) + t1439) +
       (((((t260 + t669) - t670) + t902) - t889) + t1219)) +
      -t11 *
          (((((((t1755_tmp + t715) + t759) - t953) + t1233) + t1272) - t1393) +
           0.22222222222222221);
  b_sdvals_tmp =
      xi * (((((((t243 + t3 * t40) + t413) + t458) + t700) - t649) + t954) -
            0.22222222222222221);
  t1534_tmp = t12 * ((((((-t145 + t714) + t795) + t1130) + t1180) + t1301) -
                     0.88888888888888884);
  sdvals[16] = (t1496_tmp_tmp + b_sdvals_tmp) - t1534_tmp;
  t1691_tmp =
      (-t13 * (((t746 + t118 * t504) + t1267) + t1621_tmp) +
       (((((((((t247 + t635) + t674) - t495) + t905) - t769) - t842) - t1046) +
         t1220) +
        0.098765432098765427)) +
      t11 * ((((((((t536 - t403) + t594) + t3 * t1314) + t1335) + t1374) -
               t1317) +
              t1454) -
             0.098765432098765427);
  t1536_tmp = t482 - t393;
  t1698_tmp =
      xi * ((((((t1536_tmp - t428) + t649) - t643) + t1151) + t120 * t504) +
            0.29629629629629628);
  t1519_tmp = t12 * ((((((-t536 + t800) + t1164) + t1330) + t1394) + t1422) +
                     0.29629629629629628);
  sdvals[17] = (t1691_tmp - t1698_tmp) + t1519_tmp;
  t1591_tmp = t3 + t242;
  sdvals[18] =
      -t12 * (((t321 + t1146) + t1290) + t1293) -
      xi * (((((((((t1591_tmp + t421) + t643) - t480) - t667) + t961) + t1123) +
              t1177) +
             t1283) +
            t1319);
  sdvals[19] =
      ((((((((((-t70 - t121) + t451) + t462) + t463) - t417) - t496) + t725) +
         t1091) -
        t13 * (((t145 + t540) + t991) + t1291)) -
       t11 * ((((((((t142 + t406) - t257) + t510) + t754) + t966) + t1154) +
               t1190) +
              1.3333333333333333)) +
      0.16666666666666666;
  sdvals[20] =
      ((((((((((t313 - t397) + t514) - t430) + t627) + t655) - t637) - t675) +
         t1092) +
        t13 * (((t536 + t989) + t1000) + t1295)) +
       t11 * ((((((((t243 + t424) + t532) + t1178) + t1285) + t1286) + t1309) +
               t1320) -
              0.18518518518518517)) +
      0.18518518518518517;
  sdvals[21] =
      ((t1632 +
        ((((((((((t241 + t420) - t448) + t659) - t481) - t634) - t666) + t898) -
           t744) -
          t929) +
         t1098)) +
       t1835) +
      sdvals_tmp;
  sdvals[22] = (t1496_tmp_tmp - b_sdvals_tmp) + t1534_tmp;
  sdvals[23] = (t1691_tmp + t1698_tmp) - t1519_tmp;
  sdvals_tmp = t104 + eta * 10.666666666666666;
  t1496_tmp_tmp =
      t11 * ((((((sdvals_tmp + t415) + t953) + t996) + t1268) - t1182) + t1358);
  sdvals[24] =
      ((t1634 +
        (((((((((((t241 - t260) + t448) + t537) + t670) - t481) - t539) -
             t625) -
            t669) +
           t898) +
          t926) +
         t937)) +
       t1820) -
      t1496_tmp_tmp;
  b_sdvals_tmp =
      (t13 * (((t438 + t952) + t991_tmp * -2.6666666666666665) + t1439) +
       (((((-t420 + t666) - t659) - t696) + t899) + t1089)) +
      -t11 * (((((((-t433 + t715) + t759) + t967) + t1233) + t1329) - t1274) -
              0.22222222222222221);
  t1534_tmp =
      xi *
      (((((((t1551_tmp + t119 * -2.0) - t413) - t449) + t649) + t695) - t946) +
       0.22222222222222221);
  t1691_tmp = t12 * ((((((-t270 + t795) - t712) + t963) + t1180) + t1394) -
                     3.5555555555555554);
  sdvals[25] = (b_sdvals_tmp + t1534_tmp) + t1691_tmp;
  t1698_tmp =
      (-t13 * ((t1630_tmp + t118 * t508) + t1621_tmp) +
       t11 * (((((((t406 + t775) + t1332) + t1335) +
                 t1159_tmp * -0.88888888888888884) +
                t1424) +
               t1454) -
              0.76543209876543206)) +
      (((((((((t491 - t399) + t632) + t674) - t769) - t838) - t898) + t1090) -
        t1046) +
       0.098765432098765427);
  t1519_tmp =
      xi * ((((((((t431 + t482) - t393) + t640) - t653) + t987) + t1136) +
             t120 * t322) -
            0.07407407407407407);
  t1836_tmp = t12 * ((((((t800 - t743) + t1175) + t1316) - t1314) + t1394) +
                     0.59259259259259256);
  sdvals[26] = (t1698_tmp + t1519_tmp) - t1836_tmp;
  t1833_tmp =
      t11 *
      ((((-(zeta * 5.333333333333333) + t754) + t1154) - t1159_tmp * 8.0) +
       2.0);
  sdvals[27] =
      ((t1497 +
        (((((((t277 + t417) + t533) + t9 * t208) - t462) - t463) - t724) -
         0.16666666666666666)) +
       t1724) +
      t1833_tmp;
  b_sfvals_tmp = ((-(t2 * 0.37037037037037035) + t114 * 0.7407407407407407) +
                  -t13 * (t752 + t1291)) +
                 -t11 * (((t406 + t510) + t966) + t1151);
  t1591_tmp = xi * ((t1591_tmp - t480) + t744);
  t1834_tmp = t12 * ((t711 + t947) + t1290);
  sdvals[28] = (b_sfvals_tmp + t1591_tmp) + t1834_tmp;
  sfvals_tmp = (t13 * (t3 * t752 + t1295) +
                (((((-t430 - t8 * 0.18518518518518517) + t655) - t675) + t921) +
                 0.18518518518518517)) +
               t11 * ((((zeta * 3.4074074074074074 + t998) + t1286) + t1320) -
                      0.85185185185185186);
  c_sfvals_tmp = t12 * (((t3 * t947 + t1307) + t3 * t996) + 1.7777777777777777);
  t1599_tmp =
      xi * (((((t257 + t21 * 0.66666666666666663) + t8 * 0.44444444444444442) +
              t3 * t205) +
             t988) -
            0.61111111111111116);
  sdvals[29] = (sfvals_tmp - c_sfvals_tmp) - t1599_tmp;
  sdvals_tmp =
      t11 *
      ((((((sdvals_tmp - t415) + t996) - t953) + t324 * t443) + t1272) - t1182);
  sdvals[30] = ((t1635 + t1786) + t1821) + sdvals_tmp;
  t1737_tmp =
      (t13 * (((-t438 + t952) + t118 * t321) + t1439) +
       (((((t420 + t659) - t666) - t696) - t899) + t1089)) +
      -t11 * (((((((t433 + t715) + t759) - t967) + t1233) - t1274) - t1329) +
              0.22222222222222221);
  t1550_tmp =
      xi * ((((((((t209 + eta * t31) + t243) + t413) + t449) + t695) - t649) -
             t946) -
            0.22222222222222221);
  t1551_tmp = t12 * ((((((t270 - t712) + t963) + t991) - t1180) + t1394) +
                     3.5555555555555554);
  sdvals[31] = (t1737_tmp + t1550_tmp) + t1551_tmp;
  f_sfvals_tmp =
      (t13 * ((t1630_tmp + t991_tmp * -3.5555555555555554) + t1398) +
       -t11 * (((((((t406 - t775) + t1265) + t1332) - t1335) + t1424) -
                t991_tmp * 1.5308641975308641) +
               0.76543209876543206)) +
      (((((((((t399 + t674) - t491) - t632) + t898) - t769) - t838) + t1090) -
        t1046) +
       0.098765432098765427);
  e_sfvals_tmp =
      xi * (((((((t1536_tmp - t431) + t653) - t640) + t985) + t987) + t1254) +
            0.07407407407407407);
  d_sfvals_tmp = t12 * ((((((t743 + t1000) + t1175) + t1316) - t1314) + t1437) +
                        0.59259259259259256);
  sdvals[32] = (f_sfvals_tmp - e_sfvals_tmp) - d_sfvals_tmp;
  h_sfvals_tmp =
      t11 *
      (((((((t31 + t242) - t412) + t967) + t996) + t1160) - t1182) + t1329);
  sdvals[33] =
      ((t1633 +
        ((((((((((-t241 + t420) + t481) - t448) + t634) + t659) + t744) -
            t666) -
           t898) -
          t929) +
         t1098)) +
       t1831) +
      h_sfvals_tmp;
  g_sfvals_tmp =
      (t13 * (((-t271 + t938) + t118 * t324) + t1439) +
       (((((-t260 + t670) - t669) - t889) - t902) + t1219)) +
      t11 *
          (((((((t1755_tmp - t715) - t759) - t953) + t1272) - t1233) + t1393) +
           0.22222222222222221);
  i_sfvals_tmp =
      xi * (((((((t243 + t119 * -8.0) - t413) - t458) + t649) + t700) + t954) +
            0.22222222222222221);
  t1611_tmp = t12 * ((((((t145 + t714) + t991) + t1130) - t1180) + t1301) +
                     0.88888888888888884);
  sdvals[34] = (g_sfvals_tmp - i_sfvals_tmp) + t1611_tmp;
  k_sfvals_tmp = t536 + t1000;
  j_sfvals_tmp =
      (t13 * (((t746 + t1267) + t991_tmp * -0.88888888888888884) + t1398) +
       (((((((((-t247 + t495) + t674) - t635) - t769) - t842) - t905) - t1046) +
         t1220) +
        0.098765432098765427)) +
      t11 * ((((((((t403 + t594) - t536) + t1317) + t1335) + t1374) +
               t823_tmp * -1.1851851851851851) +
              t1454) -
             0.098765432098765427);
  l_sfvals_tmp =
      xi *
      (((((((t428 + t443 * 2.6666666666666665) + t482) - t393) + t643) - t649) +
        t1355) -
       0.29629629629629628);
  t1536_tmp = t12 * (((((k_sfvals_tmp + t1164) + t1330) + t1422) + t1437) +
                     0.29629629629629628);
  sdvals[35] = (j_sfvals_tmp - l_sfvals_tmp) - t1536_tmp;
  sdvals[36] =
      t12 * (((t321 + t1187) + t1241) + t1290) -
      xi * ((((((((((-t3 - t242) + t421) + t480) + t643) - t667) + t961) +
               t1177) -
              t1123) +
             t1319) -
            t1283);
  sdvals[37] =
      ((((((((((t70 - t121) + t417) + t451) - t462) - t463) - t496) - t725) +
         t1091) -
        t11 * ((((((((-t142 + t257) + t406) + t510) - t754) + t966) + t1190) -
                t1154) -
               1.3333333333333333)) -
       t13 * (((-t145 + t540) + t1291) + t991_tmp * 8.0)) -
      0.16666666666666666;
  sdvals[38] =
      ((((((((((t397 - t313) - t514) - t430) - t627) + t655) - t637) - t675) +
         t1092) -
        t13 * ((k_sfvals_tmp + t1140) + t118 * t1183)) -
       t11 * ((((((((t243 + t532) - t424) - t1178) + t1285) - t1286) + t1309) -
               t991_tmp * 1.3703703703703705) +
              0.18518518518518517)) +
      0.18518518518518517;
  sdvals[39] = ((t1633 + t1780) + t1831) - h_sfvals_tmp;
  sdvals[40] = (g_sfvals_tmp + i_sfvals_tmp) - t1611_tmp;
  sdvals[41] = (j_sfvals_tmp + l_sfvals_tmp) + t1536_tmp;
  sdvals[42] =
      ((t1635 +
        (((((((((((t241 + t260) - t448) + t669) - t481) - t537) - t539) +
             t748) -
            t625) -
           t670) +
          t898) -
         t926)) +
       t1821) -
      sdvals_tmp;
  sdvals[43] = (t1737_tmp - t1550_tmp) - t1551_tmp;
  sdvals[44] = (f_sfvals_tmp + e_sfvals_tmp) + d_sfvals_tmp;
  sdvals[45] = ((t1497 + ((sfvals_tmp_tmp + t934_tmp * -0.66666666666666663) +
                          0.16666666666666666)) +
                t1724) -
               t1833_tmp;
  sdvals[46] = (b_sfvals_tmp - t1591_tmp) - t1834_tmp;
  sdvals[47] = (sfvals_tmp + c_sfvals_tmp) + t1599_tmp;
  sdvals[48] = ((t1634 + t1790) + t1820) + t1496_tmp_tmp;
  sdvals[49] = (b_sdvals_tmp - t1534_tmp) - t1691_tmp;
  sdvals[50] = (t1698_tmp - t1519_tmp) + t1836_tmp;
  sdvals_tmp = t11 * t1585;
  sdvals[51] =
      (-t1679 +
       (((((((((((t76 + t152) + t169) + t192) - t123) - t133) + t274) - t209) +
           t337) +
          t367) +
         t538) -
        t726)) -
      sdvals_tmp;
  t1496_tmp_tmp = (((((t76 - t2) + t115) + t169) + t220) - t133) - t1550;
  b_sdvals_tmp =
      t12 * (((((t34 + t236) - t143) + t794) + t796) - 0.33333333333333331);
  t1534_tmp = xi * ((((((t1679_tmp + t146) - t8) - t133) + t361) + t468) +
                    1.3333333333333333);
  sdvals[52] = (t1496_tmp_tmp - b_sdvals_tmp) - t1534_tmp;
  t1691_tmp =
      t1669 + (((((((((t29 + t221) - t121) + t274) - t259) - t273) + t473) +
                 t114 * -9.0) -
                t474) +
               0.5);
  t1698_tmp = t12 * (((((t608 + t615) + t618) - t534) + t3 * t796) +
                     0.33333333333333331);
  t1536_tmp = -t16 + eta * t6;
  t1519_tmp =
      xi * (((((((t1536_tmp + t173) - t121) + t315) - t540) + t784) + t986) +
            0.33333333333333331);
  sdvals[53] = (t1691_tmp + t1698_tmp) - t1519_tmp;
  sdvals[54] = t1522 + t1570;
  t1591_tmp = t1431 + t11 * (((((t20 + t43) + t53) + t111) + t376) + 6.0);
  t1836_tmp = xi * (((((t18 + t42) + t91) + t106) + t180) + 3.0);
  sdvals[55] = t1591_tmp + t1836_tmp;
  t1833_tmp = ((((((eta + t56) + t187) - t90) - t189) + t354) - 1.0) +
              -t11 * (((-t40 + t236) + t805) + t806);
  b_sfvals_tmp =
      xi * ((((((t95 - t55) + t156) + t184) + t118 * -3.0) + t788) + 1.0);
  sdvals[56] = t1833_tmp + b_sfvals_tmp;
  t1834_tmp = ((-t5 - t33) - t312) - t729;
  sdvals[57] = t1834_tmp + t1473;
  sdvals[58] = t1473 - t1470;
  sfvals_tmp =
      xi * (((((-t57 + t186) + t242) + t366) + t494) + 1.3333333333333333);
  sdvals[59] = t1569 - sfvals_tmp;
  sdvals[60] = (-t1679 + t1737) + sdvals_tmp;
  sdvals[61] = (t1496_tmp_tmp + b_sdvals_tmp) + t1534_tmp;
  sdvals[62] = (t1691_tmp - t1698_tmp) + t1519_tmp;
  sdvals[63] =
      t1522 + ((((((-t4 - t32) + t155) + t370) + t517) + t524) + t1466);
  sdvals[64] = t1591_tmp - t1836_tmp;
  sdvals[65] = t1833_tmp - b_sfvals_tmp;
  sdvals[66] = t1551;
  sdvals[67] = t1470 + t1473;
  sdvals[68] = t1569 + sfvals_tmp;
  sdvals_tmp = t11 * t1558;
  sdvals[69] = (t1706 + t1738) + sdvals_tmp;
  t1496_tmp_tmp = (((((t78 - t2) + t133) + t166) + t220) + t2 * -eta) + t1576;
  b_sdvals_tmp =
      t12 * (((((t34 + t143) + t236) + t990) + t994) + 0.33333333333333331);
  t1534_tmp =
      xi * ((((((((t8 + t40) + t89) + t104) + t119) + t133) - t146) - t468) -
            1.3333333333333333);
  sdvals[70] = (t1496_tmp_tmp + b_sdvals_tmp) + t1534_tmp;
  t1691_tmp =
      t1680 +
      (((((((((-t29 + t121) + t221) + t2 * t54) - t259) - t273) - t274) +
         t473) -
        t474) +
       0.5);
  t1698_tmp = t12 * (((((t534 + t608) + t615) + t793) + t3 * t994) +
                     0.33333333333333331);
  t1519_tmp =
      xi * (((((((t1536_tmp + t121) + t173) - t315) + t540) + t784) + t1137) +
            0.33333333333333331);
  sdvals[71] = (t1691_tmp - t1698_tmp) + t1519_tmp;
  sdvals[72] = t1536 + (((((t1570_tmp + t155) + t348) + t370) + t517) + t1466);
  t1591_tmp = t1466 + t11 * (((((t43 - t20) + t111) - t53) + t376) - 6.0);
  t1836_tmp = xi * (((((t42 - t18) + t91) + t106) - t180) - 3.0);
  sdvals[73] = t1591_tmp - t1836_tmp;
  t1833_tmp = -t11 * (((t40 + t118 * -6.0) + t805) + t806) +
              ((((((-eta + t56) + t90) + t187) - t189) - t354) - 1.0);
  b_sfvals_tmp =
      xi * ((((((-t55 + t156) + t184) - t95) + t3 * t18) + t788) + 1.0);
  sdvals[74] = t1833_tmp - b_sfvals_tmp;
  sdvals[75] = t1834_tmp + t1472;
  sdvals[76] = t1472 - t1470;
  t1834_tmp =
      xi * (((((t57 + t242) - t186) + t366) + t494) - 1.3333333333333333);
  sdvals[77] = t1556 - t1834_tmp;
  sdvals[78] =
      (t1706 +
       (((((((((((t76 + t123) + t152) + t169) + t209) - t133) - t192) + t337) +
           t367) -
          t274) +
         t726) -
        t538)) -
      sdvals_tmp;
  sdvals[79] = (t1496_tmp_tmp - b_sdvals_tmp) - t1534_tmp;
  sdvals[80] = (t1691_tmp + t1698_tmp) - t1519_tmp;
  sdvals[81] = t1536 + t1594;
  sdvals[82] = t1591_tmp + t1836_tmp;
  sdvals[83] = t1833_tmp + b_sfvals_tmp;
  sdvals[84] = t1559;
  sdvals[85] = t1470 + t1472;
  sdvals[86] = t1556 + t1834_tmp;
  t1536_tmp = t107 + eta * 21.333333333333332;
  sdvals_tmp = t11 * ((((((t1536_tmp + t422) + t1007) + t1116) +
                        t1159_tmp * -10.666666666666666) +
                       t1367) -
                      t1325);
  sdvals[87] =
      ((t1650 +
        ((((((((((t395 + t428) + t673) - t633) - t694) - t750) - t836) - t865) +
           t1080) +
          t1086) +
         t1107)) +
       t1830) -
      sdvals_tmp;
  t1496_tmp_tmp =
      (-t13 * (((t441 + t1127) - t1181) - t1589_tmp) +
       (((((t428 + t673) + t886) - t865) - t915) - t1217)) +
      t11 * (((((((t590 + t712) + t979) - t1116) + t1229) + t1296) - t1427) -
             3.5555555555555554);
  b_sdvals_tmp =
      xi * (((((((t3 * t43 + t566) + t589) + t642) - t701) - t863) + t1128) -
            1.7777777777777777);
  t1534_tmp = t12 * ((((((-t272 + t807) - t716) + t1124) + t3 * t511) + t1418) -
                     7.1111111111111107);
  sdvals[88] = (t1496_tmp_tmp - b_sdvals_tmp) + t1534_tmp;
  t1691_tmp =
      (t13 * ((t1638_tmp + t118 * t713) + b_t1638_tmp * -28.444444444444443) +
       t11 * (((((((t569 - t773) - t1314) + t1412) + t443 * t713) + t1444) +
               t991_tmp * -0.79012345679012341) +
              0.39506172839506171)) +
      (((((((((t403 + t776) - t641) + t841) - t701) + t913) - t878) + t1055) -
        t1218) -
       0.39506172839506171);
  t1698_tmp =
      xi * (((((((t663 + t699) - t568) - t599) + t840) + t1169) + t1302) +
            1.1851851851851851);
  t1519_tmp =
      t12 * ((((((t3 * t807 - t749) + t1187) + t1411) + t1418) + t1441) +
             1.1851851851851851);
  sdvals[89] = (t1691_tmp + t1698_tmp) - t1519_tmp;
  sdvals[90] =
      t12 * (((t511 + t1340) + t1389) + t1650_tmp * -42.666666666666664) +
      xi * (((((((((t249 + t430) - t703) + t958) - t868) + t1133) - t1034) +
              t1309) +
             t1321) +
            t1333);
  sdvals[91] =
      ((((((((((t72 + t244) + t429) - t459) + t665) - t730) - t704) - t864) +
         t1085) +
        t13 * (((t272 + t969) + t1006) + t1415)) +
       t11 * (((((((t509 - t589) + t968) + t973) - t761) + t1174) + t1346) +
              6.666666666666667)) -
      1.3333333333333333;
  t1591_tmp = t749 + t3 * t1006;
  sdvals[92] =
      ((((((((((t404 + t601) - t702) + t729) - t634) + t879) - t843) - t869) +
         t1086) -
        t11 * (((((((t568 + t592) + t1280) + t1310) + t1323) + t1334) + t1407) -
               0.7407407407407407)) -
       t13 * ((t1591_tmp + t118 * t511) + t1493_tmp)) -
      0.7407407407407407;
  sdvals[93] = ((t1650 + t1798) + t1830) + sdvals_tmp;
  sdvals[94] = (t1496_tmp_tmp + b_sdvals_tmp) - t1534_tmp;
  sdvals[95] = (t1691_tmp - t1698_tmp) + t1519_tmp;
  sdvals_tmp =
      t11 *
      ((((-(zeta * 10.666666666666666) + t973) + t1174) - t1159_tmp * 16.0) +
       4.0);
  sdvals[96] =
      ((t1507 +
        ((((((-t429 - t455) - t665) + t864) + t934_tmp * -5.333333333333333) +
          t1084) +
         1.3333333333333333)) +
       t1730) -
      sdvals_tmp;
  t1496_tmp_tmp = ((t2 * 1.4814814814814814 - t114 * 2.9629629629629628) +
                   t13 * (t971 + t1415)) +
                  t11 * (((t509 + t968) - t761) + t443 * 42.666666666666664);
  b_sdvals_tmp =
      t12 * ((t3 * 17.777777777777779 + t118 * 4.4444444444444446) + t1389);
  t1534_tmp = xi * ((t249 - t703) + t120 * 21.333333333333332);
  sdvals[97] = (t1496_tmp_tmp - b_sdvals_tmp) - t1534_tmp;
  t1691_tmp =
      (-t13 * (t3 * t971 + t1493_tmp) +
       (((((t601 + t8 * 0.7407407407407407) + t879) - t869) -
         t115 * 2.9629629629629628) -
        0.7407407407407407)) +
      -t11 * ((((-t590 + t1280) + t1323) + t443 * t511) + 4.5925925925925926);
  t1698_tmp =
      xi * ((((zeta * 16.888888888888889 - t470) + t8 * 8.88888888888889) +
             t120 * t324) -
            6.2222222222222223);
  t1519_tmp =
      t12 * (((t118 * t509 + t3 * t711) + t3 * t1007) + 3.5555555555555554);
  sdvals[98] = (t1691_tmp + t1698_tmp) + t1519_tmp;
  t1836_tmp =
      t11 *
      ((((((t1536_tmp - t422) + t1007) + t3 * t1182) - t1116) + t1296) - t1325);
  sdvals[99] =
      ((t1649 +
        ((((((((((t395 - t428) + t633) - t673) + t865) - t694) - t750) + t956) -
           t836) +
          t1080) -
         t1086)) +
       t1829) -
      t1836_tmp;
  t1833_tmp =
      (-t13 * (((-t441 + t1127) + t1181) - t1589_tmp) +
       (((((-t428 - t673) + t865) + t886) + t915) - t1217)) +
      t11 * (((((((t712 - t590) + t979) + t1116) + t1229) + t1367) - t1427) +
             3.5555555555555554);
  b_sfvals_tmp =
      xi *
      (((((((t119 * -16.0 + t566) - t589) - t642) + t863) - t701) + t1128) +
       1.7777777777777777);
  t1834_tmp = t12 * ((((((t272 - t716) + t1006) + t1124) + t1385) + t1418) +
                     7.1111111111111107);
  sdvals[100] = (t1833_tmp + b_sfvals_tmp) - t1834_tmp;
  sfvals_tmp =
      (-t13 *
           ((t1638_tmp + t3 * (t118 * t1426)) - t991_tmp * 14.222222222222221) +
       -t11 * (((((((t569 + t773) + t1314) + t1412) + t1444) + t3 * t1229) -
                t1159_tmp * 14.222222222222221) -
               0.39506172839506171)) +
      (((((((((-t403 + t641) + t701) + t776) + t841) - t878) + t1055) - t913) -
        t1218) -
       0.39506172839506171);
  c_sfvals_tmp =
      xi * (((((((t568 + t663) - t599) + t840) - t699) + t1263) + t1302) +
            1.1851851851851851);
  t1599_tmp = t12 * (((((t1591_tmp + t1187) + t1411) + t1441) + t1445) +
                     1.1851851851851851);
  sdvals[101] = (sfvals_tmp - c_sfvals_tmp) + t1599_tmp;
  sdvals[102] =
      xi * (((((((((-t249 + t430) + t703) + t958) - t868) - t1133) - t1034) +
              t1321) +
             t1333) -
            t1309) -
      t12 * (((t511 - t1340) + t1343) + t1389);
  sdvals[103] =
      ((((((((((t152 + t244) - t429) - t459) + t730) - t665) + t864) - t704) +
         t1085) +
        t11 * (((((((t509 + t589) + t968) - t761) - t973) - t1174) + t1346) -
               6.666666666666667)) +
       t13 * (((-t272 + t969) + t1415) + t991_tmp * 16.0)) +
      1.3333333333333333;
  sdvals[104] =
      ((((((((((-t404 + t601) + t634) + t702) + t879) - t729) - t843) - t869) +
         t1086) +
        t13 * ((t1591_tmp + t3 * (t118 * t1340)) +
               t991_tmp * -21.333333333333332)) +
       t11 * (((((((t568 - t592) + t1310) - t1280) +
                 t991_tmp * -1.4814814814814814) -
                t1334) +
               t1407) +
              0.7407407407407407)) -
      0.7407407407407407;
  sdvals[105] = ((t1649 + t1797) + t1829) + t1836_tmp;
  sdvals[106] = (t1833_tmp - b_sfvals_tmp) + t1834_tmp;
  sdvals[107] = (sfvals_tmp + c_sfvals_tmp) - t1599_tmp;
  sdvals[108] = ((t1507 + t1682) + t1730) + sdvals_tmp;
  sdvals[109] = (t1496_tmp_tmp + b_sdvals_tmp) + t1534_tmp;
  sdvals[110] = (t1691_tmp - t1698_tmp) - t1519_tmp;
  sdvals[111] =
      -xi * ((((((t8 * -51.555555555555557 + t21 * 11.555555555555555) -
                 t119 * 1.3333333333333333) -
                zeta * 21.777777777777779) +
               t1156_tmp * 40.0) +
              t784_tmp * 0.22222222222222221) +
             10.0) +
      t12 * ((t784_tmp * -80.0 + t1650_tmp * 64.0) + 16.0);
  sdvals[112] =
      ((((eta * -10.0 + t2 * 21.777777777777779) + t9 * 16.0) -
        t114 * 11.555555555555555) -
       t13 * (t118 * 40.0 - t1291_tmp * 64.0)) +
      t11 * (((eta * 51.555555555555557 + t209) - t443 * 80.0) - t742);
  sdvals[113] =
      ((((((t8 * 10.888888888888889 - t21 * 19.333333333333332) +
           t22 * 7.1111111111111107) -
          t115 * 11.555555555555555) +
         zeta * 17.111111111111111) +
        t13 * (t991_tmp * 40.0 - b_t1638_tmp * 64.0)) +
       t11 *
           ((((t1136 + t1149) - zeta * 11.555555555555555) + t1159_tmp * 40.0) +
            10.888888888888889)) -
      4.8888888888888893;
  sdvals_tmp = t11 * ((((((-t4 - t15) - t32) + t385) + t817) + t820) + t821);
  sdvals[114] =
      ((((((((t22 - t2) + t114) + t166) - t158) + t520) + t545) + zeta) +
       t1679) +
      sdvals_tmp;
  t1496_tmp_tmp = ((((t1466_tmp + t88) + t171) + t520) + t526) + t1550;
  b_sdvals_tmp = t12 * (((((-zeta_1_inv + t108) + t380) + t817) + t819) - 1.0);
  t1534_tmp = xi * ((((t93 + t162) - t21) + t385) + zeta);
  sdvals[115] = (t1496_tmp_tmp + b_sdvals_tmp) - t1534_tmp;
  t1691_tmp =
      (((((((((t16 - eta) + t79) + t90) + t9 * -3.0) + t450) - t347) + t527) -
        t467) -
       0.5) -
      t1669;
  t1698_tmp =
      t12 * (((((t3 * -zeta_1_inv + t794) + t809) + t813) + t822) + 1.0);
  t1536_tmp = t28 - eta;
  t1519_tmp = xi * (((((t1536_tmp - t16) + t77) - t157) + t797) + 1.0);
  sdvals[116] = (t1691_tmp - t1698_tmp) + t1519_tmp;
  sdvals[117] = (t1572 + t1679) - sdvals_tmp;
  sdvals[118] = (t1496_tmp_tmp - b_sdvals_tmp) + t1534_tmp;
  sdvals[119] = (t1691_tmp + t1698_tmp) - t1519_tmp;
  sdvals_tmp = (t45 + t95) + t109;
  sdvals[120] = -xi * (((sdvals_tmp + t164) + t388) + t815);
  t1496_tmp_tmp = t16 + t181;
  sdvals[121] = (((t1496_tmp_tmp - t87) - t183) + t357) -
                t11 * (((((t47 + t57) + t68) + t112) + t382) + 12.0);
  sdvals[122] = ((((t5 - t97) + t152) + t358) + t359) +
                t11 * (((-t43 + t376) + t816) + t818);
  b_sdvals_tmp = t11 * t1618;
  sdvals[123] = (t1619 + t1670) - b_sdvals_tmp;
  t1534_tmp = ((((t1487_tmp + t166) + t328) + t115 * -3.0) + zeta) + t1539;
  t1691_tmp = xi * ((((((t21 + t40) - zeta) + t89) + t104) + t8 * -3.0) + t365);
  t1698_tmp = t12 * (((((t34 - t67) + t236) + t817) + t819) - 9.0);
  sdvals[124] = (t1534_tmp - t1691_tmp) - t1698_tmp;
  t1519_tmp =
      ((((((((t1641_tmp + t79) - t29) - t9) + t2 * t15) + t273) + t330) -
        t467) -
       0.5) -
      t1653;
  t1591_tmp =
      xi * (((((((eta - t28) - t55) + t154) + t178) + t609) + t3 * t361) + 1.0);
  t1836_tmp = t12 * (((((t543 + t608) + t615) + t813) + t822) + 3.0);
  sdvals[125] = (t1519_tmp + t1591_tmp) + t1836_tmp;
  t1833_tmp = t11 * t1617;
  sdvals[126] =
      ((((((((((t81 - t2) + t114) - t9) + t152) - t80) + t337) + t363) + t367) +
        zeta) +
       t1677) -
      t1833_tmp;
  b_sfvals_tmp = (((t1496_tmp - t22) + t2 * t4) + t328) + t1543;
  t1834_tmp = xi * ((((((t40 + t71) + t89) + t104) - t21) + t232) + zeta);
  sfvals_tmp = t12 * (((((t34 + t67) + t236) + t1013) + t1014) + 9.0);
  sdvals[127] = (b_sfvals_tmp - t1834_tmp) - sfvals_tmp;
  c_sfvals_tmp =
      (((((((((t9 + t16) + t29) - eta) + t79) + t273) + t330) + t114 * -3.0) -
        t467) -
       0.5) +
      t1665;
  t1599_tmp =
      xi * ((((((t1536_tmp - t55) + t154) + t178) + t443) + t609) + 1.0);
  t1737_tmp = t12 * (((((t373 + t608) + t615) + t1011) + t1017) + 3.0);
  sdvals[128] = (c_sfvals_tmp + t1599_tmp) + t1737_tmp;
  sdvals[129] = t1516 + t1519;
  sdvals_tmp *= xi;
  sdvals[130] = t1476 + sdvals_tmp;
  t1550_tmp = xi * ((((-(zeta * 40.0) + t190) - t160) + t802) + 4.0);
  sdvals[131] = t1491 - t1550_tmp;
  t1551_tmp = t11 * (((((t1570_tmp - t15) + t385) + t817) + t1015) + t1016);
  sdvals[132] =
      ((((((((-zeta + t76) - t2) + t114) - t22) - t158) + t344) + t545) +
       t1705) -
      t1551_tmp;
  f_sfvals_tmp = (((((t81 + t88) - t80) + t344) + t526) + zeta) - t1576;
  e_sfvals_tmp = t12 * (((((t108 + t380) + t1013) + t1014) + zeta_1_inv) + 1.0);
  d_sfvals_tmp = xi * ((((t162 - t21) - t93) + t385) + zeta);
  sdvals[133] = (f_sfvals_tmp - e_sfvals_tmp) - d_sfvals_tmp;
  h_sfvals_tmp =
      ((((((((t1641_tmp + t4 * t8) + t79) - t90) + t347) + t450) + t527) -
        t467) -
       0.5) -
      t1680;
  g_sfvals_tmp = t12 * (((((t118 + t794) + t809) + t1011) + t1017) + 1.0);
  i_sfvals_tmp =
      xi * ((((((t16 + t28) - eta) + t157) + t21 * -3.0) + t797) - 1.0);
  sdvals[134] = (h_sfvals_tmp + g_sfvals_tmp) + i_sfvals_tmp;
  sdvals[135] = (t1535 + t1705) + t1551_tmp;
  sdvals[136] = (f_sfvals_tmp + e_sfvals_tmp) + d_sfvals_tmp;
  sdvals[137] = (h_sfvals_tmp - g_sfvals_tmp) - i_sfvals_tmp;
  sdvals[138] =
      -xi * (((((-t45 + t164) - t95) - t109) + t388) + t784_tmp * 24.0);
  sdvals[139] = ((((-t16 + t183) - t87) - t181) + t357) -
                t11 * (((((t47 - t68) + t112) - t57) + t382) - 12.0);
  sdvals[140] = ((((-t5 + t97) + t152) + t358) - t359) +
                t11 * (((t43 - t118 * 12.0) + t816) + t818);
  sdvals[141] = (t1611 + t1677) + t1833_tmp;
  sdvals[142] = (b_sfvals_tmp + t1834_tmp) + sfvals_tmp;
  sdvals[143] = (c_sfvals_tmp - t1599_tmp) - t1737_tmp;
  sdvals[144] =
      ((((((((((-zeta + t72) + t80) - t2) + t114) - t9) + t171) + t227) +
         t234) +
        t363) +
       t1670) +
      b_sdvals_tmp;
  sdvals[145] = (t1534_tmp + t1691_tmp) + t1698_tmp;
  sdvals[146] = (t1519_tmp - t1591_tmp) - t1836_tmp;
  sdvals[147] =
      t1519 + ((((t1496_tmp_tmp - t159) - t183) + t115 * -16.0) + t119 * -12.0);
  sdvals[148] = t1476 - sdvals_tmp;
  sdvals[149] = t1491 + t1550_tmp;
  sdvals_tmp = t11 * ((((((-t59 - t131) - t219) + t385) + t817) + t119 * t219) +
                      t3 * t1019);
  sdvals[150] = (t1627 - t1670) - sdvals_tmp;
  t1496_tmp_tmp = ((((t1521_tmp - t88) - t175) + t351) + t2 * t46) - t1539;
  b_sdvals_tmp = t12 * (((((t108 - t69) + t380) + t1019) + t118 * t219) - 27.0);
  t1534_tmp = xi * ((((t59 + t93) + t289) - t185) + t557);
  sdvals[151] = (t1496_tmp_tmp - b_sdvals_tmp) + t1534_tmp;
  t1691_tmp =
      t1653 +
      (((((((((t96 - t41) - t61) + t158) - t188) + t352) + t529) - t450) +
        t679) +
       4.5);
  t1698_tmp = t12 * (((((t552 + t794) + t809) + t823) + t118 * t1019) + 9.0);
  t1519_tmp = xi * ((((((t98 - t46) - t61) + t185) - t157) + t820) + 9.0);
  sdvals[152] = (t1691_tmp + t1698_tmp) - t1519_tmp;
  sdvals[153] =
      (((((((t1520_tmp - t94) - t163) - t182) + t355) + t520) + t555) - t1670) +
      sdvals_tmp;
  sdvals[154] = (t1496_tmp_tmp + b_sdvals_tmp) - t1534_tmp;
  sdvals[155] = (t1691_tmp - t1698_tmp) + t1519_tmp;
  sdvals_tmp = t11 * ((((((t131 - t59) + t219) + t385) + t817) + t443 * -81.0) +
                      t3 * t1192);
  sdvals[156] = (t1626 - t1677) + sdvals_tmp;
  t1496_tmp_tmp = ((((t1520_tmp - t88) - t182) + t351) + t115 * -27.0) - t1543;
  b_sdvals_tmp =
      t12 * (((((t69 + t108) + t380) + t1192) + t991_tmp * -81.0) + 27.0);
  t1534_tmp = xi * ((((t59 - t93) + t289) - t185) + t557);
  sdvals[157] = (t1496_tmp_tmp + b_sdvals_tmp) + t1534_tmp;
  t1691_tmp =
      -t1665 +
      (((((((((t41 - t61) - t96) - t158) - t188) + t352) + t355) - t450) +
        t679) +
       4.5);
  t1698_tmp = t12 * (((((t384 + t794) + t809) - t823) + t118 * t1192) + 9.0);
  t1519_tmp = xi * ((((((t61 + t98) - t46) + t157) - t185) + t820) - 9.0);
  sdvals[158] = (t1691_tmp - t1698_tmp) - t1519_tmp;
  sdvals[159] =
      (((((((t1521_tmp - t94) - t163) - t175) + t344) + t355) + t555) - t1677) -
      sdvals_tmp;
  sdvals[160] = (t1496_tmp_tmp - b_sdvals_tmp) - t1534_tmp;
  sdvals[161] = (t1691_tmp + t1698_tmp) + t1519_tmp;
  sdvals[162] = xi * ((((t8 * 64.0 - t21 * 64.0) + t57) + t119 * 112.0) +
                      t784_tmp * 48.0);
  sdvals[163] =
      (t91 - t114 * 64.0) + t11 * ((eta * 64.0 + t3 * 112.0) + t118 * 48.0);
  sdvals[164] =
      (((((t21 * -216.0 + t22 * 128.0) - t115 * 64.0) + t156) + zeta * 96.0) -
       t11 * (((zeta * 64.0 + t3 * t112) + t991_tmp * 48.0) - 8.0)) -
      8.0;
}

// pyra_5_ncoords - Obtain nodal coordinates in master element for pyra_5
void pyra_5_ncoords(double natcoords[15])
{
  static const signed char b_iv[15]{-1, -1, 0, 1, -1, 0, 1, 1,
                                    0,  -1, 1, 0, 0,  0, 1};
  for (int i{0}; i < 15; i++) {
    natcoords[i] = b_iv[i];
  }
}

// pyra_5_sfunc - Compute shape functions and their derivatives of pyra_5
void pyra_5_sfunc(double xi, double eta, double zeta, double sfvals[5])
{
  double sfvals_tmp;
  double t22;
  double t24;
  double t3;
  double t4;
  double t6;
  double zeta_1_inv;
  zeta_1_inv = 1.0 / ((zeta - 1.0) + 1.0E-100);
  t3 = eta / 4.0;
  t4 = zeta / 4.0;
  t6 = t3 * zeta_1_inv;
  t22 = (t3 - t4) + 0.25;
  t24 = (-t3 - t4) + 0.25;
  sfvals[0] = t24 + (eta * zeta_1_inv * -0.25 - 0.25) * xi;
  sfvals[1] = t24 + (t6 + 0.25) * xi;
  sfvals_tmp = (t6 - 0.25) * xi;
  sfvals[2] = t22 - sfvals_tmp;
  sfvals[3] = t22 + sfvals_tmp;
  sfvals[4] = zeta;
}

// pyra_5_sfunc - Compute shape functions and their derivatives of pyra_5
void pyra_5_sfunc(double xi, double eta, double zeta, double sfvals[5],
                  double sdvals[15])
{
  double sfvals_tmp;
  double t10;
  double t11;
  double t13;
  double t15;
  double t17;
  double t2;
  double t22;
  double t24;
  double t3;
  double t4;
  double t5;
  double t6;
  double zeta_1_inv;
  zeta_1_inv = 1.0 / ((zeta - 1.0) + 1.0E-100);
  t2 = zeta_1_inv * zeta_1_inv;
  t3 = eta / 4.0;
  t4 = zeta / 4.0;
  t5 = zeta_1_inv / 4.0;
  t10 = eta * zeta_1_inv * -0.25;
  t6 = t3 * zeta_1_inv;
  t11 = t5 * xi;
  t13 = -t5 * xi;
  t15 = t2 * t3 * xi;
  t17 = eta * t2 * -0.25 * xi;
  t22 = (t3 - t4) + 0.25;
  t24 = (-t3 - t4) + 0.25;
  sfvals[0] = t24 + (t10 - 0.25) * xi;
  sfvals[1] = t24 + (t6 + 0.25) * xi;
  sfvals_tmp = (t6 - 0.25) * xi;
  sfvals[2] = t22 - sfvals_tmp;
  sfvals[3] = t22 + sfvals_tmp;
  sfvals[4] = zeta;
  sdvals[0] = t10 - 0.25;
  sdvals[1] = t13 - 0.25;
  sdvals[2] = t15 - 0.25;
  sdvals[3] = t6 + 0.25;
  sdvals[4] = t11 - 0.25;
  sdvals[5] = t17 - 0.25;
  sdvals[6] = t10 + 0.25;
  sdvals[7] = t13 + 0.25;
  sdvals[8] = t15 - 0.25;
  sdvals[9] = t6 - 0.25;
  sdvals[10] = t11 + 0.25;
  sdvals[11] = t17 - 0.25;
  sdvals[12] = 0.0;
  sdvals[13] = 0.0;
  sdvals[14] = 1.0;
}

void pyra_91_ncoords(double natcoords[273])
{
  static const double dv[273]{
      -1.0, -1.0, 0.0, 1.0,  -1.0, 0.0, 1.0,  1.0,  0.0, -1.0, 1.0,  0.0,
      0.0,  0.0,  1.0, -0.6, -1.0, 0.0, -0.2, -1.0, 0.0, 0.2,  -1.0, 0.0,
      0.6,  -1.0, 0.0, 1.0,  -0.6, 0.0, 1.0,  -0.2, 0.0, 1.0,  0.2,  0.0,
      1.0,  0.6,  0.0, 0.6,  1.0,  0.0, 0.2,  1.0,  0.0, -0.2, 1.0,  0.0,
      -0.6, 1.0,  0.0, -1.0, 0.6,  0.0, -1.0, 0.2,  0.0, -1.0, -0.2, 0.0,
      -1.0, -0.6, 0.0, -0.8, -0.8, 0.2, -0.6, -0.6, 0.4, -0.4, -0.4, 0.6,
      -0.2, -0.2, 0.8, 0.8,  -0.8, 0.2, 0.6,  -0.6, 0.4, 0.4,  -0.4, 0.6,
      0.2,  -0.2, 0.8, 0.8,  0.8,  0.2, 0.6,  0.6,  0.4, 0.4,  0.4,  0.6,
      0.2,  0.2,  0.8, -0.8, 0.8,  0.2, -0.6, 0.6,  0.4, -0.4, 0.4,  0.6,
      -0.2, 0.2,  0.8, -0.6, -0.6, 0.0, -0.2, -0.6, 0.0, 0.2,  -0.6, 0.0,
      0.6,  -0.6, 0.0, 0.6,  -0.2, 0.0, 0.6,  0.2,  0.0, 0.6,  0.6,  0.0,
      0.2,  0.6,  0.0, -0.2, 0.6,  0.0, -0.6, 0.6,  0.0, -0.6, 0.2,  0.0,
      -0.6, -0.2, 0.0, -0.2, -0.2, 0.0, 0.2,  -0.2, 0.0, 0.2,  0.2,  0.0,
      -0.2, 0.2,  0.0, -0.4, -0.8, 0.2, 0.0,  -0.8, 0.2, 0.4,  -0.8, 0.2,
      0.2,  -0.6, 0.4, 0.0,  -0.4, 0.6, -0.2, -0.6, 0.4, 0.8,  -0.4, 0.2,
      0.8,  0.0,  0.2, 0.8,  0.4,  0.2, 0.6,  0.2,  0.4, 0.4,  0.0,  0.6,
      0.6,  -0.2, 0.4, 0.4,  0.8,  0.2, 0.0,  0.8,  0.2, -0.4, 0.8,  0.2,
      -0.2, 0.6,  0.4, 0.0,  0.4,  0.6, 0.2,  0.6,  0.4, -0.8, 0.4,  0.2,
      -0.8, 0.0,  0.2, -0.8, -0.4, 0.2, -0.6, -0.2, 0.4, -0.4, 0.0,  0.6,
      -0.6, 0.2,  0.4, -0.4, -0.4, 0.2, 0.0,  -0.4, 0.2, 0.4,  -0.4, 0.2,
      0.4,  0.0,  0.2, 0.4,  0.4,  0.2, 0.0,  0.4,  0.2, -0.4, 0.4,  0.2,
      -0.4, 0.0,  0.2, -0.2, -0.2, 0.4, 0.2,  -0.2, 0.4, 0.2,  0.2,  0.4,
      -0.2, 0.2,  0.4, 0.0,  0.0,  0.6, 0.0,  0.0,  0.2};
  std::copy(&dv[0], &dv[273], &natcoords[0]);
}

// pyra_91_sfunc - Compute shape functions and their derivatives of pyra_91
void pyra_91_sfunc(double xi, double eta, double zeta, double sfvals[91])
{
  double b_sfvals_tmp;
  double b_t5955_tmp;
  double b_t6219_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double h_sfvals_tmp;
  double i_sfvals_tmp;
  double j_sfvals_tmp;
  double k_sfvals_tmp;
  double l_sfvals_tmp;
  double m_sfvals_tmp;
  double n_sfvals_tmp;
  double o_sfvals_tmp;
  double p_sfvals_tmp;
  double q_sfvals_tmp;
  double r_sfvals_tmp;
  double s_sfvals_tmp;
  double sfvals_tmp;
  double t10;
  double t1001;
  double t1002;
  double t1003;
  double t1004;
  double t1007;
  double t1008;
  double t1009;
  double t1010;
  double t1011;
  double t1016;
  double t1018;
  double t1019;
  double t1020;
  double t1022;
  double t1030;
  double t1031;
  double t1032;
  double t1036;
  double t1038;
  double t1041;
  double t1043;
  double t1051;
  double t1056;
  double t106;
  double t1061;
  double t1064;
  double t1065;
  double t1076;
  double t108;
  double t1095;
  double t1098;
  double t11;
  double t1105;
  double t1105_tmp;
  double t1108;
  double t1108_tmp;
  double t1123;
  double t114;
  double t1141;
  double t1142;
  double t1144;
  double t115;
  double t1154;
  double t1158;
  double t1159;
  double t1163;
  double t1183;
  double t1186;
  double t12;
  double t1207;
  double t1208;
  double t1230;
  double t1237;
  double t124;
  double t1244;
  double t1245_tmp;
  double t1247;
  double t1250;
  double t1257;
  double t126;
  double t1260;
  double t1267;
  double t1268;
  double t1269;
  double t1270;
  double t1285;
  double t1291;
  double t1292;
  double t1293;
  double t1296;
  double t13;
  double t1316;
  double t1317;
  double t1322;
  double t1328;
  double t133;
  double t1364;
  double t1365;
  double t1368;
  double t1379;
  double t1380;
  double t1381;
  double t1384;
  double t1388;
  double t1389;
  double t1391;
  double t1392;
  double t1395;
  double t1396;
  double t14;
  double t1400;
  double t1401;
  double t1402;
  double t1405;
  double t142;
  double t1427;
  double t1429;
  double t1430;
  double t1431;
  double t1432;
  double t1434;
  double t1435;
  double t1436;
  double t144;
  double t1446;
  double t1447;
  double t1448;
  double t1449;
  double t1453;
  double t1454;
  double t1455;
  double t1458;
  double t146;
  double t1466;
  double t1467;
  double t1469;
  double t147;
  double t1470;
  double t1471;
  double t1474;
  double t1475;
  double t1476;
  double t1477;
  double t1479;
  double t1480;
  double t1481;
  double t1483;
  double t1485;
  double t1487;
  double t1489;
  double t1493;
  double t15;
  double t1503;
  double t1504;
  double t151;
  double t1519;
  double t1537;
  double t1551;
  double t1556;
  double t1556_tmp;
  double t1557;
  double t1557_tmp;
  double t1572;
  double t1578;
  double t1594;
  double t16;
  double t1603;
  double t1615;
  double t1623;
  double t1632;
  double t1646;
  double t1657;
  double t1665;
  double t1669;
  double t167;
  double t1672;
  double t1676;
  double t1686;
  double t1699;
  double t1707;
  double t1708;
  double t1709;
  double t1710;
  double t1714;
  double t1719;
  double t1721;
  double t1722;
  double t1725;
  double t1726;
  double t1727;
  double t1732;
  double t1732_tmp;
  double t1743;
  double t1743_tmp;
  double t1752;
  double t1755;
  double t1761;
  double t1761_tmp;
  double t1762;
  double t1764;
  double t1770;
  double t1776;
  double t1806;
  double t181;
  double t1812;
  double t1812_tmp;
  double t1813;
  double t1813_tmp;
  double t1824;
  double t1824_tmp;
  double t1826;
  double t1827;
  double t1831;
  double t1832;
  double t1844;
  double t1859;
  double t1861;
  double t1868;
  double t1870;
  double t1871;
  double t1872;
  double t1874;
  double t1875;
  double t1876;
  double t1877;
  double t1878;
  double t1880;
  double t1881;
  double t1882;
  double t1884;
  double t1887;
  double t1888;
  double t1892;
  double t1893;
  double t1894;
  double t1929;
  double t1934;
  double t1943;
  double t1970;
  double t1974;
  double t1981;
  double t1989;
  double t199;
  double t1990;
  double t2;
  double t2005;
  double t2012;
  double t2019;
  double t2025;
  double t2035;
  double t2036;
  double t2054;
  double t2058;
  double t2066;
  double t2067;
  double t2070;
  double t2079;
  double t2088;
  double t2089;
  double t2091;
  double t21;
  double t2103;
  double t2109;
  double t211;
  double t2110;
  double t2113;
  double t2113_tmp;
  double t2115;
  double t2116;
  double t212;
  double t2132;
  double t214;
  double t2146;
  double t2147;
  double t2153;
  double t216;
  double t2160;
  double t2161;
  double t2162;
  double t2168;
  double t2172;
  double t2173;
  double t218;
  double t22;
  double t2218;
  double t2219;
  double t2226;
  double t2227;
  double t2228;
  double t223;
  double t2232;
  double t2234;
  double t2235;
  double t224;
  double t2247;
  double t2248;
  double t2249;
  double t2255;
  double t2259;
  double t226;
  double t2262;
  double t227;
  double t228;
  double t2299;
  double t2305;
  double t2306;
  double t2308;
  double t2309;
  double t231;
  double t2310;
  double t2311;
  double t2314;
  double t2323;
  double t2326;
  double t2362;
  double t2378;
  double t2380;
  double t2411;
  double t2420;
  double t2423;
  double t243;
  double t2434;
  double t2435;
  double t2436;
  double t244;
  double t245;
  double t2456;
  double t246;
  double t2461;
  double t2461_tmp;
  double t2464;
  double t2465;
  double t2469;
  double t2473;
  double t2476;
  double t2479;
  double t2480;
  double t2493;
  double t2494;
  double t2501;
  double t2504;
  double t2505;
  double t2507;
  double t2514;
  double t2516;
  double t2517;
  double t2519;
  double t2526;
  double t2546;
  double t2551;
  double t2582;
  double t2585;
  double t2593;
  double t2604;
  double t2607;
  double t2607_tmp;
  double t2609;
  double t262;
  double t2620;
  double t263;
  double t2633;
  double t2642;
  double t2646;
  double t265;
  double t2652;
  double t2654;
  double t2662;
  double t2668;
  double t2669;
  double t268;
  double t269;
  double t2690;
  double t2700;
  double t2708;
  double t271;
  double t2715;
  double t2717;
  double t2720;
  double t2721;
  double t2723;
  double t2724;
  double t2726;
  double t2729;
  double t2730;
  double t2734;
  double t2735;
  double t274;
  double t2740;
  double t2746;
  double t2757;
  double t2759;
  double t2769;
  double t277;
  double t2785;
  double t2786;
  double t2792;
  double t2804;
  double t2813;
  double t2814;
  double t2823;
  double t2824;
  double t2837;
  double t2840;
  double t2841;
  double t2842;
  double t2849;
  double t2859;
  double t2863;
  double t2864;
  double t2866;
  double t2870;
  double t2882;
  double t290;
  double t292;
  double t2928;
  double t2933;
  double t2942;
  double t2946;
  double t2948;
  double t296;
  double t2961;
  double t2962;
  double t2971;
  double t2978;
  double t2980;
  double t299;
  double t2997;
  double t2998;
  double t2999;
  double t3;
  double t301;
  double t3027;
  double t3046;
  double t305;
  double t3066;
  double t3069;
  double t309;
  double t3098;
  double t31;
  double t3129;
  double t313;
  double t3134;
  double t3138;
  double t3156;
  double t3162;
  double t3164;
  double t3174;
  double t3181;
  double t3182;
  double t3185;
  double t3193;
  double t3194;
  double t3204;
  double t3213;
  double t3217;
  double t3219;
  double t3220;
  double t3227;
  double t3228;
  double t3229;
  double t3238;
  double t3243;
  double t3244;
  double t3245;
  double t3248;
  double t3249;
  double t3263;
  double t3293;
  double t3294;
  double t3295;
  double t3298;
  double t33;
  double t3312;
  double t3313;
  double t3318;
  double t3319;
  double t3320;
  double t3321;
  double t3323;
  double t3342;
  double t3346;
  double t3347;
  double t3354;
  double t3357;
  double t3358;
  double t3365;
  double t337;
  double t3378;
  double t3381;
  double t3385;
  double t3389;
  double t3398;
  double t34;
  double t3403;
  double t3408;
  double t340_tmp;
  double t3413;
  double t3425;
  double t3426;
  double t3434;
  double t3436;
  double t3442;
  double t3443;
  double t3458;
  double t3460;
  double t3476;
  double t3480;
  double t3489;
  double t35;
  double t3512;
  double t3513;
  double t3529;
  double t3533;
  double t3535;
  double t3545;
  double t3550;
  double t3557;
  double t3558;
  double t3562;
  double t3563;
  double t3568;
  double t3571;
  double t3572;
  double t3574;
  double t3580;
  double t3581;
  double t3582;
  double t3585;
  double t359;
  double t3602;
  double t3619;
  double t3622;
  double t3625;
  double t3641;
  double t3642;
  double t3645;
  double t3654;
  double t3657;
  double t3662;
  double t3663;
  double t3667;
  double t3686;
  double t3697;
  double t3700;
  double t3702;
  double t3703;
  double t3711;
  double t3713;
  double t3737;
  double t3749;
  double t3758;
  double t3760;
  double t3768;
  double t3777;
  double t3800;
  double t3802;
  double t3804;
  double t3812;
  double t3818;
  double t3821;
  double t3827;
  double t3828;
  double t3833;
  double t3853;
  double t3858;
  double t3859;
  double t3862;
  double t3863;
  double t3872;
  double t3880;
  double t3883;
  double t3884;
  double t3888;
  double t3902;
  double t3906;
  double t3908;
  double t3918;
  double t3925;
  double t3927;
  double t3928;
  double t3930;
  double t3935;
  double t3939;
  double t3940;
  double t395;
  double t3951;
  double t3957;
  double t3958;
  double t3962;
  double t3970;
  double t3971;
  double t3976;
  double t3977;
  double t3986;
  double t3988;
  double t3991;
  double t3998;
  double t4;
  double t40;
  double t4001;
  double t4003;
  double t4008;
  double t4010;
  double t4011;
  double t4014;
  double t4016;
  double t4017;
  double t4022;
  double t4024;
  double t4025;
  double t4026;
  double t4027;
  double t4030;
  double t4036;
  double t4038;
  double t4041;
  double t4042;
  double t405;
  double t4054;
  double t4061;
  double t4072;
  double t4076;
  double t4078;
  double t4086;
  double t4091;
  double t4092;
  double t4093;
  double t4095;
  double t41;
  double t4104;
  double t4109;
  double t4112;
  double t4115;
  double t4119;
  double t4120;
  double t4121;
  double t4122;
  double t4123;
  double t4125;
  double t4149;
  double t4151;
  double t4152;
  double t4154;
  double t4155;
  double t4155_tmp;
  double t4156;
  double t4160;
  double t4162;
  double t4164;
  double t4168;
  double t4173;
  double t4174;
  double t4175;
  double t4176;
  double t4190;
  double t4191;
  double t4195;
  double t4196;
  double t4209;
  double t4211;
  double t4214;
  double t4219;
  double t4234;
  double t4236;
  double t4237;
  double t4238;
  double t4242;
  double t4244;
  double t4248;
  double t4254;
  double t4258;
  double t4260;
  double t4261;
  double t4269;
  double t4273;
  double t4284;
  double t4289;
  double t4299;
  double t43;
  double t4303;
  double t4308;
  double t4309;
  double t4311;
  double t4317;
  double t4318;
  double t4333;
  double t4335;
  double t4337;
  double t435;
  double t4355;
  double t436;
  double t4363;
  double t4364;
  double t4380;
  double t4380_tmp;
  double t4396;
  double t440;
  double t4401;
  double t4409;
  double t4418;
  double t4419;
  double t4423;
  double t4427;
  double t443;
  double t4436;
  double t4469;
  double t4477;
  double t4478;
  double t4481;
  double t4491;
  double t4492;
  double t450;
  double t452;
  double t4526;
  double t4530;
  double t4532;
  double t4537;
  double t4540;
  double t4549;
  double t4551;
  double t456;
  double t4566;
  double t458;
  double t4580;
  double t4585;
  double t4593;
  double t4599;
  double t4601;
  double t4602;
  double t4612_tmp;
  double t4626;
  double t4646;
  double t4655;
  double t467;
  double t468;
  double t4685;
  double t4686;
  double t4687;
  double t4688;
  double t4698;
  double t4699;
  double t4700;
  double t4703;
  double t4705;
  double t4710;
  double t4719;
  double t4724;
  double t4734;
  double t474;
  double t4749;
  double t4760;
  double t4762;
  double t4764;
  double t4768;
  double t478;
  double t4788;
  double t4796;
  double t4807;
  double t481;
  double t482;
  double t4821;
  double t483;
  double t4830;
  double t4831;
  double t4833;
  double t484;
  double t4841;
  double t4844;
  double t485;
  double t4853;
  double t4858;
  double t4859;
  double t486;
  double t4861;
  double t4862;
  double t4875;
  double t4880;
  double t4881;
  double t4882;
  double t4900;
  double t4903;
  double t4912;
  double t4921;
  double t4944;
  double t4959;
  double t4964;
  double t4975;
  double t4975_tmp;
  double t4998;
  double t5;
  double t501;
  double t5022;
  double t5024;
  double t5028;
  double t5029;
  double t504;
  double t5064;
  double t5065;
  double t5068;
  double t5074;
  double t5075;
  double t5084;
  double t5087;
  double t5087_tmp;
  double t5099;
  double t51;
  double t5109;
  double t511;
  double t5117;
  double t5121;
  double t5123;
  double t5126;
  double t5127;
  double t513;
  double t5130;
  double t514;
  double t5145;
  double t5146;
  double t5148;
  double t5149;
  double t5151;
  double t5152;
  double t5153;
  double t5160;
  double t5161;
  double t5164;
  double t5182;
  double t5189;
  double t5205;
  double t5207;
  double t521;
  double t5221;
  double t5235;
  double t5252;
  double t5254;
  double t526;
  double t5283;
  double t5287;
  double t5288;
  double t5289;
  double t5302;
  double t5303;
  double t5312;
  double t5313;
  double t5316;
  double t5318;
  double t5332;
  double t5333;
  double t5334;
  double t5338;
  double t5339;
  double t5340;
  double t5346;
  double t5347;
  double t5352;
  double t5353;
  double t5356;
  double t5361;
  double t5364;
  double t5369;
  double t5379;
  double t5381;
  double t5396;
  double t5397;
  double t540;
  double t5403;
  double t5405;
  double t5406;
  double t5408;
  double t5415;
  double t5419;
  double t542;
  double t543;
  double t5433;
  double t5435;
  double t5436;
  double t5438;
  double t5439;
  double t5441;
  double t5447;
  double t5449;
  double t5451;
  double t5469;
  double t5472;
  double t5477;
  double t548;
  double t5482;
  double t5490;
  double t5495;
  double t5499;
  double t550;
  double t5507;
  double t5512;
  double t5523;
  double t5524;
  double t5527;
  double t5531;
  double t5533;
  double t5539;
  double t5552;
  double t5579;
  double t5596;
  double t5597;
  double t5598;
  double t5599;
  double t56;
  double t560;
  double t5600;
  double t5601;
  double t5614;
  double t5615;
  double t5616;
  double t5617;
  double t5618;
  double t5622;
  double t5626;
  double t563;
  double t5630;
  double t5632;
  double t5639;
  double t564;
  double t5643;
  double t565;
  double t5654;
  double t5657;
  double t566;
  double t567;
  double t5671;
  double t568;
  double t5682;
  double t5683;
  double t5684;
  double t5686;
  double t5687;
  double t569;
  double t5694;
  double t571;
  double t572;
  double t5737;
  double t575;
  double t5768;
  double t578;
  double t5815;
  double t5823;
  double t5824;
  double t5825;
  double t5828;
  double t5849;
  double t585;
  double t587;
  double t5883;
  double t5884;
  double t589;
  double t59;
  double t5900;
  double t5901;
  double t5909;
  double t592;
  double t593;
  double t594;
  double t5947;
  double t595;
  double t5955_tmp;
  double t5962_tmp;
  double t5988;
  double t5989;
  double t599;
  double t6;
  double t60;
  double t6018_tmp;
  double t602;
  double t6032_tmp;
  double t6033_tmp;
  double t6047_tmp;
  double t6059_tmp;
  double t6149;
  double t615;
  double t616;
  double t6164;
  double t6187_tmp;
  double t6192_tmp;
  double t6200;
  double t6203_tmp;
  double t6212;
  double t6219_tmp;
  double t6228_tmp;
  double t623;
  double t625;
  double t6266_tmp;
  double t629;
  double t630;
  double t631;
  double t6317_tmp;
  double t635;
  double t636;
  double t637;
  double t640;
  double t6415_tmp;
  double t642;
  double t647;
  double t648;
  double t65;
  double t650;
  double t653;
  double t6543_tmp;
  double t6548_tmp;
  double t658;
  double t6616_tmp;
  double t664;
  double t6661_tmp;
  double t67;
  double t699;
  double t7;
  double t705;
  double t728;
  double t736;
  double t740;
  double t741;
  double t747;
  double t751;
  double t754;
  double t754_tmp;
  double t755;
  double t755_tmp;
  double t76;
  double t77;
  double t774;
  double t776;
  double t77_tmp;
  double t793;
  double t794;
  double t798;
  double t798_tmp;
  double t8;
  double t805;
  double t835;
  double t837;
  double t838;
  double t844;
  double t845;
  double t887;
  double t888;
  double t89;
  double t896;
  double t9;
  double t92;
  double t93;
  double t933;
  double t937;
  double t952;
  double t955;
  double t956;
  double t958;
  double t959;
  double t964;
  double t965;
  double t975;
  double t980;
  double zeta_1_inv;
  zeta_1_inv = 1.0 / ((zeta - 1.0) + 1.0E-100);
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = std::pow(eta, 5.0);
  t6 = xi * xi;
  t7 = std::pow(xi, 3.0);
  t9 = std::pow(xi, 5.0);
  t10 = zeta * zeta;
  t11 = std::pow(zeta, 3.0);
  t13 = std::pow(zeta, 5.0);
  t14 = zeta_1_inv * zeta_1_inv;
  t15 = std::pow(zeta_1_inv, 3.0);
  t21 = eta * 6.25;
  t22 = eta * 4.166666666666667;
  t31 = eta * 1.5625;
  t33 = eta * 31.25;
  t34 = zeta * 1.5625;
  t35 = zeta * 0.46296296296296297;
  t40 = zeta_1_inv * 0.78125;
  t41 = zeta_1_inv * 0.52083333333333337;
  t56 = eta * 15.625;
  t59 = eta * 5.208333333333333;
  t60 = eta * 3.90625;
  t65 = zeta * 10.416666666666666;
  t67 = zeta * 5.208333333333333;
  t77_tmp = eta * zeta;
  t77 = t77_tmp * -1.5625;
  t106 = eta * 52.083333333333336;
  t108 = eta * 26.041666666666668;
  t114 = eta * 86.805555555555557;
  t115 = eta * 65.104166666666671;
  t124 = zeta * 1.1574074074074074;
  t126 = zeta * 0.28935185185185186;
  t133 = zeta_1_inv * 1.3020833333333333;
  t142 = zeta * 86.805555555555557;
  t144 = zeta_1_inv * 65.104166666666671;
  t211 = eta * 6.510416666666667;
  t212 = eta * 4.8828125;
  t214 = eta * 3.2552083333333335;
  t216 = eta * 1.6276041666666667;
  t218 = eta * 7.161458333333333;
  t223 = eta * 43.402777777777779;
  t224 = eta * 32.552083333333329;
  t226 = eta * 21.701388888888889;
  t227 = eta * 10.850694444444439;
  t228 = eta * 8.1380208333333321;
  t231 = eta * 43.9453125;
  t243 = zeta * 2.8935185185185186;
  t244 = zeta * 0.732421875;
  t245 = zeta * 2.1701388888888888;
  t246 = zeta * 1.4467592592592593;
  t262 = zeta * 43.402777777777779;
  t263 = zeta * 32.552083333333329;
  t265 = zeta * 21.701388888888889;
  t268 = zeta * 10.850694444444439;
  t269 = zeta * 8.1380208333333321;
  t271 = zeta_1_inv * 43.402777777777779;
  t274 = zeta_1_inv * 8.1380208333333321;
  t277 = zeta * 30.381944444444439;
  t340_tmp = eta * zeta_1_inv;
  t359 = t77_tmp * -86.805555555555557;
  t435 = eta * 6.103515625;
  t436 = eta * 5.4253472222222223;
  t440 = eta * 1.356336805555556;
  t443 = eta * 13.427734375;
  t450 = eta * 108.5069444444444;
  t452 = eta * 131.8359375;
  t456 = eta * 0.006866455078125;
  t458 = eta * 0.0001373291015625;
  t467 = zeta * 1.123046875;
  t468 = zeta * 1.220703125;
  t474 = zeta * 0.72337962962962965;
  t478 = zeta * 0.54253472222222221;
  t481 = zeta * 0.40690104166666669;
  t482 = zeta * 0.36168981481481483;
  t483 = zeta * 3.662109375;
  t484 = zeta * 1.1935763888888891;
  t485 = zeta * 0.5063657407407407;
  t486 = zeta * 0.79752604166666674;
  t501 = zeta * 6.591796875;
  t504 = zeta_1_inv * 5.4253472222222223;
  t511 = zeta * 2.2424768518518521;
  t513 = zeta_1_inv * 1.356336805555556;
  t514 = zeta * 10.986328125;
  t521 = zeta * 0.26403356481481483;
  t526 = zeta * 0.560619212962963;
  t653 = t77_tmp * -4.3402777777777777;
  t835 = eta * 54.931640625;
  t837 = eta * 0.034332275390625;
  t838 = eta * 0.095367431640625;
  t844 = eta * 0.0011444091796875;
  t845 = eta * 0.0019073486328125;
  t887 = zeta * 54.931640625;
  t888 = zeta * 0.095367431640625;
  t1064 = t77_tmp * -1.220703125;
  t1065 = t77_tmp * -0.72337962962962965;
  t1076 = t77_tmp * -10.986328125;
  t1285 = eta * 0.95367431640625;
  t1291 = eta * 0.286102294921875;
  t1292 = eta * 1.71661376953125;
  t1293 = eta * 0.476837158203125;
  t1296 = eta * 0.751495361328125;
  t1316 = zeta_1_inv * 0.0095367431640625;
  t1317 = zeta * 0.0476837158203125;
  t1322 = zeta * 1.811981201171875;
  t1493 = t77_tmp * -32.958984375;
  t1699 = eta * 0.2498626708984375;
  t1707 = eta * 7.43865966796875;
  t1708 = eta * 0.41325887044270831;
  t1709 = eta * 1.843770345052083;
  t1710 = eta * 8.58306884765625;
  t1714 = zeta * 0.1430511474609375;
  t1719 = zeta * 4.76837158203125;
  t1721 = zeta * 2.384185791015625;
  t1722 = zeta_1_inv * 2.384185791015625;
  t1725 = zeta * 7.152557373046875;
  t1726 = zeta_1_inv * 23.84185791015625;
  t1727 = zeta_1_inv * 11.92092895507812;
  t2103 = eta * 1.2291802300347221;
  t2109 = zeta * 1.1920928955078121;
  t2110 = zeta * 0.79472859700520826;
  t2434 = zeta_1_inv * 8.3446502685546875;
  t3129 = eta * 2.6785297158323691;
  t3134 = eta * 39.500954710407022;
  t3138 = eta * 17.63120109652295;
  t3164 = zeta * 10.19371880425347;
  t3181 = zeta * 9.096404652536652;
  t3182 = zeta * 15.19992027753665;
  t3185 = zeta * 9.3389440465856488;
  t3193 = eta * 5.2981906467013893;
  t3194 = eta * 10.59638129340278;
  t3204 = eta * 1.441225593472705;
  t3213 = zeta_1_inv * 1.3245476616753471;
  t3217 = eta * 1.298268636067708;
  t3219 = eta * 7.947285970052083;
  t3220 = eta * 15.89457194010417;
  t3227 = zeta_1_inv * 1.49081665792583;
  t3228 = zeta * 3.3498693395543979;
  t3243 = zeta_1_inv * 2.781550089518229;
  t3244 = zeta_1_inv * 5.563100179036458;
  t3245 = zeta_1_inv * 8.7420145670572911;
  t3248 = eta * 5.0185639181254826;
  t3263 = zeta * 1.4375757288049771;
  t3293 = eta * 1.2035134397907019;
  t3294 = zeta_1_inv * 5.2334349832417049;
  t3295 = zeta * 0.13293513545283561;
  t3298 = zeta * 0.80355891474971064;
  t3318 = zeta * 1.701307885440779;
  t3319 = zeta_1_inv * 1.0738137327594519;
  t3320 = zeta_1_inv * 5.071545824592496;
  t3321 = zeta_1_inv * 6.7080980465735918;
  t3323 = eta * 0.36027696397569442;
  t3342 = zeta * 1.2927585177951391;
  t3346 = zeta_1_inv * 2.9140048556857638;
  t3347 = zeta_1_inv * 5.8280097113715277;
  t3357 = eta * 1.105438044041763;
  t3358 = eta * 7.0348198031201772;
  t3378 = zeta_1_inv * 1.109252741307388;
  t3385 = zeta * 2.3465097686390819;
  t3398 = zeta_1_inv * 1.7248553994261191;
  t3403 = eta * 6.0193332625024114;
  t3408 = zeta * 2.454828332971644;
  t3413 = zeta * 2.2311269501109181;
  t3425 = eta * 0.61459011501736116;
  t3426 = eta * 2.6490953233506951;
  t3442 = zeta * 0.2757413887683256;
  t3512 = zeta * 0.10848339693045909;
  t3513 = zeta * 0.20003613130545911;
  t3533 = zeta * 0.1536710762683256;
  t3535 = t77_tmp * -4.6771249653380593;
  t3545 = zeta * 0.49281179169077932;
  t3562 = zeta * 0.034355822904610339;
  t3563 = zeta * 0.064873401029610339;
  t3580 = zeta * 0.080387256763599535;
  t3581 = zeta * 0.09183530454282407;
  t3582 = zeta * 0.152729175708912;
  t3585 = zeta * 0.85477475766782407;
  t3619 = zeta * 0.39736429850260419;
  t3662 = zeta * 0.2445644802517361;
  t3663 = zeta * 0.29457939995659721;
  t3667 = zeta_1_inv * 0.13245476616753471;
  t3833 = zeta * 0.046581692165798612;
  t3988 = eta * 0.015894571940104171;
  t3991 = zeta * 0.0088303177445023147;
  t4008 = t340_tmp * -1.2482537163628471;
  t4010 = t340_tmp * -0.62412685818142366;
  t4027 = t340_tmp * -7.0760279525945213;
  t4041 = eta * 0.026490953233506941;
  t4042 = eta * 0.052981906467013888;
  t4061 = t340_tmp * -1.872380574544271;
  t4120 = t77_tmp * -2.9375523696711028;
  t4162 = zeta * 0.040619461624710647;
  t4176 = t340_tmp * -5.2334349832417049;
  t4214 = zeta * 0.02794618959780093;
  t4219 = t77_tmp * -1.03375941147039;
  t4258 = t77_tmp * -0.851996151017554;
  t4 = t2 * t2;
  t8 = t6 * t6;
  t12 = t10 * t10;
  t16 = t14 * t14;
  t43 = t31 * zeta;
  t51 = t33 * zeta_1_inv;
  t76 = t2 * 31.25;
  t89 = t56 * zeta_1_inv;
  t92 = t59 * zeta_1_inv;
  t93 = t60 * zeta_1_inv;
  t146 = t2 * 15.625;
  t147 = t2 * 5.208333333333333;
  t151 = t11 * 104.16666666666667;
  t167 = eta * t133;
  t181 = t114 * zeta;
  t199 = t2 * t41;
  t290 = t3 * 52.083333333333336;
  t292 = t3 * 26.041666666666668;
  t296 = t2 * 11.574074074074074;
  t299 = t2 * 86.805555555555557;
  t301 = t2 * 65.104166666666671;
  t305 = t2 * 91.145833333333329;
  t309 = t11 * 39.0625;
  t313 = t10 * 44.270833333333329;
  t337 = eta * 2.8935185185185186 * zeta;
  t395 = t2 * t67;
  t405 = t2 * (zeta_1_inv * 15.625);
  t540 = t3 * 6.510416666666667;
  t542 = t3 * 4.8828125;
  t543 = t3 * 3.2552083333333335;
  t548 = t3 * 1.6276041666666667;
  t550 = t2 * 7.161458333333333;
  t564 = t2 * 28.93518518518519;
  t565 = t3 * 28.93518518518519;
  t566 = t2 * 21.701388888888889;
  t567 = t3 * 21.701388888888889;
  t568 = t2 * 14.46759259259259;
  t569 = t3 * 14.46759259259259;
  t575 = t2 * 45.572916666666671;
  t578 = t3 * 43.9453125;
  t585 = t10 * 7.716049382716049;
  t587 = t10 * 4.8828125;
  t589 = t10 * 1.9290123456790123;
  t592 = t10 * 14.32291666666667;
  t593 = t10 * 15.88541666666667;
  t594 = t10 * 10.03086419753086;
  t595 = t10 * 6.34765625;
  t599 = t11 * 26.23456790123457;
  t602 = t11 * 6.5586419753086416;
  t616 = t13 * 32.552083333333329;
  t623 = t10 * 14.46759259259259;
  t629 = t11 * 9.6450617283950617;
  t630 = t13 * 9.6450617283950617;
  t631 = t10 * 7.2337962962962958;
  t636 = t10 * 20.25462962962963;
  t640 = t11 * 53.385416666666671;
  t642 = t10 * 43.9453125;
  t648 = t11 * 31.8287037037037;
  t650 = t10 * 18.80787037037037;
  t658 = eta * 1.220703125 * zeta;
  t664 = eta * 0.72337962962962965 * zeta;
  t699 = eta * 10.986328125 * zeta;
  t705 = t443 * zeta;
  t728 = t2 * t126;
  t740 = t2 * t133;
  t741 = t2 * (zeta * 13.020833333333334);
  t747 = t3 * (zeta_1_inv * 52.083333333333336);
  t751 = t3 * (zeta_1_inv * 26.041666666666668);
  t754_tmp = t2 * zeta_1_inv;
  t754 = t754_tmp * 17.361111111111111;
  t755_tmp = t3 * zeta_1_inv;
  t755 = t755_tmp * 17.361111111111111;
  t774 = t3 * t142;
  t776 = t2 * (zeta * 65.104166666666671);
  t793 = t754_tmp * 130.20833333333329;
  t794 = t755_tmp * 130.20833333333329;
  t805 = t754_tmp * 122.3958333333333;
  t952 = t3 * 108.5069444444444;
  t955 = t3 * 54.253472222222221;
  t956 = t2 * 0.02593994140625;
  t958 = t3 * 131.8359375;
  t959 = t2 * 65.91796875;
  t964 = t2 * 0.003814697265625;
  t965 = t3 * 0.003814697265625;
  t975 = t11 * 0.54253472222222221;
  t980 = t10 * 2.507716049382716;
  t1001 = t10 * 6.103515625;
  t1002 = t11 * 6.103515625;
  t1004 = t13 * 6.103515625;
  t1007 = t10 * 3.6168981481481479;
  t1010 = t11 * 2.411265432098765;
  t1011 = t13 * 2.411265432098765;
  t1016 = t10 * 2.034505208333333;
  t1018 = t10 * 1.808449074074074;
  t1019 = t10 * 8.544921875;
  t1022 = t10 * 5.0636574074074074;
  t1030 = t10 * 5.3168402777777777;
  t1031 = t11 * 13.427734375;
  t1032 = t11 * 7.9571759259259256;
  t1036 = t10 * 4.7019675925925926;
  t1038 = t11 * 49.18981481481481;
  t1041 = t11 * 37.434895833333329;
  t1043 = t10 * 57.12890625;
  t1051 = t11 * 149.4140625;
  t1095 = eta * 6.3295717592592586 * zeta;
  t1098 = t838 * zeta_1_inv;
  t1105_tmp = t2 * zeta;
  t1105 = t1105_tmp * -1.1574074074074074;
  t1108_tmp = eta * t11;
  t1108 = t1108_tmp * -39.0625;
  t1123 = t2 * t244;
  t1141 = t754_tmp * 8.6805555555555554;
  t1142 = t755_tmp * 8.6805555555555554;
  t1144 = t3 * (zeta_1_inv * 6.510416666666667);
  t1154 = t10 * (eta * 14.32291666666667);
  t1158 = t2 * (zeta_1_inv * 7.161458333333333);
  t1163 = t754_tmp * 14.66049382716049;
  t1183 = t2 * t263;
  t1207 = t3 * t268;
  t1230 = t3 * t271;
  t1245_tmp = eta * t10;
  t1247 = t2 * t277;
  t1257 = t3 * (zeta_1_inv * 43.9453125);
  t1260 = t754_tmp * 61.197916666666671;
  t1267 = t754_tmp * 47.743055555555557;
  t1268 = t755_tmp * 47.743055555555557;
  t1269 = t754_tmp * 23.871527777777779;
  t1270 = t755_tmp * 23.871527777777779;
  t1364 = t2 * 18.310546875;
  t1365 = t3 * 18.310546875;
  t1368 = t2 * 24.956597222222221;
  t1379 = t3 * 0.12969970703125;
  t1380 = t2 * 0.19073486328125;
  t1381 = t3 * 0.19073486328125;
  t1384 = t2 * 22.424768518518519;
  t1388 = t2 * 25.318287037037042;
  t1389 = t3 * 25.318287037037042;
  t1391 = t2 * 12.659143518518521;
  t1392 = t3 * 12.659143518518521;
  t1395 = t2 * 54.931640625;
  t1396 = t3 * 54.931640625;
  t1401 = t2 * 0.029754638671875;
  t1402 = t3 * 0.049591064453125;
  t1405 = t5 * 0.095367431640625;
  t1427 = t10 * 11.29557291666667;
  t1429 = t10 * 18.310546875;
  t1431 = t10 * 4.846643518518519;
  t1432 = t10 * 19.287109375;
  t1434 = t11 * 20.751953125;
  t1435 = t11 * 12.2974537037037;
  t1436 = t10 * 7.405598958333333;
  t1446 = t10 * 30.517578125;
  t1448 = t11 * 18.08449074074074;
  t1449 = t13 * 18.08449074074074;
  t1454 = t11 * 4.5211226851851851;
  t1455 = t13 * 4.5211226851851851;
  t1458 = t10 * 14.94984567901235;
  t1466 = t10 * 2.3690682870370372;
  t1469 = t10 * 3.7374614197530862;
  t1470 = t11 * 13.382523148148151;
  t1471 = t11 * 47.607421875;
  t1474 = t10 * 54.931640625;
  t1475 = t11 * 54.931640625;
  t1477 = t13 * 54.931640625;
  t1479 = t13 * 22.379557291666671;
  t1481 = t10 * 76.904296875;
  t1483 = t10 * 11.754918981481479;
  t1487 = t11 * 6.4199942129629628;
  t1489 = t11 * 120.849609375;
  t1503 = eta * t1316;
  t1504 = eta * (zeta_1_inv * 0.0476837158203125);
  t1519 = t1105_tmp * -0.732421875;
  t1537 = t1245_tmp * -14.32291666666667;
  t1551 = t2 * t484;
  t1572 = t1108_tmp * -10.850694444444439;
  t1578 = t755_tmp * -43.402777777777779;
  t1594 = t2 * t501;
  t1615 = t2 * t511;
  t1623 = t2 * t514;
  t1632 = t2 * (zeta * 13.427734375);
  t1646 = t754_tmp * 27.488425925925931;
  t1672 = t3 * (zeta_1_inv * 131.8359375);
  t1676 = t754_tmp * 83.49609375;
  t1732_tmp = t2 * t14;
  t1732 = t1732_tmp * 3.0864197530864197;
  t1743_tmp = t3 * t14;
  t1743 = t1743_tmp * 69.444444444444443;
  t1752 = t1743_tmp * 34.722222222222221;
  t1761_tmp = t3 * t15;
  t1761 = t1761_tmp * 13.020833333333334;
  t1764 = t1743_tmp * 11.574074074074074;
  t1770 = t1743_tmp * 138.88888888888891;
  t1806 = t1732_tmp * 130.20833333333329;
  t1831 = t1743_tmp * 65.104166666666671;
  t1832 = t1761_tmp * 65.104166666666671;
  t1844 = t2 * 1.2969970703125;
  t1859 = t2 * 0.95367431640625;
  t1868 = t2 * 1.48773193359375;
  t1871 = t5 * 0.476837158203125;
  t1872 = t2 * 5.7220458984375;
  t1874 = t3 * 2.47955322265625;
  t1875 = t2 * 0.751495361328125;
  t1876 = t2 * 0.21616617838541671;
  t1877 = t2 * 6.4849853515625;
  t1878 = t3 * 6.4849853515625;
  t1881 = t5 * 0.0095367431640625;
  t1884 = t5 * 0.0476837158203125;
  t1887 = t2 * 0.54677327473958326;
  t1892 = t2 * 0.031789143880208329;
  t1893 = t3 * 0.031789143880208329;
  t1894 = t3 * 1.080830891927083;
  t1929 = t10 * 4.5982831790123457;
  t1934 = t11 * 20.797164351851851;
  t1943 = t11 * 18.68730709876543;
  t1970 = t1108_tmp * -6.103515625;
  t1974 = t1105_tmp * -6.591796875;
  t1990 = t1105_tmp * -10.986328125;
  t2005 = t1105_tmp * -0.560619212962963;
  t2012 = t1105_tmp * -144.6759259259259;
  t2035 = t754_tmp * 32.958984375;
  t2036 = t755_tmp * 32.958984375;
  t2058 = t2 * (zeta * 6.3295717592592586);
  t2066 = t2 * t887;
  t2067 = t3 * t887;
  t2088 = t754_tmp * 98.876953125;
  t2089 = t755_tmp * 98.876953125;
  t2091 = t754_tmp * 30.309606481481481;
  t2113_tmp = t2 * t10;
  t2113 = t2113_tmp * -39.0625;
  t2132 = t1761_tmp * -26.041666666666668;
  t2146 = t1732_tmp * 5.7870370370370372;
  t2147 = t1743_tmp * 5.7870370370370372;
  t2153 = t1732_tmp * 17.578125;
  t2161 = t1743_tmp * 14.6484375;
  t2162 = t1761_tmp * 14.6484375;
  t2249 = t1732_tmp * 8.1380208333333321;
  t2259 = t1732_tmp * 43.9453125;
  t2299 = t5 * 4.76837158203125;
  t2305 = t5 * 2.384185791015625;
  t2308 = t2 * 7.43865966796875;
  t2309 = t2 * 0.41325887044270831;
  t2310 = t3 * 0.41325887044270831;
  t2323 = t13 * 8.7408371913580254;
  t2326 = t11 * 4.6718267746913584;
  t2362 = t1245_tmp * -25.318287037037042;
  t2378 = t755_tmp * -54.931640625;
  t2411 = t754_tmp * 28.404706790123459;
  t2420 = t3 * (zeta * 164.794921875);
  t2423 = t2 * t1322;
  t2435 = t2113_tmp * -4.8828125;
  t2436 = t2113_tmp * -1.9290123456790123;
  t2456 = t2113_tmp * -28.93518518518519;
  t2461_tmp = t2 * t11;
  t2461 = t2461_tmp * -9.6450617283950617;
  t2464 = t1743_tmp * -43.402777777777779;
  t2465 = t1761_tmp * -43.402777777777779;
  t2473 = t1743_tmp * -32.552083333333329;
  t2479 = t1743_tmp * -21.701388888888889;
  t2480 = t1761_tmp * -21.701388888888889;
  t2493 = t1743_tmp * -10.850694444444439;
  t2494 = t1761_tmp * -10.850694444444439;
  t2501 = t1732_tmp * 5.4253472222222223;
  t2514 = t1732_tmp * 5.9799382716049383;
  t2516 = t2113_tmp * -43.9453125;
  t2517 = t1732_tmp * 1.356336805555556;
  t2519 = t1732_tmp * 5.3530092592592586;
  t2526 = t1761_tmp * -43.9453125;
  t2585 = t5 * 0.79472859700520826;
  t2593 = eta * t2434;
  t2607_tmp = t5 * zeta_1_inv;
  t2607 = t2607_tmp * -0.0476837158203125;
  t2620 = t1108_tmp * -164.794921875;
  t2633 = t5 * t1722;
  t2642 = t755_tmp * 8.58306884765625;
  t2646 = t755_tmp * 5.245208740234375;
  t2654 = t5 * t1726;
  t2662 = t2461_tmp * -6.103515625;
  t2668 = t1743_tmp * -5.4253472222222223;
  t2669 = t1761_tmp * -5.4253472222222223;
  t2700 = t1743_tmp * 0.2260561342592593;
  t2708 = t1743_tmp * 32.958984375;
  t2717 = t1743_tmp * 22.424768518518519;
  t2720 = t1732_tmp * 11.21238425925926;
  t2721 = t1743_tmp * 11.21238425925926;
  t2723 = t2113_tmp * -50.636574074074069;
  t2735 = t1732_tmp * 0.1864963107638889;
  t2740 = t1732_tmp * 8.6564429012345681;
  t2746 = t1743_tmp * 98.876953125;
  t2785 = t754_tmp * 30.994415283203121;
  t2792 = t2113_tmp * -16.637731481481481;
  t2804 = t2113_tmp * -14.94984567901235;
  t2813 = t2113_tmp * -54.931640625;
  t2814 = t2461_tmp * -54.931640625;
  t2823 = t1732_tmp * 0.75352044753086422;
  t2824 = t1743_tmp * 0.75352044753086422;
  t2837 = t1743_tmp * 0.79119646990740744;
  t2840 = t1732_tmp * 1.243308738425926;
  t2841 = t1743_tmp * 1.243308738425926;
  t2842 = t1732_tmp * 0.52746431327160492;
  t2859 = t1743_tmp * 12.71565755208333;
  t2863 = t1732_tmp * 0.082887249228395063;
  t2864 = t1732_tmp * 0.6894712094907407;
  t2870 = t1743_tmp * 296.630859375;
  t2928 = t1743_tmp * 9.5367431640625;
  t2933 = t1743_tmp * 6.357828776041667;
  t2942 = t1732_tmp * 3.178914388020833;
  t2946 = t1732_tmp * 2.1192762586805558;
  t2961 = t1732_tmp * 24.7955322265625;
  t2971 = t1743_tmp * 23.84185791015625;
  t2978 = t1743_tmp * 11.92092895507812;
  t2997 = t2461_tmp * -4.6718267746913584;
  t2998 = t1732_tmp * 1.0596381293402779;
  t3027 = t1743_tmp * 5.9604644775390616;
  t3046 = t1743_tmp * 35.762786865234382;
  t3066 = t1761_tmp * 8.3446502685546875;
  t3156 = eta * (zeta * 26.78529715832369);
  t3162 = t11 * 13.6045762050299;
  t3174 = t10 * 15.847476912133491;
  t3229 = eta * 27.185604896074459 * zeta;
  t3238 = t3 * 2.6785297158323691;
  t3249 = t11 * 2.5170879599488809;
  t3312 = t2 * 36.910728172019667;
  t3313 = t3 * 36.910728172019667;
  t3354 = eta * 21.027929988908181 * zeta;
  t3381 = t10 * 1.673050868658372;
  t3389 = eta * 11.994514936282309 * zeta;
  t3434 = eta * t3346;
  t3436 = eta * t3347;
  t3443 = t11 * 16.497388298128861;
  t3458 = t754_tmp * 1.309241777584877;
  t3460 = eta * 7.5410913538049771 * zeta;
  t3476 = t10 * 17.51699565369406;
  t3480 = eta * 7.5705257462866511 * zeta;
  t3489 = eta * 1.068350709514853 * zeta;
  t3529 = t10 * 14.8702550817419;
  t3550 = t1108_tmp * -11.332241105444639;
  t3568 = t755_tmp * 6.2548084023558062;
  t3571 = t2 * 5.4453626091097611;
  t3572 = t3 * 5.4453626091097611;
  t3574 = t3 * 39.500954710407022;
  t3602 = eta * t3213;
  t3622 = t3 * 17.63120109652295;
  t3625 = t2 * 6.71104148582176;
  t3641 = eta * t3243;
  t3642 = eta * t3244;
  t3645 = eta * t3245;
  t3654 = t2 * 33.084257149402013;
  t3657 = t3 * 33.084257149402013;
  t3686 = eta * 2.23748477888696 * zeta;
  t3697 = t10 * 9.2423992392457563;
  t3700 = eta * 2.9375523696711028 * zeta;
  t3702 = t755_tmp * 29.213634538061829;
  t3703 = t755_tmp * 116.8545381522473;
  t3711 = t2 * 5.2098874692563646;
  t3713 = t3 * 5.2098874692563646;
  t3737 = eta * t3294;
  t3749 = t2 * 34.903067129629633;
  t3758 = t11 * 7.8884171850887341;
  t3768 = eta * t3321;
  t3777 = t2 * 8.05324978298611;
  t3800 = t11 * 2.02390882703993;
  t3804 = t11 * 1.319367208598573;
  t3812 = eta * t3667;
  t3821 = t2 * (zeta * 23.912500452112269);
  t3827 = t3 * 1.105438044041763;
  t3828 = t3 * 7.0348198031201772;
  t3853 = t2 * 3.6734121817129628;
  t3858 = t10 * 1.1773756992669751;
  t3859 = t11 * 1.08200826762635;
  t3862 = t10 * 4.1208149474344138;
  t3863 = t11 * 14.986014660493829;
  t3872 = t3 * (zeta * 11.994514936282309);
  t3880 = t10 * 1.633608782732928;
  t3883 = t11 * 2.0807760733145249;
  t3884 = t11 * 2.48131928620515;
  t3888 = t11 * 1.43745799123505;
  t3902 = t3 * 6.0193332625024114;
  t3906 = t10 * 0.7505770082826968;
  t3918 = t754_tmp * 20.662943522135421;
  t3927 = t2 * 3.620430275245949;
  t3928 = t2 * 4.3798376012731479;
  t3930 = t3 * 3.620430275245949;
  t3939 = t10 * 10.512787618754819;
  t3940 = t11 * 2.413620183497299;
  t3951 = t2 * 2.3312038845486112;
  t3962 = t11 * 1.571796558521412;
  t3970 = t754_tmp * 9.00692409939236;
  t3971 = t754_tmp * 18.013848198784721;
  t3986 = t3 * 1.441225593472705;
  t3998 = t10 * 3.2318962944878469;
  t4001 = t11 * 1.8543667263454859;
  t4003 = t13 * 0.66227383083767366;
  t4011 = t2 * 1.298268636067708;
  t4022 = t10 * 3.149479995539159;
  t4024 = t11 * 1.822106632185571;
  t4026 = t13 * 1.441225593472705;
  t4036 = t2 * 2.5019233609423219;
  t4038 = t3 * 2.5019233609423219;
  t4054 = t3 * 5.0185639181254826;
  t4072 = t2 * 7.7118108301986883;
  t4076 = t3 * 7.7118108301986883;
  t4086 = t10 * 0.85145455819589122;
  t4091 = t11 * 0.85774174442997686;
  t4093 = t13 * 1.67776037145544;
  t4095 = t754_tmp * 43.5595100308642;
  t4104 = t2 * t3185;
  t4109 = t2 * 1.8249323338638119;
  t4112 = t3 * 1.8249323338638119;
  t4115 = t11 * 14.611232427903159;
  t4119 = t13 * 3.120045603057485;
  t4121 = t10 * 1.269799691659433;
  t4122 = t10 * 2.3488645200376159;
  t4123 = t10 * 3.2071714048032409;
  t4149 = t11 * 0.63342812620563271;
  t4152 = t13 * 0.72879555784625771;
  t4154 = t10 * 3.7381678451726472;
  t4155_tmp = t3 * zeta;
  t4155 = t4155_tmp * -26.78529715832369;
  t4156 = t755_tmp * 37.234506489318093;
  t4160 = t3 * 1.2035134397907019;
  t4164 = t10 * 0.34369009512442128;
  t4168 = t10 * 2.3700572826244208;
  t4173 = t11 * 2.737398500795718;
  t4174 = t11 * 3.2283641673900458;
  t4175 = t11 * 5.4747970015914351;
  t4190 = t754_tmp * 8.2121955023871536;
  t4191 = t754_tmp * 9.11288791232639;
  t4195 = t755_tmp * 8.2121955023871536;
  t4196 = t755_tmp * 9.11288791232639;
  t4209 = t10 * 11.02682984905478;
  t4211 = t10 * 1.831996588059414;
  t4234 = t2 * 0.36027696397569442;
  t4236 = t10 * 1.147941306785301;
  t4237 = t10 * 0.602307731722608;
  t4238 = t10 * 0.71407836160542049;
  t4248 = t754_tmp * 27.020772298177079;
  t4260 = t2 * 3.82647102261767;
  t4261 = t3 * 3.82647102261767;
  t4269 = t10 * 0.90493096245659721;
  t4273 = t754_tmp * 4.4316421320408947;
  t4284 = t1245_tmp * -6.71104148582176;
  t4299 = t754_tmp * 4.0336891456886574;
  t4303 = t2 * (zeta * 2.23748477888696);
  t4308 = t10 * 0.88303177445023151;
  t4309 = t11 * 0.88303177445023151;
  t4311 = t755_tmp * 10.081279424973481;
  t4318 = t3 * (zeta * 2.5684450879509071);
  t4333 = t10 * 0.78323741018036264;
  t4335 = t10 * 0.41973443678867672;
  t4355 = t3 * t3294;
  t4380_tmp = t5 * t15;
  t4380 = t4380_tmp * 90.069240993923614;
  t4409 = t3 * t3321;
  t4418 = t754_tmp * 5.880991617838542;
  t4419 = t754_tmp * 10.331471761067711;
  t4423 = t755_tmp * 5.880991617838542;
  t4436 = t10 * 0.31600763768325618;
  t4469 = t1105_tmp * -10.19371880425347;
  t4477 = t754_tmp * 0.52981906467013884;
  t4478 = t754_tmp * 0.91128879123263884;
  t4481 = t755_tmp * 0.52981906467013884;
  t4491 = t10 * 0.8776393937475887;
  t4492 = t11 * 0.8661953019507137;
  t4526 = t2 * (zeta * 7.5705257462866511);
  t4530 = t754_tmp * 8.4653312777295522;
  t4532 = t2113_tmp * -15.847476912133491;
  t4537 = t2 * (zeta * 1.068350709514853);
  t4540 = t755_tmp * 1.030203736858603;
  t4549 = t10 * 0.33331506046248072;
  t4566 = t3 * t3398;
  t4580 = t1245_tmp * -21.545975296585649;
  t4585 = t754_tmp * 3.122400354456019;
  t4593 = t10 * 0.15254079559702929;
  t4599 = t11 * 0.44858014142071762;
  t4602 = t13 * 0.30552899395978012;
  t4612_tmp = t5 * std::pow(zeta_1_inv, 5.0);
  t4626 = t10 * 0.44787371600115738;
  t4646 = t5 * 0.39736429850260419;
  t4655 = t10 * 0.56867246274594907;
  t4685 = t754_tmp * 2.6490953233506951;
  t4686 = t754_tmp * 5.03328111436632;
  t4687 = t754_tmp * 10.278489854600689;
  t4688 = t754_tmp * 14.093187120225689;
  t4698 = t755_tmp * 5.03328111436632;
  t4699 = t755_tmp * 10.278489854600689;
  t4700 = t755_tmp * 14.093187120225689;
  t4710 = t10 * 0.8846801004292052;
  t4719 = t3 * (zeta_1_inv * 7.0760279525945213);
  t4724 = t3 * t3227;
  t4734 = t10 * 0.9772218303915895;
  t4749 = t754_tmp * 3.973642985026042;
  t4768 = t3 * (zeta * 3.6792990602092979);
  t4796 = t1108_tmp * -2.5207613721305941;
  t4807 = t1245_tmp * -12.53905119719329;
  t4821 = t755_tmp * -5.2334349832417049;
  t4830 = t2 * t3581;
  t4831 = t2 * t3582;
  t4833 = t2 * t3585;
  t4841 = t1732_tmp * 7.2055392795138893;
  t4844 = t1732_tmp * 14.41107855902778;
  t4853 = t1743_tmp * 14.834933810763889;
  t4858 = t1761_tmp * 34.438239203559029;
  t4859 = t1761_tmp * 45.034620496961807;
  t4880 = t4380_tmp * 17.219119601779511;
  t4881 = t4380_tmp * 34.438239203559029;
  t4882 = t4380_tmp * 45.034620496961807;
  t4900 = t1245_tmp * -1.3751748167438269;
  t4903 = t1108_tmp * -9.1246616693190585;
  t4921 = t1732_tmp * 16.530354817708329;
  t4998 = t1105_tmp * -1.2927585177951391;
  t5022 = t1732_tmp * 4.1443624614197532;
  t5024 = t1743_tmp * 4.1443624614197532;
  t5029 = t5 * 0.079472859700520829;
  t5064 = t10 * 0.043562900872878077;
  t5065 = t1108_tmp * -1.9944744345582559;
  t5074 = t1732_tmp * 20.662943522135421;
  t5075 = t1732_tmp * 21.616617838541671;
  t5087_tmp = t5 * t14;
  t5087 = t5087_tmp * 20.662943522135421;
  t5099 = t1245_tmp * -10.831856433256171;
  t5109 = t4612_tmp * 33.113691541883682;
  t5117 = t11 * 0.01860253604841821;
  t5121 = t1732_tmp * 9.00692409939236;
  t5123 = t1732_tmp * 18.013848198784721;
  t5126 = t1743_tmp * 13.775295681423611;
  t5127 = t1743_tmp * 18.013848198784721;
  t5130 = t1761_tmp * 9.00692409939236;
  t5148 = t5087_tmp * 9.00692409939236;
  t5149 = t5087_tmp * 18.013848198784721;
  t5153 = t4380_tmp * 9.00692409939236;
  t5164 = t4612_tmp * 6.6227383083767357;
  t5189 = t1105_tmp * -0.51922268337673616;
  t5207 = t2607_tmp * -0.66227383083767366;
  t5221 = t2 * 0.052981906467013888;
  t5252 = t1732_tmp * 2.6373215663580249;
  t5254 = t1743_tmp * 2.6373215663580249;
  t5287 = t1732_tmp * 1.3245476616753471;
  t5288 = t1732_tmp * 1.8013848198784721;
  t5289 = t1732_tmp * 2.6490953233506951;
  t5302 = t1743_tmp * 0.66227383083767366;
  t5303 = t1743_tmp * 1.3245476616753471;
  t5312 = t1761_tmp * 1.3245476616753471;
  t5313 = t1761_tmp * 2.6490953233506951;
  t5332 = t5087_tmp * 1.3245476616753471;
  t5333 = t5087_tmp * 1.8013848198784721;
  t5334 = t5087_tmp * 2.6490953233506951;
  t5346 = t4380_tmp * 1.3245476616753471;
  t5347 = t4380_tmp * 2.6490953233506951;
  t5356 = t4612_tmp * 0.66227383083767366;
  t5361 = t1105_tmp * -0.235475139853395;
  t5364 = t1761_tmp * 7.0760279525945213;
  t5369 = t1761_tmp * 3.387898574640722;
  t5379 = t1732_tmp * 2.066294352213542;
  t5381 = t1732_tmp * 8.2651774088541661;
  t5396 = t1743_tmp * 1.986821492513021;
  t5397 = t1743_tmp * 3.973642985026042;
  t5403 = t1761_tmp * 2.781550089518229;
  t5405 = t1761_tmp * 5.563100179036458;
  t5406 = t1761_tmp * 6.7551930745442714;
  t5408 = t1761_tmp * 8.7420145670572911;
  t5441 = t5087_tmp * 2.066294352213542;
  t5477 = t1105_tmp * -0.2445644802517361;
  t5482 = t2113_tmp * -16.24778464988426;
  t5490 = t1732_tmp * 1.8461250964506171;
  t5495 = t1743_tmp * 1.8461250964506171;
  t5507 = t1732_tmp * 1.648325978973765;
  t5512 = t1761_tmp * 5.2334349832417049;
  t5524 = t1732_tmp * 2.9010537229938271;
  t5527 = t1743_tmp * 2.9010537229938271;
  t5531 = t1761_tmp * 5.071545824592496;
  t5533 = t1761_tmp * 6.7080980465735918;
  t5539 = t1732_tmp * 10.331471761067711;
  t5552 = t5087_tmp * 10.331471761067711;
  t5579 = t1732_tmp * 0.26490953233506942;
  t5596 = t1761_tmp * 0.26490953233506942;
  t5597 = t1761_tmp * 2.25173102484809;
  t5598 = t1761_tmp * 2.9140048556857638;
  t5599 = t1761_tmp * 3.4438239203559031;
  t5600 = t1761_tmp * 4.50346204969618;
  t5601 = t1761_tmp * 5.8280097113715277;
  t5622 = t5087_tmp * 0.26490953233506942;
  t5630 = t4380_tmp * 0.26490953233506942;
  t5632 = t4380_tmp * 3.4438239203559031;
  t5643 = t4612_tmp * 3.3113691541883679;
  t5671 = t1761_tmp * 1.7248553994261191;
  t5682 = t1732_tmp * 0.87596752025462965;
  t5683 = t2113_tmp * -10.831856433256171;
  t5684 = t1732_tmp * 0.77235845871913578;
  t5687 = t2461_tmp * -2.413620183497299;
  t5694 = t2113_tmp * -3.2318962944878469;
  t5737 = t1105_tmp * -0.029434392481674381;
  t5815 = t2461_tmp * -0.63342812620563271;
  t5824 = t2461_tmp * -5.4747970015914351;
  t5825 = t2461_tmp * -2.737398500795718;
  t5828 = t2113_tmp * -1.3751748167438269;
  t5900 = t2461_tmp * -0.44858014142071762;
  t5901 = t2113_tmp * -0.8846801004292052;
  t560 = t4 * 43.402777777777779;
  t563 = t4 * 32.552083333333329;
  t571 = t4 * 10.850694444444439;
  t572 = t4 * 8.1380208333333321;
  t615 = t12 * 32.552083333333329;
  t625 = t12 * 14.46759259259259;
  t635 = t12 * 27.006172839506171;
  t637 = t12 * 17.08984375;
  t647 = t12 * 71.614583333333329;
  t736 = eta * t309;
  t798_tmp = t4 * zeta_1_inv;
  t798 = t798_tmp * 86.805555555555557;
  t896 = t14 * t76;
  t933 = t4 * 5.4253472222222223;
  t937 = t4 * 1.356336805555556;
  t1003 = t12 * 6.103515625;
  t1008 = t12 * 3.6168981481481479;
  t1009 = t12 * 2.7126736111111112;
  t1020 = t12 * 6.7515432098765427;
  t1056 = t12 * 50.636574074074069;
  t1061 = t12 * 153.80859375;
  t1159 = eta * (t10 * 7.32421875);
  t1186 = t12 * t224;
  t1208 = t4 * t269;
  t1237 = t798_tmp * 21.701388888888889;
  t1244 = t4 * t274;
  t1250 = eta * (t10 * 15.19097222222222);
  t1328 = t14 * t146;
  t1400 = t4 * 0.019073486328125;
  t1430 = t12 * 18.310546875;
  t1447 = t12 * 30.517578125;
  t1453 = t12 * 9.04224537037037;
  t1467 = t12 * 12.659143518518521;
  t1476 = t12 * 54.931640625;
  t1480 = t12 * 49.641927083333329;
  t1485 = t12 * 5.8774594907407414;
  t1556_tmp = eta * t12;
  t1556 = t1556_tmp * -32.552083333333329;
  t1557_tmp = t4 * zeta;
  t1557 = t1557_tmp * -32.552083333333329;
  t1603 = t4 * t504;
  t1657 = t2 * 96.450617283950621 * zeta;
  t1665 = t798_tmp * 162.76041666666671;
  t1669 = t798_tmp * 40.690104166666671;
  t1686 = eta * (t10 * 197.75390625);
  t1755 = t15 * t292;
  t1762 = t14 * t296;
  t1776 = t11 * t301;
  t1812_tmp = t4 * t15;
  t1812 = t1812_tmp * 130.20833333333329;
  t1813_tmp = t4 * t16;
  t1813 = t1813_tmp * 130.20833333333329;
  t1824_tmp = t4 * t14;
  t1824 = t1824_tmp * 86.805555555555557;
  t1826 = t1812_tmp * 86.805555555555557;
  t1827 = t1813_tmp * 86.805555555555557;
  t1861 = t4 * 0.95367431640625;
  t1870 = t4 * 0.476837158203125;
  t1880 = t4 * 0.0095367431640625;
  t1882 = t4 * 0.0286102294921875;
  t1888 = t4 * 1.430511474609375;
  t1981 = t798_tmp * -5.4253472222222223;
  t1989 = t798_tmp * -1.356336805555556;
  t2019 = eta * t1446;
  t2025 = t2 * 24.112654320987652 * zeta;
  t2054 = t1391 * zeta;
  t2070 = t1396 * zeta_1_inv;
  t2079 = eta * t1483;
  t2115 = t2 * t585;
  t2116 = t10 * (t2 * 4.8828125);
  t2160 = t14 * (t2 * 14.6484375);
  t2168 = t10 * (t2 * 32.552083333333329);
  t2172 = t10 * t568;
  t2173 = t11 * t568;
  t2228 = t14 * t566;
  t2232 = t1824_tmp * 21.701388888888889;
  t2234 = t1812_tmp * 21.701388888888889;
  t2235 = t1813_tmp * 21.701388888888889;
  t2255 = t2 * t642;
  t2262 = t15 * t578;
  t2306 = t4 * 0.15894571940104171;
  t2311 = t4 * 1.843770345052083;
  t2314 = t4 * 23.84185791015625;
  t2380 = t1557_tmp * -0.095367431640625;
  t2469 = t2 * t1002;
  t2476 = t1812_tmp * -32.552083333333329;
  t2507 = t2 * t1010;
  t2546 = t1824_tmp * 162.76041666666671;
  t2551 = t1824_tmp * 40.690104166666671;
  t2582 = t4 * 1.2291802300347221;
  t2604 = t1557_tmp * -0.0476837158203125;
  t2609 = t4 * t1714;
  t2652 = t4 * t1725;
  t2690 = t2 * t1446;
  t2715 = t14 * t1384;
  t2724 = t10 * t1388;
  t2726 = t2 * t1469;
  t2729 = t10 * t1395;
  t2730 = t11 * t1395;
  t2734 = t2 * t1483;
  t2757 = t1557_tmp * -4.76837158203125;
  t2759 = t1557_tmp * -2.384185791015625;
  t2769 = t4 * t2110;
  t2786 = t798_tmp * 30.994415283203121;
  t2849 = t2 * t1934;
  t2866 = t2 * t1943;
  t2882 = t1557_tmp * -1.1920928955078121;
  t2948 = t1824_tmp * 2.1192762586805558;
  t2962 = t1824_tmp * 24.7955322265625;
  t2999 = t1824_tmp * 1.0596381293402779;
  t3069 = t1812_tmp * 8.3446502685546875;
  t3098 = t1812_tmp * 29.802322387695309;
  t3365 = t12 * 4.4740276572145063;
  t3557 = t4 * 5.2981906467013893;
  t3558 = t4 * 10.59638129340278;
  t3760 = t12 * 19.591531635802468;
  t3802 = t12 * 1.9338395860460069;
  t3818 = t3625 * zeta;
  t3908 = t12 * 0.8650179262514468;
  t3925 = t798_tmp * 20.662943522135421;
  t3935 = t12 * 1.983407102985147;
  t3957 = t4 * 0.61459011501736116;
  t3958 = t4 * 2.6490953233506951;
  t3976 = t798_tmp * 9.00692409939236;
  t3977 = t798_tmp * 18.013848198784721;
  t4014 = t4 * 1.986821492513021;
  t4016 = t4 * 7.947285970052083;
  t4017 = t4 * 15.89457194010417;
  t4025 = t12 * 5.533665786554784;
  t4030 = t12 * 1.236244484230324;
  t4078 = t12 * 3.25532607090326;
  t4092 = t12 * 1.363401059751157;
  t4125 = t12 * 4.2208918818721068;
  t4151 = t12 * 0.81709873529128085;
  t4242 = t12 * 0.666394645785108;
  t4244 = t12 * 11.597150637779709;
  t4254 = t798_tmp * 27.020772298177079;
  t4289 = eta * (t10 * 15.98287511754919);
  t4317 = eta * (t11 * 2.9434392481674378);
  t4337 = eta * (t10 * 12.53905119719329);
  t4363 = eta * (t10 * 2.8808028609664351);
  t4364 = eta * (t10 * 3.5526134349681708);
  t4396 = eta * t4211;
  t4401 = eta * (t11 * 9.1246616693190585);
  t4427 = t798_tmp * 10.331471761067711;
  t4551 = t12 * 0.145994586709105;
  t4601 = t12 * 0.35321270978009262;
  t4703 = t4 * (zeta_1_inv * 1.2482537163628471);
  t4760 = t4 * t3243;
  t4762 = t4 * t3244;
  t4764 = t4 * t3245;
  t4788 = t2 * t3529;
  t4861 = t1824_tmp * 7.2055392795138893;
  t4862 = t1824_tmp * 14.41107855902778;
  t4912 = t4 * t3619;
  t4944 = t1824_tmp * 16.530354817708329;
  t4959 = t1812_tmp * 19.868214925130211;
  t4964 = t1813_tmp * 19.868214925130211;
  t4975_tmp = t5 * t16;
  t4975 = t4975_tmp * 19.868214925130211;
  t5028 = t4 * 0.079472859700520829;
  t5068 = t2 * t3758;
  t5084 = t1824_tmp * 21.616617838541671;
  t5145 = t1812_tmp * 6.6227383083767357;
  t5146 = t1812_tmp * 13.24547661675347;
  t5151 = t1813_tmp * 6.6227383083767357;
  t5152 = t1813_tmp * 13.24547661675347;
  t5160 = t4975_tmp * 6.6227383083767357;
  t5161 = t4975_tmp * 13.24547661675347;
  t5182 = t12 * 0.051804530767746923;
  t5205 = t798_tmp * -0.62412685818142366;
  t5235 = t798_tmp * -3.973642985026042;
  t5283 = t2 * t4001;
  t5316 = t1824_tmp * 0.66227383083767366;
  t5318 = t1824_tmp * 1.3245476616753471;
  t5338 = t1813_tmp * -5.2981906467013893;
  t5339 = t1813_tmp * 0.66227383083767366;
  t5340 = t1813_tmp * 1.3245476616753471;
  t5352 = t4975_tmp * 0.66227383083767366;
  t5353 = t4975_tmp * 1.3245476616753471;
  t5419 = t1824_tmp * 8.2651774088541661;
  t5433 = t1812_tmp * 2.781550089518229;
  t5435 = t1812_tmp * 5.563100179036458;
  t5436 = t1812_tmp * 6.7551930745442714;
  t5438 = t1812_tmp * 8.7420145670572911;
  t5439 = t1812_tmp * 9.9341074625651036;
  t5449 = t1813_tmp * 9.9341074625651036;
  t5469 = t4975_tmp * 1.986821492513021;
  t5472 = t4975_tmp * 9.9341074625651036;
  t5499 = t2 * t4122;
  t5523 = t2 * t4211;
  t5614 = t1812_tmp * 2.25173102484809;
  t5615 = t1812_tmp * 2.9140048556857638;
  t5616 = t1812_tmp * 3.3113691541883679;
  t5617 = t1812_tmp * 4.50346204969618;
  t5618 = t1812_tmp * 5.8280097113715277;
  t5626 = t1813_tmp * 3.3113691541883679;
  t5639 = t4975_tmp * 3.3113691541883679;
  t5654 = t2 * t3859;
  t5657 = t2 * t3862;
  t5686 = t2 * t4436;
  t5768 = t1824_tmp * -3.973642985026042;
  t5823 = t2 * t4655;
  t5849 = t2 * t4734;
  t5883 = t2 * t4308;
  t5884 = t2 * t4309;
  t2218 = t14 * t560;
  t2219 = t15 * t560;
  t2226 = t15 * t563;
  t2227 = t16 * t563;
  t2247 = t14 * t571;
  t2248 = t15 * t571;
  t2504 = t14 * t933;
  t2505 = t15 * t933;
  t2980 = t14 * (t4 * 11.92092895507812);
  t4705 = t3958 * zeta_1_inv;
  t4875 = t16 * t3557;
  t5415 = t14 * t4014;
  t5447 = t16 * t4016;
  t5451 = t16 * t4017;
  t5909 = ((-t34 - t309) + t592) + t615;
  t5947 =
      -t6 *
      ((((((-t67 + t305) + t10 * 39.0625) - t11 * 65.104166666666671) + t776) +
        t805) +
       t896);
  t5988 = (((((((t43 - t34) + t593) + t647) + t736) - t616) - t640) + t1537) +
          t1556;
  t5989 = (((((((-t34 + t77) + t593) + t647) - t616) - t640) + t1108) + t1154) +
          t1186;
  t6032_tmp = t227 + t227 * zeta_1_inv;
  t6033_tmp = -t478 + t1036;
  t6059_tmp = t440 + t440 * zeta_1_inv;
  t6192_tmp = eta * t1727 + t5109;
  t6228_tmp = t3 * t10;
  t6266_tmp = (eta * (zeta_1_inv * 0.66227383083767366) +
               t4612_tmp * 16.556845770941841) -
              t1761_tmp * 17.219119601779511;
  t5087_tmp = t1813_tmp * 7.947285970052083;
  t6415_tmp = t1813_tmp * 15.89457194010417;
  t6543_tmp = (-(eta * 6.4849853515625) + t1245_tmp * -15.07040895061728) +
              t1743_tmp * 0.52746431327160492;
  t6548_tmp = t1105_tmp * 26.137740523726851;
  t4380_tmp = eta * t41 + eta * 0.54677327473958326;
  t6661_tmp = (-(t2 * 0.247955322265625) - zeta * 0.1621246337890625) +
              t4 * 0.2384185791015625;
  t5955_tmp = t21 + t21 * zeta_1_inv;
  b_t5955_tmp = ((t5955_tmp + eta * 7.8125 * zeta) + t11 * t224) +
                t1245_tmp * -6.510416666666667;
  t5962_tmp = t56 + t89;
  t6018_tmp = t223 + t223 * zeta_1_inv;
  t6047_tmp = t436 + t436 * zeta_1_inv;
  t6149 =
      t6 * (((((((((((t642 + t699) - t501) + t959) + t1396) + t1676) - t1475) +
                t2066) +
               t2089) +
              t2153) +
             t14 * t578) +
            t1245_tmp * -54.931640625);
  t6164 =
      t6 * (((((((((((t642 - t501) + t959) + t1076) + t1676) - t1396) - t1475) +
                t10 * t835) +
               t2066) +
              t2153) -
             t2089) +
            t1743_tmp * -43.9453125);
  t6200 =
      t6 *
      ((((((((((((t5962_tmp - t244) + t587) + t705) + t959) + t1365) - t1002) +
            t1676) +
           t2019) +
          t2036) +
         t2066) +
        t2153) +
       t2161);
  t6203_tmp = (t146 + t405) + zeta * 2.197265625;
  t6212 =
      t6 *
      ((((((((((((t5962_tmp + t244) + t705) - t587) + t1002) + t1365) - t959) +
            t2019) +
           t2036) -
          t1676) +
         t2161) +
        t1105_tmp * -54.931640625) -
       t2153);
  t6219_tmp = t244 + t11 * 16.6015625;
  b_t6219_tmp = ((t6219_tmp - t595) + t1004) - t637;
  t6317_tmp = t218 + t218 * zeta_1_inv;
  t6187_tmp = -t124 + t296;
  t6616_tmp = -(t1824_tmp * 3.178914388020833) - zeta * 0.51922268337673616;
  sfvals_tmp =
      (-t8 *
           ((((((((((t1317 - t2998) - t3425) + t4010) + t16 * t3958) + t5352) +
                t5396) +
               t5597) +
              t5616) -
             t754_tmp * 1.3245476616753471) -
            0.0095367431640625) +
       -t6 *
           (((((((((((((((((t167 - t2999) + t3217) + t3489) - t3582) + t3625) -
                       t3859) +
                      t2 * 6.4755663459683639 * zeta) +
                     t4038) +
                    t4396) +
                   t4530) +
                  t4698) +
                 t4710) +
                t5254) +
               t5507) -
              t5622) -
             t798_tmp * 1.3245476616753471) +
            0.003814697265625)) +
      ((((((((((((((((((((-t458 + t965) - t964) + t1880) - t1881) + t2604) -
                     t3249) -
                    t3580) +
                   t4078) +
                  eta * 0.034355822904610339 * zeta) +
                 t4333) -
                t4026) +
               t1556_tmp * -0.81709873529128085) +
              t4831) +
             eta * t4492) +
            t4155_tmp * -0.064873401029610339) +
           t5654) +
          t1245_tmp * -0.33331506046248072) +
         t3 * t4335) +
        t5901) +
       0.0001373291015625);
  b_sfvals_tmp = (((((((((((((((((((eta * (zeta_1_inv / 4.0) + t740) + t1699) +
                                  t5 * t1316) +
                                 eta * 0.7092746687524113 * zeta) -
                                t3562) +
                               t4011) +
                              t4151) -
                             t3827) +
                            eta * (t11 * 3.945856918523341)) -
                           t3957) +
                          t4537) +
                         t4549) +
                        t4155_tmp * -1.92088845335407) -
                       t4492) +
                      t755_tmp * -1.109252741307388) +
                     t5205) +
                    t1245_tmp * -2.3008275915075229) +
                   t5523) +
                  0.0001373291015625) *
                 xi;
  c_sfvals_tmp =
      t9 * (((((t1503 + t5339) + t5356) - t5579) - t5596) + 0.0095367431640625);
  d_sfvals_tmp = t7 * ((((((((((((((t2928 + t3563) + t3568) - t3357) +
                                 t340_tmp * -1.109252741307388) +
                                t4036) +
                               t77_tmp * -1.92088845335407) +
                              t4686) -
                             t4335) +
                            t5252) +
                           t5369) +
                          t5415) +
                         t5614) -
                        t5630) -
                       0.003814697265625);
  sfvals[0] = ((sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp) - d_sfvals_tmp;
  sfvals[1] = ((sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp) + d_sfvals_tmp;
  sfvals_tmp =
      (t8 * ((((((((((-t1317 + t2998) - t3425) + t4010) + t2 * t3213) + t5352) +
                 t5396) +
                t5597) +
               t1813_tmp * -2.6490953233506951) -
              t5616) +
             0.0095367431640625) +
       t6 * (((((((((((((((((t167 + t2999) + t3217) + t3489) + t3582) + t3859) +
                        t4038) -
                       t3625) +
                      t4396) +
                     t1105_tmp * -6.4755663459683639) +
                    t4698) +
                   t4 * t3213) -
                  t4530) -
                 t4710) +
                t5254) -
               t5507) -
              t5622) -
             0.003814697265625)) +
      ((((((((((((((((((((t458 - t964) - t965) + t1880) + t1881) + t2604) -
                     t3249) -
                    t3580) +
                   t4078) +
                  t4333) +
                 eta * t4151) -
                t4026) +
               t77_tmp * -0.034355822904610339) +
              t3 * t3563) +
             t4831) +
            eta * t4549) +
           t1108_tmp * -0.8661953019507137) +
          t5654) +
         t5901) +
        t6228_tmp * -0.41973443678867672) +
       0.0001373291015625);
  b_sfvals_tmp = (((((((((((((((((((t340_tmp * -0.25 + t740) - t1699) +
                                  t2607_tmp * -0.0095367431640625) +
                                 t3827) -
                                t3562) +
                               t4011) +
                              t4151) +
                             t77_tmp * -0.7092746687524113) +
                            t3 * (zeta * 1.92088845335407)) -
                           t3957) +
                          t3 * t3378) +
                         t4537) +
                        t4549) +
                       eta * (t10 * 2.3008275915075229)) +
                      t1108_tmp * -3.945856918523341) -
                     t4492) +
                    t5205) +
                   t5523) +
                  0.0001373291015625) *
                 xi;
  c_sfvals_tmp =
      t9 * (((((t1503 + t5356) + t5579) - t5339) - t5596) - 0.0095367431640625);
  d_sfvals_tmp = t7 * ((((((((((((((-t2928 + t3357) + eta * t3378) + t3563) +
                                 eta * 1.92088845335407 * zeta) -
                                t3568) +
                               t4036) +
                              t4686) -
                             t4335) +
                            t5252) +
                           t5415) +
                          t5614) +
                         t5630) -
                        t5369) -
                       0.003814697265625);
  sfvals[2] = ((sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp) + d_sfvals_tmp;
  sfvals[3] = ((sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp) - d_sfvals_tmp;
  sfvals[4] = (((t10 * -10.416666666666666 + t11 * 36.458333333333336) -
                t12 * 52.083333333333336) +
               t13 * 26.041666666666668) +
              zeta;
  sfvals_tmp =
      (t8 * ((((((((((t1714 - t1709) - t2942) + t3027) + t4061) - t4749) +
                 t5406) +
                t5439) +
               t5447) +
              t5469) -
             0.0286102294921875) +
       t6 * (((((((((((((((((eta * t40 + t1296) - t2646) + t2837) + t3818) +
                         t77_tmp * -1.169134069372106) +
                        t3951) -
                       t3662) -
                      t3713) +
                     t4299) +
                    eta * t4123) +
                   t4655) -
                  t4427) -
                 t4599) +
                t5682) -
               t5419) -
              t5441) +
             0.029754638671875)) +
      ((((((((((((((((((((t844 + t1892) - t1893) +
                        eta * 0.13293513545283561 * zeta) +
                       t3833) +
                      t4091) -
                     t3908) +
                    eta * t3883) +
                   t4602) -
                  t4164) +
                 t1245_tmp * -0.85145455819589122) +
                t1556_tmp * -1.363401059751157) +
               t4912) +
              t5029) +
             t5189) +
            t5499) -
           t5028) +
          t6228_tmp * -0.7505770082826968) +
         t4155_tmp * -0.0088303177445023147) +
        t5825) -
       0.0011444091796875);
  b_sfvals_tmp =
      t9 * (((((t1504 + t5626) + t5643) - t5287) - t5312) + 0.0476837158203125);
  c_sfvals_tmp =
      (((((((((((((((((t845 + t3512) + t3888) + t3958) + t4054) + t4219) +
                  t4364) +
                 t3 * t3320) -
                t4242) +
               t4760) +
              t3 * (zeta * 8.756731763298129)) +
             t4796) -
            t4491) +
           t5221) +
          t2607_tmp * -0.13245476616753471) +
         t5657) +
        t5737) -
       0.0019073486328125) *
      xi;
  d_sfvals_tmp =
      t7 *
      ((((((((((((((-t3204 + t3513) + t3571) + t340_tmp * -1.49081665792583) +
                 t77_tmp * -2.5684450879509071) +
                t4190) +
               t4311) -
              t4238) +
             t5022) +
            t5126) +
           t5433) +
          t5531) -
         t5316) -
        t5632) -
       0.049591064453125);
  sfvals[5] = ((sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp) + d_sfvals_tmp;
  e_sfvals_tmp =
      (-t8 * ((((((((((t888 - t2103) - t2946) + t4008) - t4685) + t4875) +
                  t5145) +
                 t5353) +
                t5397) +
               t5600) -
              0.019073486328125) +
       t6 * ((((((((((((((((t4380_tmp + t3581) + t3686) + t3928) + t3976) +
                        t4076) +
                       t4273) +
                      t4436) -
                     t4149) +
                    t4699) +
                   t4861) +
                  t4900) +
                 t5333) +
                t5361) +
               t5495) +
              t5684) -
             0.02593994140625)) +
      ((((((((((((((((((((-t456 + t1381) - t1380) + t1870) - t1871) + t2759) +
                     eta * t3381) +
                    t4024) +
                   t4152) +
                  t4214) +
                 t3 * t3318) -
                t3935) +
               t77_tmp * -0.49281179169077932) -
              t4237) +
             t4833) +
            t1108_tmp * -1.319367208598573) +
           eta * t4551) +
          t5687) +
         t6228_tmp * -3.7381678451726472) +
        t5849) +
       0.006866455078125);
  f_sfvals_tmp =
      (((((((((((((((((-t837 - t1859) + t2633) + t3238) + t3557) - t3533) +
                  t4258) +
                 t4363) +
                t4 * t3346) +
               t2 * (zeta * 2.8845704632040889)) +
              t4566) +
             t4593) +
            t4768) +
           t5065) +
          t5117) -
         t5182) +
        t2113_tmp * -1.1773756992669751) +
       0.034332275390625) *
      xi;
  g_sfvals_tmp =
      t9 * (((((t1098 + t5151) + t5164) - t5289) - t5313) + 0.095367431640625);
  h_sfvals_tmp = t7 * ((((((((((((((t2823 + t2933) + t2980) - t3293) - t3442) +
                                t77_tmp * -1.8991070029176309) +
                               t340_tmp * -1.0738137327594519) +
                              t4477) +
                             t4540) -
                            t4260) +
                           t5064) +
                          t5153) +
                         t5615) +
                        t5671) +
                       0.12969970703125);
  sfvals[6] = ((e_sfvals_tmp - f_sfvals_tmp) - g_sfvals_tmp) + h_sfvals_tmp;
  sfvals[7] = ((e_sfvals_tmp + f_sfvals_tmp) + g_sfvals_tmp) - h_sfvals_tmp;
  sfvals[8] = ((sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp) - d_sfvals_tmp;
  sfvals_tmp =
      (t754_tmp * 5.245208740234375 - t1732_tmp * 0.79119646990740744) -
      t1824_tmp * 5.9604644775390616;
  b_sfvals_tmp =
      (-t8 * ((((((((((t3426 - t3619) + t3641) + t4419) + t5302) + t5381) -
                  t5439) -
                 t5403) -
                t5639) -
               t5087_tmp) +
              0.079472859700520829) +
       t6 * (((((((((((((((t6616_tmp + t3572) + t3818) + t3951) + t4122) +
                       t4195) +
                      t4299) -
                     t4042) -
                    t4173) +
                   eta * 0.029434392481674381 * zeta) +
                  t5024) +
                 t1245_tmp * -4.1208149474344138) +
                t5235) +
               t5682) -
              t5332) +
             0.031789143880208329)) +
      ((((((((((((((((((((t845 + t1401) - t1402) + t1884) - t1882) + t2609) +
                     t3833) +
                    t4091) -
                   t3908) +
                  eta * t4242) +
                 t77_tmp * -0.10848339693045909) +
                t4602) -
               t4164) +
              t1108_tmp * -1.43745799123505) +
             eta * t4491) +
            t3 * t3513) +
           t5477) +
          t5823) +
         t6228_tmp * -0.71407836160542049) +
        t5900) -
       0.0011444091796875);
  c_sfvals_tmp =
      ((((((((((((((((((t754_tmp * -0.78125 + t845) - t1875) + t2311) + t2607) -
                    t3295) +
                   t3986) +
                  t4086) +
                 t4092) +
                t4219) +
               t4318) -
              t3883) +
             t4364) +
            t2 * (zeta * 1.169134069372106)) +
           t4724) +
          t4 * (zeta_1_inv * 1.872380574544271)) +
         t4796) +
        t2113_tmp * -3.2071714048032409) -
       0.0011444091796875) *
      xi;
  d_sfvals_tmp =
      t7 * ((((((((((((sfvals_tmp + t3248) + eta * 8.756731763298129 * zeta) +
                     t3711) +
                    eta * t3320) +
                   t3906) +
                  t3991) -
                 t4311) +
                t5346) -
               t5126) -
              t5436) -
             t5531) +
            0.031789143880208329);
  e_sfvals_tmp = t9 * (((((t3812 + t16 * t4014) + t5643) - t5379) - t5599) +
                       0.079472859700520829);
  sfvals[9] = ((b_sfvals_tmp + c_sfvals_tmp) + d_sfvals_tmp) - e_sfvals_tmp;
  f_sfvals_tmp = eta * t1722 + t5164;
  g_sfvals_tmp =
      (-t8 * ((((((((((t1721 - t2978) + t3193) + t3434) - t3970) - t4841) +
                  t4875) +
                 t5145) +
                t5160) -
               t5598) -
              0.476837158203125) +
       t6 * ((((((((((((((((t1285 + t2824) + t2948) + t3585) +
                         t77_tmp * -2.8845704632040889) +
                        t3928) +
                       t4273) -
                      t3940) +
                     t4481) +
                    eta * t3858) +
                   t4705) +
                  t4734) -
                 t4261) +
                t5334) +
               t5361) +
              t5684) -
             0.19073486328125)) +
      ((((((((((((((((((((-t837 - t956) + t1379) + t1400) - t1405) + t2380) +
                     t4024) +
                    eta * 0.1536710762683256 * zeta) +
                   t4152) +
                  t4214) -
                 t3935) -
                t4237) +
               t4830) +
              t1245_tmp * -0.15254079559702929) +
             eta * t5182) +
            t4155_tmp * -0.2757413887683256) +
           t5686) +
          t1108_tmp * -0.01860253604841821) +
         t5815) +
        t3 * t5064) +
       0.006866455078125);
  h_sfvals_tmp = ((((((((((((((((((t199 + t837) + t1887) +
                                 t2607_tmp * -0.095367431640625) +
                                t2582) +
                               t3381) +
                              eta * 0.851996151017554 * zeta) -
                             t3545) -
                            t3804) +
                           t4303) +
                          t4551) +
                         eta * (t11 * 1.9944744345582559)) -
                        t4160) +
                       t4703) +
                      t1245_tmp * -2.8808028609664351) +
                     t755_tmp * -1.0738137327594519) +
                    t4155_tmp * -1.8991070029176309) +
                   t5828) -
                  0.006866455078125) *
                 xi;
  i_sfvals_tmp =
      t9 * ((((f_sfvals_tmp + t5340) - t5130) - t5288) + 0.476837158203125);
  j_sfvals_tmp =
      t7 *
      ((((((((((((((t2933 - t3129) + t3318) + t340_tmp * -1.7248553994261191) +
                 t77_tmp * -3.6792990602092979) +
                t4072) +
               t4540) -
              t4154) +
             t4687) +
            t5347) +
           t5490) +
          t5671) +
         t5768) -
        t5617) +
       0.19073486328125);
  sfvals[10] = ((g_sfvals_tmp - h_sfvals_tmp) + i_sfvals_tmp) - j_sfvals_tmp;
  k_sfvals_tmp =
      (t8 * ((((((((((-t1721 - t2978) + t3193) + t3434) + t3970) + t4841) +
                 t5160) +
                t5338) -
               t5145) -
              t5598) +
             0.476837158203125) +
       t6 * ((((((((((((((((-t1285 - t2824) + t2948) +
                          eta * 2.8845704632040889 * zeta) +
                         t3585) +
                        t3928) +
                       t4261) +
                      t4273) -
                     t3940) +
                    t4705) +
                   t4734) -
                  t4481) +
                 t1245_tmp * -1.1773756992669751) +
                t5361) +
               t5684) -
              t5334) -
             0.19073486328125)) +
      ((((((((((((((((((((t837 - t956) + t1400) + t1405) - t1379) + t2380) +
                     t4024) +
                    t4152) +
                   t4214) -
                  t3935) +
                 t77_tmp * -0.1536710762683256) -
                t4237) +
               eta * t4593) +
              t4830) +
             t3 * t3442) +
            eta * t5117) +
           t5686) +
          t1556_tmp * -0.051804530767746923) +
         t5815) +
        t6228_tmp * -0.043562900872878077) +
       0.006866455078125);
  l_sfvals_tmp = ((((((((((((((((((t199 - t837) + t1887) +
                                 t5 * (zeta_1_inv * 0.095367431640625)) +
                                t2582) +
                               t3381) -
                              t3545) +
                             t4160) +
                            t4258) -
                           t3804) +
                          t4303) +
                         t4363) +
                        t3 * t3319) +
                       t4551) +
                      t3 * (zeta * 1.8991070029176309)) +
                     t4703) +
                    t5065) +
                   t5828) -
                  0.006866455078125) *
                 xi;
  f_sfvals_tmp =
      t9 * ((((f_sfvals_tmp + t5288) - t5130) - t5340) - 0.476837158203125);
  m_sfvals_tmp = t7 * ((((((((((((((-t2933 + t3129) + t3318) + eta * t3398) +
                                 eta * 3.6792990602092979 * zeta) +
                                t4072) -
                               t4154) +
                              t4687) -
                             t4540) +
                            t5490) -
                           t5347) +
                          t5768) -
                         t5617) -
                        t5671) +
                       0.19073486328125);
  sfvals[11] = ((k_sfvals_tmp - l_sfvals_tmp) - f_sfvals_tmp) - m_sfvals_tmp;
  n_sfvals_tmp =
      (t8 * ((((((((((t3426 + t3619) + t3641) - t4419) + t5302) + t5439) +
                 t5447) -
                t5381) -
               t5403) -
              t5639) -
             0.079472859700520829) +
       t6 * (((((((((((((((t6616_tmp + t3818) + t3951) - t3572) + t4042) +
                       t4122) +
                      t4299) +
                     eta * t3862) -
                    t4173) -
                   t4195) +
                  t77_tmp * -0.029434392481674381) +
                 t5235) +
                t5332) -
               t5024) +
              t5682) +
             0.031789143880208329)) +
      ((((((((((((((((((((-t845 + t1401) + t1402) - t1882) - t1884) + t2609) +
                     t3833) +
                    eta * 0.10848339693045909 * zeta) +
                   t4091) -
                  t3908) +
                 eta * t3888) +
                t4602) -
               t4164) +
              t1556_tmp * -0.666394645785108) +
             t5477) +
            t3 * t4238) +
           t1245_tmp * -0.8776393937475887) +
          t4155_tmp * -0.20003613130545911) +
         t5823) +
        t5900) -
       0.0011444091796875);
  o_sfvals_tmp =
      ((((((((((((((((((t2 * t40 + t845) + t1875) - t2311) + t2607) + t3295) +
                   t3883) +
                  t3986) +
                 t4219) +
                t4318) +
               t4364) -
              t4086) -
             t4092) +
            t4724) +
           t4796) +
          t1105_tmp * -1.169134069372106) +
         t798_tmp * -1.872380574544271) +
        t2 * t4123) +
       0.0011444091796875) *
      xi;
  sfvals_tmp = t7 * ((((((((((((sfvals_tmp - t3248) + t3711) + t3906) + t3991) +
                            t77_tmp * -8.756731763298129) +
                           t340_tmp * -5.071545824592496) +
                          t4311) +
                         t5126) +
                        t5531) -
                       t5346) -
                      t5436) +
                     0.031789143880208329);
  p_sfvals_tmp =
      t9 *
      (((((t3812 + t5379) + t5643) + t1813_tmp * -1.986821492513021) - t5599) -
       0.079472859700520829);
  sfvals[12] = ((n_sfvals_tmp - o_sfvals_tmp) + sfvals_tmp) + p_sfvals_tmp;
  q_sfvals_tmp =
      (-t8 * ((((((((((-t1714 - t1709) + t2942) + t3027) + t4061) + t4749) +
                  t5406) -
                 t5439) +
                t5469) -
               t5087_tmp) +
              0.0286102294921875) +
       t6 * (((((((((((((((((t340_tmp * -0.78125 - t1296) + t2646) - t2837) +
                          eta * 1.169134069372106 * zeta) +
                         t3713) +
                        t3818) +
                       t3951) -
                      t3662) +
                     t4299) +
                    t4655) +
                   t1245_tmp * -3.2071714048032409) -
                  t4427) -
                 t4599) +
                t5441) +
               t5682) -
              t5419) +
             0.029754638671875)) +
      ((((((((((((((((((((-t844 + t1892) + t1893) + t3833) + t4091) +
                      t77_tmp * -0.13293513545283561) +
                     eta * t4086) +
                    eta * t4092) -
                   t3908) +
                  t4602) -
                 t4164) +
                t4912) +
               t1108_tmp * -2.0807760733145249) +
              t5189) +
             t3 * t3906) +
            t3 * t3991) +
           t5499) -
          t5028) -
         t5029) +
        t5825) -
       0.0011444091796875);
  r_sfvals_tmp =
      t9 * (((((t1504 + t5287) + t5643) - t5312) - t5626) - 0.0476837158203125);
  s_sfvals_tmp =
      (((((((((((((((((-t845 + t3512) + eta * 1.03375941147039 * zeta) +
                     t3888) +
                    t3958) +
                   eta * (t11 * 2.5207613721305941)) -
                  t4054) -
                 t4242) +
                t4760) +
               t1245_tmp * -3.5526134349681708) +
              t755_tmp * -5.071545824592496) +
             t5 * t3667) -
            t4491) +
           t5221) +
          t4155_tmp * -8.756731763298129) +
         t5657) +
        t5737) -
       0.0019073486328125) *
      xi;
  t1743_tmp = t7 * ((((((((((((((t3204 + t3513) + t3571) + eta * t3227) +
                              eta * 2.5684450879509071 * zeta) +
                             t4190) -
                            t4238) -
                           t4311) +
                          t5022) +
                         t5433) -
                        t5126) +
                       t5632) -
                      t5316) -
                     t5531) -
                    0.049591064453125);
  sfvals[13] = ((q_sfvals_tmp + r_sfvals_tmp) + s_sfvals_tmp) - t1743_tmp;
  t6616_tmp =
      (t8 * ((((((((((-t888 - t2103) + t2946) + t4008) + t4685) + t5338) +
                 t5353) +
                t5397) +
               t5600) -
              t5145) +
             0.019073486328125) +
       -t6 * ((((((((((((((((t4380_tmp - t3581) + t3686) - t3928) - t3976) +
                         t4076) +
                        t4149) -
                       t4273) -
                      t4436) +
                     t4699) -
                    t4861) +
                   t2 * 0.235475139853395 * zeta) +
                  t4900) +
                 t5333) +
                t5495) -
               t5684) +
              0.02593994140625)) +
      ((((((((((((((((((((t456 - t1380) - t1381) + t1870) + t1871) + t2759) +
                     t1245_tmp * -1.673050868658372) +
                    t4024) +
                   eta * 0.49281179169077932 * zeta) +
                  t4152) +
                 t4214) -
                t3935) +
               eta * t3804) -
              t4237) +
             t4833) +
            t4155_tmp * -1.701307885440779) +
           t3 * t4154) +
          t1556_tmp * -0.145994586709105) +
         t5687) +
        t5849) +
       0.006866455078125);
  t4975_tmp =
      (((((((((((((((((-t837 + t1859) + t2633) + t3238) + t3533) - t3557) +
                  t4258) +
                 t4363) +
                t4566) +
               t4768) +
              t798_tmp * -2.9140048556857638) +
             t1105_tmp * -2.8845704632040889) +
            t5065) -
           t4593) +
          t5182) -
         t5117) +
        t2 * t3858) -
       0.034332275390625) *
      xi;
  t4380_tmp =
      t9 * (((((t1098 + t5164) + t5289) - t5151) - t5313) - 0.095367431640625);
  t5087_tmp = t7 * ((((((((((((((t2823 + t2980) - t2933) + t3293) +
                              eta * 1.8991070029176309 * zeta) +
                             eta * t3319) -
                            t3442) +
                           t4477) -
                          t4260) -
                         t4540) +
                        t5064) +
                       t5615) -
                      t5153) -
                     t5671) +
                    0.12969970703125);
  sfvals[14] = ((t6616_tmp - t4975_tmp) - t4380_tmp) - t5087_tmp;
  sfvals[15] = ((t6616_tmp + t4975_tmp) + t4380_tmp) + t5087_tmp;
  sfvals[16] = ((q_sfvals_tmp - r_sfvals_tmp) - s_sfvals_tmp) + t1743_tmp;
  sfvals[17] = ((n_sfvals_tmp + o_sfvals_tmp) - sfvals_tmp) - p_sfvals_tmp;
  sfvals[18] = ((k_sfvals_tmp + l_sfvals_tmp) + f_sfvals_tmp) + m_sfvals_tmp;
  sfvals[19] = ((g_sfvals_tmp + h_sfvals_tmp) - i_sfvals_tmp) + j_sfvals_tmp;
  sfvals[20] = ((b_sfvals_tmp - c_sfvals_tmp) - d_sfvals_tmp) + e_sfvals_tmp;
  sfvals_tmp =
      (-t8 * ((((((t6059_tmp + t2 * t513) + t2517) + t2668) + t2669) +
               t1812_tmp * -5.4253472222222223) -
              t1813_tmp * 5.4253472222222223) +
       (((((((((((((t35 + t77_tmp * -0.26403356481481483) + t3 * t482) +
                  t2005) +
                 eta * t1466) +
                eta * t1485) -
               t1929) +
              t2323) +
             t1108_tmp * -6.4199942129629628) +
            t6228_tmp * -1.808449074074074) +
           t2726) +
          t2997) +
         t3863) -
        t3760)) +
      t6 * ((((((((((((((t6317_tmp - t526) + t1095) + t1270) + t1392) + t1469) +
                    t1989) +
                   t2079) -
                  t2326) +
                 t1824_tmp * -1.356336805555556) +
                t2721) +
               t2740) +
              t3749) +
             t2 * 30.442226080246911 * zeta) +
            t4095);
  b_sfvals_tmp =
      t7 * ((((((((((((-t214 + t482) + t340_tmp * -3.2552083333333335) +
                     t77_tmp * -5.4253472222222223) +
                    t567 * zeta_1_inv) +
                   t1269) +
                  t1391) -
                 t1018) +
                t1752) +
               t1761) +
              t2504) +
             t2505) +
            t2720);
  c_sfvals_tmp = (((((((((((((((((t31 + t31 * zeta_1_inv) +
                                 eta * 3.4722222222222223 * zeta) +
                                t550) -
                               t521) -
                              t543) +
                             t1158) +
                            t11 * t226) -
                           t937) +
                          t1466) +
                         t1485) +
                        t755_tmp * -3.2552083333333335) +
                       t1245_tmp * -10.850694444444439) -
                      t1487) +
                     t4155_tmp * -5.4253472222222223) +
                    t1989) +
                   t2058) +
                  t2734) *
                 xi;
  sfvals[21] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  d_sfvals_tmp =
      -t6200 +
      (((((((((((((eta * 0.79752604166666674 * zeta - t467) + t1123) + t1427) -
                t1041) +
               t1480) -
              t1479) +
             t4155_tmp * -0.40690104166666669) +
            eta * t1434) +
           t1556_tmp * -18.310546875) +
          t1245_tmp * -7.405598958333333) +
         t2435) +
        t2469) +
       t10 * (t3 * 2.034505208333333));
  e_sfvals_tmp =
      t7 * ((((((((((-t216 + t481) + t340_tmp * -1.6276041666666667) +
                   t77_tmp * -2.034505208333333) +
                  t1364) -
                 t1016) +
                t1365 * zeta_1_inv) +
               t2035) +
              t2160) +
             t2162) +
            t2708);
  f_sfvals_tmp = (((((((((((((((t22 + t22 * zeta_1_inv) + t146) + t405) +
                             eta * 7.568359375 * zeta) -
                            t486) -
                           t548) +
                          t1430) +
                         t1436) +
                        t755_tmp * -1.6276041666666667) +
                       t1245_tmp * -21.97265625) +
                      t1632) -
                     t1434) +
                    t4155_tmp * -2.034505208333333) +
                   eta * (t11 * 50.862630208333329)) +
                  t2690) *
                 xi;
  sfvals[22] = (d_sfvals_tmp - e_sfvals_tmp) - f_sfvals_tmp;
  g_sfvals_tmp =
      t6 * ((((((t5962_tmp + eta * 13.020833333333334 * zeta) + t575) +
               t10 * t224) +
              t1183) +
             t1260) +
            t1328) +
      ((((((((t34 + t77) + t616) + t640) - t593) - t647) + t1108) + t1154) +
       t1186);
  h_sfvals_tmp =
      ((((((((t5955_tmp + eta * 10.416666666666666 * zeta) + t146) + t405) +
           t741) +
          t11 * t115) +
         t1245_tmp * -26.041666666666668) +
        t2168) +
       t5909) *
      xi;
  sfvals[23] = g_sfvals_tmp + h_sfvals_tmp;
  i_sfvals_tmp = (b_t5955_tmp + t5909) * xi;
  sfvals[24] = t5988 - i_sfvals_tmp;
  sfvals[25] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[26] = (d_sfvals_tmp + e_sfvals_tmp) + f_sfvals_tmp;
  sfvals[27] = g_sfvals_tmp - h_sfvals_tmp;
  sfvals[28] = t5988 + i_sfvals_tmp;
  sfvals_tmp =
      (t8 * ((((((t6059_tmp + t754_tmp * -1.356336805555556) + t2505) +
                t16 * t933) +
               t2668) +
              t2669) -
             t2517) +
       (((((((((((((t35 + eta * 0.26403356481481483 * zeta) +
                   t4155_tmp * -0.36168981481481483) +
                  t2005) +
                 eta * t1487) -
                t1929) +
               t2323) +
              t1245_tmp * -2.3690682870370372) +
             t1556_tmp * -5.8774594907407414) +
            t3 * t1018) +
           t2726) +
          t2997) +
         t3863) -
        t3760)) +
      -t6 *
          ((((((((((((((t6317_tmp + t526) + t1095) + t1270) + t1392) - t1469) +
                   t4 * t513) +
                  t2079) +
                 t2326) +
                t14 * t937) +
               t2721) -
              t2740) -
             t3749) -
            t4095) -
           t1105_tmp * 30.442226080246911);
  b_sfvals_tmp =
      t7 *
      ((((((((((((t214 + t214 * zeta_1_inv) + t482) + t436 * zeta) + t1269) +
              t1391) -
             t1018) +
            t755_tmp * -21.701388888888889) -
           t1752) -
          t1761) +
         t2504) +
        t2505) +
       t2720);
  c_sfvals_tmp = (((((((((((((((((-t31 + t340_tmp * -1.5625) +
                                 t77_tmp * -3.4722222222222223) +
                                t543) +
                               t550) -
                              t521) +
                             t3 * (zeta_1_inv * 3.2552083333333335)) +
                            t1158) +
                           t10 * t227) -
                          t937) +
                         t1466) +
                        t1485) +
                       t1108_tmp * -21.701388888888889) +
                      t3 * (zeta * 5.4253472222222223)) -
                     t1487) +
                    t1989) +
                   t2058) +
                  t2734) *
                 xi;
  sfvals[29] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      t6212 +
      (((((((((((((-t467 + t77_tmp * -0.79752604166666674) + t1123) + t1427) -
                t1041) +
               t1480) +
              t3 * t481) -
             t1479) +
            eta * t1430) +
           eta * t1436) +
          t1108_tmp * -20.751953125) +
         t2435) +
        t2469) +
       t6228_tmp * -2.034505208333333);
  e_sfvals_tmp = t7 * ((((((((((t216 + t216 * zeta_1_inv) + t481) +
                              eta * 2.034505208333333 * zeta) +
                             t1364) -
                            t1016) +
                           t2035) +
                          t2160) +
                         t755_tmp * -18.310546875) -
                        t2162) -
                       t2708);
  f_sfvals_tmp =
      (((((((((((((((-t22 + t340_tmp * -4.166666666666667) + t146) + t405) +
                  t548) -
                 t486) +
                t77_tmp * -7.568359375) +
               t3 * (zeta_1_inv * 1.6276041666666667)) +
              eta * (t10 * 21.97265625)) +
             t1430) +
            t1436) +
           t3 * (zeta * 2.034505208333333)) +
          t1632) -
         t1434) +
        t1108_tmp * -50.862630208333329) +
       t2690) *
      xi;
  sfvals[30] = (d_sfvals_tmp + e_sfvals_tmp) + f_sfvals_tmp;
  g_sfvals_tmp =
      t6 *
          (((((((-t89 - t56) + t77_tmp * -13.020833333333334) + t575) + t1183) +
             t1260) +
            t1328) +
           t1245_tmp * -32.552083333333329) +
      ((((((((t34 + t43) + t616) + t640) + t736) - t593) - t647) + t1537) +
       t1556);
  h_sfvals_tmp = (((((((((-t21 + t340_tmp * -6.25) + t146) +
                        t77_tmp * -10.416666666666666) +
                       t405) +
                      t10 * t108) +
                     t741) +
                    t1108_tmp * -65.104166666666671) +
                   t2168) +
                  t5909) *
                 xi;
  sfvals[31] = g_sfvals_tmp - h_sfvals_tmp;
  i_sfvals_tmp = (b_t5955_tmp + (((t34 + t309) - t592) - t615)) * xi;
  sfvals[32] = t5989 - i_sfvals_tmp;
  sfvals[33] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[34] = (d_sfvals_tmp - e_sfvals_tmp) - f_sfvals_tmp;
  sfvals[35] = g_sfvals_tmp + h_sfvals_tmp;
  sfvals[36] = t5989 + i_sfvals_tmp;
  sfvals_tmp =
      (t8 * ((((((((((-t2109 + t2593) + t2785) + t2961) +
                   t1813_tmp * -23.84185791015625) -
                  t3066) -
                 t3098) +
                t3219) +
               t5396) -
              t5472) +
             0.2384185791015625) +
       t6 * ((((((((((((((((t1322 + t1708) + t1872) + t2786) - t2735) - t2841) +
                       t2962) +
                      t3460) +
                     t4001) +
                    t1105_tmp * -32.848782009548607) +
                   t4284) +
                  t4423) -
                 t3930) -
                t3998) -
               t4478) +
              t5552) -
             0.247955322265625)) +
      ((((((((((((((((((t6661_tmp + t2310) + t2423) + t2882) + t3802) + t4269) -
                   t3800) +
                  eta * 0.040619461624710647 * zeta) -
                 t3988) -
                t4003) +
               eta * t3884) +
              t1245_tmp * -1.269799691659433) +
             t4155_tmp * -0.80355891474971064) -
            t4646) +
           t1556_tmp * -1.236244484230324) +
          t5283) +
         t3 * t3880) +
        t5694) +
       0.0095367431640625);
  b_sfvals_tmp = t9 * (((t6266_tmp + t5449) - t5539) + 0.39736429850260419);
  c_sfvals_tmp =
      (((((((((((((((((t2309 + t4 * t2434) + t3535) + t3550) + t3872) + t3884) +
                  t3902) +
                 t4016) +
                t4041) +
               t4162) +
              t4289) +
             t4409) +
            t2 * (zeta * 7.5410913538049771)) -
           t4030) -
          t4121) +
         t5207) +
        t2113_tmp * -6.71104148582176) -
       0.015894571940104171) *
      xi;
  d_sfvals_tmp =
      t7 * ((((((((((((((-t2840 - t3069) + t3389) + t3403) - t3298) + t3768) +
                    t3880) -
                   t3702) +
                  t4418) -
                 t3927) +
                t4880) +
               t5415) -
              t5127) -
             t5533) +
            0.41325887044270831);
  sfvals[37] = ((sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp) + d_sfvals_tmp;
  e_sfvals_tmp =
      (-t8 * ((((((((((-t2110 + t3193) + t3642) + t3918) + t4921) - t4959) +
                  t5303) -
                 t5160) -
                t5405) -
               t6415_tmp) +
              0.15894571940104171) +
       -t6 *
           ((((((((((((((((t2864 + t3323) + t3342) + t3480) + t3777) + t4112) +
                      t4254) -
                     t4308) -
                    t4309) +
                   t4585) +
                  t4700) +
                 t5084) +
                t5099) +
               t5148) +
              t5527) -
             t6548_tmp) -
            0.21616617838541671)) +
      ((((((((((((((((((((t838 + t1868) - t1874) - t1888) + t2305) + t2652) +
                     eta * t3162) +
                    eta * 2.3465097686390819 * zeta) +
                   t3663) +
                  t4125) +
                 t4469) -
                t4093) +
               t3 * t3413) +
              t4626) -
             t4174) +
            t4788) +
           t1245_tmp * -10.512787618754819) +
          t1556_tmp * -5.533665786554784) +
         t3 * t4022) +
        t5824) -
       0.057220458984375);
  f_sfvals_tmp =
      (((((((((((((((((-t1293 - t2308) + t5 * t1727) - t3263) + t3622) +
                   t3821) +
                  t4017) +
                 t4120) +
                t4168) +
               t4337) +
              t4355) -
             t3962) +
            t4601) +
           t4764) +
          t4903) +
         t4155_tmp * -2.796267285759066) +
        t5482) +
       0.286102294921875) *
      xi;
  g_sfvals_tmp = t9 * (((((t3602 + t4964) + t5109) - t4858) - t5074) +
                       0.79472859700520826);
  t5087_tmp = (t1732_tmp * 0.2260561342592593 - t754_tmp * 8.58306884765625) +
              t1824_tmp * 35.762786865234382;
  h_sfvals_tmp = t7 * ((((((((((((t5087_tmp - t3312) - t3358) - t3408) +
                               t77_tmp * -7.8001140076437112) +
                              t4176) +
                             t4236) -
                            t4156) +
                           t4853) +
                          t4882) +
                         t5438) +
                        t5512) +
                       1.080830891927083);
  sfvals[38] = ((e_sfvals_tmp + f_sfvals_tmp) + g_sfvals_tmp) - h_sfvals_tmp;
  sfvals[39] = ((e_sfvals_tmp - f_sfvals_tmp) - g_sfvals_tmp) + h_sfvals_tmp;
  sfvals[40] = ((sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp) - d_sfvals_tmp;
  sfvals_tmp =
      (t8 * ((((((((((t1725 - t3046) + t3220) + t3645) - t4248) + t4959) +
                 t4975) +
                t5451) -
               t5075) -
              t5408) -
             1.430511474609375) +
       -t6 *
           ((((((((((((((((t1707 + t2700) - t2642) + t2864) + t3164) - t3529) -
                      t3313) +
                     t77_tmp * -23.912500452112269) +
                    t3777) +
                   eta * (t10 * 16.24778464988426)) +
                  t3925) +
                 t4175) +
                t4585) +
               t4944) +
              t5087) -
             t6548_tmp) -
            1.48773193359375)) +
      ((((((((((((((((((((t1291 + t1876) - t1894) - t2306) + t2585) + t2769) +
                     t3663) +
                    t77_tmp * -1.4375757288049771) +
                   t4125) +
                  eta * t4168) -
                 t4093) +
                t3 * t3408) +
               t4626) -
              t4174) +
             eta * t4601) +
            t4998) +
           t1108_tmp * -1.571796558521412) +
          t6228_tmp * -1.147941306785301) +
         t5883) +
        t5884) -
       0.057220458984375);
  b_sfvals_tmp =
      t9 * ((((t6192_tmp + t5151) - t4859) - t5121) + 2.384185791015625);
  c_sfvals_tmp =
      (((((((((((((((((t1293 - t3162) + t3557) + t3700) - t3385) + t3939) +
                  t4025) +
                 t4234) -
                t3828) +
               t4401) +
              t4526) +
             t4762) +
            t4807) +
           t4821) +
          t4155_tmp * -7.8001140076437112) +
         t2607_tmp * -1.3245476616753471) +
        t5683) -
       0.095367431640625) *
      xi;
  d_sfvals_tmp =
      t7 *
      ((((((((((((((-t3138 + eta * 2.796267285759066 * zeta) - t3413) + t4109) +
                 t4176) -
                t4022) -
               t4156) +
              t4688) +
             t4853) +
            t4881) +
           t5318) +
          t5512) +
         t5524) -
        t5435) +
       2.47955322265625);
  sfvals[41] = ((sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp) + d_sfvals_tmp;
  e_sfvals_tmp =
      (-t8 * ((((((((((-t1725 - t3046) + t3220) + t3645) + t4248) - t4959) +
                  t4975) +
                 t5075) -
                t5408) -
               t6415_tmp) +
              1.430511474609375) +
       -t6 *
           ((((((((((((((((-t1707 + t2642) - t2700) + t2864) + t3164) + t3313) +
                      eta * 23.912500452112269 * zeta) -
                     t3529) +
                    t3777) +
                   t3925) +
                  t4175) +
                 t1245_tmp * -16.24778464988426) +
                t4585) +
               t4944) -
              t5087) -
             t6548_tmp) -
            1.48773193359375)) +
      ((((((((((((((((((((-t1291 + t1876) + t1894) - t2306) - t2585) + t2769) +
                     t3663) +
                    eta * 1.4375757288049771 * zeta) +
                   t4125) -
                  t4093) +
                 t4626) +
                eta * t3962) -
               t4174) +
              t1245_tmp * -2.3700572826244208) +
             t4998) +
            t4155_tmp * -2.454828332971644) +
           t1556_tmp * -0.35321270978009262) +
          t3 * t4236) +
         t5883) +
        t5884) -
       0.057220458984375);
  f_sfvals_tmp =
      t9 * ((((t6192_tmp + t5121) - t4859) - t5151) - 2.384185791015625);
  g_sfvals_tmp =
      (((((((((((((((((-t1293 - t3162) + t3557) - t3385) + t3828) + t3939) +
                  t4025) +
                 t4120) +
                t4234) +
               t4337) +
              t4355) +
             t4526) +
            t3 * (zeta * 7.8001140076437112)) +
           t5 * t3213) +
          t4762) +
         t4903) +
        t5683) -
       0.095367431640625) *
      xi;
  h_sfvals_tmp =
      t7 *
      ((((((((((((((t3138 + t3737) - t3413) + t77_tmp * -2.796267285759066) +
                 t4109) +
                t4156) -
               t4022) +
              t4688) -
             t4853) +
            t5318) -
           t4881) +
          t5524) -
         t5435) -
        t5512) +
       2.47955322265625);
  sfvals[42] = ((e_sfvals_tmp + f_sfvals_tmp) + g_sfvals_tmp) + h_sfvals_tmp;
  i_sfvals_tmp =
      (-t8 *
           ((((((((((t2109 + t2593) - t2785) - t2961) + t16 * t2314) + t3098) -
                t3066) +
               t3219) +
              t5396) -
             t5472) -
            0.2384185791015625) +
       -t6 *
           ((((((((((((((((-t1322 + t1708) - t1872) + t2735) - t2786) - t2841) -
                      t2962) +
                     t3460) +
                    t2 * 32.848782009548607 * zeta) +
                   t3998) -
                  t4001) +
                 t4284) +
                t4423) -
               t3930) +
              t4478) +
             t5552) +
            0.247955322265625)) +
      ((((((((((((((((((t6661_tmp + t2423) - t2310) + t2882) + t3802) + t3988) +
                   t4269) -
                  t3800) +
                 eta * t4121) +
                t3 * t3298) -
               t4003) +
              t4646) +
             eta * t4030) +
            t77_tmp * -0.040619461624710647) +
           t1108_tmp * -2.48131928620515) +
          t5283) +
         t5694) +
        t6228_tmp * -1.633608782732928) +
       0.0095367431640625);
  j_sfvals_tmp = t9 * (((t6266_tmp + t5539) - t5449) - 0.39736429850260419);
  k_sfvals_tmp =
      (((((((((((((((((-t2309 + t798_tmp * -8.3446502685546875) + t3535) +
                     t3550) +
                    t3872) +
                   t3902) +
                  t4030) +
                 t4041) +
                t4121) +
               t4289) -
              t3884) +
             t4409) -
            t4016) -
           t4162) +
          t10 * t3625) +
         t1105_tmp * -7.5410913538049771) +
        t5207) +
       0.015894571940104171) *
      xi;
  l_sfvals_tmp =
      t7 * ((((((((((((((t2840 + t3069) + t3298) + t3389) + t3403) + t3768) +
                    t3927) -
                   t3702) -
                  t3880) +
                 t4880) -
                t4418) -
               t5127) +
              t1824_tmp * -1.986821492513021) -
             t5533) -
            0.41325887044270831);
  sfvals[43] = ((i_sfvals_tmp - j_sfvals_tmp) + k_sfvals_tmp) + l_sfvals_tmp;
  m_sfvals_tmp =
      (t8 * ((((((((((t2110 + t3193) + t3642) - t3918) + t4959) + t5303) -
                 t4921) +
                t5451) -
               t5160) -
              t5405) -
             0.15894571940104171) +
       t6 * ((((((((((((((((-t2864 + t3323) + t3480) - t3342) +
                         t2 * 26.137740523726851 * zeta) +
                        t4112) -
                       t3777) +
                      t4308) +
                     t4309) +
                    t4700) -
                   t4254) -
                  t4585) +
                 t5099) +
                t5148) +
               t5527) -
              t5084) +
             0.21616617838541671)) +
      ((((((((((((((((((((-t838 + t1868) + t1874) - t1888) - t2305) + t2652) +
                     t3663) +
                    t1108_tmp * -13.6045762050299) +
                   t77_tmp * -2.3465097686390819) +
                  t4125) +
                 t4469) -
                t4093) +
               eta * t3939) +
              t4626) -
             t4174) +
            eta * t4025) +
           t4788) +
          t4155_tmp * -2.2311269501109181) +
         t6228_tmp * -3.149479995539159) +
        t5824) -
       0.057220458984375);
  n_sfvals_tmp =
      (((((((((((((((((t1293 - t2308) + t2607_tmp * -11.92092895507812) -
                     t3263) +
                    t3700) +
                   t3821) +
                  t4017) -
                 t3622) +
                t4168) +
               t4401) -
              t3962) +
             t4601) +
            t4764) +
           t3 * (zeta * 2.796267285759066)) +
          t4807) +
         t4821) +
        t5482) +
       0.286102294921875) *
      xi;
  o_sfvals_tmp = t9 * (((((t3602 + t5074) + t5109) - t4858) - t4964) -
                       0.79472859700520826);
  p_sfvals_tmp =
      t7 * ((((((((((((t5087_tmp + t3358) + eta * 7.8001140076437112 * zeta) -
                     t3312) +
                    t3737) -
                   t3408) +
                  t4156) +
                 t4236) -
                t4853) -
               t4882) +
              t5438) -
             t5512) +
            1.080830891927083);
  sfvals[44] = ((m_sfvals_tmp - n_sfvals_tmp) + o_sfvals_tmp) + p_sfvals_tmp;
  sfvals[45] = ((m_sfvals_tmp + n_sfvals_tmp) - o_sfvals_tmp) - p_sfvals_tmp;
  sfvals[46] = ((i_sfvals_tmp + j_sfvals_tmp) - k_sfvals_tmp) - l_sfvals_tmp;
  sfvals[47] = ((e_sfvals_tmp - f_sfvals_tmp) - g_sfvals_tmp) - h_sfvals_tmp;
  sfvals[48] = ((sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp) - d_sfvals_tmp;
  sfvals_tmp =
      (-t8 * ((((((((((t1719 - t2971) + t3194) + t3436) - t3971) - t4844) +
                  t16 * t3558) +
                 t5146) +
                t5161) -
               t5601) -
              0.95367431640625) +
       -t6 * ((((((((((((((t6543_tmp + t2863) + t3174) - t3185) + t3354) +
                       t3458) +
                      t3657) -
                     t3758) -
                    t3853) +
                   t2 * 25.902265383873459 * zeta) -
                  t3977) +
                 t4196) -
                t4862) -
               t5149) +
              1.2969970703125)) +
      ((((((((((((((((((((-t1292 + t1861) + t1878) - t1844) - t2299) + t2757) +
                     eta * 9.096404652536652 * zeta) -
                    t3228) -
                   t3443) +
                  t1556_tmp * -4.4740276572145063) +
                 t4104) +
                t4209) +
               t4244) +
              eta * t4115) +
             t4532) +
            t1245_tmp * -17.51699565369406) +
           t4155_tmp * -15.19992027753665) -
          t4119) +
         t3 * t3697) +
        t5068) +
       0.34332275390625);
  b_sfvals_tmp = (((((((((((((((((-t1710 - t1877) + t2654) +
                                t2113_tmp * -15.07040895061728) +
                               t3229) +
                              t3365) -
                             t3181) +
                            t3476) +
                           t3558) +
                          t3574) +
                         t2 * (zeta * 21.027929988908181)) +
                        t4155) +
                       t4317) +
                      t4 * t3347) +
                     t4580) -
                    t4115) +
                   t4719) +
                  1.71661376953125) *
                 xi;
  t5087_tmp = (eta * t1726 + t4612_tmp * 66.227383083767364) -
              t1761_tmp * 90.069240993923614;
  c_sfvals_tmp = t9 * (((t5087_tmp + t5152) - t5123) + 4.76837158203125);
  d_sfvals_tmp =
      t7 *
      ((((((((((((((t2859 - t2842) + t14 * t2314) + t3156) - t3134) - t3182) +
               t3697) +
              t4027) -
             t3654) -
            t3703) +
           t4380) -
          t4191) +
         t5364) +
        t5618) +
       6.4849853515625);
  sfvals[49] = ((sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp) + d_sfvals_tmp;
  sfvals[50] = ((sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp) - d_sfvals_tmp;
  sfvals_tmp =
      (t8 * ((((((((((-t1719 - t2971) + t3194) + t3436) + t3971) + t4844) +
                 t5161) +
                t1813_tmp * -10.59638129340278) -
               t5146) -
              t5601) +
             0.95367431640625) +
       t6 * ((((((((((((((t6543_tmp - t2863) + t3185) + t3354) - t3174) +
                      t3657) +
                     t3758) -
                    t3458) +
                   t3853) +
                  t3977) +
                 t4196) +
                t1105_tmp * -25.902265383873459) +
               t4862) -
              t5149) -
             1.2969970703125)) +
      ((((((((((((((((((((t1292 + t1861) - t1844) - t1878) + t2299) + t2757) +
                     eta * t3365) -
                    t3228) +
                   t77_tmp * -9.096404652536652) -
                  t3443) +
                 eta * t3476) +
                t3 * t3182) +
               t4104) +
              t4209) +
             t4244) +
            t4532) -
           t4119) +
          t1108_tmp * -14.611232427903159) +
         t5068) +
        t6228_tmp * -9.2423992392457563) +
       0.34332275390625);
  b_sfvals_tmp = (((((((((((((((((t1877 - t1710) + t2654) +
                                t2 * (t10 * 15.07040895061728)) +
                               t3181) +
                              t3229) +
                             t3574) -
                            t3365) -
                           t3476) -
                          t3558) +
                         t4115) +
                        t4155) +
                       t1105_tmp * -21.027929988908181) +
                      t4317) +
                     t4580) +
                    t4719) +
                   t798_tmp * -5.8280097113715277) -
                  1.71661376953125) *
                 xi;
  c_sfvals_tmp = t9 * (((t5087_tmp + t5123) - t5152) - 4.76837158203125);
  d_sfvals_tmp =
      t7 *
      ((((((((((((((t2842 + t2859) + t1824_tmp * -23.84185791015625) + t3156) +
                 t3182) -
                t3134) +
               t3654) +
              t4027) -
             t3697) -
            t3703) +
           t4191) +
          t4380) +
         t5364) -
        t5618) -
       6.4849853515625);
  sfvals[51] = ((sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp) + d_sfvals_tmp;
  sfvals[52] = ((sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp) - d_sfvals_tmp;
  sfvals_tmp =
      (t8 * ((((((t6047_tmp + t2 * t504) + t2479) + t2480) - t2234) - t2235) +
             t2501) +
       (((((((((((((-t126 + t980) - t602) + t1020) +
                 t77_tmp * -0.5063657407407407) -
                t1011) +
               t4155_tmp * -1.4467592592592593) +
              t1615) +
             eta * t1431) +
            eta * t1453) +
           t3 * t631) +
          t1108_tmp * -13.382523148148151) +
         t2804) +
        t2866)) +
      -t6 *
          (((((((((((((((t59 + t92) - t126) + t589) - t569) - t1010) + t1065) +
                   eta * t623) -
                  t1237) +
                 t1384) -
                t1142) +
               t2025) +
              t2147) +
             t2411) -
            t2232) +
           t2514);
  b_sfvals_tmp =
      t7 * ((((((((((((-t211 + t474) + t340_tmp * -6.510416666666667) +
                     t77_tmp * -10.850694444444439) +
                    t1230) +
                   t1267) +
                  t1388) -
                 t1007) +
                t1743) +
               t1755) +
              t2247) +
             t2248) +
            t2715);
  c_sfvals_tmp =
      (((((((((((((t292 + t474) + t571) + t653) + t751) + t1032) + t3 * t262) +
             t4 * (zeta_1_inv * 10.850694444444439)) +
            t1250) -
           t1008) -
          t1022) +
         t1105_tmp * -2.8935185185185186) +
        t1572) +
       t2724) *
      xi;
  sfvals[53] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  d_sfvals_tmp = t228 + t228 * zeta_1_inv;
  e_sfvals_tmp = t1761_tmp * 32.552083333333329;
  sfvals[54] =
      (((((((((((((((eta * 2.0616319444444442 * zeta - t478) + t1036) + t1208) +
                  t1467) +
                 eta * t975) +
                t1551) +
               t4155_tmp * -10.850694444444439) +
              eta * t1009) -
             t1435) -
            t1455) +
           t10 * t567) +
          t2792) +
         t2849) -
        t1245_tmp * 5.3168402777777777) -
       t6 * (((((((((((((((t60 + t93) + eta * 14.10590277777778 * zeta) +
                         t3 * t144) -
                        t478) +
                       t955) +
                      t1007) +
                     t1368) -
                    t1454) +
                   t1669) +
                  t2054) +
                 t2091) +
                t14 * (t3 * 10.850694444444439)) +
               t2519) +
              t2551) -
             t1245_tmp * 5.4253472222222223)) -
      t8 * ((((((d_sfvals_tmp + t2 * t274) + t2249) + t2473) + t2476) +
             t1813_tmp * -32.552083333333329) -
            e_sfvals_tmp);
  sfvals[55] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp =
      t6200 +
      ((((((((((((t6219_tmp + eta * 2.197265625 * zeta) - t595) + t1004) -
               t637) +
              t3 * t483) +
             t1974) +
            eta * t1471) +
           t2255) +
          t1245_tmp * -19.287109375) +
         t1556_tmp * -30.517578125) +
        t6228_tmp * -18.310546875) +
       t2814);
  b_sfvals_tmp = t7 * ((((((((((-t212 + t468) + t340_tmp * -4.8828125) +
                              t77_tmp * -6.103515625) +
                             t1395) -
                            t1001) +
                           t2070) +
                          t2088) +
                         t2259) +
                        t2262) +
                       t2746);
  c_sfvals_tmp =
      (((((((((((t468 + t578) + t1031) + t1064) + t1159) + t1257) - t1003) -
           t1019) +
          t1970) +
         t1990) +
        t2067) +
       t2729) *
      xi;
  sfvals[56] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[57] =
      ((((((t395 + eta * t313) + t12 * t115) + t1776) + t2113) -
        t1108_tmp * 104.16666666666667) -
       t77_tmp * 5.208333333333333) -
      t6 * (((((((t33 + t51) + t108 * zeta) + t305) + t10 * t115) + t776) +
             t805) +
            t896);
  sfvals[58] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp =
      (t8 * ((((((t6032_tmp + t566 * zeta_1_inv) + t2228) - t2234) - t2235) +
              t2493) +
             t2494) +
       (((((((((((((-t126 + t664) + t728) + t980) - t602) + t1020) - t1011) +
              eta * t1032) +
             t4155_tmp * -0.72337962962962965) +
            t1556_tmp * -3.6168981481481479) +
           t1245_tmp * -5.0636574074074074) +
          t2436) +
         t3 * t1007) +
        t2507)) +
      -t6 * (((((((((((((t337 - t511) + t1268) + t1384) + t1389) + t1458) -
                    t1943) +
                   t1981) +
                  t2025) +
                 t2362) +
                t2411) +
               t2514) +
              t1824_tmp * -5.4253472222222223) +
             t2717);
  b_sfvals_tmp =
      t7 * ((((((((((((-t108 + t246) + t340_tmp * -26.041666666666668) +
                     t77_tmp * -43.402777777777779) -
                    t568) -
                   t631) +
                  t1230) -
                 t1141) +
                t1743) +
               t1755) +
              t2146) +
             t2232) +
            t2234);
  c_sfvals_tmp =
      (((((((((((((((-t147 + t540) + t653) + t754_tmp * -5.208333333333333) -
                  t485) +
                 t933) +
                t1144) +
               t1207) +
              t1250) +
             t1431) +
            t1453) +
           t2 * t474) +
          t1572) +
         t1603) -
        t1470) +
       t2113_tmp * -14.46759259259259) *
      xi;
  sfvals[59] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  f_sfvals_tmp =
      (t8 * ((((t269 - t754_tmp * 40.690104166666671) + t2226) + t2227) -
             t1732_tmp * 40.690104166666671) +
       ((((((t6033_tmp + t1467) + t2 * t478) - t1435) - t1455) +
         t2113_tmp * -3.6168981481481479) +
        t2 * t1454)) +
      -t6 *
          ((((((((-t484 + t1244) + t1368) + t10 * 16.637731481481481) - t1934) +
              t2054) +
             t2091) +
            t14 * t572) +
           t2519);
  g_sfvals_tmp = (((((((((t2 * 3.90625 + t2 * (zeta_1_inv * 3.90625)) + t572) -
                        zeta * 2.0616319444444442) +
                       t1030) +
                      t1244) -
                     t975) -
                    t1009) +
                   t2 * (zeta * 14.10590277777778)) +
                  t2113_tmp * -5.4253472222222223) *
                 xi;
  h_sfvals_tmp = t7 * ((((((t268 + t2 * t144) + t2 * 54.253472222222221) -
                          t10 * 21.701388888888889) +
                         t1732_tmp * 10.850694444444439) +
                        t1824_tmp * -32.552083333333329) +
                       t2476);
  sfvals[60] = (f_sfvals_tmp + g_sfvals_tmp) + h_sfvals_tmp;
  i_sfvals_tmp =
      (-t8 * ((((((t6032_tmp + t2234) + t2235) +
                 t1732_tmp * -21.701388888888889) +
                t2493) +
               t2494) -
              t754_tmp * 21.701388888888889) +
       (((((((((((((-t126 + t728) + t980) - t602) + t1020) + t1065) - t1011) +
              t3 * t474) +
             eta * t1008) +
            eta * t1022) +
           t1108_tmp * -7.9571759259259256) +
          t2436) +
         t2507) +
        t6228_tmp * -3.6168981481481479)) +
      t6 * (((((((((((((t337 + t511) + t1268) + t1389) + t1603) - t1384) -
                   t1458) +
                  t1943) +
                 t1105_tmp * -24.112654320987652) +
                t2362) +
               t2504) -
              t2411) -
             t2514) +
            t2717);
  j_sfvals_tmp =
      t7 *
      ((((((((((((t108 + t108 * zeta_1_inv) + t246) + t223 * zeta) - t568) -
              t631) -
             t1141) +
            t1578) -
           t1743) +
          t2132) +
         t2146) +
        t2232) +
       t2234);
  k_sfvals_tmp =
      (((((((((((((((t147 + t2 * (zeta_1_inv * 5.208333333333333)) + t485) +
                   t540) +
                  t653) +
                 t1144) +
                t1207) +
               t1250) -
              t933) +
             t1470) +
            t1572) -
           t1431) -
          t1453) +
         t1105_tmp * -0.72337962962962965) +
        t1981) +
       t2172) *
      xi;
  sfvals[61] = (i_sfvals_tmp + j_sfvals_tmp) + k_sfvals_tmp;
  l_sfvals_tmp =
      t6164 + ((((((((((((t6219_tmp + t658) - t595) + t1004) - t637) + t1519) +
                     t11 * t443) +
                    t4155_tmp * -1.220703125) +
                   t1556_tmp * -6.103515625) +
                  t1245_tmp * -8.544921875) +
                 t2116) +
                t10 * (t3 * 6.103515625)) +
               t2662);
  m_sfvals_tmp =
      t7 * ((((((((((t231 + t231 * zeta_1_inv) + t483) + t835 * zeta) + t1364) -
                 t1429) +
                t2035) +
               t2160) +
              t2378) +
             t2526) -
            t2746);
  n_sfvals_tmp =
      (((((((((((t6203_tmp + t542) + t1064) + t3 * (zeta_1_inv * 4.8828125)) +
              t1159) +
             t1471) +
            t3 * (zeta * 6.103515625)) +
           t1632) -
          t1432) -
         t1447) +
        t1970) +
       t2690) *
      xi;
  sfvals[62] = (l_sfvals_tmp - m_sfvals_tmp) - n_sfvals_tmp;
  o_sfvals_tmp =
      (((((((t67 + t76) + t151) + t2 * (zeta_1_inv * 31.25)) - t313) -
         t12 * 65.104166666666671) +
        t2 * (zeta * 26.041666666666668)) +
       t10 * t301) *
      xi;
  sfvals[63] = t5947 + o_sfvals_tmp;
  p_sfvals_tmp =
      t6149 +
      (((((((((b_t6219_tmp + t1064) + t1519) + t3 * t468) + t12 * t435) +
           eta * t1019) +
          t1108_tmp * -13.427734375) +
         t2116) +
        t2662) +
       t6228_tmp * -6.103515625);
  q_sfvals_tmp =
      t7 * ((((((((((-t231 + t483) + t340_tmp * -43.9453125) + t1364) +
                  t77_tmp * -54.931640625) -
                 t1429) +
                t2035) +
               t2070) +
              t2160) +
             t2262) +
            t2746);
  r_sfvals_tmp =
      (((((((((((t6203_tmp + t658) - t542) + t1471) + t755_tmp * -4.8828125) +
             t1245_tmp * -7.32421875) +
            t11 * t435) +
           t1632) -
          t1432) -
         t1447) +
        t4155_tmp * -6.103515625) +
       t2690) *
      xi;
  sfvals[64] = (p_sfvals_tmp - q_sfvals_tmp) - r_sfvals_tmp;
  s_sfvals_tmp =
      (-t8 *
           ((((((t6047_tmp + t754_tmp * -5.4253472222222223) + t2234) + t2235) +
              t2479) +
             t2480) -
            t2501) +
       (((((((((((((-t126 + eta * 0.5063657407407407 * zeta) + t980) - t602) +
                 t1020) +
                t3 * t246) -
               t1011) +
              t1615) +
             eta * t1470) +
            t1245_tmp * -4.846643518518519) +
           t1556_tmp * -9.04224537037037) +
          t6228_tmp * -7.2337962962962958) +
         t2804) +
        t2866)) +
      -t6 *
          (((((((((((((((-t92 - t59) - t126) + t569) + t589) + t664) - t1010) +
                   t1142) -
                  t1237) +
                 t1384) +
                t1245_tmp * -14.46759259259259) +
               t2025) +
              t2411) -
             t2147) -
            t2232) +
           t2514);
  t1743_tmp =
      t7 *
      ((((((((((((t211 + t211 * zeta_1_inv) + t227 * zeta) + t474) + t1267) +
              t1388) -
             t1007) +
            t1578) -
           t1743) +
          t2132) +
         t2247) +
        t2248) +
       t2715);
  t6616_tmp =
      xi *
      (((((((((((((t474 - t292) + t571) - t751) + t1032) - t1008) - t1022) +
             t1245_tmp * -15.19097222222222) +
            t2724) +
           eta * (t11 * 10.850694444444439)) +
          t77_tmp * 4.3402777777777777) +
         t2 * -t243) +
        t3 * -t262) +
       t571 * zeta_1_inv);
  sfvals[65] = (s_sfvals_tmp + t1743_tmp) - t6616_tmp;
  sfvals[66] =
      ((((((((((((((t6033_tmp + t1207) + t1208) + t1467) + t1551) +
                eta * t1030) -
               t1435) -
              t1455) +
             t2792) +
            t2849) -
           t1108_tmp * 0.54253472222222221) -
          t1556_tmp * 2.7126736111111112) -
         t77_tmp * 2.0616319444444442) -
        t6228_tmp * 21.701388888888889) +
       t8 * ((((((d_sfvals_tmp + t754_tmp * -8.1380208333333321) + t2226) +
                t2227) +
               t2473) -
              t2249) -
             e_sfvals_tmp)) -
      t6 * (((((((((((((((-t60 - t93) - t478) - t955) + t1007) +
                      t755_tmp * -65.104166666666671) +
                     t1368) -
                    t1454) +
                   t10 * t436) +
                  t1669) +
                 t2054) +
                t2091) +
               t2493) +
              t2519) +
             t2551) -
            t77_tmp * 14.10590277777778);
  sfvals[67] = (s_sfvals_tmp - t1743_tmp) + t6616_tmp;
  d_sfvals_tmp = -t6212 + (((((((((b_t6219_tmp + t77_tmp * -2.197265625) +
                                  t4155_tmp * -3.662109375) +
                                 t1974) +
                                eta * t1432) +
                               eta * t1447) +
                              t2255) +
                             t1108_tmp * -47.607421875) +
                            t10 * t1365) +
                           t2814);
  e_sfvals_tmp =
      t7 * ((((((((((t212 + t212 * zeta_1_inv) + t468) + t435 * zeta) + t1395) -
                 t1001) +
                t2088) +
               t2259) +
              t2378) +
             t2526) -
            t2746);
  s_sfvals_tmp =
      (((((((((((t578 - t468) + t1003) + t1019) + t1064) + t1159) + t1257) -
           t1031) +
          t1623) +
         t1970) +
        t2067) +
       t2813) *
      xi;
  sfvals[68] = (d_sfvals_tmp + e_sfvals_tmp) + s_sfvals_tmp;
  sfvals[69] =
      ((((((t59 * zeta + t395) + eta * t151) + t1776) + t2113) -
        t6 * (((((((-t51 - t33) + t305) + t77_tmp * -26.041666666666668) +
                 t776) +
                t805) +
               t896) +
              t1245_tmp * -65.104166666666671)) -
       t1245_tmp * 44.270833333333329) -
      t1556_tmp * 65.104166666666671;
  sfvals[70] = (d_sfvals_tmp - e_sfvals_tmp) - s_sfvals_tmp;
  sfvals[71] = (i_sfvals_tmp - j_sfvals_tmp) - k_sfvals_tmp;
  sfvals[72] = (f_sfvals_tmp - g_sfvals_tmp) - h_sfvals_tmp;
  sfvals[73] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[74] = (p_sfvals_tmp + q_sfvals_tmp) + r_sfvals_tmp;
  sfvals[75] = t5947 - o_sfvals_tmp;
  sfvals[76] = (l_sfvals_tmp + m_sfvals_tmp) + n_sfvals_tmp;
  sfvals_tmp =
      (-t8 * ((((((t6018_tmp + t299 * zeta_1_inv) + t14 * t299) - t1826) -
                t1827) +
               t2464) +
              t2465) +
       (((((((((((((t124 + t599) + t630) + t77_tmp * -2.8935185185185186) -
                 t594) -
                t635) +
               t1105) +
              t3 * t243) +
             eta * t625) +
            eta * t636) +
           t1108_tmp * -31.8287037037037) +
          t2115) +
         t6228_tmp * -14.46759259259259) +
        t2461)) +
      t6 * ((((((((((((t6187_tmp + t585) + t77_tmp * -40.50925925925926) -
                     t565) -
                    t629) -
                   t755) +
                  t1163) +
                 t10 * (eta * 28.93518518518519)) -
                t798) +
               t1657) +
              t1732) +
             t1764) -
            t1824);
  b_sfvals_tmp =
      t7 * ((((((((((((-t106 + t243) + t340_tmp * -52.083333333333336) + t359) +
                    t3 * 86.805555555555557 * zeta_1_inv) -
                   t564) -
                  t623) -
                 t754) +
                t15 * t290) +
               t1762) +
              t1770) +
             t2218) +
            t2219);
  c_sfvals_tmp =
      (((((((((((((t243 + t290) + t77_tmp * -34.722222222222221) + t560) +
                t648) +
               t747) +
              t774) +
             eta * (t10 * 121.5277777777778)) -
            t625) -
           t636) +
          t1108_tmp * -86.805555555555557) +
         t4 * t271) +
        t2 * (zeta * 40.50925925925926)) +
       t2456) *
      xi;
  sfvals[77] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp = t115 + t115 * zeta_1_inv;
  sfvals[78] =
      (((((((((((((((t245 + t77_tmp * -21.701388888888889) + t10 * t114) -
                   t650) +
                  t1038) +
                 t12 * t223) +
                t3 * t265) +
               t1247) +
              t1449) -
             t1056) +
            t1557) +
           t2173) +
          t2723) -
         t1108_tmp * 108.5069444444444) -
        t6228_tmp * 43.402777777777779) +
       t6 * (((((((((((((t181 - t245) + t566) + t623) + t794) + t952) + t1646) +
                   t1665) -
                  t1448) +
                 t2012) +
                t2146) +
               t14 * t567) +
              t2546) -
             t1245_tmp * 108.5069444444444)) +
      t8 * ((((((d_sfvals_tmp + t793) + t1806) - t1812) - t1813) - t1831) -
            t1832);
  sfvals[79] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      (-t8 * ((((t263 + t1812) + t1813) + t754_tmp * -162.76041666666671) +
              t1732_tmp * -162.76041666666671) +
       (((((((t245 - t650) + t1038) + t1449) - t1056) +
          t1105_tmp * -2.1701388888888888) +
         t2172) +
        t2461_tmp * -18.08449074074074)) +
      t6 * ((((((((t277 + t566) + t11 * 14.46759259259259) +
                 t798_tmp * 130.20833333333329) -
                t10 * 50.636574074074069) +
               t1646) +
              t1824_tmp * 130.20833333333329) +
             t2012) +
            t2146);
  b_sfvals_tmp =
      (((((((t4 * 65.104166666666671 + t10 * 86.805555555555557) - t265) +
           t12 * 43.402777777777779) +
          t2 * t142) +
         t4 * t144) -
        t11 * 108.5069444444444) +
       t2113_tmp * -108.5069444444444) *
      xi;
  c_sfvals_tmp =
      t7 *
      ((((((t265 + t793) + t2 * 108.5069444444444) - t10 * 43.402777777777779) +
         t1824_tmp * -65.104166666666671) +
        t1812_tmp * -65.104166666666671) +
       t2228);
  sfvals[80] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  e_sfvals_tmp =
      (t8 *
           ((((((t6018_tmp + t754_tmp * -86.805555555555557) + t1826) + t1827) +
              t1732_tmp * -86.805555555555557) +
             t2464) +
            t2465) +
       t6 * ((((((((((((t6187_tmp + eta * 40.50925925925926 * zeta) + t565) +
                      t585) +
                     t755) -
                    t629) +
                   t1163) -
                  t798) +
                 t1245_tmp * -28.93518518518519) +
                t1657) +
               t1732) -
              t1764) -
             t1824)) +
      (((((((((((((t124 + t337) + t599) + t630) - t594) - t635) + t1105) +
             eta * t648) +
            t4155_tmp * -2.8935185185185186) +
           t1556_tmp * -14.46759259259259) +
          t1245_tmp * -20.25462962962963) +
         t2115) +
        t10 * t569) +
       t2461);
  f_sfvals_tmp =
      t7 *
      ((((((((((((t106 + t106 * zeta_1_inv) + t181) + t243) - t564) - t623) -
             t754) +
            t755_tmp * -86.805555555555557) +
           t1762) +
          t1761_tmp * -52.083333333333336) -
         t1770) +
        t2218) +
       t2219);
  g_sfvals_tmp =
      xi * (((((((((((((t243 - t290) + t560) + t648) - t747) - t774) - t625) -
                  t636) +
                 t1245_tmp * -121.5277777777778) +
                t2456) +
               eta * (t11 * 86.805555555555557)) +
              t77_tmp * 34.722222222222221) +
             t2 * 40.50925925925926 * zeta) +
            t560 * zeta_1_inv);
  sfvals[81] = (e_sfvals_tmp - f_sfvals_tmp) + g_sfvals_tmp;
  sfvals[82] =
      (((((((((((((((t245 + t226 * zeta) - t650) + t1038) + t1247) + t1449) -
                t1056) +
               t1557) +
              t11 * t450) +
             t10 * (t3 * 43.402777777777779)) +
            t2173) +
           t2723) -
          t1245_tmp * 86.805555555555557) -
         t1556_tmp * 43.402777777777779) -
        t4155_tmp * 21.701388888888889) +
       t6 * (((((((((((((t359 - t245) + t566) + t623) - t794) - t952) + t1646) +
                   t10 * t450) +
                  t1665) -
                 t1448) +
                t2012) +
               t2146) +
              t2479) +
             t2546)) -
      t8 * ((((((d_sfvals_tmp - t793) + t1812) + t1813) - t1806) - t1831) -
            t1832);
  sfvals[83] = (e_sfvals_tmp + f_sfvals_tmp) - g_sfvals_tmp;
  sfvals[84] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      -t6149 +
      (((((((((((((t699 - t501) + t1043) + t1061) - t1051) + t1594) - t1477) +
             t4155_tmp * -10.986328125) +
            eta * t1489) +
           t1556_tmp * -54.931640625) +
          t1245_tmp * -76.904296875) +
         t2516) +
        t2730) +
       t10 * t1396);
  b_sfvals_tmp =
      t7 * ((((((((((t514 - t452) + t340_tmp * -131.8359375) + t1395) - t1474) +
                 t77_tmp * -164.794921875) +
                t2088) +
               t2259) +
              t3 * 164.794921875 * zeta_1_inv) +
             t15 * t958) +
            t2870);
  c_sfvals_tmp =
      (((((((((((t514 + t958) + t1489) + t1493) + t1672) + t1686) - t1476) -
           t1481) +
          t1990) +
         t2420) +
        t2620) +
       t2729) *
      xi;
  sfvals[85] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[86] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp =
      -t6164 + (((((((((((((-t501 + t1043) + t1061) + t1076) - t1051) + t1594) +
                       t3 * t514) -
                      t1477) +
                     t12 * t835) +
                    eta * t1481) +
                   t1108_tmp * -120.849609375) +
                  t2516) +
                 t2730) +
                t6228_tmp * -54.931640625);
  b_sfvals_tmp = t7 * ((((((((((t452 + t514) + t452 * zeta_1_inv) + t1395) +
                             eta * 164.794921875 * zeta) -
                            t1474) +
                           t2088) +
                          t2259) +
                         t755_tmp * -164.794921875) +
                        t1761_tmp * -131.8359375) -
                       t2870);
  c_sfvals_tmp =
      (((((((((((-t514 + t958) + t1476) + t1481) + t1493) + t1623) + t1672) +
           t1686) -
          t1489) +
         t2420) +
        t2620) +
       t2813) *
      xi;
  sfvals[87] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[88] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[89] = (((((((t10 * -98.958333333333329 + t11 * 296.875) -
                     t12 * 338.54166666666669) +
                    t13 * 130.20833333333329) +
                   t65) -
                  t2461_tmp * 130.20833333333329) +
                 t10 * (t2 * 78.125)) -
                t1105_tmp * 10.416666666666666) +
               t6 * ((((((-t65 + t2 * 182.29166666666671) + t10 * 78.125) -
                        t11 * 130.20833333333329) +
                       t2 * (zeta * 130.20833333333329)) +
                      t754_tmp * 244.79166666666671) +
                     t1732_tmp * 62.5);
  sfvals[90] =
      (((((((t10 * -65.538194444444443 + t11 * 109.8090277777778) -
            t12 * 80.295138888888886) +
           t13 * 21.701388888888889) +
          zeta * 14.32291666666667) +
         t8 * ((((t1812_tmp * 195.3125 + t1813_tmp * 195.3125) -
                 t1732_tmp * 244.140625) +
                zeta * 48.828125) -
               t754_tmp * 244.140625)) -
        t6 * ((((((((t2 * -6.510416666666667 - t10 * 134.54861111111109) +
                    t11 * 70.529513888888886) +
                   t1824_tmp * 244.140625) +
                  zeta * 63.151041666666671) +
                 t1732_tmp * 0.86805555555555558) -
                t1105_tmp * 314.67013888888891) -
               t754_tmp * 5.6423611111111107) +
              t798_tmp * 244.140625)) +
       t2113_tmp * 134.54861111111109) +
      ((t2461_tmp * -70.529513888888886 - t1105_tmp * 63.151041666666671) +
       t1557_tmp * 48.828125);
}

// pyra_91_sfunc - Compute shape functions and their derivatives of pyra_91
void pyra_91_sfunc(double xi, double eta, double zeta, double sfvals[91],
                   double sdvals[273])
{
  double b_sdvals_tmp;
  double b_sfvals_tmp;
  double b_t5955_tmp;
  double b_t6021_tmp;
  double b_t6219_tmp;
  double b_t6328_tmp;
  double c_sdvals_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double h_sfvals_tmp;
  double i_sfvals_tmp;
  double j_sfvals_tmp;
  double k_sfvals_tmp;
  double l_sfvals_tmp;
  double m_sfvals_tmp;
  double n_sfvals_tmp;
  double o_sfvals_tmp;
  double p_sfvals_tmp;
  double q_sfvals_tmp;
  double r_sfvals_tmp;
  double s_sfvals_tmp;
  double sdvals_tmp;
  double sfvals_tmp;
  double sfvals_tmp_tmp;
  double t10;
  double t1001;
  double t1002;
  double t1003;
  double t1004;
  double t1005;
  double t1006;
  double t1007;
  double t1008;
  double t1009;
  double t1010;
  double t1011;
  double t1016;
  double t1018;
  double t1019;
  double t1020;
  double t1022;
  double t1030;
  double t1031;
  double t1032;
  double t1034;
  double t1035;
  double t1036;
  double t1037;
  double t1038;
  double t1039;
  double t1040;
  double t1041;
  double t1043;
  double t1044;
  double t1045;
  double t1046;
  double t1047;
  double t1048;
  double t1049;
  double t105;
  double t1050;
  double t1051;
  double t1052;
  double t1055;
  double t1056;
  double t1057;
  double t1058;
  double t1059;
  double t106;
  double t1060;
  double t1061;
  double t1062;
  double t1063;
  double t1064;
  double t1065;
  double t107;
  double t1072;
  double t1076;
  double t1077;
  double t108;
  double t1081;
  double t1087;
  double t109;
  double t1093;
  double t1094;
  double t1095;
  double t1098;
  double t11;
  double t110;
  double t1100;
  double t1101;
  double t1104;
  double t1105;
  double t1106;
  double t1107;
  double t1108;
  double t1108_tmp;
  double t1109;
  double t111;
  double t1112;
  double t1113;
  double t1114;
  double t1115;
  double t112;
  double t1121;
  double t1123;
  double t1128;
  double t1129;
  double t113;
  double t1130;
  double t1132;
  double t1133;
  double t1134;
  double t114;
  double t1141;
  double t1142;
  double t1144;
  double t1147;
  double t1149;
  double t115;
  double t1150;
  double t1151;
  double t1153;
  double t1154;
  double t1156;
  double t1157;
  double t1158;
  double t1159;
  double t116;
  double t1160;
  double t1162;
  double t1163;
  double t1168;
  double t1169;
  double t1169_tmp;
  double t117;
  double t1172;
  double t1173;
  double t1174;
  double t1176;
  double t1177;
  double t118;
  double t1180;
  double t1182;
  double t1183;
  double t1185;
  double t1186;
  double t1188;
  double t1190;
  double t1191;
  double t1194;
  double t1197;
  double t12;
  double t1202;
  double t1204;
  double t1206;
  double t1207;
  double t1208;
  double t1216;
  double t1224;
  double t1227;
  double t1229;
  double t1230;
  double t1231;
  double t1233;
  double t1235;
  double t1236;
  double t1237;
  double t1238;
  double t124;
  double t1241;
  double t1244;
  double t1245;
  double t1246;
  double t1247;
  double t1249;
  double t125;
  double t1250;
  double t1251;
  double t1252;
  double t1253;
  double t1254;
  double t1255;
  double t1257;
  double t126;
  double t1260;
  double t1265;
  double t1266;
  double t1267;
  double t1268;
  double t1269;
  double t1270;
  double t1272;
  double t1274;
  double t1276;
  double t1281;
  double t1285;
  double t1288;
  double t129;
  double t1290;
  double t1291;
  double t1292;
  double t1293;
  double t1296;
  double t13;
  double t1301;
  double t1302;
  double t131;
  double t1311;
  double t1316;
  double t1317;
  double t1318;
  double t1319;
  double t132;
  double t1320;
  double t1321;
  double t1322;
  double t1328;
  double t133;
  double t1331;
  double t1332;
  double t1332_tmp;
  double t1334;
  double t1335;
  double t1335_tmp;
  double t1336;
  double t1337;
  double t1337_tmp;
  double t1338;
  double t1339;
  double t134;
  double t1340;
  double t1342;
  double t1343;
  double t1344;
  double t1344_tmp;
  double t1345;
  double t1345_tmp;
  double t1346;
  double t1346_tmp;
  double t135;
  double t136;
  double t1364;
  double t1365;
  double t1368;
  double t137;
  double t1372;
  double t1376;
  double t1378;
  double t1379;
  double t138;
  double t1380;
  double t1381;
  double t1384;
  double t1387;
  double t1388;
  double t1389;
  double t139;
  double t1390;
  double t1391;
  double t1392;
  double t1393;
  double t1395;
  double t1396;
  double t14;
  double t1400;
  double t1401;
  double t1402;
  double t1403;
  double t1404;
  double t1405;
  double t1406;
  double t1409;
  double t141;
  double t142;
  double t1427;
  double t1429;
  double t143;
  double t1430;
  double t1431;
  double t1432;
  double t1434;
  double t1435;
  double t1436;
  double t144;
  double t1446;
  double t1447;
  double t1448;
  double t1449;
  double t1450;
  double t1451;
  double t1452;
  double t1453;
  double t1454;
  double t1455;
  double t1457;
  double t1458;
  double t1459;
  double t146;
  double t1460;
  double t1465;
  double t1466;
  double t1467;
  double t1468;
  double t1469;
  double t147;
  double t1470;
  double t1471;
  double t1474;
  double t1475;
  double t1476;
  double t1477;
  double t1478;
  double t1479;
  double t148;
  double t1480;
  double t1481;
  double t1482;
  double t1483;
  double t1484;
  double t1485;
  double t1487;
  double t1489;
  double t149;
  double t1493;
  double t15;
  double t150;
  double t1501;
  double t1503;
  double t1504;
  double t1505;
  double t1507;
  double t1509;
  double t151;
  double t1510;
  double t1511;
  double t1515;
  double t1516;
  double t1517;
  double t1519;
  double t152;
  double t1520;
  double t1528;
  double t1529;
  double t1531;
  double t1534;
  double t1535;
  double t1536;
  double t1537;
  double t1538;
  double t1543;
  double t1544;
  double t155;
  double t1551;
  double t1552;
  double t1553;
  double t1556;
  double t1556_tmp;
  double t1557;
  double t1557_tmp;
  double t1558;
  double t156;
  double t1562;
  double t1563;
  double t1569;
  double t1571;
  double t1572;
  double t1573;
  double t1577;
  double t1578;
  double t1579;
  double t1581;
  double t1582;
  double t1586;
  double t1588;
  double t1591;
  double t1592;
  double t1593;
  double t1594;
  double t16;
  double t1603;
  double t1605;
  double t1608;
  double t1609;
  double t1610;
  double t1611;
  double t1615;
  double t1616;
  double t1617;
  double t162;
  double t1620;
  double t1621;
  double t1623;
  double t1625;
  double t1626;
  double t163;
  double t1632;
  double t1643;
  double t1645;
  double t1646;
  double t165;
  double t1652;
  double t1657;
  double t1658;
  double t1659;
  double t166;
  double t1660;
  double t1664;
  double t1665;
  double t1667;
  double t1669;
  double t167;
  double t1671;
  double t1672;
  double t1673;
  double t1674;
  double t1675;
  double t1676;
  double t1679;
  double t168;
  double t1680;
  double t1682;
  double t1683;
  double t1684;
  double t1686;
  double t1687;
  double t1688;
  double t1699;
  double t17;
  double t1702;
  double t1703;
  double t1704;
  double t1705;
  double t1706;
  double t1707;
  double t1708;
  double t1709;
  double t1710;
  double t1714;
  double t1718;
  double t1719;
  double t1720;
  double t1721;
  double t1722;
  double t1723;
  double t1724;
  double t1725;
  double t1726;
  double t1727;
  double t1728;
  double t1731;
  double t1732;
  double t1733;
  double t1734;
  double t1742;
  double t1743;
  double t1744;
  double t1745;
  double t1746;
  double t1747;
  double t1749;
  double t175;
  double t1750;
  double t1751;
  double t1752;
  double t1753;
  double t1755;
  double t1757;
  double t1758;
  double t1759;
  double t176;
  double t1760;
  double t1761;
  double t1762;
  double t1763;
  double t1764;
  double t1765;
  double t1766;
  double t1767;
  double t1770;
  double t1771;
  double t1772;
  double t1773;
  double t1775;
  double t1776;
  double t1778;
  double t178;
  double t1781;
  double t1783;
  double t1784;
  double t1785;
  double t1786;
  double t1787;
  double t1789;
  double t179;
  double t1792;
  double t1794;
  double t1795;
  double t1796;
  double t1797_tmp;
  double t1798;
  double t1799;
  double t180;
  double t1800;
  double t1801;
  double t1802;
  double t1803;
  double t1804;
  double t1805;
  double t1806;
  double t1807;
  double t1808;
  double t1809;
  double t181;
  double t1810;
  double t1811;
  double t1812;
  double t1813;
  double t1814;
  double t1815;
  double t1816;
  double t1818;
  double t182;
  double t1820;
  double t1821;
  double t1822;
  double t1823;
  double t1824;
  double t1825;
  double t1826;
  double t1827;
  double t1828;
  double t1829;
  double t1831;
  double t1832;
  double t1833;
  double t1834;
  double t1835;
  double t1836;
  double t1837;
  double t184;
  double t1844;
  double t185;
  double t1856;
  double t1859;
  double t1861;
  double t1867;
  double t1868;
  double t1870;
  double t1871;
  double t1872;
  double t1874;
  double t1875;
  double t1876;
  double t1877;
  double t1878;
  double t1879;
  double t188;
  double t1880;
  double t1881;
  double t1882;
  double t1883;
  double t1884;
  double t1885;
  double t1886;
  double t1887;
  double t1888;
  double t1889;
  double t189;
  double t1890;
  double t1892;
  double t1893;
  double t1894;
  double t19;
  double t190;
  double t192;
  double t1929;
  double t193;
  double t1931;
  double t1932;
  double t1933;
  double t1934;
  double t1935;
  double t1936;
  double t1937;
  double t1938;
  double t1939;
  double t1940;
  double t1941;
  double t1942;
  double t1943;
  double t1944;
  double t1945;
  double t1946;
  double t1952;
  double t1955;
  double t1956;
  double t1963;
  double t197;
  double t1970;
  double t1971;
  double t1973;
  double t1974;
  double t1978;
  double t198;
  double t1980;
  double t1981;
  double t1982;
  double t1987;
  double t1989;
  double t199;
  double t1990;
  double t1992;
  double t1998;
  double t2;
  double t20;
  double t200;
  double t2005;
  double t2009;
  double t2010;
  double t2011;
  double t2012;
  double t2017;
  double t2019;
  double t202;
  double t2025;
  double t2031;
  double t2033;
  double t2035;
  double t2036;
  double t2041;
  double t2044;
  double t2045;
  double t2047;
  double t2048;
  double t2049;
  double t2052;
  double t2054;
  double t2058;
  double t2059;
  double t2061;
  double t2062;
  double t2063;
  double t2066;
  double t2067;
  double t2070;
  double t2073;
  double t2074;
  double t2076;
  double t2077;
  double t2079;
  double t2082;
  double t2083;
  double t2084;
  double t2088;
  double t2089;
  double t2090;
  double t2091;
  double t21;
  double t210;
  double t2103;
  double t2109;
  double t211;
  double t2110;
  double t2113;
  double t2113_tmp;
  double t2115;
  double t2116;
  double t2119;
  double t212;
  double t213;
  double t2132;
  double t214;
  double t2143;
  double t2144;
  double t2145;
  double t2146;
  double t2147;
  double t215;
  double t2153;
  double t2157;
  double t2158;
  double t2159;
  double t216;
  double t2160;
  double t2161;
  double t2162;
  double t2164;
  double t2165;
  double t2166;
  double t2168;
  double t2169;
  double t217;
  double t2172;
  double t2173;
  double t2177;
  double t218;
  double t2182;
  double t2183;
  double t2187;
  double t2188;
  double t219;
  double t2199;
  double t22;
  double t2201;
  double t2202;
  double t2204;
  double t2207;
  double t2208;
  double t2213;
  double t2214;
  double t2215;
  double t2216;
  double t2217;
  double t2218;
  double t2219;
  double t2220;
  double t2224;
  double t2225;
  double t2226;
  double t2227;
  double t2228;
  double t223;
  double t2230;
  double t2231;
  double t2232;
  double t2234;
  double t2235;
  double t2236;
  double t2237;
  double t2238;
  double t2239;
  double t224;
  double t2240;
  double t2241;
  double t2242;
  double t2244;
  double t2246;
  double t2247;
  double t2248;
  double t2249;
  double t225;
  double t2250;
  double t2251;
  double t2252;
  double t2253;
  double t2254;
  double t2255;
  double t2256;
  double t2257;
  double t2258;
  double t2259;
  double t226;
  double t2260;
  double t2261;
  double t2262;
  double t2263;
  double t2264;
  double t2265;
  double t2266;
  double t2267;
  double t2268;
  double t227;
  double t2270;
  double t2272;
  double t2273;
  double t228;
  double t2292;
  double t2295;
  double t2299;
  double t230;
  double t2302;
  double t2304;
  double t2305;
  double t2306;
  double t2307;
  double t2308;
  double t2309;
  double t231;
  double t2310;
  double t2311;
  double t2312;
  double t2313;
  double t2314;
  double t2315;
  double t2323;
  double t2325;
  double t2326;
  double t2327;
  double t2337;
  double t2338;
  double t2339;
  double t2348;
  double t2357;
  double t2358;
  double t2359;
  double t2362;
  double t2369;
  double t2371;
  double t2375;
  double t2378;
  double t2380;
  double t2381;
  double t2383;
  double t2383_tmp;
  double t2388;
  double t239;
  double t24;
  double t240;
  double t2401;
  double t2403;
  double t2407;
  double t2408;
  double t241;
  double t2410;
  double t2411;
  double t2412;
  double t2413;
  double t2414;
  double t2415;
  double t2418;
  double t2419;
  double t242;
  double t2420;
  double t2421;
  double t2422;
  double t2423;
  double t2424;
  double t2425;
  double t2427;
  double t2428;
  double t2429;
  double t243;
  double t2430;
  double t2431;
  double t2434;
  double t2435;
  double t2436;
  double t244;
  double t2446;
  double t245;
  double t2455;
  double t2456;
  double t2458;
  double t246;
  double t2461;
  double t2461_tmp;
  double t2464;
  double t2465;
  double t2466;
  double t2467;
  double t2469;
  double t2471;
  double t2472;
  double t2473;
  double t2476;
  double t2478;
  double t2479;
  double t2480;
  double t2482;
  double t249;
  double t2493;
  double t2494;
  double t25;
  double t250;
  double t2501;
  double t2504;
  double t2505;
  double t2507;
  double t251;
  double t2510;
  double t2511;
  double t2512;
  double t2514;
  double t2516;
  double t2517;
  double t2518;
  double t2519;
  double t252;
  double t2526;
  double t2533;
  double t2534;
  double t2535;
  double t2536;
  double t2537;
  double t254;
  double t2542;
  double t2543;
  double t2545;
  double t2546;
  double t2548;
  double t2549;
  double t2550;
  double t2551;
  double t2552;
  double t2553;
  double t2554;
  double t2555;
  double t2556;
  double t2557;
  double t2558;
  double t2559;
  double t256;
  double t2560;
  double t2561;
  double t2562;
  double t2565;
  double t2566;
  double t2567;
  double t257;
  double t258;
  double t2582;
  double t2584;
  double t2585;
  double t259;
  double t2593;
  double t26;
  double t2603;
  double t2604;
  double t2607;
  double t2609;
  double t2613;
  double t2617;
  double t262;
  double t2620;
  double t2621;
  double t2622;
  double t2623;
  double t2625;
  double t2628;
  double t2629;
  double t263;
  double t2632;
  double t2633;
  double t2634;
  double t2635;
  double t2636;
  double t2638;
  double t2639;
  double t264;
  double t2642;
  double t2644;
  double t2646;
  double t2647;
  double t265;
  double t2652;
  double t2654;
  double t2656;
  double t2657;
  double t2658;
  double t2659;
  double t266;
  double t2662;
  double t2664;
  double t2668;
  double t2669;
  double t267;
  double t2670;
  double t2677;
  double t268;
  double t2680;
  double t2682;
  double t269;
  double t2690;
  double t26_tmp;
  double t270;
  double t2700;
  double t2702;
  double t2704;
  double t2707;
  double t2708;
  double t271;
  double t2714;
  double t2715;
  double t2716;
  double t2717;
  double t2718;
  double t272;
  double t2720;
  double t2721;
  double t2723;
  double t2724;
  double t2725;
  double t2726;
  double t2727;
  double t2728;
  double t2729;
  double t273;
  double t2730;
  double t2732;
  double t2733;
  double t2734;
  double t2735;
  double t2736;
  double t2737;
  double t2738;
  double t2739;
  double t274;
  double t2740;
  double t2745;
  double t2746;
  double t2747;
  double t2748;
  double t275;
  double t2753;
  double t2754;
  double t2756;
  double t2757;
  double t2758;
  double t2759;
  double t276;
  double t2761;
  double t2766;
  double t2769;
  double t277;
  double t2774;
  double t2777;
  double t278;
  double t2781;
  double t2782;
  double t2783;
  double t2784;
  double t2785;
  double t2786;
  double t2787;
  double t2788;
  double t2789;
  double t279;
  double t2792;
  double t2793;
  double t280;
  double t2804;
  double t2807;
  double t281;
  double t2810;
  double t2811;
  double t2812;
  double t2813;
  double t2814;
  double t2817;
  double t2818;
  double t282;
  double t2820;
  double t2823;
  double t2824;
  double t2825;
  double t2826;
  double t2827;
  double t2828;
  double t2829;
  double t2832;
  double t2833;
  double t2834;
  double t2837;
  double t2840;
  double t2841;
  double t2842;
  double t2844;
  double t2845;
  double t2848;
  double t2849;
  double t2850;
  double t2851;
  double t2852;
  double t2853;
  double t2854;
  double t2855;
  double t2856;
  double t2857;
  double t2858;
  double t2859;
  double t286;
  double t2860;
  double t2861;
  double t2862;
  double t2863;
  double t2864;
  double t2865;
  double t2866;
  double t2869;
  double t2870;
  double t2871;
  double t2872;
  double t2874;
  double t2875;
  double t2876;
  double t2877;
  double t2878;
  double t2880;
  double t2881;
  double t2882;
  double t2886;
  double t289;
  double t290;
  double t2914_tmp;
  double t2915;
  double t292;
  double t2922;
  double t2926;
  double t2928;
  double t2929;
  double t293;
  double t2930;
  double t2932;
  double t2933;
  double t2935;
  double t2937;
  double t2938;
  double t2939;
  double t294;
  double t2940;
  double t2941;
  double t2942;
  double t2944;
  double t2946;
  double t2947;
  double t2948;
  double t2949;
  double t295;
  double t2951;
  double t2952;
  double t2955;
  double t2956;
  double t2958;
  double t296;
  double t2961;
  double t2962;
  double t2963;
  double t2964;
  double t2968;
  double t2969;
  double t297;
  double t2970;
  double t2971;
  double t2972;
  double t2975;
  double t2977;
  double t2978;
  double t2979;
  double t298;
  double t2980;
  double t2982;
  double t299;
  double t2997;
  double t2998;
  double t2999;
  double t3;
  double t300;
  double t301;
  double t302;
  double t3023;
  double t3026;
  double t3027;
  double t3028;
  double t3029;
  double t303;
  double t3031;
  double t3032;
  double t3033;
  double t3035;
  double t3037;
  double t3038;
  double t3039;
  double t304;
  double t3040;
  double t3041;
  double t3042;
  double t3043;
  double t3044;
  double t3045;
  double t3046;
  double t3047;
  double t3048;
  double t3049;
  double t305;
  double t3050;
  double t3055_tmp;
  double t3056_tmp;
  double t3066;
  double t3067;
  double t3068;
  double t3069;
  double t3070;
  double t3085;
  double t3087;
  double t3088;
  double t309;
  double t3091;
  double t3092;
  double t3093;
  double t3094;
  double t3098;
  double t3099;
  double t31;
  double t310;
  double t3102;
  double t311;
  double t312;
  double t3121;
  double t3122;
  double t3123;
  double t3124;
  double t3125;
  double t3126;
  double t3128;
  double t3129;
  double t313;
  double t3130;
  double t3131;
  double t3133;
  double t3134;
  double t3135;
  double t3136;
  double t3138;
  double t3139;
  double t314;
  double t3140;
  double t3141;
  double t3144;
  double t3145;
  double t3146;
  double t3147;
  double t3148;
  double t3149;
  double t315;
  double t3150;
  double t3152;
  double t3153;
  double t3155;
  double t3156;
  double t3157;
  double t3158;
  double t3159;
  double t3161;
  double t3162;
  double t3163;
  double t3164;
  double t3165;
  double t3166;
  double t3167;
  double t3168;
  double t3169;
  double t317;
  double t3170;
  double t3171;
  double t3172;
  double t3173;
  double t3174;
  double t3175;
  double t3176;
  double t3179;
  double t318;
  double t3180;
  double t3181;
  double t3182;
  double t3183;
  double t3184;
  double t3185;
  double t3186;
  double t3187;
  double t3189;
  double t319;
  double t3190;
  double t3191;
  double t3193;
  double t3194;
  double t3195;
  double t3198;
  double t3199;
  double t32;
  double t320;
  double t3200;
  double t3201;
  double t3204;
  double t3205;
  double t3208;
  double t3209;
  double t321;
  double t3210;
  double t3211;
  double t3212;
  double t3213;
  double t3217;
  double t3218;
  double t3219;
  double t322;
  double t3220;
  double t3221;
  double t3222;
  double t3223;
  double t3224;
  double t3225;
  double t3226;
  double t3227;
  double t3228;
  double t3229;
  double t323;
  double t3230;
  double t3233;
  double t3236;
  double t3237;
  double t3238;
  double t324;
  double t3241;
  double t3242;
  double t3243;
  double t3244;
  double t3245;
  double t3247;
  double t3248;
  double t3249;
  double t325;
  double t3250;
  double t3251;
  double t3252;
  double t3253;
  double t3254;
  double t3256;
  double t3258;
  double t3259;
  double t326;
  double t3262;
  double t3263;
  double t3264;
  double t3266;
  double t3267;
  double t3268;
  double t3269;
  double t327;
  double t3270;
  double t3271;
  double t3274;
  double t3276;
  double t3277;
  double t3278;
  double t3279;
  double t328;
  double t3280;
  double t3281;
  double t3285;
  double t3286;
  double t3287;
  double t3289;
  double t329;
  double t3290;
  double t3292;
  double t3293;
  double t3294;
  double t3295;
  double t3296;
  double t3297;
  double t3298;
  double t3299;
  double t33;
  double t330;
  double t3300;
  double t3301;
  double t3304;
  double t3306;
  double t3307;
  double t3308;
  double t3309;
  double t3310;
  double t3311;
  double t3312;
  double t3313;
  double t3314;
  double t3315;
  double t3316;
  double t3317;
  double t3318;
  double t3319;
  double t3320;
  double t3321;
  double t3323;
  double t3324;
  double t3325;
  double t3326;
  double t3327;
  double t3328;
  double t333;
  double t3330;
  double t3331;
  double t3332;
  double t3333;
  double t3334;
  double t3335;
  double t3336;
  double t3337;
  double t3339;
  double t334;
  double t3342;
  double t3344;
  double t3345;
  double t3346;
  double t3347;
  double t3349;
  double t335;
  double t3350;
  double t3352;
  double t3353;
  double t3354;
  double t3355;
  double t3357;
  double t3358;
  double t3359;
  double t3361;
  double t3362;
  double t3363;
  double t3365;
  double t3366;
  double t3367;
  double t337;
  double t3370;
  double t3371;
  double t3372;
  double t3373;
  double t3377;
  double t3378;
  double t338;
  double t3381;
  double t3383;
  double t3384;
  double t3385;
  double t3386;
  double t3387;
  double t3389;
  double t3390;
  double t3393;
  double t3394;
  double t3395;
  double t3398;
  double t3399;
  double t34;
  double t3400;
  double t3401;
  double t3403;
  double t3404;
  double t3405;
  double t3407;
  double t3408;
  double t3409;
  double t341;
  double t3410;
  double t3411;
  double t3412;
  double t3413;
  double t3414;
  double t3417;
  double t3419;
  double t3421;
  double t3425;
  double t3426;
  double t3427;
  double t3428;
  double t3429;
  double t3433;
  double t3434;
  double t3436;
  double t3437;
  double t3439;
  double t3442;
  double t3443;
  double t3452;
  double t3454;
  double t3458;
  double t3459;
  double t3460;
  double t3461;
  double t3466;
  double t3470;
  double t3471;
  double t3476;
  double t3478;
  double t3479;
  double t3480;
  double t3481;
  double t3484;
  double t3486;
  double t3489;
  double t349;
  double t3490;
  double t3492;
  double t3497;
  double t35;
  double t3502;
  double t3503;
  double t3506;
  double t351;
  double t3512;
  double t3513;
  double t3515;
  double t3516;
  double t3517;
  double t3518;
  double t3522;
  double t3524;
  double t3529;
  double t3530;
  double t3531;
  double t3533;
  double t3535;
  double t3537;
  double t3538;
  double t3541;
  double t3544;
  double t3545;
  double t3549;
  double t355;
  double t3550;
  double t3555;
  double t3556;
  double t3557;
  double t3558;
  double t3559;
  double t3560;
  double t3562;
  double t3563;
  double t3565;
  double t3566;
  double t3567;
  double t3568;
  double t357;
  double t3571;
  double t3572;
  double t3573;
  double t3574;
  double t358;
  double t3580;
  double t3581;
  double t3582;
  double t3583;
  double t3584;
  double t3585;
  double t3586;
  double t3587;
  double t3588;
  double t3589;
  double t359;
  double t3590;
  double t36;
  double t3602;
  double t3603;
  double t3606;
  double t3607;
  double t3618;
  double t3619;
  double t3622;
  double t3623;
  double t3625;
  double t3626;
  double t3627;
  double t3628;
  double t3629;
  double t3631;
  double t3632;
  double t3633;
  double t3641;
  double t3642;
  double t3643;
  double t3645;
  double t3646;
  double t365;
  double t3654;
  double t3656;
  double t3657;
  double t366;
  double t3662;
  double t3663;
  double t3664;
  double t3667;
  double t3668;
  double t3669;
  double t367;
  double t3670;
  double t3671;
  double t3672;
  double t3673;
  double t3682;
  double t3683;
  double t3686;
  double t3687;
  double t3691;
  double t3692;
  double t3693;
  double t3697;
  double t370;
  double t3700;
  double t3701;
  double t3702;
  double t3703;
  double t3706;
  double t3707;
  double t371;
  double t3711;
  double t3712;
  double t3713;
  double t3714;
  double t3718;
  double t3724;
  double t3725;
  double t3726;
  double t3733;
  double t3734;
  double t3735;
  double t3737;
  double t3738;
  double t374;
  double t3741;
  double t3742;
  double t3744;
  double t3747;
  double t3748;
  double t3749;
  double t375;
  double t3750;
  double t3752;
  double t3753;
  double t3755;
  double t3758;
  double t3759;
  double t3760;
  double t3763;
  double t3764;
  double t3765;
  double t3768;
  double t3769;
  double t3770;
  double t3771;
  double t3772;
  double t3775;
  double t3777;
  double t3778;
  double t3779;
  double t3780;
  double t3781;
  double t3784;
  double t3786;
  double t3787;
  double t3789;
  double t379;
  double t3793;
  double t3794;
  double t3796;
  double t3797;
  double t3798;
  double t3799;
  double t380;
  double t3800;
  double t3801;
  double t3802;
  double t3803;
  double t3804;
  double t3805;
  double t3812;
  double t3816;
  double t3818;
  double t3819;
  double t3820;
  double t3821;
  double t3822;
  double t3824;
  double t3825;
  double t3826;
  double t3827;
  double t3828;
  double t3830;
  double t3833;
  double t3834;
  double t3835;
  double t3836;
  double t3837;
  double t3839;
  double t3840;
  double t3845;
  double t385;
  double t3850;
  double t3851;
  double t3852;
  double t3853;
  double t3854;
  double t3855;
  double t3858;
  double t3859;
  double t3860;
  double t3862;
  double t3863;
  double t3864;
  double t3865;
  double t3872;
  double t3877;
  double t3878;
  double t3880;
  double t3881;
  double t3882;
  double t3883;
  double t3884;
  double t3888;
  double t389;
  double t3896;
  double t3898;
  double t3899;
  double t39;
  double t390;
  double t3902;
  double t3903;
  double t3904;
  double t3906;
  double t3907;
  double t3908;
  double t3909;
  double t391;
  double t3912;
  double t3915;
  double t3916;
  double t3917;
  double t3918;
  double t3919;
  double t392;
  double t3920;
  double t3921;
  double t3922;
  double t3923;
  double t3924;
  double t3925;
  double t3926;
  double t3927;
  double t3928;
  double t3929;
  double t393;
  double t3930;
  double t3931;
  double t3933;
  double t3934;
  double t3935;
  double t3936;
  double t3939;
  double t3940;
  double t3941;
  double t3942;
  double t3946;
  double t3949;
  double t395;
  double t3950;
  double t3951;
  double t3952;
  double t3957;
  double t3958;
  double t3960;
  double t3961;
  double t3962;
  double t3968;
  double t3969;
  double t3970;
  double t3971;
  double t3972;
  double t3973;
  double t3974;
  double t3975;
  double t3976;
  double t3977;
  double t3978;
  double t398;
  double t3980;
  double t3981;
  double t3986;
  double t3987;
  double t3988;
  double t398_tmp;
  double t3991;
  double t3997;
  double t3998;
  double t3999;
  double t4;
  double t40;
  double t400;
  double t4000;
  double t4001;
  double t4002;
  double t4003;
  double t4005;
  double t4008;
  double t4010;
  double t4011;
  double t4014;
  double t4015;
  double t4016;
  double t4017;
  double t4018;
  double t4019;
  double t4020;
  double t4021;
  double t4022;
  double t4024;
  double t4025;
  double t4026;
  double t4027;
  double t4028;
  double t4029;
  double t4030;
  double t4031;
  double t4033;
  double t4036;
  double t4038;
  double t4039;
  double t4041;
  double t4042;
  double t4043;
  double t4049;
  double t405;
  double t4053;
  double t4054;
  double t406;
  double t4061;
  double t4064;
  double t407;
  double t4072;
  double t4075;
  double t4076;
  double t4077;
  double t4078;
  double t4081;
  double t4086;
  double t4087;
  double t4088;
  double t4089;
  double t4091;
  double t4092;
  double t4093;
  double t4095;
  double t4096;
  double t41;
  double t4101;
  double t4102;
  double t4103;
  double t4104;
  double t4105;
  double t4109;
  double t4112;
  double t4113;
  double t4115;
  double t4117;
  double t4118;
  double t4119;
  double t4120;
  double t4121;
  double t4122;
  double t4123;
  double t4124;
  double t4125;
  double t4126;
  double t4127;
  double t4128;
  double t4129;
  double t412_tmp;
  double t413;
  double t4138;
  double t4141;
  double t4142;
  double t4145;
  double t4146;
  double t4147;
  double t4149;
  double t4150;
  double t4151;
  double t4152;
  double t4154;
  double t4155;
  double t4156;
  double t4160;
  double t4161;
  double t4162;
  double t4164;
  double t4165;
  double t4166;
  double t4167;
  double t4168;
  double t4169;
  double t4170;
  double t4171;
  double t4173;
  double t4174;
  double t4175;
  double t4176;
  double t4181;
  double t4187;
  double t4188;
  double t4189;
  double t4190;
  double t4191;
  double t4192;
  double t4193;
  double t4194;
  double t4195;
  double t4196;
  double t4197;
  double t4198;
  double t4199;
  double t42;
  double t4200;
  double t4201;
  double t4202;
  double t4203;
  double t4205;
  double t4208;
  double t4209;
  double t4210;
  double t4211;
  double t4212;
  double t4214;
  double t4215;
  double t4216;
  double t4219;
  double t422;
  double t4234;
  double t4235;
  double t4236;
  double t4237;
  double t4238;
  double t4239;
  double t424;
  double t4240;
  double t4241;
  double t4242;
  double t4244;
  double t4245;
  double t4246;
  double t4247;
  double t4248;
  double t4249;
  double t4250;
  double t4251;
  double t4252;
  double t4253;
  double t4254;
  double t4255;
  double t4256;
  double t4257;
  double t4258;
  double t4259;
  double t426;
  double t4260;
  double t4261;
  double t4262;
  double t4265;
  double t4269;
  double t4273;
  double t4274;
  double t4276;
  double t4277;
  double t4278;
  double t4279;
  double t428;
  double t4283;
  double t4284;
  double t4287;
  double t4288;
  double t4289;
  double t429;
  double t4291;
  double t4296;
  double t4299;
  double t43;
  double t4300;
  double t4301;
  double t4302;
  double t4303;
  double t4308;
  double t4309;
  double t4311;
  double t4314;
  double t4315;
  double t4316;
  double t4317;
  double t4318;
  double t4320;
  double t4324;
  double t4325;
  double t4326;
  double t4327;
  double t4328;
  double t4333;
  double t4335;
  double t4336;
  double t4337;
  double t4339;
  double t434;
  double t4342;
  double t4343;
  double t4345;
  double t435;
  double t4354;
  double t4355;
  double t4357;
  double t4358;
  double t4359;
  double t436;
  double t4361;
  double t4363;
  double t4364;
  double t4366;
  double t4367;
  double t437;
  double t4371;
  double t4372;
  double t4373;
  double t4374;
  double t4375;
  double t4377;
  double t4379;
  double t4380;
  double t4381;
  double t439;
  double t4393;
  double t4394;
  double t4396;
  double t4397;
  double t4398;
  double t4399;
  double t440;
  double t4400;
  double t4401;
  double t4403;
  double t4404;
  double t4405;
  double t4406;
  double t4407;
  double t4408;
  double t4409;
  double t4418;
  double t4419;
  double t442;
  double t4420;
  double t4423;
  double t4424;
  double t4427;
  double t443;
  double t4436;
  double t4437;
  double t4442;
  double t4443;
  double t4447;
  double t4449;
  double t445;
  double t4452;
  double t4459;
  double t446;
  double t4460;
  double t4461;
  double t4462_tmp;
  double t4463;
  double t4464;
  double t4465_tmp;
  double t4466;
  double t4469;
  double t447;
  double t4474;
  double t4475;
  double t4476;
  double t4477;
  double t4478;
  double t4479;
  double t448;
  double t4481;
  double t4482;
  double t4484;
  double t4485;
  double t4486;
  double t449;
  double t4491;
  double t4492;
  double t450;
  double t4500;
  double t4501;
  double t4502;
  double t4503;
  double t4504;
  double t4505;
  double t451;
  double t4514;
  double t452;
  double t4520;
  double t4524;
  double t4525;
  double t4526;
  double t4527;
  double t4528;
  double t453;
  double t4530;
  double t4531;
  double t4532;
  double t4536;
  double t4537;
  double t4538;
  double t454;
  double t4540;
  double t4549;
  double t455;
  double t4550;
  double t4551;
  double t4554;
  double t4559;
  double t456;
  double t4560;
  double t4561;
  double t4565;
  double t4566;
  double t457;
  double t4577;
  double t4578;
  double t4579;
  double t458;
  double t4580;
  double t4582;
  double t4585;
  double t4586;
  double t4591;
  double t4593;
  double t4599;
  double t46;
  double t4600;
  double t4601;
  double t4602;
  double t4607;
  double t4608;
  double t4611;
  double t4620;
  double t4621;
  double t4622;
  double t4626;
  double t4631;
  double t4633;
  double t4634;
  double t4635;
  double t4636;
  double t4637;
  double t4638;
  double t4639;
  double t4642;
  double t4645;
  double t4646;
  double t4655;
  double t4659;
  double t4660;
  double t4661;
  double t4662;
  double t4663;
  double t4664;
  double t4665;
  double t4666;
  double t4667;
  double t467;
  double t4674;
  double t4676;
  double t4678;
  double t468;
  double t4681;
  double t4685;
  double t4686;
  double t4687;
  double t4688;
  double t4697;
  double t4698;
  double t4699;
  double t4700;
  double t4701;
  double t4703;
  double t4705;
  double t4706;
  double t4707;
  double t471;
  double t4710;
  double t4716;
  double t4718;
  double t4719;
  double t4723;
  double t4724;
  double t4725;
  double t4730;
  double t4734;
  double t474;
  double t4740;
  double t4741;
  double t4742;
  double t4743;
  double t4744;
  double t4749;
  double t475;
  double t4750;
  double t4754;
  double t4755;
  double t4756;
  double t4759;
  double t4760;
  double t4762;
  double t4764;
  double t4767;
  double t4768;
  double t4769;
  double t4775;
  double t478;
  double t4780;
  double t4788;
  double t4789;
  double t479;
  double t4795;
  double t4796;
  double t4797;
  double t4807;
  double t481;
  double t4811;
  double t4812;
  double t4813;
  double t4817;
  double t4818;
  double t482;
  double t4821;
  double t4827;
  double t4828;
  double t483;
  double t4830;
  double t4831;
  double t4833;
  double t4834;
  double t484;
  double t4841;
  double t4842;
  double t4843;
  double t4844;
  double t4845;
  double t4846;
  double t4847;
  double t4848;
  double t4849;
  double t485;
  double t4850;
  double t4851;
  double t4852;
  double t4853;
  double t4854;
  double t4857;
  double t4858;
  double t4859;
  double t486;
  double t4861;
  double t4862;
  double t4863;
  double t4864;
  double t4866;
  double t4868;
  double t4869;
  double t4870;
  double t4871;
  double t4872;
  double t4873;
  double t4875;
  double t4876;
  double t4877;
  double t4879;
  double t4880;
  double t4881;
  double t4882;
  double t4885;
  double t4886;
  double t4887;
  double t4889;
  double t4890;
  double t4892;
  double t4894;
  double t4896;
  double t4900;
  double t4903;
  double t4909;
  double t4910;
  double t4911;
  double t4912;
  double t4921;
  double t4922;
  double t4923;
  double t4924;
  double t4925;
  double t4926;
  double t4927;
  double t4928;
  double t4929;
  double t4930;
  double t4931;
  double t4932;
  double t4933;
  double t4934;
  double t4935;
  double t4936;
  double t4937;
  double t4938;
  double t4939;
  double t494;
  double t4940;
  double t4941;
  double t4942;
  double t4943;
  double t4944;
  double t4945;
  double t4946;
  double t4947;
  double t4948;
  double t4949;
  double t4950;
  double t4951;
  double t4952;
  double t4953;
  double t4954;
  double t4955;
  double t4956;
  double t4957;
  double t4958;
  double t4959;
  double t4960;
  double t4961;
  double t4962;
  double t4963;
  double t4964;
  double t4965;
  double t4966;
  double t4967;
  double t4968;
  double t4969;
  double t4970;
  double t4971;
  double t4972;
  double t4973;
  double t4974;
  double t4975;
  double t4976;
  double t4977;
  double t4978;
  double t4979;
  double t498;
  double t4980;
  double t4981;
  double t4982;
  double t4983;
  double t499;
  double t4998;
  double t5;
  double t50;
  double t5009;
  double t501;
  double t5011;
  double t5012;
  double t5013;
  double t5014;
  double t5016;
  double t502;
  double t5020;
  double t5022;
  double t5023;
  double t5024;
  double t5025;
  double t5026;
  double t5027;
  double t5028;
  double t5029;
  double t503;
  double t5034;
  double t5038;
  double t504;
  double t5042;
  double t505;
  double t5050;
  double t5057;
  double t5058;
  double t5059;
  double t5060;
  double t5063;
  double t5064;
  double t5065;
  double t5066;
  double t5068;
  double t5074;
  double t5075;
  double t5076;
  double t5077;
  double t5078;
  double t5079;
  double t508;
  double t5080;
  double t5081;
  double t5082;
  double t5083;
  double t5084;
  double t5085;
  double t5086;
  double t5087;
  double t5088;
  double t5089;
  double t509;
  double t5090;
  double t5093;
  double t5094;
  double t5095;
  double t5099;
  double t51;
  double t5100;
  double t5103;
  double t5104;
  double t5105;
  double t5106;
  double t5108;
  double t5109;
  double t511;
  double t5110;
  double t5111;
  double t5113;
  double t5114;
  double t5115;
  double t5116;
  double t5117;
  double t5120;
  double t5121;
  double t5122;
  double t5123;
  double t5124;
  double t5125;
  double t5126;
  double t5127;
  double t5129;
  double t513;
  double t5130;
  double t5131;
  double t5132;
  double t5133;
  double t5134;
  double t5135;
  double t5136;
  double t5137;
  double t5138;
  double t5139;
  double t514;
  double t5140;
  double t5142;
  double t5143;
  double t5145;
  double t5146;
  double t5147;
  double t5148;
  double t5149;
  double t5150;
  double t5151;
  double t5152;
  double t5153;
  double t5154;
  double t5155;
  double t5157;
  double t5158;
  double t516;
  double t5160;
  double t5161;
  double t5162;
  double t5164;
  double t5165;
  double t5166;
  double t5169;
  double t517;
  double t5172;
  double t518;
  double t5182;
  double t5186;
  double t5187;
  double t5189;
  double t52;
  double t520;
  double t5203;
  double t5205;
  double t5206;
  double t5207;
  double t521;
  double t5212;
  double t5216;
  double t5217;
  double t522;
  double t5221;
  double t523;
  double t5232;
  double t5233;
  double t5234;
  double t5235;
  double t5236;
  double t5237;
  double t5239;
  double t524;
  double t5240;
  double t5241;
  double t5242;
  double t5244;
  double t5245;
  double t5246;
  double t525;
  double t5252;
  double t5253;
  double t5254;
  double t5255;
  double t5256;
  double t5258;
  double t5259;
  double t526;
  double t5260;
  double t5261;
  double t5262;
  double t5265;
  double t527;
  double t5278;
  double t5279;
  double t5280;
  double t5283;
  double t5287;
  double t5288;
  double t5289;
  double t529;
  double t5290;
  double t5291;
  double t5292;
  double t5296;
  double t5297;
  double t52_tmp;
  double t5302;
  double t5303;
  double t5304;
  double t5305;
  double t5306;
  double t5307;
  double t531;
  double t5312;
  double t5313;
  double t5315;
  double t5316;
  double t5317;
  double t5318;
  double t5319;
  double t532;
  double t5320;
  double t5323;
  double t5328;
  double t5329;
  double t5331;
  double t5332;
  double t5333;
  double t5334;
  double t5335;
  double t5337;
  double t5338;
  double t5339;
  double t5340;
  double t5346;
  double t5347;
  double t5348;
  double t5352;
  double t5353;
  double t5354;
  double t5356;
  double t5357;
  double t5361;
  double t5362;
  double t5363;
  double t5364;
  double t5368;
  double t5369;
  double t5370;
  double t5378;
  double t5379;
  double t5380;
  double t5381;
  double t5386;
  double t5387;
  double t5388;
  double t5389;
  double t539;
  double t5390;
  double t5391;
  double t5396;
  double t5397;
  double t5398;
  double t5399;
  double t540;
  double t5403;
  double t5404;
  double t5405;
  double t5406;
  double t5407;
  double t5408;
  double t5409;
  double t541;
  double t5414;
  double t5415;
  double t5416;
  double t5417;
  double t5418;
  double t5419;
  double t542;
  double t5420;
  double t5427;
  double t5428;
  double t5429;
  double t543;
  double t5430;
  double t5431;
  double t5433;
  double t5434;
  double t5435;
  double t5436;
  double t5438;
  double t5439;
  double t544;
  double t5440;
  double t5441;
  double t5442;
  double t5446;
  double t5447;
  double t5448;
  double t5449;
  double t545;
  double t5450;
  double t5451;
  double t5455;
  double t5456;
  double t5457;
  double t546;
  double t5469;
  double t5470;
  double t5471;
  double t5472;
  double t5475;
  double t5476;
  double t5477;
  double t548;
  double t5480;
  double t5482;
  double t5483;
  double t5486;
  double t5487;
  double t549;
  double t5490;
  double t5492;
  double t5495;
  double t5496;
  double t5498;
  double t5499;
  double t550;
  double t5500;
  double t5501;
  double t5502;
  double t5503;
  double t5507;
  double t5508;
  double t5509;
  double t551;
  double t5511;
  double t5512;
  double t5522;
  double t5523;
  double t5524;
  double t5525;
  double t5526;
  double t5527;
  double t5528;
  double t5529;
  double t5530;
  double t5531;
  double t5532;
  double t5533;
  double t5538;
  double t5539;
  double t5542;
  double t5545;
  double t5548;
  double t5549;
  double t5552;
  double t5555;
  double t5556;
  double t5579;
  double t558;
  double t5580;
  double t5581;
  double t5584;
  double t5587;
  double t559;
  double t5596;
  double t5597;
  double t5598;
  double t5599;
  double t56;
  double t560;
  double t5600;
  double t5601;
  double t5602;
  double t5607;
  double t5608;
  double t561;
  double t5614;
  double t5615;
  double t5616;
  double t5617;
  double t5618;
  double t562;
  double t5622;
  double t5623;
  double t5626;
  double t563;
  double t5630;
  double t5631;
  double t5632;
  double t5635;
  double t5639;
  double t564;
  double t5643;
  double t5644;
  double t565;
  double t5651;
  double t5652;
  double t5653;
  double t5654;
  double t5655;
  double t5656;
  double t5657;
  double t5658;
  double t566;
  double t5663;
  double t5665;
  double t5667;
  double t567;
  double t5670;
  double t5671;
  double t568;
  double t5682;
  double t5683;
  double t5684;
  double t5686;
  double t5687;
  double t5688;
  double t569;
  double t5694;
  double t57;
  double t570;
  double t571;
  double t572;
  double t5737;
  double t575;
  double t576;
  double t5768;
  double t577;
  double t5770;
  double t578;
  double t579;
  double t58;
  double t5810;
  double t5815;
  double t5821;
  double t5823;
  double t5824;
  double t5825;
  double t5827;
  double t5828;
  double t584;
  double t5849;
  double t585;
  double t5853;
  double t587;
  double t5874;
  double t588;
  double t5883;
  double t5884;
  double t5887;
  double t5889;
  double t589;
  double t59;
  double t5900;
  double t5901;
  double t5908;
  double t5909;
  double t591;
  double t5910;
  double t5912;
  double t592;
  double t5921;
  double t5922;
  double t5924;
  double t593;
  double t5930_tmp;
  double t5931;
  double t5938_tmp;
  double t594;
  double t5944;
  double t5944_tmp;
  double t5946;
  double t5946_tmp;
  double t5947;
  double t5948;
  double t5949;
  double t595;
  double t5952;
  double t5952_tmp;
  double t5955;
  double t5955_tmp;
  double t5956;
  double t5959;
  double t5960;
  double t5962_tmp;
  double t5968;
  double t597;
  double t5988;
  double t5989;
  double t599;
  double t6;
  double t60;
  double t600;
  double t6000;
  double t6001;
  double t6001_tmp;
  double t6003;
  double t6005;
  double t6005_tmp;
  double t602;
  double t6020;
  double t6021;
  double t6021_tmp;
  double t6032_tmp;
  double t6033_tmp;
  double t6035;
  double t6037;
  double t6037_tmp;
  double t6039;
  double t6044;
  double t6045;
  double t6057;
  double t6059_tmp;
  double t6061;
  double t6069;
  double t6077;
  double t6078;
  double t6085;
  double t6087;
  double t6089;
  double t6089_tmp;
  double t6092;
  double t6095;
  double t6095_tmp;
  double t61;
  double t6107;
  double t6108;
  double t611;
  double t6110;
  double t6111;
  double t612;
  double t6124;
  double t6124_tmp;
  double t6125;
  double t6127;
  double t613;
  double t6134;
  double t6135;
  double t6136;
  double t6149;
  double t615;
  double t6150;
  double t6152;
  double t6159;
  double t616;
  double t6160;
  double t6161_tmp;
  double t6164;
  double t6167_tmp;
  double t6168;
  double t617;
  double t6172;
  double t6173;
  double t6186;
  double t6187_tmp;
  double t619;
  double t6192;
  double t6192_tmp;
  double t6197;
  double t62;
  double t620;
  double t6200;
  double t6203;
  double t6203_tmp;
  double t6204;
  double t6208;
  double t6209;
  double t621;
  double t6212;
  double t6219_tmp;
  double t622;
  double t6228_tmp;
  double t623;
  double t6233;
  double t6233_tmp;
  double t6234;
  double t6234_tmp;
  double t624;
  double t6247;
  double t6248;
  double t6248_tmp;
  double t625;
  double t6253;
  double t6254;
  double t626;
  double t6264_tmp;
  double t6266;
  double t6266_tmp;
  double t6268;
  double t627;
  double t6270;
  double t6270_tmp;
  double t6271;
  double t6271_tmp;
  double t6279_tmp;
  double t628;
  double t629;
  double t630;
  double t6301_tmp;
  double t631;
  double t6316;
  double t6317_tmp;
  double t6323;
  double t6323_tmp;
  double t6328_tmp;
  double t633;
  double t634;
  double t635;
  double t636;
  double t6365_tmp;
  double t637;
  double t6371_tmp;
  double t6373_tmp;
  double t6378;
  double t638;
  double t6381;
  double t640;
  double t641;
  double t6415_tmp;
  double t642;
  double t6426;
  double t6427;
  double t643;
  double t644;
  double t6444_tmp;
  double t6450_tmp;
  double t6455_tmp;
  double t646;
  double t6466_tmp;
  double t647;
  double t6479_tmp;
  double t648;
  double t6481_tmp;
  double t6486_tmp;
  double t649;
  double t65;
  double t650;
  double t651;
  double t6516_tmp;
  double t6524_tmp;
  double t653;
  double t6534_tmp;
  double t6538_tmp;
  double t6543_tmp;
  double t6548_tmp;
  double t656;
  double t6560_tmp;
  double t6563_tmp;
  double t6568;
  double t6570;
  double t658;
  double t6583;
  double t6585;
  double t6586;
  double t6587;
  double t6596;
  double t6596_tmp;
  double t6597;
  double t6598;
  double t6599;
  double t6600;
  double t6603;
  double t6611;
  double t6616_tmp;
  double t6620;
  double t6620_tmp;
  double t6627_tmp;
  double t6630;
  double t6632;
  double t6636;
  double t6637;
  double t6639;
  double t6639_tmp;
  double t664;
  double t6642;
  double t6643;
  double t6643_tmp;
  double t6645;
  double t6661_tmp;
  double t667;
  double t669;
  double t67;
  double t675;
  double t676;
  double t678;
  double t68;
  double t681;
  double t688;
  double t689;
  double t69;
  double t690;
  double t693;
  double t694;
  double t699;
  double t7;
  double t705;
  double t711;
  double t714;
  double t715;
  double t716;
  double t719;
  double t720;
  double t722;
  double t726;
  double t728;
  double t729;
  double t73;
  double t730;
  double t732;
  double t736;
  double t737;
  double t739;
  double t74;
  double t740;
  double t741;
  double t742;
  double t744_tmp;
  double t747;
  double t748;
  double t748_tmp;
  double t75;
  double t751;
  double t752;
  double t753;
  double t754;
  double t755;
  double t756;
  double t757;
  double t758;
  double t76;
  double t760;
  double t761;
  double t761_tmp;
  double t765;
  double t767;
  double t768;
  double t77;
  double t770;
  double t770_tmp;
  double t773;
  double t774;
  double t775;
  double t776;
  double t777;
  double t77_tmp;
  double t78;
  double t780;
  double t782;
  double t783;
  double t784;
  double t786;
  double t787;
  double t789;
  double t791;
  double t792;
  double t792_tmp;
  double t793;
  double t794;
  double t798;
  double t8;
  double t800;
  double t801;
  double t803;
  double t804;
  double t805;
  double t806;
  double t827;
  double t828;
  double t83;
  double t831;
  double t833;
  double t835;
  double t837;
  double t838;
  double t840;
  double t841;
  double t842;
  double t844;
  double t845;
  double t871;
  double t875;
  double t876;
  double t878;
  double t880;
  double t881;
  double t882;
  double t883;
  double t885;
  double t887;
  double t888;
  double t889;
  double t89;
  double t891;
  double t892;
  double t892_tmp;
  double t893;
  double t894;
  double t895;
  double t895_tmp;
  double t896;
  double t9;
  double t90;
  double t909;
  double t91;
  double t910;
  double t911;
  double t915;
  double t916;
  double t917;
  double t918;
  double t92;
  double t93;
  double t931;
  double t932;
  double t933;
  double t934;
  double t936;
  double t937;
  double t938;
  double t94;
  double t940;
  double t941;
  double t942;
  double t944;
  double t945;
  double t946;
  double t948;
  double t949;
  double t950;
  double t951;
  double t952;
  double t953;
  double t955;
  double t956;
  double t957;
  double t958;
  double t959;
  double t960;
  double t961;
  double t962;
  double t963;
  double t964;
  double t965;
  double t966;
  double t967;
  double t975;
  double t980;
  double t_sfvals_tmp;
  double u_sfvals_tmp;
  double v_sfvals_tmp;
  double w_sfvals_tmp;
  double x_sfvals_tmp;
  double zeta_1_inv;
  zeta_1_inv = 1.0 / ((zeta - 1.0) + 1.0E-100);
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = std::pow(eta, 5.0);
  t6 = xi * xi;
  t7 = std::pow(xi, 3.0);
  t9 = std::pow(xi, 5.0);
  t10 = zeta * zeta;
  t11 = std::pow(zeta, 3.0);
  t13 = std::pow(zeta, 5.0);
  t14 = zeta_1_inv * zeta_1_inv;
  t15 = std::pow(zeta_1_inv, 3.0);
  t17 = std::pow(zeta_1_inv, 5.0);
  t19 = zeta_1_inv / 4.0;
  t21 = eta * 6.25;
  t22 = eta * 4.166666666666667;
  t24 = zeta_1_inv * 6.25;
  t25 = zeta_1_inv * 4.166666666666667;
  t26_tmp = eta * zeta_1_inv;
  t26 = t26_tmp * -0.25;
  t31 = eta * 1.5625;
  t32 = eta * 62.5;
  t33 = eta * 31.25;
  t34 = zeta * 1.5625;
  t35 = zeta * 0.46296296296296297;
  t36 = zeta * 20.833333333333332;
  t39 = zeta_1_inv * 1.5625;
  t40 = zeta_1_inv * 0.78125;
  t41 = zeta_1_inv * 0.52083333333333337;
  t42 = zeta_1_inv * 31.25;
  t56 = eta * 15.625;
  t57 = eta * 10.416666666666666;
  t58 = eta * 7.8125;
  t59 = eta * 5.208333333333333;
  t60 = eta * 3.90625;
  t61 = eta * 3.4722222222222223;
  t62 = eta * 156.25;
  t65 = zeta * 10.416666666666666;
  t67 = zeta * 5.208333333333333;
  t68 = zeta * 3.4722222222222223;
  t69 = zeta * 2.3148148148148149;
  t73 = zeta_1_inv * 15.625;
  t74 = zeta_1_inv * 5.208333333333333;
  t75 = zeta_1_inv * 3.90625;
  t77_tmp = eta * zeta;
  t77 = t77_tmp * -1.5625;
  t83 = t26_tmp * -1.5625;
  t94 = t26_tmp * 2.6041666666666665;
  t105 = eta * 78.125;
  t106 = eta * 52.083333333333336;
  t107 = eta * 34.722222222222221;
  t108 = eta * 26.041666666666668;
  t109 = eta * 23.148148148148149;
  t110 = eta * 19.53125;
  t111 = eta * 13.020833333333334;
  t112 = eta * 260.41666666666669;
  t113 = eta * 173.61111111111109;
  t114 = eta * 86.805555555555557;
  t115 = eta * 65.104166666666671;
  t116 = eta * 57.870370370370367;
  t117 = eta * 182.29166666666671;
  t118 = eta * 91.145833333333329;
  t124 = zeta * 1.1574074074074074;
  t125 = zeta * 0.57870370370370372;
  t126 = zeta * 0.28935185185185186;
  t129 = zeta * 1.46484375;
  t131 = zeta * 34.722222222222221;
  t132 = zeta * 26.041666666666668;
  t133 = zeta_1_inv * 1.3020833333333333;
  t134 = zeta * 13.020833333333334;
  t135 = zeta_1_inv * 52.083333333333336;
  t136 = zeta_1_inv * 26.041666666666668;
  t137 = zeta * 28.645833333333329;
  t138 = zeta * 31.770833333333329;
  t139 = zeta * 88.541666666666671;
  t141 = zeta * 130.20833333333329;
  t142 = zeta * 86.805555555555557;
  t143 = zeta * 65.104166666666671;
  t144 = zeta_1_inv * 65.104166666666671;
  t152 = t77_tmp * -10.416666666666666;
  t155 = t77_tmp * -2.3148148148148149;
  t175 = t26_tmp * 17.361111111111111;
  t188 = t77_tmp * 243.0555555555556;
  t189 = t77_tmp * 81.018518518518519;
  t190 = t26_tmp * 244.79166666666671;
  t192 = t26_tmp * 122.3958333333333;
  t210 = eta * 9.765625;
  t211 = eta * 6.510416666666667;
  t212 = eta * 4.8828125;
  t213 = eta * 4.3402777777777777;
  t214 = eta * 3.2552083333333335;
  t215 = eta * 2.8935185185185186;
  t216 = eta * 1.6276041666666667;
  t217 = eta * 14.32291666666667;
  t218 = eta * 7.161458333333333;
  t219 = eta * 14.6484375;
  t223 = eta * 43.402777777777779;
  t224 = eta * 32.552083333333329;
  t225 = eta * 28.93518518518519;
  t226 = eta * 21.701388888888889;
  t227 = eta * 10.850694444444439;
  t228 = eta * 8.1380208333333321;
  t230 = eta * 40.50925925925926;
  t231 = eta * 43.9453125;
  t239 = zeta * 9.765625;
  t240 = zeta * 8.6805555555555554;
  t241 = zeta * 4.3402777777777777;
  t242 = zeta * 3.8580246913580245;
  t243 = zeta * 2.8935185185185186;
  t244 = zeta * 0.732421875;
  t245 = zeta * 2.1701388888888888;
  t246 = zeta * 1.4467592592592593;
  t249 = zeta_1_inv * 6.510416666666667;
  t250 = zeta_1_inv * 4.8828125;
  t251 = zeta_1_inv * 3.2552083333333335;
  t252 = zeta * 15.4320987654321;
  t254 = zeta_1_inv * 1.6276041666666667;
  t256 = zeta * 20.061728395061731;
  t257 = zeta * 12.6953125;
  t258 = zeta * 5.0154320987654319;
  t259 = zeta_1_inv * 7.161458333333333;
  t262 = zeta * 43.402777777777779;
  t263 = zeta * 32.552083333333329;
  t264 = zeta * 28.93518518518519;
  t265 = zeta * 21.701388888888889;
  t266 = zeta * 14.46759259259259;
  t267 = zeta * 12.20703125;
  t268 = zeta * 10.850694444444439;
  t269 = zeta * 8.1380208333333321;
  t270 = zeta * 7.2337962962962958;
  t271 = zeta_1_inv * 43.402777777777779;
  t272 = zeta * 13.18359375;
  t273 = zeta_1_inv * 10.850694444444439;
  t274 = zeta_1_inv * 8.1380208333333321;
  t275 = zeta * 60.763888888888893;
  t276 = zeta * 40.50925925925926;
  t277 = zeta * 30.381944444444439;
  t278 = zeta * 17.08984375;
  t279 = zeta * 10.12731481481481;
  t280 = zeta * 87.890625;
  t281 = zeta_1_inv * 43.9453125;
  t282 = zeta * 37.61574074074074;
  t328 = t77_tmp * -1.46484375;
  t329 = t77_tmp * -52.083333333333336;
  t330 = t77_tmp * -34.722222222222221;
  t333 = t77_tmp * -13.020833333333334;
  t334 = t77_tmp * 5.7870370370370372;
  t341 = t26_tmp * -34.722222222222221;
  t349 = t77_tmp * -28.645833333333329;
  t355 = t26_tmp * 29.320987654320991;
  t357 = t77_tmp * -173.61111111111109;
  t358 = t77_tmp * -130.20833333333329;
  t359 = t77_tmp * -86.805555555555557;
  t366 = t77_tmp * 16.276041666666671;
  t374 = t26_tmp * 16.276041666666671;
  t385 = t77_tmp * 21.97265625;
  t389 = t77_tmp * 26.85546875;
  t390 = t26_tmp * 95.486111111111114;
  t391 = t26_tmp * 47.743055555555557;
  t392 = t77_tmp * 28.211805555555561;
  t393 = t77_tmp * 289.3518518518519;
  t422 = eta * 1.220703125;
  t424 = eta * 0.72337962962962965;
  t426 = eta * 2.197265625;
  t428 = eta * 0.5063657407407407;
  t429 = eta * 0.79752604166666674;
  t434 = eta * 2.0616319444444442;
  t435 = eta * 6.103515625;
  t436 = eta * 5.4253472222222223;
  t437 = eta * 7.568359375;
  t439 = eta * 2.034505208333333;
  t440 = eta * 1.356336805555556;
  t442 = eta * 10.986328125;
  t443 = eta * 13.427734375;
  t445 = eta * 14.10590277777778;
  t446 = eta * 0.26403356481481483;
  t447 = eta * 36.62109375;
  t448 = eta * 49.913194444444443;
  t449 = eta * 217.01388888888891;
  t450 = eta * 108.5069444444444;
  t451 = eta * 0.00762939453125;
  t452 = eta * 131.8359375;
  t453 = eta * 44.849537037037038;
  t454 = eta * 50.636574074074069;
  t455 = eta * 109.86328125;
  t456 = eta * 0.006866455078125;
  t457 = eta * 395.5078125;
  t458 = eta * 0.0001373291015625;
  t467 = zeta * 1.123046875;
  t468 = zeta * 1.220703125;
  t471 = zeta * 1.0850694444444444;
  t474 = zeta * 0.72337962962962965;
  t475 = zeta * 2.197265625;
  t478 = zeta * 0.54253472222222221;
  t479 = zeta * 2.3871527777777781;
  t481 = zeta * 0.40690104166666669;
  t482 = zeta * 0.36168981481481483;
  t483 = zeta * 3.662109375;
  t484 = zeta * 1.1935763888888891;
  t485 = zeta * 0.5063657407407407;
  t486 = zeta * 0.79752604166666674;
  t494 = zeta * 2.0616319444444442;
  t498 = zeta * 6.103515625;
  t499 = zeta * 5.4253472222222223;
  t501 = zeta * 6.591796875;
  t502 = zeta * 4.069010416666667;
  t503 = zeta * 3.6168981481481479;
  t504 = zeta_1_inv * 5.4253472222222223;
  t505 = zeta * 7.568359375;
  t508 = zeta * 2.034505208333333;
  t509 = zeta * 4.4849537037037042;
  t511 = zeta * 2.2424768518518521;
  t513 = zeta_1_inv * 1.356336805555556;
  t514 = zeta * 10.986328125;
  t516 = zeta * 10.633680555555561;
  t517 = zeta * 1.121238425925926;
  t518 = zeta * 13.427734375;
  t520 = zeta * 14.10590277777778;
  t521 = zeta * 0.26403356481481483;
  t522 = zeta * 9.4039351851851851;
  t523 = zeta * 22.591145833333329;
  t524 = zeta * 36.62109375;
  t525 = zeta * 38.57421875;
  t526 = zeta * 0.560619212962963;
  t527 = zeta * 114.2578125;
  t529 = zeta_1_inv * 131.8359375;
  t531 = zeta * 109.86328125;
  t532 = zeta * 153.80859375;
  t653 = t77_tmp * -4.3402777777777777;
  t656 = t77_tmp * -1.4467592592592593;
  t669 = t77_tmp * -14.6484375;
  t675 = t77_tmp * -28.93518518518519;
  t676 = t77_tmp * -21.701388888888889;
  t678 = t77_tmp * -10.850694444444439;
  t681 = t77_tmp * -13.18359375;
  t689 = t77_tmp * -40.50925925925926;
  t690 = t77_tmp * -30.381944444444439;
  t693 = t26_tmp * 2.7126736111111112;
  t711 = t26_tmp * 54.976851851851848;
  t714 = t77_tmp * 192.90123456790121;
  t715 = t77_tmp * 61.03515625;
  t716 = t77_tmp * 48.22530864197531;
  t719 = t26_tmp * 65.91796875;
  t720 = t26_tmp * 166.9921875;
  t726 = t26_tmp * 197.75390625;
  t827 = eta * 0.05950927734375;
  t828 = eta * 32.958984375;
  t831 = eta * 25.318287037037042;
  t833 = eta * 6.3295717592592586;
  t835 = eta * 54.931640625;
  t837 = eta * 0.034332275390625;
  t838 = eta * 0.095367431640625;
  t840 = eta * 11.444091796875;
  t841 = eta * 0.063578287760416671;
  t842 = eta * 12.969970703125;
  t844 = eta * 0.0011444091796875;
  t845 = eta * 0.0019073486328125;
  t871 = zeta * 9.6932870370370363;
  t875 = zeta * 0.3814697265625;
  t876 = zeta * 14.81119791666667;
  t878 = zeta * 32.958984375;
  t880 = zeta * 0.19073486328125;
  t881 = zeta * 4.7381365740740744;
  t882 = zeta * 29.89969135802469;
  t883 = zeta * 7.4749228395061733;
  t885 = zeta * 6.3295717592592586;
  t887 = zeta * 54.931640625;
  t888 = zeta * 0.095367431640625;
  t889 = zeta_1_inv * 0.095367431640625;
  t891 = zeta * 9.1965663580246915;
  t1064 = t77_tmp * -1.220703125;
  t1065 = t77_tmp * -0.72337962962962965;
  t1072 = t77_tmp * -7.568359375;
  t1076 = t77_tmp * -10.986328125;
  t1077 = t77_tmp * -1.121238425925926;
  t1081 = t77_tmp * 18.310546875;
  t1094 = t77_tmp * 12.659143518518521;
  t1100 = t77_tmp * 23.509837962962958;
  t1101 = t77_tmp * -395.5078125;
  t1104 = t26_tmp * 60.619212962962962;
  t1281 = eta * 1.9073486328125;
  t1285 = eta * 0.95367431640625;
  t1288 = eta * 0.43233235677083331;
  t1290 = eta * 1.50299072265625;
  t1291 = eta * 0.286102294921875;
  t1292 = eta * 1.71661376953125;
  t1293 = eta * 0.476837158203125;
  t1296 = eta * 0.751495361328125;
  t1301 = eta * 164.794921875;
  t1302 = eta * 0.82651774088541674;
  t1311 = zeta * 0.57220458984375;
  t1316 = zeta_1_inv * 0.0095367431640625;
  t1317 = zeta * 0.0476837158203125;
  t1318 = zeta_1_inv * 0.0476837158203125;
  t1319 = zeta * 3.62396240234375;
  t1320 = zeta * 19.073486328125;
  t1321 = zeta * 164.794921875;
  t1322 = zeta * 1.811981201171875;
  t1493 = t77_tmp * -32.958984375;
  t1505 = t26_tmp * 56.809413580246911;
  t1507 = t77_tmp * 30.14081790123457;
  t1509 = t77_tmp * 494.384765625;
  t1699 = eta * 0.2498626708984375;
  t1702 = eta * 7.375081380208333;
  t1703 = eta * 4.9167209201388893;
  t1704 = eta * 0.720553927951389;
  t1705 = eta * 2.4583604600694442;
  t1706 = eta * 14.8773193359375;
  t1707 = eta * 7.43865966796875;
  t1708 = eta * 0.41325887044270831;
  t1709 = eta * 1.843770345052083;
  t1710 = eta * 8.58306884765625;
  t1714 = zeta * 0.1430511474609375;
  t1718 = zeta * 9.5367431640625;
  t1719 = zeta * 4.76837158203125;
  t1720 = zeta * 3.178914388020833;
  t1721 = zeta * 2.384185791015625;
  t1722 = zeta_1_inv * 2.384185791015625;
  t1723 = zeta * 1.589457194010417;
  t1724 = zeta * 28.6102294921875;
  t1725 = zeta * 7.152557373046875;
  t1726 = zeta_1_inv * 23.84185791015625;
  t1727 = zeta_1_inv * 11.92092895507812;
  t1952 = t26_tmp * 0.2384185791015625;
  t1955 = t26_tmp * 17.1661376953125;
  t1956 = t26_tmp * 10.49041748046875;
  t2103 = eta * 1.2291802300347221;
  t2109 = zeta * 1.1920928955078121;
  t2110 = zeta * 0.79472859700520826;
  t2337 = t26_tmp * 33.37860107421875;
  t2338 = t26_tmp * 61.98883056640625;
  t2339 = t26_tmp * 119.20928955078119;
  t2434 = zeta_1_inv * 8.3446502685546875;
  t3121 = zeta * 31.694953824266971;
  t3122 = zeta * 26.78529715832369;
  t3123 = eta * 73.821456344039348;
  t3124 = eta * 118.5028641312211;
  t3125 = eta * 66.168514298804013;
  t3126 = zeta * 18.484798478491509;
  t3128 = zeta * 3.3461017373167441;
  t3129 = eta * 2.6785297158323691;
  t3130 = eta * 26.78529715832369;
  t3131 = eta * 42.385525173611107;
  t3133 = eta * 10.89072521821952;
  t3134 = eta * 39.500954710407022;
  t3135 = eta * 31.789143880208329;
  t3136 = eta * 63.578287760416657;
  t3138 = eta * 17.63120109652295;
  t3139 = eta * 13.422082971643521;
  t3140 = eta * 23.912500452112269;
  t3141 = eta * 21.027929988908181;
  t3144 = eta * 15.42362166039738;
  t3145 = zeta * 6.6933808503327548;
  t3146 = zeta * 23.912500452112269;
  t3147 = zeta * 21.027929988908181;
  t3148 = eta * 3.649864667727623;
  t3149 = eta * 11.994514936282309;
  t3150 = eta * 18.057999787507239;
  t3152 = eta * 10.419774938512729;
  t3153 = eta * 52.893603289568873;
  t3155 = zeta * 11.994514936282309;
  t3157 = t26_tmp * 20.124294139720771;
  t3158 = t77_tmp * 65.697564019097229;
  t3159 = eta * 69.806134259259252;
  t3161 = eta * 16.106499565972221;
  t3163 = eta * 21.10445940936053;
  t3164 = zeta * 10.19371880425347;
  t3165 = zeta * 20.387437608506939;
  t3166 = t77_tmp * 47.825000904224538;
  t3167 = eta * 27.185604896074459;
  t3168 = eta * 15.055691754376451;
  t3170 = t77_tmp * 80.35589147497106;
  t3171 = t26_tmp * 2.6184835551697532;
  t3172 = eta * 9.096404652536652;
  t3173 = zeta * 27.185604896074459;
  t3176 = zeta * 35.033991307388121;
  t3179 = eta * 4.6771249653380593;
  t3180 = zeta * 45.599760832609952;
  t3181 = zeta * 9.096404652536652;
  t3182 = zeta * 15.19992027753665;
  t3183 = eta * 8.035589147497106;
  t3184 = zeta * 4.6771249653380593;
  t3185 = zeta * 9.3389440465856488;
  t3186 = zeta * 18.6778880931713;
  t3187 = zeta * 29.7405101634838;
  t3190 = zeta * 21.025575237509649;
  t3191 = t77_tmp * 51.804530767746911;
  t3193 = eta * 5.2981906467013893;
  t3194 = eta * 10.59638129340278;
  t3195 = eta * 21.192762586805561;
  t3198 = t26_tmp * 18.013848198784721;
  t3199 = t26_tmp * 23.312038845486111;
  t3200 = t26_tmp * 36.027696397569443;
  t3201 = t77_tmp * 35.983544808846943;
  t3204 = eta * 1.441225593472705;
  t3205 = zeta * 1.755278787495177;
  t3208 = zeta * 2.4106767442491321;
  t3209 = zeta * 6.4637925889756946;
  t3210 = zeta_1_inv * 0.62412685818142366;
  t3211 = zeta_1_inv * 0.66227383083767366;
  t3212 = zeta_1_inv * 1.2482537163628471;
  t3213 = zeta_1_inv * 1.3245476616753471;
  t3217 = eta * 1.298268636067708;
  t3218 = eta * 2.596537272135417;
  t3219 = eta * 7.947285970052083;
  t3220 = eta * 15.89457194010417;
  t3221 = eta * 2.796267285759066;
  t3222 = eta * 3.6792990602092979;
  t3223 = eta * 8.756731763298129;
  t3224 = zeta_1_inv * 7.0760279525945213;
  t3226 = zeta * 6.2989599910783181;
  t3227 = zeta_1_inv * 1.49081665792583;
  t3228 = zeta * 3.3498693395543979;
  t3230 = t26_tmp * 16.9306625554591;
  t3233 = t77_tmp * 11.03789718062789;
  t3236 = eta * 5.0038467218846447;
  t3241 = eta * 1.4375757288049771;
  t3242 = zeta_1_inv * 1.872380574544271;
  t3243 = zeta_1_inv * 2.781550089518229;
  t3244 = zeta_1_inv * 5.563100179036458;
  t3245 = zeta_1_inv * 8.7420145670572911;
  t3247 = eta * 2.23748477888696;
  t3248 = eta * 5.0185639181254826;
  t3250 = zeta * 0.66663012092496143;
  t3251 = zeta * 2.796267285759066;
  t3252 = zeta * 3.6792990602092979;
  t3253 = zeta * 8.756731763298129;
  t3254 = t77_tmp * 52.2754810474537;
  t3256 = eta * 2.9375523696711028;
  t3258 = eta * 2.5684450879509071;
  t3262 = zeta * 0.82722416630497686;
  t3263 = zeta * 1.4375757288049771;
  t3264 = zeta * 1.702909116391782;
  t3266 = zeta * 2.23748477888696;
  t3267 = t26_tmp * 87.119020061728392;
  t3270 = t77_tmp * 43.0919505931713;
  t3274 = eta * 1.92088845335407;
  t3276 = zeta * 2.9375523696711028;
  t3277 = zeta * 2.5684450879509071;
  t3278 = zeta * 2.5395993833188659;
  t3279 = zeta * 4.6977290400752318;
  t3280 = t77_tmp * 21.663712866512341;
  t3285 = eta * 0.13293513545283561;
  t3289 = zeta * 1.92088845335407;
  t3290 = zeta * 7.4763356903452944;
  t3292 = eta * 1.03375941147039;
  t3293 = eta * 1.2035134397907019;
  t3294 = zeta_1_inv * 5.2334349832417049;
  t3295 = zeta * 0.13293513545283561;
  t3296 = zeta * 0.18367060908564811;
  t3297 = zeta * 0.68738019024884256;
  t3298 = zeta * 0.80355891474971064;
  t3299 = zeta * 1.1373449254918979;
  t3300 = zeta * 1.7095495153356479;
  t3301 = zeta * 4.7401145652488426;
  t3304 = t26_tmp * 4.9930148654513893;
  t3306 = t26_tmp * 10.066562228732639;
  t3307 = t26_tmp * 16.424391004774311;
  t3308 = t26_tmp * 18.225775824652779;
  t3309 = t26_tmp * 20.556979709201389;
  t3310 = t26_tmp * 28.186374240451389;
  t3311 = eta * 3.3163141321252891;
  t3315 = eta * 0.851996151017554;
  t3316 = zeta * 1.76936020085841;
  t3317 = zeta * 1.03375941147039;
  t3318 = zeta * 1.701307885440779;
  t3319 = zeta_1_inv * 1.0738137327594519;
  t3320 = zeta_1_inv * 5.071545824592496;
  t3321 = zeta_1_inv * 6.7080980465735918;
  t3323 = eta * 0.36027696397569442;
  t3324 = zeta * 2.2958826135706021;
  t3325 = zeta * 0.851996151017554;
  t3326 = zeta * 1.204615463445216;
  t3327 = zeta * 1.428156723210841;
  t3328 = zeta * 1.954443660783179;
  t3331 = t26_tmp * 22.252400716145829;
  t3332 = t26_tmp * 34.968058268229157;
  t3333 = t26_tmp * 54.041544596354157;
  t3335 = eta * 2.8845704632040889;
  t3336 = eta * 7.6529420452353394;
  t3339 = eta * 7.5410913538049771;
  t3342 = zeta * 1.2927585177951391;
  t3344 = zeta * 2.5855170355902781;
  t3345 = zeta * 7.36448499891493;
  t3346 = zeta_1_inv * 2.9140048556857638;
  t3347 = zeta_1_inv * 5.8280097113715277;
  t3350 = t77_tmp * 23.400342022931131;
  t3352 = t77_tmp * 31.96575023509838;
  t3353 = t77_tmp * 32.495569299768519;
  t3355 = t77_tmp * 42.055859977816361;
  t3357 = eta * 1.105438044041763;
  t3358 = eta * 7.0348198031201772;
  t3359 = eta * 7.5705257462866511;
  t3361 = eta * 1.068350709514853;
  t3362 = eta * 2.3465097686390819;
  t3363 = zeta * 2.8845704632040889;
  t3366 = zeta * 1.766063548900463;
  t3367 = zeta * 7.5410913538049771;
  t3370 = eta * 1.169134069372106;
  t3371 = eta * 3.610540319372106;
  t3372 = eta * 4.3236767804181131;
  t3373 = eta * 7.3468243634259256;
  t3377 = zeta * 7.5705257462866511;
  t3378 = zeta_1_inv * 1.109252741307388;
  t3383 = zeta * 0.83946887357735345;
  t3384 = zeta * 1.068350709514853;
  t3385 = zeta * 2.3465097686390819;
  t3386 = t77_tmp * 25.078102394386569;
  t3387 = t77_tmp * 26.270195289894389;
  t3390 = eta * 1.8991070029176309;
  t3393 = zeta * 1.169134069372106;
  t3394 = zeta * 3.267217565465856;
  t3395 = zeta * 5.1039236563223378;
  t3398 = zeta_1_inv * 1.7248553994261191;
  t3399 = t77_tmp * 5.76160572193287;
  t3400 = t26_tmp * 15.700304949725121;
  t3401 = eta * 7.8001140076437112;
  t3403 = eta * 6.0193332625024114;
  t3404 = zeta * 1.8991070029176309;
  t3407 = zeta * 1.501154016565394;
  t3408 = zeta * 2.454828332971644;
  t3409 = t26_tmp * 20.662943522135421;
  t3410 = t26_tmp * 41.325887044270843;
  t3411 = eta * 7.2408605504918979;
  t3412 = eta * 8.7596752025462958;
  t3413 = zeta * 2.2311269501109181;
  t3414 = zeta * 7.8001140076437112;
  t3417 = t26_tmp * 21.22808385778356;
  t3419 = t77_tmp * 12.95113269193673;
  t3421 = t77_tmp * 60.884452160493829;
  t3425 = eta * 0.61459011501736116;
  t3426 = eta * 2.6490953233506951;
  t3427 = eta * 4.6624077690972223;
  t3429 = t77_tmp * -20.387437608506939;
  t3433 = t26_tmp * 1.8225775824652779;
  t3437 = t26_tmp * 11.656019422743061;
  t3442 = zeta * 0.2757413887683256;
  t3454 = t77_tmp * 5.7691409264081788;
  t3461 = t77_tmp * 15.082182707609951;
  t3470 = eta * 0.10848339693045909;
  t3478 = t77_tmp * -27.185604896074459;
  t3479 = t77_tmp * 2.354751398533951;
  t3481 = t77_tmp * 15.1410514925733;
  t3490 = t77_tmp * 2.1367014190297069;
  t3492 = t77_tmp * 8.2416298948688276;
  t3506 = eta * 0.1536710762683256;
  t3512 = zeta * 0.10848339693045909;
  t3513 = zeta * 0.20003613130545911;
  t3515 = t77_tmp * 2.3382681387442128;
  t3516 = t26_tmp * 3.221441198278356;
  t3517 = t26_tmp * 4.4724499737774881;
  t3518 = t26_tmp * 15.21463747377749;
  t3524 = eta * 0.49281179169077932;
  t3533 = zeta * 0.1536710762683256;
  t3535 = t77_tmp * -4.6771249653380593;
  t3537 = t77_tmp * 8.3888018572772;
  t3538 = t26_tmp * 6.2448007089120372;
  t3541 = eta * 0.034355822904610339;
  t3544 = zeta * 0.30508159119405859;
  t3545 = zeta * 0.49281179169077932;
  t3559 = zeta * 0.60010839391637727;
  t3560 = zeta * 0.89574743200231477;
  t3562 = zeta * 0.034355822904610339;
  t3563 = zeta * 0.064873401029610339;
  t3565 = t77_tmp * 5.76266536006221;
  t3580 = zeta * 0.080387256763599535;
  t3581 = zeta * 0.09183530454282407;
  t3582 = zeta * 0.152729175708912;
  t3583 = zeta * 0.194620203088831;
  t3584 = zeta * 0.30545835141782413;
  t3585 = zeta * 0.85477475766782407;
  t3603 = t26_tmp * 2.4965074327256951;
  t3619 = zeta * 0.39736429850260419;
  t3623 = t77_tmp * 4.6016551830150467;
  t3632 = eta * 0.7092746687524113;
  t3643 = t26_tmp * 7.489522298177083;
  t3646 = t26_tmp * 11.12620035807292;
  t3662 = zeta * 0.2445644802517361;
  t3663 = zeta * 0.29457939995659721;
  t3664 = zeta * 0.48912896050347221;
  t3667 = zeta_1_inv * 0.13245476616753471;
  t3672 = zeta * 0.7092746687524113;
  t3673 = t26_tmp * 8.86328426408179;
  t3682 = t77_tmp * 7.70533526385272;
  t3683 = t26_tmp * 8.0673782913773149;
  t3687 = t77_tmp * 4.47496955777392;
  t3706 = t77_tmp * 6.4143428096064818;
  t3707 = t26_tmp * 5.1745661982783568;
  t3724 = t77_tmp * 5.6973210087528932;
  t3744 = t77_tmp * 7.1052268699363426;
  t3764 = t77_tmp * 2.7503496334876538;
  t3765 = t77_tmp * 3.6639931761188271;
  t3775 = t26_tmp * 11.76198323567708;
  t3784 = zeta * 0.63201527536651236;
  t3786 = t26_tmp * 3.3277582239221641;
  t3805 = t77_tmp * -2.5855170355902781;
  t3833 = zeta * 0.046581692165798612;
  t3903 = zeta * 0.087125801745756168;
  t3980 = eta * 0.029434392481674381;
  t3988 = eta * 0.015894571940104171;
  t3991 = zeta * 0.0088303177445023147;
  t4005 = t77_tmp * -1.0384453667534721;
  t4008 = t26_tmp * -1.2482537163628471;
  t4010 = t26_tmp * -0.62412685818142366;
  t4021 = zeta * 0.029434392481674381;
  t4027 = t26_tmp * -7.0760279525945213;
  t4041 = eta * 0.026490953233506941;
  t4042 = eta * 0.052981906467013888;
  t4043 = eta * 0.1059638129340278;
  t4061 = t26_tmp * -1.872380574544271;
  t4081 = zeta * 0.026490953233506941;
  t4120 = t77_tmp * -2.9375523696711028;
  t4138 = eta * 0.040619461624710647;
  t4162 = zeta * 0.040619461624710647;
  t4176 = t26_tmp * -5.2334349832417049;
  t4214 = zeta * 0.02794618959780093;
  t4215 = t77_tmp * 0.4709502797067901;
  t4219 = t77_tmp * -1.03375941147039;
  t4258 = t77_tmp * -0.851996151017554;
  t4279 = t77_tmp * -0.48912896050347221;
  t4301 = t77_tmp * -0.7092746687524113;
  t4716 = t77_tmp * 0.058868784963348762;
  t4 = t2 * t2;
  t8 = t6 * t6;
  t12 = t10 * t10;
  t16 = t14 * t14;
  t20 = eta * t19;
  t43 = t31 * zeta;
  t46 = t31 * zeta_1_inv;
  t50 = t32 * zeta_1_inv;
  t51 = t33 * zeta_1_inv;
  t52_tmp = eta * t14;
  t52 = t52_tmp / 4.0;
  t76 = t2 * 31.25;
  t78 = t57 * zeta;
  t89 = t56 * zeta_1_inv;
  t90 = t57 * zeta_1_inv;
  t91 = t58 * zeta_1_inv;
  t92 = t59 * zeta_1_inv;
  t93 = t60 * zeta_1_inv;
  t146 = t2 * 15.625;
  t147 = t2 * 5.208333333333333;
  t148 = t2 * 3.90625;
  t149 = t2 * 156.25;
  t150 = t10 * 312.5;
  t151 = t11 * 104.16666666666667;
  t156 = eta * t125;
  t162 = eta * t129;
  t163 = t106 * zeta;
  t165 = t107 * zeta;
  t166 = t108 * zeta;
  t167 = eta * t133;
  t168 = t111 * zeta;
  t176 = eta * t137;
  t178 = t112 * zeta;
  t179 = t113 * zeta;
  t180 = eta * t141;
  t181 = t114 * zeta;
  t182 = t115 * zeta;
  t184 = t112 * zeta_1_inv;
  t185 = t113 * zeta_1_inv;
  t193 = t52_tmp * -6.25;
  t197 = t2 * t40;
  t198 = t52_tmp * 0.52083333333333337;
  t199 = t2 * t41;
  t200 = t14 * t32;
  t202 = t14 * t33;
  t286 = t2 * 1.1574074074074074;
  t289 = t2 * 78.125;
  t290 = t3 * 52.083333333333336;
  t292 = t3 * 26.041666666666668;
  t293 = t2 * 23.148148148148149;
  t294 = t2 * 19.53125;
  t295 = t2 * 13.020833333333334;
  t296 = t2 * 11.574074074074074;
  t297 = t3 * 260.41666666666669;
  t298 = t3 * 173.61111111111109;
  t299 = t2 * 86.805555555555557;
  t300 = t3 * 86.805555555555557;
  t301 = t2 * 65.104166666666671;
  t303 = t3 * 57.870370370370367;
  t304 = t2 * 182.29166666666671;
  t305 = t2 * 91.145833333333329;
  t309 = t11 * 39.0625;
  t310 = t10 * 26.041666666666668;
  t311 = t10 * 117.1875;
  t312 = t10 * 78.7037037037037;
  t313 = t10 * 44.270833333333329;
  t314 = t11 * 260.41666666666669;
  t315 = t10 * 195.3125;
  t317 = t10 * 130.20833333333329;
  t318 = t11 * 130.20833333333329;
  t319 = t10 * 86.805555555555557;
  t320 = t11 * 86.805555555555557;
  t321 = t10 * 65.104166666666671;
  t322 = t11 * 65.104166666666671;
  t324 = t11 * 57.870370370370367;
  t325 = t10 * 121.5277777777778;
  t326 = t10 * 160.15625;
  t327 = t11 * 286.45833333333331;
  t335 = t213 * zeta;
  t337 = t215 * zeta;
  t338 = eta * t246;
  t351 = t217 * zeta_1_inv;
  t365 = t226 * zeta;
  t367 = t227 * zeta;
  t370 = t223 * zeta_1_inv;
  t371 = eta * t272;
  t375 = t227 * zeta_1_inv;
  t379 = eta * t275;
  t380 = t230 * zeta;
  t395 = t2 * t67;
  t398_tmp = t2 * zeta_1_inv;
  t398 = t398_tmp * -0.78125;
  t400 = t398_tmp * -0.52083333333333337;
  t405 = t2 * t73;
  t406 = t14 * t59;
  t407 = t2 * t74;
  t413 = t398_tmp * 520.83333333333326;
  t539 = t2 * 9.765625;
  t540 = t3 * 6.510416666666667;
  t541 = t2 * 4.8828125;
  t542 = t3 * 4.8828125;
  t543 = t3 * 3.2552083333333335;
  t544 = t2 * 2.8935185185185186;
  t545 = t3 * 2.8935185185185186;
  t546 = t2 * 0.732421875;
  t548 = t3 * 1.6276041666666667;
  t549 = t3 * 1.4467592592592593;
  t550 = t2 * 7.161458333333333;
  t551 = t2 * 14.6484375;
  t558 = t2 * 43.402777777777779;
  t559 = t3 * 43.402777777777779;
  t561 = t2 * 32.552083333333329;
  t562 = t3 * 32.552083333333329;
  t564 = t2 * 28.93518518518519;
  t565 = t3 * 28.93518518518519;
  t566 = t2 * 21.701388888888889;
  t567 = t3 * 21.701388888888889;
  t568 = t2 * 14.46759259259259;
  t569 = t3 * 14.46759259259259;
  t570 = t3 * 10.850694444444439;
  t575 = t2 * 45.572916666666671;
  t576 = t2 * 40.50925925925926;
  t577 = t2 * 30.381944444444439;
  t578 = t3 * 43.9453125;
  t579 = t2 * 325.52083333333331;
  t584 = t10 * 9.765625;
  t585 = t10 * 7.716049382716049;
  t587 = t10 * 4.8828125;
  t588 = t10 * 3.8580246913580245;
  t589 = t10 * 1.9290123456790123;
  t591 = t10 * 15.4320987654321;
  t592 = t10 * 14.32291666666667;
  t593 = t10 * 15.88541666666667;
  t594 = t10 * 10.03086419753086;
  t595 = t10 * 6.34765625;
  t597 = t10 * 7.32421875;
  t599 = t11 * 26.23456790123457;
  t600 = t10 * 19.675925925925931;
  t602 = t11 * 6.5586419753086416;
  t611 = t10 * 43.402777777777779;
  t613 = t10 * 32.552083333333329;
  t616 = t13 * 32.552083333333329;
  t617 = t10 * 28.93518518518519;
  t619 = t11 * 24.4140625;
  t620 = t10 * 21.701388888888889;
  t621 = t11 * 21.701388888888889;
  t622 = t11 * 19.29012345679012;
  t623 = t10 * 14.46759259259259;
  t624 = t11 * 14.46759259259259;
  t626 = t11 * 12.20703125;
  t627 = t10 * 10.850694444444439;
  t628 = t11 * 10.850694444444439;
  t629 = t11 * 9.6450617283950617;
  t630 = t13 * 9.6450617283950617;
  t631 = t10 * 7.2337962962962958;
  t633 = t11 * 68.359375;
  t634 = t11 * 27.006172839506171;
  t636 = t10 * 20.25462962962963;
  t638 = t10 * 15.19097222222222;
  t640 = t11 * 53.385416666666671;
  t641 = t10 * 87.890625;
  t642 = t10 * 43.9453125;
  t643 = t10 * 21.97265625;
  t644 = t10 * 49.8046875;
  t646 = t10 * 95.486111111111114;
  t648 = t11 * 31.8287037037037;
  t649 = t10 * 23.871527777777779;
  t650 = t10 * 18.80787037037037;
  t651 = t10 * 325.52083333333331;
  t658 = t422 * zeta;
  t664 = t424 * zeta;
  t667 = eta * t479;
  t688 = t437 * zeta;
  t694 = eta * t509;
  t699 = t442 * zeta;
  t705 = t443 * zeta;
  t722 = t455 * zeta;
  t728 = t2 * t126;
  t729 = t52_tmp * -15.625;
  t730 = t398_tmp * -15.625;
  t732 = t398_tmp * -5.208333333333333;
  t737 = t10 * t108;
  t739 = t52_tmp * 1.3020833333333333;
  t740 = t2 * t133;
  t741 = t2 * t134;
  t742 = t52_tmp * 6.1728395061728394;
  t747 = t3 * t135;
  t748_tmp = t3 * zeta_1_inv;
  t748 = t748_tmp * 34.722222222222221;
  t751 = t3 * t136;
  t752 = t14 * t109;
  t754 = t398_tmp * 17.361111111111111;
  t755 = t748_tmp * 17.361111111111111;
  t756 = t52_tmp * 11.574074074074074;
  t757 = t52_tmp * 35.15625;
  t760 = t10 * t112;
  t761_tmp = t2 * zeta;
  t761 = t761_tmp * 260.41666666666669;
  t767 = t2 * t141;
  t770_tmp = eta * t10;
  t770 = t770_tmp * 97.65625;
  t773 = t11 * t114;
  t774 = t3 * t142;
  t775 = t10 * t115;
  t776 = t2 * t143;
  t777 = t11 * t115;
  t780 = t761_tmp * 57.870370370370367;
  t782 = t398_tmp * 390.625;
  t783 = t398_tmp * 347.22222222222217;
  t784 = t748_tmp * 347.22222222222217;
  t786 = t398_tmp * 260.41666666666669;
  t789 = t398_tmp * 195.3125;
  t793 = t398_tmp * 130.20833333333329;
  t794 = t748_tmp * 130.20833333333329;
  t800 = t2 * t144;
  t801 = t3 * t144;
  t804 = t398_tmp * 244.79166666666671;
  t805 = t398_tmp * 122.3958333333333;
  t806 = t398_tmp * 143.22916666666671;
  t892_tmp = t2 * t14;
  t892 = t892_tmp * 0.78125;
  t893 = t892_tmp * 0.52083333333333337;
  t894 = t892_tmp * 62.5;
  t895_tmp = t2 * t15;
  t895 = t895_tmp * 62.5;
  t909 = t3 * 1.220703125;
  t910 = t2 * 0.72337962962962965;
  t911 = t3 * 0.72337962962962965;
  t915 = t3 * 0.40690104166666669;
  t916 = t3 * 0.36168981481481483;
  t917 = t3 * 3.662109375;
  t918 = t2 * 1.1935763888888891;
  t931 = t3 * 6.103515625;
  t932 = t3 * 5.4253472222222223;
  t934 = t2 * 6.591796875;
  t936 = t3 * 2.034505208333333;
  t938 = t2 * 2.2424768518518521;
  t940 = t2 * 10.986328125;
  t941 = t3 * 10.986328125;
  t942 = t2 * 13.427734375;
  t944 = t3 * 36.62109375;
  t945 = t2 * 0.560619212962963;
  t946 = t2 * 49.913194444444443;
  t948 = t3 * 217.01388888888891;
  t949 = t2 * 162.76041666666671;
  t950 = t2 * 144.6759259259259;
  t951 = t2 * 108.5069444444444;
  t952 = t3 * 108.5069444444444;
  t953 = t2 * 96.450617283950621;
  t955 = t3 * 54.253472222222221;
  t956 = t2 * 0.02593994140625;
  t957 = t2 * 131.8359375;
  t958 = t3 * 131.8359375;
  t959 = t2 * 65.91796875;
  t960 = t2 * 44.849537037037038;
  t961 = t2 * 75.954861111111114;
  t962 = t3 * 50.636574074074069;
  t963 = t3 * 109.86328125;
  t964 = t2 * 0.003814697265625;
  t965 = t3 * 0.003814697265625;
  t966 = t2 * 0.011444091796875;
  t967 = t2 * 395.5078125;
  t975 = t11 * 0.54253472222222221;
  t980 = t10 * 2.507716049382716;
  t1001 = t10 * 6.103515625;
  t1002 = t11 * 6.103515625;
  t1004 = t13 * 6.103515625;
  t1005 = t10 * 5.4253472222222223;
  t1006 = t11 * 4.8225308641975309;
  t1007 = t10 * 3.6168981481481479;
  t1010 = t11 * 2.411265432098765;
  t1011 = t13 * 2.411265432098765;
  t1016 = t10 * 2.034505208333333;
  t1018 = t10 * 1.808449074074074;
  t1019 = t10 * 8.544921875;
  t1022 = t10 * 5.0636574074074074;
  t1030 = t10 * 5.3168402777777777;
  t1031 = t11 * 13.427734375;
  t1032 = t11 * 7.9571759259259256;
  t1034 = t11 * 108.0246913580247;
  t1035 = t11 * 73.2421875;
  t1036 = t10 * 4.7019675925925926;
  t1037 = t10 * 147.5694444444444;
  t1038 = t11 * 49.18981481481481;
  t1039 = t10 * 36.892361111111107;
  t1040 = t10 * 112.3046875;
  t1041 = t11 * 37.434895833333329;
  t1043 = t10 * 57.12890625;
  t1045 = t11 * 122.0703125;
  t1046 = t10 * 108.5069444444444;
  t1047 = t11 * 108.5069444444444;
  t1048 = t10 * 54.253472222222221;
  t1050 = t11 * 36.168981481481481;
  t1051 = t11 * 149.4140625;
  t1052 = t11 * 202.5462962962963;
  t1055 = t11 * 50.636574074074069;
  t1057 = t11 * 219.7265625;
  t1058 = t11 * 109.86328125;
  t1059 = t11 * 198.56770833333329;
  t1060 = t11 * 615.234375;
  t1062 = t10 * 197.75390625;
  t1063 = t10 * 448.2421875;
  t1087 = t828 * zeta;
  t1093 = t831 * zeta;
  t1095 = t833 * zeta;
  t1098 = t838 * zeta_1_inv;
  t1105 = t761_tmp * -1.1574074074074074;
  t1106 = t770_tmp * -78.125;
  t1107 = t761_tmp * -78.125;
  t1108_tmp = eta * t11;
  t1108 = t1108_tmp * -39.0625;
  t1109 = t770_tmp * -26.041666666666668;
  t1112 = t398_tmp * -1.3020833333333333;
  t1113 = t761_tmp * -13.020833333333334;
  t1114 = t10 * t210;
  t1115 = t2 * t239;
  t1121 = t2 * t243;
  t1123 = t2 * t244;
  t1128 = t52_tmp * -52.083333333333336;
  t1129 = t398_tmp * -52.083333333333336;
  t1130 = t748_tmp * -52.083333333333336;
  t1132 = t52_tmp * -26.041666666666668;
  t1133 = t398_tmp * -26.041666666666668;
  t1134 = t748_tmp * -26.041666666666668;
  t1141 = t398_tmp * 8.6805555555555554;
  t1142 = t748_tmp * 8.6805555555555554;
  t1144 = t3 * t249;
  t1147 = t3 * t250;
  t1149 = t3 * t251;
  t1151 = t2 * t252;
  t1153 = t3 * t254;
  t1154 = t10 * t217;
  t1156 = t770_tmp * -117.1875;
  t1157 = t14 * t218;
  t1158 = t2 * t259;
  t1160 = t52_tmp * 29.296875;
  t1162 = t398_tmp * 29.320987654320991;
  t1163 = t398_tmp * 14.66049382716049;
  t1168 = t1108_tmp * -130.20833333333329;
  t1169_tmp = t3 * zeta;
  t1169 = t1169_tmp * -130.20833333333329;
  t1172 = t1108_tmp * -86.805555555555557;
  t1173 = t1169_tmp * -86.805555555555557;
  t1174 = t770_tmp * -65.104166666666671;
  t1176 = t1108_tmp * -65.104166666666671;
  t1177 = t770_tmp * -57.870370370370367;
  t1180 = t3 * t262;
  t1182 = t10 * t224;
  t1183 = t2 * t263;
  t1185 = t3 * t263;
  t1188 = t10 * t225;
  t1190 = t2 * t264;
  t1191 = t11 * t225;
  t1194 = t11 * t226;
  t1197 = t761_tmp * 16.276041666666671;
  t1204 = t10 * t227;
  t1206 = t11 * t227;
  t1207 = t3 * t268;
  t1216 = t748_tmp * -260.41666666666669;
  t1224 = t748_tmp * -86.805555555555557;
  t1227 = t748_tmp * -65.104166666666671;
  t1229 = t14 * t223;
  t1230 = t3 * t271;
  t1238 = t52_tmp * 16.276041666666671;
  t1245 = t770_tmp * -121.5277777777778;
  t1246 = t2 * t276;
  t1247 = t2 * t277;
  t1249 = t52_tmp * 11.95987654320988;
  t1251 = t52_tmp * 10.706018518518521;
  t1253 = t2 * t280;
  t1255 = t52_tmp * 87.890625;
  t1257 = t3 * t281;
  t1260 = t398_tmp * 61.197916666666671;
  t1265 = t748_tmp * 95.486111111111114;
  t1266 = t398_tmp * 71.614583333333329;
  t1267 = t398_tmp * 47.743055555555557;
  t1268 = t748_tmp * 47.743055555555557;
  t1269 = t398_tmp * 23.871527777777779;
  t1270 = t748_tmp * 23.871527777777779;
  t1272 = t761_tmp * 289.3518518518519;
  t1274 = t748_tmp * 651.04166666666674;
  t1331 = t892_tmp * 208.33333333333334;
  t1332_tmp = t3 * t14;
  t1332 = t1332_tmp * 208.33333333333334;
  t1334 = t892_tmp * 104.16666666666667;
  t1335_tmp = t3 * t15;
  t1335 = t1335_tmp * 156.25;
  t1336 = t1332_tmp * 104.16666666666667;
  t1338 = t892_tmp * 416.66666666666669;
  t1339 = t1332_tmp * 416.66666666666669;
  t1340 = t892_tmp * 520.83333333333326;
  t1342 = t1335_tmp * 520.83333333333326;
  t1364 = t2 * 18.310546875;
  t1365 = t3 * 18.310546875;
  t1368 = t2 * 24.956597222222221;
  t1372 = t2 * 24.112654320987652;
  t1376 = t3 * 0.03814697265625;
  t1378 = t3 * 0.11444091796875;
  t1379 = t3 * 0.12969970703125;
  t1380 = t2 * 0.19073486328125;
  t1381 = t3 * 0.19073486328125;
  t1384 = t2 * 22.424768518518519;
  t1387 = t2 * 37.977430555555557;
  t1388 = t2 * 25.318287037037042;
  t1389 = t3 * 25.318287037037042;
  t1390 = t2 * 0.38909912109375;
  t1391 = t2 * 12.659143518518521;
  t1392 = t3 * 12.659143518518521;
  t1393 = t2 * 6.3295717592592586;
  t1395 = t2 * 54.931640625;
  t1396 = t3 * 54.931640625;
  t1401 = t2 * 0.029754638671875;
  t1402 = t3 * 0.049591064453125;
  t1403 = t2 * 0.095367431640625;
  t1405 = t5 * 0.095367431640625;
  t1406 = t2 * 0.148773193359375;
  t1409 = t2 * 11.444091796875;
  t1427 = t10 * 11.29557291666667;
  t1429 = t10 * 18.310546875;
  t1431 = t10 * 4.846643518518519;
  t1432 = t10 * 19.287109375;
  t1434 = t11 * 20.751953125;
  t1435 = t11 * 12.2974537037037;
  t1436 = t10 * 7.405598958333333;
  t1446 = t10 * 30.517578125;
  t1448 = t11 * 18.08449074074074;
  t1449 = t13 * 18.08449074074074;
  t1450 = t10 * 13.563368055555561;
  t1452 = t11 * 9.04224537037037;
  t1454 = t11 * 4.5211226851851851;
  t1455 = t13 * 4.5211226851851851;
  t1457 = t10 * 29.89969135802469;
  t1458 = t10 * 14.94984567901235;
  t1459 = t10 * 40.283203125;
  t1460 = t10 * 7.4749228395061733;
  t1465 = t10 * 25.318287037037042;
  t1466 = t10 * 2.3690682870370372;
  t1468 = t10 * 40.147569444444443;
  t1469 = t10 * 3.7374614197530862;
  t1470 = t11 * 13.382523148148151;
  t1471 = t11 * 47.607421875;
  t1474 = t10 * 54.931640625;
  t1475 = t11 * 54.931640625;
  t1477 = t13 * 54.931640625;
  t1478 = t10 * 62.255859375;
  t1479 = t13 * 22.379557291666671;
  t1481 = t10 * 76.904296875;
  t1482 = t11 * 23.509837962962958;
  t1483 = t10 * 11.754918981481479;
  t1484 = t10 * 19.259982638888889;
  t1487 = t11 * 6.4199942129629628;
  t1489 = t11 * 120.849609375;
  t1501 = t1293 * zeta_1_inv;
  t1503 = eta * t1316;
  t1504 = eta * t1318;
  t1510 = t770_tmp * -9.765625;
  t1511 = t761_tmp * -9.765625;
  t1515 = t770_tmp * -3.8580246913580245;
  t1516 = t761_tmp * -3.8580246913580245;
  t1517 = t761_tmp * -2.8935185185185186;
  t1519 = t761_tmp * -0.732421875;
  t1520 = t761_tmp * -2.1701388888888888;
  t1528 = t748_tmp * -6.510416666666667;
  t1529 = t52_tmp * -4.8828125;
  t1531 = t748_tmp * -4.8828125;
  t1534 = t748_tmp * -3.2552083333333335;
  t1535 = t52_tmp * -1.6276041666666667;
  t1536 = t748_tmp * -1.6276041666666667;
  t1537 = t770_tmp * -14.32291666666667;
  t1538 = t2 * t474;
  t1543 = t398_tmp * -7.161458333333333;
  t1544 = t770_tmp * -7.32421875;
  t1551 = t2 * t484;
  t1552 = t1169_tmp * -43.402777777777779;
  t1553 = t770_tmp * -32.552083333333329;
  t1558 = t770_tmp * -28.93518518518519;
  t1562 = t1108_tmp * -21.701388888888889;
  t1563 = t1108_tmp * -19.29012345679012;
  t1569 = t1108_tmp * -12.20703125;
  t1571 = t770_tmp * -10.850694444444439;
  t1572 = t1108_tmp * -10.850694444444439;
  t1573 = t1169_tmp * -10.850694444444439;
  t1577 = t52_tmp * -43.402777777777779;
  t1578 = t748_tmp * -43.402777777777779;
  t1581 = t11 * t435;
  t1582 = t3 * t498;
  t1586 = t748_tmp * -21.701388888888889;
  t1588 = t3 * t499;
  t1592 = t52_tmp * -10.850694444444439;
  t1594 = t2 * t501;
  t1605 = t761_tmp * -40.50925925925926;
  t1608 = t3 * t508;
  t1609 = t770_tmp * -15.19097222222222;
  t1610 = t52_tmp * 2.7126736111111112;
  t1615 = t2 * t511;
  t1616 = t770_tmp * -87.890625;
  t1617 = t761_tmp * -87.890625;
  t1621 = t770_tmp * -21.97265625;
  t1623 = t2 * t514;
  t1625 = t52_tmp * -43.9453125;
  t1626 = t748_tmp * -43.9453125;
  t1632 = t2 * t518;
  t1643 = t52_tmp * 0.45211226851851849;
  t1645 = t398_tmp * 54.976851851851848;
  t1646 = t398_tmp * 27.488425925925931;
  t1652 = t761_tmp * 192.90123456790121;
  t1658 = t770_tmp * 61.03515625;
  t1659 = t761_tmp * 61.03515625;
  t1660 = t761_tmp * 48.22530864197531;
  t1664 = t748_tmp * 162.76041666666671;
  t1671 = t2 * t529;
  t1672 = t3 * t529;
  t1673 = t748_tmp * 65.91796875;
  t1674 = t14 * t453;
  t1675 = t398_tmp * 166.9921875;
  t1676 = t398_tmp * 83.49609375;
  t1679 = t10 * t454;
  t1680 = t761_tmp * 50.636574074074069;
  t1682 = t10 * t455;
  t1683 = t2 * t531;
  t1684 = t11 * t455;
  t1688 = t748_tmp * 197.75390625;
  t1728 = t892_tmp * -15.625;
  t1731 = t892_tmp * 1.3020833333333333;
  t1732 = t892_tmp * 3.0864197530864197;
  t1733 = t892_tmp * 6.1728395061728394;
  t1734 = t895_tmp * 6.1728395061728394;
  t1743 = t1332_tmp * 69.444444444444443;
  t1744 = t1335_tmp * 78.125;
  t1745 = t1335_tmp * 69.444444444444443;
  t1749 = t895_tmp * 39.0625;
  t1750 = t892_tmp * 34.722222222222221;
  t1751 = t1335_tmp * 39.0625;
  t1752 = t1332_tmp * 34.722222222222221;
  t1757 = t1332_tmp * 23.148148148148149;
  t1758 = t1335_tmp * 23.148148148148149;
  t1759 = t892_tmp * 17.361111111111111;
  t1760 = t1332_tmp * 17.361111111111111;
  t1761 = t1335_tmp * 13.020833333333334;
  t1764 = t1332_tmp * 11.574074074074074;
  t1765 = t1335_tmp * 11.574074074074074;
  t1766 = t892_tmp * 35.15625;
  t1767 = t895_tmp * 35.15625;
  t1770 = t1332_tmp * 138.88888888888891;
  t1771 = t1335_tmp * 138.88888888888891;
  t1772 = t1335_tmp * 277.77777777777783;
  t1778 = t892_tmp * 347.22222222222217;
  t1781 = t1332_tmp * 347.22222222222217;
  t1783 = t1335_tmp * 347.22222222222217;
  t1787 = t895_tmp * 260.41666666666669;
  t1794 = t892_tmp * 195.3125;
  t1796 = t895_tmp * 195.3125;
  t1798 = t895_tmp * 173.61111111111109;
  t1806 = t892_tmp * 130.20833333333329;
  t1807 = t895_tmp * 130.20833333333329;
  t1808 = t1332_tmp * 130.20833333333329;
  t1809 = t1335_tmp * 130.20833333333329;
  t1815 = t892_tmp * 97.65625;
  t1816 = t895_tmp * 97.65625;
  t1831 = t1332_tmp * 65.104166666666671;
  t1832 = t1335_tmp * 65.104166666666671;
  t1837 = t892_tmp * 122.3958333333333;
  t1844 = t2 * 1.2969970703125;
  t1856 = t2 * 0.57220458984375;
  t1859 = t2 * 0.95367431640625;
  t1867 = t3 * 0.63578287760416674;
  t1868 = t2 * 1.48773193359375;
  t1871 = t5 * 0.476837158203125;
  t1872 = t2 * 5.7220458984375;
  t1874 = t3 * 2.47955322265625;
  t1875 = t2 * 0.751495361328125;
  t1876 = t2 * 0.21616617838541671;
  t1877 = t2 * 6.4849853515625;
  t1878 = t3 * 6.4849853515625;
  t1879 = t3 * 0.31789143880208331;
  t1881 = t5 * 0.0095367431640625;
  t1884 = t5 * 0.0476837158203125;
  t1885 = t2 * 3.24249267578125;
  t1886 = t2 * 1.239776611328125;
  t1887 = t2 * 0.54677327473958326;
  t1889 = t2 * 164.794921875;
  t1890 = t3 * 164.794921875;
  t1892 = t2 * 0.031789143880208329;
  t1893 = t3 * 0.031789143880208329;
  t1894 = t3 * 1.080830891927083;
  t1929 = t10 * 4.5982831790123457;
  t1931 = t10 * 62.391493055555557;
  t1932 = t11 * 41.5943287037037;
  t1933 = t10 * 142.822265625;
  t1934 = t11 * 20.797164351851851;
  t1936 = t11 * 50.862630208333329;
  t1938 = t10 * 15.07040895061728;
  t1939 = t10 * 164.794921875;
  t1940 = t11 * 164.794921875;
  t1941 = t10 * 56.0619212962963;
  t1942 = t11 * 37.37461419753086;
  t1943 = t11 * 18.68730709876543;
  t1944 = t10 * 14.015480324074071;
  t1946 = t10 * 362.548828125;
  t1963 = t761_tmp * -0.72337962962962965;
  t1970 = t1108_tmp * -6.103515625;
  t1971 = t1169_tmp * -6.103515625;
  t1973 = t1169_tmp * -5.4253472222222223;
  t1974 = t761_tmp * -6.591796875;
  t1978 = t52_tmp * -5.4253472222222223;
  t1980 = t748_tmp * -5.4253472222222223;
  t1982 = t1169_tmp * -2.034505208333333;
  t1987 = t52_tmp * -1.356336805555556;
  t1990 = t761_tmp * -10.986328125;
  t1992 = t761_tmp * -13.427734375;
  t2005 = t761_tmp * -0.560619212962963;
  t2009 = t770_tmp * -33.275462962962962;
  t2010 = t761_tmp * -33.275462962962962;
  t2011 = t770_tmp * -217.01388888888891;
  t2012 = t761_tmp * -144.6759259259259;
  t2017 = t1108_tmp * -36.168981481481481;
  t2031 = t52_tmp * -131.8359375;
  t2033 = t748_tmp * -131.8359375;
  t2035 = t398_tmp * 32.958984375;
  t2036 = t748_tmp * 32.958984375;
  t2041 = t52_tmp * 22.424768518518519;
  t2045 = t2 * t883;
  t2047 = t770_tmp * -101.2731481481481;
  t2048 = t761_tmp * -101.2731481481481;
  t2049 = t770_tmp * -50.636574074074069;
  t2058 = t2 * t885;
  t2059 = t52_tmp * 0.37299262152777779;
  t2061 = t770_tmp * -109.86328125;
  t2062 = t761_tmp * -109.86328125;
  t2063 = t1108_tmp * -109.86328125;
  t2066 = t2 * t887;
  t2067 = t3 * t887;
  t2073 = t14 * t838;
  t2074 = t5 * t889;
  t2076 = t770_tmp * 23.509837962962958;
  t2077 = t761_tmp * 23.509837962962958;
  t2082 = t52_tmp * 17.31288580246914;
  t2083 = t52_tmp * 0.1657744984567901;
  t2084 = t770_tmp * -197.75390625;
  t2088 = t398_tmp * 98.876953125;
  t2089 = t748_tmp * 98.876953125;
  t2090 = t398_tmp * 60.619212962962962;
  t2091 = t398_tmp * 30.309606481481481;
  t2113_tmp = t2 * t10;
  t2113 = t2113_tmp * -39.0625;
  t2119 = t895_tmp * -78.125;
  t2132 = t1335_tmp * -26.041666666666668;
  t2143 = t892_tmp * 8.6805555555555554;
  t2144 = t1332_tmp * 8.6805555555555554;
  t2146 = t892_tmp * 5.7870370370370372;
  t2147 = t1332_tmp * 5.7870370370370372;
  t2153 = t892_tmp * 17.578125;
  t2157 = t895_tmp * 29.296875;
  t2158 = t1332_tmp * 29.296875;
  t2159 = t1335_tmp * 29.296875;
  t2161 = t1332_tmp * 14.6484375;
  t2162 = t1335_tmp * 14.6484375;
  t2164 = t892_tmp * 14.66049382716049;
  t2165 = t2113_tmp * -65.104166666666671;
  t2182 = t1332_tmp * -260.41666666666669;
  t2183 = t1335_tmp * -260.41666666666669;
  t2187 = t1332_tmp * -173.61111111111109;
  t2188 = t1335_tmp * -173.61111111111109;
  t2199 = t892_tmp * -86.805555555555557;
  t2201 = t1332_tmp * -86.805555555555557;
  t2202 = t1335_tmp * -86.805555555555557;
  t2207 = t892_tmp * -65.104166666666671;
  t2208 = t895_tmp * -65.104166666666671;
  t2237 = t892_tmp * 16.276041666666671;
  t2238 = t895_tmp * 16.276041666666671;
  t2244 = t895_tmp * 10.850694444444439;
  t2249 = t892_tmp * 8.1380208333333321;
  t2251 = t892_tmp * 11.95987654320988;
  t2252 = t895_tmp * 11.95987654320988;
  t2253 = t892_tmp * 10.706018518518521;
  t2254 = t895_tmp * 10.706018518518521;
  t2256 = t895_tmp * 87.890625;
  t2257 = t1332_tmp * 87.890625;
  t2258 = t1335_tmp * 87.890625;
  t2259 = t892_tmp * 43.9453125;
  t2260 = t895_tmp * 43.9453125;
  t2264 = t892_tmp * 61.197916666666671;
  t2265 = t892_tmp * 47.743055555555557;
  t2266 = t1332_tmp * 47.743055555555557;
  t2267 = t892_tmp * 23.871527777777779;
  t2268 = t1332_tmp * 23.871527777777779;
  t2270 = t1332_tmp * 651.04166666666674;
  t2299 = t5 * 4.76837158203125;
  t2302 = t3 * 7.375081380208333;
  t2305 = t5 * 2.384185791015625;
  t2307 = t3 * 2.4583604600694442;
  t2308 = t2 * 7.43865966796875;
  t2309 = t2 * 0.41325887044270831;
  t2310 = t3 * 0.41325887044270831;
  t2312 = t2 * 19.4549560546875;
  t2323 = t13 * 8.7408371913580254;
  t2325 = t11 * 9.3436535493827169;
  t2326 = t11 * 4.6718267746913584;
  t2327 = t11 * 1.41285083912037;
  t2348 = t1169_tmp * -0.3814697265625;
  t2357 = t1169_tmp * -0.19073486328125;
  t2358 = t770_tmp * -29.89969135802469;
  t2359 = t761_tmp * -29.89969135802469;
  t2362 = t770_tmp * -25.318287037037042;
  t2369 = t761_tmp * -6.3295717592592586;
  t2371 = t3 * t1311;
  t2375 = t1169_tmp * -54.931640625;
  t2378 = t748_tmp * -54.931640625;
  t2381 = t52_tmp * 1.5823929398148151;
  t2383_tmp = t5 * zeta_1_inv;
  t2383 = t2383_tmp * -0.095367431640625;
  t2388 = t52_tmp * 1.05492862654321;
  t2401 = t52_tmp * 1.378942418981481;
  t2403 = t5 * t1316;
  t2407 = t5 * t1318;
  t2410 = t398_tmp * 56.809413580246911;
  t2411 = t398_tmp * 28.404706790123459;
  t2412 = t770_tmp * 152.587890625;
  t2414 = t770_tmp * 30.14081790123457;
  t2415 = t761_tmp * 30.14081790123457;
  t2418 = t2 * t1321;
  t2419 = t11 * t1301;
  t2420 = t3 * t1321;
  t2423 = t2 * t1322;
  t2425 = t398_tmp * 296.630859375;
  t2427 = t52_tmp * 49.591064453125;
  t2428 = t770_tmp * 494.384765625;
  t2429 = t761_tmp * 494.384765625;
  t2430 = t398_tmp * 494.384765625;
  t2431 = t748_tmp * 494.384765625;
  t2435 = t2113_tmp * -4.8828125;
  t2436 = t2113_tmp * -1.9290123456790123;
  t2446 = t892_tmp * -7.161458333333333;
  t2455 = t2113_tmp * -32.552083333333329;
  t2456 = t2113_tmp * -28.93518518518519;
  t2458 = t2113_tmp * -14.46759259259259;
  t2461_tmp = t2 * t11;
  t2461 = t2461_tmp * -9.6450617283950617;
  t2464 = t1332_tmp * -43.402777777777779;
  t2465 = t1335_tmp * -43.402777777777779;
  t2471 = t892_tmp * -32.552083333333329;
  t2472 = t895_tmp * -32.552083333333329;
  t2473 = t1332_tmp * -32.552083333333329;
  t2478 = t892_tmp * -21.701388888888889;
  t2479 = t1332_tmp * -21.701388888888889;
  t2480 = t1335_tmp * -21.701388888888889;
  t2493 = t1332_tmp * -10.850694444444439;
  t2494 = t1335_tmp * -10.850694444444439;
  t2501 = t892_tmp * 5.4253472222222223;
  t2510 = t895_tmp * 2.7126736111111112;
  t2514 = t892_tmp * 5.9799382716049383;
  t2516 = t2113_tmp * -43.9453125;
  t2517 = t892_tmp * 1.356336805555556;
  t2519 = t892_tmp * 5.3530092592592586;
  t2526 = t1335_tmp * -43.9453125;
  t2533 = t892_tmp * 0.67816840277777779;
  t2534 = t895_tmp * 0.45211226851851849;
  t2535 = t1332_tmp * 0.45211226851851849;
  t2536 = t1335_tmp * 0.45211226851851849;
  t2537 = t892_tmp * 27.488425925925931;
  t2542 = t892_tmp * 244.140625;
  t2545 = t1332_tmp * 162.76041666666671;
  t2550 = t892_tmp * 40.690104166666671;
  t2557 = t1335_tmp * 65.91796875;
  t2558 = t892_tmp * 67.274305555555557;
  t2560 = t1332_tmp * 44.849537037037038;
  t2561 = t1335_tmp * 44.849537037037038;
  t2562 = t892_tmp * 83.49609375;
  t2565 = t1335_tmp * 395.5078125;
  t2567 = t1335_tmp * 197.75390625;
  t2585 = t5 * 0.79472859700520826;
  t2593 = eta * t2434;
  t2603 = t2383_tmp * -0.0095367431640625;
  t2607 = t2383_tmp * -0.0476837158203125;
  t2613 = t1108_tmp * -50.862630208333329;
  t2617 = t1169_tmp * -19.073486328125;
  t2620 = t1108_tmp * -164.794921875;
  t2621 = t1169_tmp * -164.794921875;
  t2622 = t398_tmp * -164.794921875;
  t2623 = t748_tmp * -164.794921875;
  t2625 = t52_tmp * 6.357828776041667;
  t2628 = t52_tmp * 4.2385525173611107;
  t2629 = t3 * t1720;
  t2632 = t52_tmp * 2.384185791015625;
  t2633 = t5 * t1722;
  t2634 = t52_tmp * 2.1192762586805558;
  t2635 = t3 * t1723;
  t2636 = t398_tmp * 1.589457194010417;
  t2638 = t748_tmp * 17.1661376953125;
  t2639 = t52_tmp * 1.7519350405092591;
  t2642 = t748_tmp * 8.58306884765625;
  t2644 = t748_tmp * 10.49041748046875;
  t2646 = t748_tmp * 5.245208740234375;
  t2647 = t3 * t1724;
  t2654 = t5 * t1726;
  t2657 = t5 * t1727;
  t2658 = t398_tmp * 25.74920654296875;
  t2659 = t398_tmp * 15.73562622070312;
  t2662 = t2461_tmp * -6.103515625;
  t2664 = t2113_tmp * -5.4253472222222223;
  t2668 = t1332_tmp * -5.4253472222222223;
  t2669 = t1335_tmp * -5.4253472222222223;
  t2700 = t1332_tmp * 0.2260561342592593;
  t2702 = t895_tmp * -131.8359375;
  t2704 = t1335_tmp * -131.8359375;
  t2707 = t892_tmp * 32.958984375;
  t2708 = t1332_tmp * 32.958984375;
  t2714 = t892_tmp * 33.637152777777779;
  t2717 = t1332_tmp * 22.424768518518519;
  t2718 = t1335_tmp * 22.424768518518519;
  t2720 = t892_tmp * 11.21238425925926;
  t2721 = t1332_tmp * 11.21238425925926;
  t2723 = t2113_tmp * -50.636574074074069;
  t2725 = t892_tmp * 2.260561342592593;
  t2727 = t892_tmp * 0.37299262152777779;
  t2728 = t895_tmp * 0.37299262152777779;
  t2735 = t892_tmp * 0.1864963107638889;
  t2736 = t892_tmp * 17.31288580246914;
  t2737 = t895_tmp * 17.31288580246914;
  t2738 = t892_tmp * 0.1657744984567901;
  t2739 = t895_tmp * 0.1657744984567901;
  t2740 = t892_tmp * 8.6564429012345681;
  t2745 = t892_tmp * 98.876953125;
  t2746 = t1332_tmp * 98.876953125;
  t2747 = t892_tmp * 30.309606481481481;
  t2748 = t1335_tmp * 593.26171875;
  t2754 = t1169_tmp * -9.5367431640625;
  t2756 = t1169_tmp * -4.76837158203125;
  t2758 = t1108_tmp * -9.3436535493827169;
  t2761 = t2383_tmp * -2.384185791015625;
  t2766 = t748_tmp * 1.0596381293402779;
  t2774 = t2383_tmp * -23.84185791015625;
  t2777 = t2383_tmp * -11.92092895507812;
  t2781 = t398_tmp * 17.642974853515621;
  t2782 = t398_tmp * 123.9776611328125;
  t2783 = t748_tmp * 123.9776611328125;
  t2785 = t398_tmp * 30.994415283203121;
  t2789 = t2113_tmp * -18.310546875;
  t2792 = t2113_tmp * -16.637731481481481;
  t2793 = t2113_tmp * -30.517578125;
  t2804 = t2113_tmp * -14.94984567901235;
  t2807 = t2113_tmp * -25.318287037037042;
  t2810 = t895_tmp * 1.507040895061728;
  t2811 = t1332_tmp * 1.507040895061728;
  t2812 = t1335_tmp * 1.507040895061728;
  t2813 = t2113_tmp * -54.931640625;
  t2814 = t2461_tmp * -54.931640625;
  t2817 = t892_tmp * 2.3735894097222219;
  t2818 = t892_tmp * 1.5823929398148151;
  t2820 = t1332_tmp * 1.5823929398148151;
  t2823 = t892_tmp * 0.75352044753086422;
  t2824 = t1332_tmp * 0.75352044753086422;
  t2825 = t895_tmp * 1.05492862654321;
  t2826 = t1332_tmp * 1.05492862654321;
  t2827 = t1335_tmp * 1.05492862654321;
  t2828 = t892_tmp * 3.7299262152777781;
  t2829 = t2113_tmp * -11.754918981481479;
  t2832 = t895_tmp * 2.4866174768518521;
  t2833 = t1332_tmp * 2.4866174768518521;
  t2834 = t1335_tmp * 2.4866174768518521;
  t2837 = t1332_tmp * 0.79119646990740744;
  t2840 = t892_tmp * 1.243308738425926;
  t2841 = t1332_tmp * 1.243308738425926;
  t2842 = t892_tmp * 0.52746431327160492;
  t2844 = t892_tmp * 1.378942418981481;
  t2845 = t895_tmp * 1.378942418981481;
  t2850 = t892_tmp * 28.404706790123459;
  t2851 = t892_tmp * 38.14697265625;
  t2852 = t1332_tmp * 38.14697265625;
  t2853 = t1335_tmp * 25.431315104166671;
  t2854 = t892_tmp * 19.073486328125;
  t2855 = t1332_tmp * 19.073486328125;
  t2856 = t1335_tmp * 19.073486328125;
  t2858 = t892_tmp * 12.71565755208333;
  t2859 = t1332_tmp * 12.71565755208333;
  t2860 = t1335_tmp * 12.71565755208333;
  t2863 = t892_tmp * 0.082887249228395063;
  t2864 = t892_tmp * 0.6894712094907407;
  t2869 = t892_tmp * 296.630859375;
  t2870 = t1332_tmp * 296.630859375;
  t2871 = t892_tmp * 99.18212890625;
  t2872 = t1332_tmp * 99.18212890625;
  t2876 = t1332_tmp * 95.367431640625;
  t2880 = t892_tmp * 889.892578125;
  t2881 = t1332_tmp * 889.892578125;
  t2886 = t52_tmp * 8.3446502685546875;
  t2914_tmp = t5 * t14;
  t2915 = t2914_tmp * -0.0476837158203125;
  t2922 = t2113_tmp * -15.07040895061728;
  t2926 = t2113_tmp * -164.794921875;
  t2928 = t1332_tmp * 9.5367431640625;
  t2929 = t892_tmp * 8.4771050347222214;
  t2930 = t1332_tmp * 8.4771050347222214;
  t2932 = t895_tmp * 6.357828776041667;
  t2933 = t1332_tmp * 6.357828776041667;
  t2937 = t892_tmp * 4.2385525173611107;
  t2938 = t895_tmp * 4.2385525173611107;
  t2939 = t1332_tmp * 4.2385525173611107;
  t2942 = t892_tmp * 3.178914388020833;
  t2944 = t2113_tmp * -14.015480324074071;
  t2946 = t892_tmp * 2.1192762586805558;
  t2947 = t895_tmp * 2.1192762586805558;
  t2951 = t892_tmp * 1.7519350405092591;
  t2952 = t895_tmp * 1.7519350405092591;
  t2955 = t892_tmp * 8.58306884765625;
  t2956 = t1332_tmp * 8.58306884765625;
  t2958 = t1332_tmp * 5.245208740234375;
  t2961 = t892_tmp * 24.7955322265625;
  t2963 = t892_tmp * 28.6102294921875;
  t2964 = t1332_tmp * 28.6102294921875;
  t2968 = t1332_tmp * 47.6837158203125;
  t2969 = t1335_tmp * 47.6837158203125;
  t2971 = t1332_tmp * 23.84185791015625;
  t2972 = t1335_tmp * 23.84185791015625;
  t2975 = t2914_tmp * 23.84185791015625;
  t2977 = t892_tmp * 11.92092895507812;
  t2978 = t1332_tmp * 11.92092895507812;
  t2979 = t1335_tmp * 11.92092895507812;
  t2982 = t2914_tmp * 11.92092895507812;
  t2997 = t2461_tmp * -4.6718267746913584;
  t2998 = t892_tmp * 1.0596381293402779;
  t3026 = t892_tmp * 5.9604644775390616;
  t3027 = t1332_tmp * 5.9604644775390616;
  t3029 = t1335_tmp * 33.37860107421875;
  t3038 = t892_tmp * 30.994415283203121;
  t3040 = t1332_tmp * 143.0511474609375;
  t3041 = t892_tmp * 71.52557373046875;
  t3042 = t1335_tmp * 71.52557373046875;
  t3045 = t892_tmp * 35.762786865234382;
  t3046 = t1332_tmp * 35.762786865234382;
  t3048 = t1335_tmp * 119.20928955078119;
  t3055_tmp = t5 * t15;
  t3066 = t1335_tmp * 8.3446502685546875;
  t3085 = t892_tmp * 17.881393432617191;
  t3087 = t895_tmp * 20.265579223632809;
  t3091 = t895_tmp * 25.033950805664059;
  t3156 = eta * t3122;
  t3162 = t11 * 13.6045762050299;
  t3169 = t11 * 17.896110628858029;
  t3174 = t10 * 15.847476912133491;
  t3175 = t10 * 31.694953824266971;
  t3189 = t11 * 11.332241105444639;
  t3225 = t10 * 49.492164894386583;
  t3229 = t3167 * zeta;
  t3237 = t2 * 110.732184516059;
  t3238 = t3 * 2.6785297158323691;
  t3249 = t11 * 2.5170879599488809;
  t3259 = t10 * 40.8137286150897;
  t3268 = t3179 * zeta;
  t3269 = eta * t3186;
  t3271 = t3 * 26.78529715832369;
  t3286 = t2 * 32.848782009548607;
  t3287 = t3 * 42.385525173611107;
  t3312 = t2 * 36.910728172019667;
  t3313 = t3 * 36.910728172019667;
  t3314 = t3 * 73.821456344039348;
  t3334 = t2 * 118.5028641312211;
  t3337 = t3 * 66.168514298804013;
  t3349 = t3139 * zeta;
  t3354 = t3141 * zeta;
  t3381 = t10 * 1.673050868658372;
  t3389 = t3149 * zeta;
  t3405 = t11 * 78.366126543209873;
  t3428 = t10 * 4.7153896755642357;
  t3434 = eta * t3346;
  t3436 = eta * t3347;
  t3439 = t2 * 15.055691754376451;
  t3443 = t11 * 16.497388298128861;
  t3452 = t761_tmp * 80.35589147497106;
  t3458 = t398_tmp * 1.309241777584877;
  t3459 = t398_tmp * 2.6184835551697532;
  t3460 = t3339 * zeta;
  t3466 = t2 * 26.137740523726851;
  t3471 = t3 * 15.19992027753665;
  t3476 = t10 * 17.51699565369406;
  t3480 = t3359 * zeta;
  t3484 = t770_tmp * -31.694953824266971;
  t3486 = t761_tmp * -31.694953824266971;
  t3489 = t3361 * zeta;
  t3497 = t2 * 9.3389440465856488;
  t3502 = t10 * 9.4484399866174762;
  t3503 = t10 * 23.6652515552662;
  t3522 = t2 * 8.035589147497106;
  t3529 = t10 * 14.8702550817419;
  t3530 = t10 * 21.545975296585649;
  t3531 = t10 * 29.7405101634838;
  t3549 = t761_tmp * 51.804530767746911;
  t3550 = t1108_tmp * -11.332241105444639;
  t3555 = t3 * 10.59638129340278;
  t3556 = t3 * 21.192762586805561;
  t3566 = t398_tmp * 72.055392795138886;
  t3567 = t748_tmp * 72.055392795138886;
  t3568 = t748_tmp * 6.2548084023558062;
  t3571 = t2 * 5.4453626091097611;
  t3572 = t3 * 5.4453626091097611;
  t3573 = t3 * 10.89072521821952;
  t3574 = t3 * 39.500954710407022;
  t3586 = t10 * 6.2423282199435768;
  t3587 = t10 * 7.4439578586154518;
  t3588 = t10 * 8.2121955023871536;
  t3589 = t10 * 9.68509250217014;
  t3590 = t10 * 16.424391004774311;
  t3602 = eta * t3213;
  t3606 = t3 * 31.789143880208329;
  t3607 = t3 * 63.578287760416657;
  t3618 = t11 * 22.13466314621914;
  t3622 = t3 * 17.63120109652295;
  t3625 = t2 * 6.71104148582176;
  t3626 = t2 * 11.47941306785301;
  t3627 = t2 * 13.422082971643521;
  t3628 = t2 * 23.912500452112269;
  t3629 = t2 * 99.252771448206019;
  t3633 = t2 * 21.027929988908181;
  t3641 = eta * t3243;
  t3642 = eta * t3244;
  t3645 = eta * t3245;
  t3654 = t2 * 33.084257149402013;
  t3656 = t3 * 15.42362166039738;
  t3657 = t3 * 33.084257149402013;
  t3668 = t10 * 6.71104148582176;
  t3669 = t10 * 16.24778464988426;
  t3670 = t10 * 27.727197717737269;
  t3671 = t11 * 5.45360423900463;
  t3686 = t3247 * zeta;
  t3691 = t3 * 3.649864667727623;
  t3692 = t3 * 11.994514936282309;
  t3693 = t2 * 18.057999787507239;
  t3697 = t10 * 9.2423992392457563;
  t3700 = t3256 * zeta;
  t3701 = t11 * 16.883567527488431;
  t3702 = t748_tmp * 29.213634538061829;
  t3703 = t748_tmp * 116.8545381522473;
  t3711 = t2 * 5.2098874692563646;
  t3712 = t2 * 52.893603289568873;
  t3713 = t3 * 5.2098874692563646;
  t3714 = t3 * 10.419774938512729;
  t3718 = t11 * 3.268394941165123;
  t3725 = t3 * t3122;
  t3726 = t770_tmp * 33.996723316333913;
  t3733 = t10 * 43.83369728370949;
  t3734 = t10 * 44.958043981481481;
  t3735 = t11 * 10.94959400318287;
  t3737 = eta * t3294;
  t3738 = t398_tmp * 20.124294139720771;
  t3741 = eta * t3296;
  t3742 = eta * t3300;
  t3747 = t761_tmp * 65.697564019097229;
  t3748 = t2 * 23.13543249059606;
  t3749 = t2 * 34.903067129629633;
  t3750 = t2 * 69.806134259259252;
  t3752 = t2 * 6.4755663459683639;
  t3753 = t2 * 25.902265383873459;
  t3755 = t2 * 30.442226080246911;
  t3758 = t11 * 7.8884171850887341;
  t3759 = t11 * 15.77683437017747;
  t3763 = t3292 * zeta;
  t3768 = eta * t3321;
  t3769 = t398_tmp * 87.640903614185476;
  t3770 = t398_tmp * 350.5636144567419;
  t3771 = t748_tmp * 87.640903614185476;
  t3772 = t748_tmp * 350.5636144567419;
  t3777 = t2 * 8.05324978298611;
  t3778 = t2 * 10.19371880425347;
  t3779 = t2 * 10.86129082573785;
  t3780 = t2 * 15.6296624077691;
  t3781 = t2 * 16.106499565972221;
  t3787 = t11 * 46.388602551118829;
  t3789 = t3315 * zeta;
  t3793 = t2 * 16.33608782732928;
  t3794 = t2 * 21.10445940936053;
  t3796 = t10 * 1.3457404242621529;
  t3797 = t10 * 2.25173102484809;
  t3798 = t10 * 2.57322523328993;
  t3799 = t10 * 3.4438239203559031;
  t3800 = t11 * 2.02390882703993;
  t3801 = t11 * 7.7353583441840277;
  t3804 = t11 * 1.319367208598573;
  t3812 = eta * t3667;
  t3816 = t770_tmp * 32.495569299768519;
  t3820 = t761_tmp * 23.400342022931131;
  t3821 = t2 * t3146;
  t3822 = t761_tmp * 32.495569299768519;
  t3824 = t3632 * zeta;
  t3825 = t2 * t3147;
  t3826 = t2 * 7.5705257462866511;
  t3827 = t3 * 1.105438044041763;
  t3828 = t3 * 7.0348198031201772;
  t3830 = t2 * 1.068350709514853;
  t3834 = t10 * 1.766063548900463;
  t3835 = t10 * 3.246024802879051;
  t3836 = t11 * 1.766063548900463;
  t3839 = t398_tmp * 111.70351946795429;
  t3840 = t748_tmp * 111.70351946795429;
  t3845 = t52_tmp * 8.2887249228395063;
  t3850 = t770_tmp * 27.373985007957181;
  t3851 = t2 * 1.169134069372106;
  t3852 = t2 * 3.610540319372106;
  t3853 = t2 * 3.6734121817129628;
  t3854 = t2 * 4.3236767804181131;
  t3855 = t2 * 7.3468243634259256;
  t3858 = t10 * 1.1773756992669751;
  t3859 = t11 * 1.08200826762635;
  t3860 = t11 * 2.164016535252701;
  t3862 = t10 * 4.1208149474344138;
  t3863 = t11 * 14.986014660493829;
  t3865 = t761_tmp * 26.270195289894389;
  t3872 = t3 * t3155;
  t3877 = t3 * 1.8991070029176309;
  t3878 = t3 * 2.454828332971644;
  t3880 = t10 * 1.633608782732928;
  t3881 = t10 * 4.31237397370515;
  t3882 = t10 * 5.4663198965567128;
  t3883 = t11 * 2.0807760733145249;
  t3884 = t11 * 2.48131928620515;
  t3888 = t11 * 1.43745799123505;
  t3896 = t398_tmp * 15.700304949725121;
  t3898 = t3 * 2.2311269501109181;
  t3899 = t3 * 7.8001140076437112;
  t3902 = t3 * 6.0193332625024114;
  t3904 = t11 * 1.9944744345582559;
  t3906 = t10 * 0.7505770082826968;
  t3907 = t11 * 3.4600717050057872;
  t3915 = t52_tmp * 20.662943522135421;
  t3916 = t52_tmp * 41.325887044270843;
  t3917 = t52_tmp * 43.233235677083343;
  t3918 = t398_tmp * 20.662943522135421;
  t3919 = t398_tmp * 27.338663736979171;
  t3920 = t398_tmp * 41.325887044270843;
  t3921 = t398_tmp * 42.279561360677093;
  t3922 = t398_tmp * 82.651774088541671;
  t3923 = t748_tmp * 41.325887044270843;
  t3924 = t748_tmp * 82.651774088541671;
  t3927 = t2 * 3.620430275245949;
  t3928 = t2 * 4.3798376012731479;
  t3929 = t2 * 8.7596752025462958;
  t3930 = t3 * 3.620430275245949;
  t3931 = t3 * 7.2408605504918979;
  t3933 = t10 * 10.831856433256171;
  t3934 = t11 * 7.9336284119405862;
  t3939 = t10 * 10.512787618754819;
  t3940 = t11 * 2.413620183497299;
  t3941 = t11 * 4.8272403669945989;
  t3942 = t398_tmp * 21.22808385778356;
  t3946 = t761_tmp * 12.95113269193673;
  t3949 = t761_tmp * 60.884452160493829;
  t3950 = t2 * 0.51922268337673616;
  t3951 = t2 * 2.3312038845486112;
  t3952 = t2 * 4.6624077690972223;
  t3960 = t10 * 2.142235084816261;
  t3961 = t10 * 7.2408605504918979;
  t3962 = t11 * 1.571796558521412;
  t3968 = t52_tmp * 18.013848198784721;
  t3969 = t52_tmp * 36.027696397569443;
  t3970 = t398_tmp * 9.00692409939236;
  t3971 = t398_tmp * 18.013848198784721;
  t3972 = t398_tmp * 36.027696397569443;
  t3973 = t748_tmp * 23.312038845486111;
  t3974 = t748_tmp * 36.027696397569443;
  t3981 = t761_tmp * 35.983544808846943;
  t3986 = t3 * 1.441225593472705;
  t3997 = t10 * 2.6490953233506951;
  t3998 = t10 * 3.2318962944878469;
  t3999 = t10 * 4.9008263481987848;
  t4000 = t10 * 6.4637925889756946;
  t4001 = t11 * 1.8543667263454859;
  t4002 = t11 * 3.7087334526909719;
  t4003 = t13 * 0.66227383083767366;
  t4011 = t2 * 1.298268636067708;
  t4018 = t3 * 2.796267285759066;
  t4019 = t3 * 3.6792990602092979;
  t4020 = t3 * 8.756731763298129;
  t4022 = t10 * 3.149479995539159;
  t4024 = t11 * 1.822106632185571;
  t4026 = t13 * 1.441225593472705;
  t4028 = t10 * 2.3008275915075229;
  t4029 = t11 * 4.9449779369212967;
  t4031 = t398_tmp * 16.9306625554591;
  t4033 = t761_tmp * 11.03789718062789;
  t4036 = t2 * 2.5019233609423219;
  t4038 = t3 * 2.5019233609423219;
  t4039 = t3 * 5.0038467218846447;
  t4049 = t10 * 5.563100179036458;
  t4053 = t2 * 2.23748477888696;
  t4054 = t3 * 5.0185639181254826;
  t4064 = t761_tmp * 52.2754810474537;
  t4072 = t2 * 7.7118108301986883;
  t4075 = t3 * 2.5684450879509071;
  t4076 = t3 * 7.7118108301986883;
  t4077 = t11 * 13.021304283613039;
  t4086 = t10 * 0.85145455819589122;
  t4087 = t10 * 2.5985859058521412;
  t4088 = t10 * 11.21450353551794;
  t4089 = t10 * 15.98287511754919;
  t4091 = t11 * 0.85774174442997686;
  t4093 = t13 * 1.67776037145544;
  t4095 = t398_tmp * 43.5595100308642;
  t4096 = t398_tmp * 87.119020061728392;
  t4101 = t770_tmp * 11.83757075557002;
  t4104 = t2 * t3185;
  t4105 = t2 * t3187;
  t4109 = t2 * 1.8249323338638119;
  t4112 = t3 * 1.8249323338638119;
  t4113 = t3 * 1.92088845335407;
  t4115 = t11 * 14.611232427903159;
  t4117 = t11 * 2.5207613721305941;
  t4118 = t11 * 2.9434392481674378;
  t4119 = t13 * 3.120045603057485;
  t4121 = t10 * 1.269799691659433;
  t4122 = t10 * 2.3488645200376159;
  t4123 = t10 * 3.2071714048032409;
  t4124 = t10 * 4.6977290400752318;
  t4126 = t770_tmp * 21.663712866512341;
  t4127 = t761_tmp * 21.663712866512341;
  t4128 = t398_tmp * 30.243838274920432;
  t4129 = t748_tmp * 30.243838274920432;
  t4141 = t2 * 5.4747970015914351;
  t4142 = t2 * 7.5057700828269676;
  t4145 = t3 * 0.80355891474971064;
  t4146 = t10 * 7.5512638798466432;
  t4147 = t10 * 12.53905119719329;
  t4149 = t11 * 0.63342812620563271;
  t4150 = t11 * 1.266856252411265;
  t4152 = t13 * 0.72879555784625771;
  t4154 = t10 * 3.7381678451726472;
  t4155 = t1169_tmp * -26.78529715832369;
  t4156 = t748_tmp * 37.234506489318093;
  t4160 = t3 * 1.2035134397907019;
  t4161 = t3 * 1.701307885440779;
  t4164 = t10 * 0.34369009512442128;
  t4165 = t10 * 1.1373449254918979;
  t4166 = t10 * 1.25920331036603;
  t4167 = t10 * 1.9002843786168979;
  t4168 = t10 * 2.3700572826244208;
  t4169 = t10 * 2.8808028609664351;
  t4170 = t10 * 3.5526134349681708;
  t4171 = t10 * 3.958101625795718;
  t4173 = t11 * 2.737398500795718;
  t4174 = t11 * 3.2283641673900458;
  t4175 = t11 * 5.4747970015914351;
  t4181 = eta * t3584;
  t4187 = t52_tmp * 14.41107855902778;
  t4188 = t52_tmp * 28.822157118055561;
  t4189 = t398_tmp * 5.2981906467013893;
  t4190 = t398_tmp * 8.2121955023871536;
  t4191 = t398_tmp * 9.11288791232639;
  t4192 = t398_tmp * 10.59638129340278;
  t4193 = t748_tmp * 4.9930148654513893;
  t4194 = t748_tmp * 5.2981906467013893;
  t4195 = t748_tmp * 8.2121955023871536;
  t4196 = t748_tmp * 9.11288791232639;
  t4197 = t748_tmp * 10.066562228732639;
  t4199 = t748_tmp * 16.424391004774311;
  t4200 = t748_tmp * 18.225775824652779;
  t4201 = t748_tmp * 20.556979709201389;
  t4202 = t748_tmp * 28.186374240451389;
  t4205 = t2 * 3.3163141321252891;
  t4208 = t10 * 1.76936020085841;
  t4209 = t10 * 11.02682984905478;
  t4210 = t10 * 1.3751748167438269;
  t4211 = t10 * 1.831996588059414;
  t4212 = t11 * 9.1246616693190585;
  t4216 = t10 * 6.071726481119792;
  t4234 = t2 * 0.36027696397569442;
  t4235 = t2 * 1.2927585177951391;
  t4236 = t10 * 1.147941306785301;
  t4237 = t10 * 0.602307731722608;
  t4238 = t10 * 0.71407836160542049;
  t4239 = t10 * 1.954443660783179;
  t4240 = t11 * 2.6655785831404319;
  t4241 = t11 * 3.945856918523341;
  t4245 = t52_tmp * 16.530354817708329;
  t4246 = t52_tmp * 33.060709635416657;
  t4247 = t398_tmp * 24.636586507161461;
  t4248 = t398_tmp * 27.020772298177079;
  t4249 = t398_tmp * 30.835469563802079;
  t4250 = t398_tmp * 108.0830891927083;
  t4251 = t748_tmp * 22.252400716145829;
  t4252 = t748_tmp * 34.968058268229157;
  t4253 = t748_tmp * 108.0830891927083;
  t4256 = t398_tmp * 18.764425207067418;
  t4257 = t748_tmp * 18.764425207067418;
  t4259 = t2 * 2.8845704632040889;
  t4260 = t2 * 3.82647102261767;
  t4261 = t3 * 3.82647102261767;
  t4262 = t3 * 7.6529420452353394;
  t4265 = t2 * 7.5410913538049771;
  t4269 = t10 * 0.90493096245659721;
  t4273 = t398_tmp * 4.4316421320408947;
  t4274 = t398_tmp * 8.86328426408179;
  t4276 = t1335_tmp * 450.346204969618;
  t4283 = t770_tmp * -13.422082971643521;
  t4284 = t770_tmp * -6.71104148582176;
  t4287 = t770_tmp * 7.5622841163917824;
  t4288 = t770_tmp * 8.8303177445023149;
  t4291 = t761_tmp * -23.912500452112269;
  t4296 = t761_tmp * 7.70533526385272;
  t4299 = t398_tmp * 4.0336891456886574;
  t4300 = t398_tmp * 8.0673782913773149;
  t4302 = t761_tmp * -21.027929988908181;
  t4303 = t2 * t3266;
  t4308 = t10 * 0.88303177445023151;
  t4309 = t11 * 0.88303177445023151;
  t4311 = t748_tmp * 10.081279424973481;
  t4314 = t1332_tmp * 29.213634538061829;
  t4315 = t1332_tmp * 116.8545381522473;
  t4318 = t3 * t3277;
  t4320 = t52_tmp * 3.692250192901235;
  t4325 = t770_tmp * 6.4143428096064818;
  t4326 = t2 * t3279;
  t4327 = t761_tmp * 6.4143428096064818;
  t4328 = t398_tmp * 5.1745661982783568;
  t4333 = t10 * 0.78323741018036264;
  t4335 = t10 * 0.41973443678867672;
  t4336 = t770_tmp * 5.9834233036747682;
  t4339 = t761_tmp * 5.6973210087528932;
  t4342 = t1169_tmp * -11.994514936282309;
  t4343 = t3 * t3289;
  t4345 = t52_tmp * 3.2966519579475309;
  t4354 = t52_tmp * 5.2334349832417049;
  t4355 = t3 * t3294;
  t4357 = t895_tmp * 20.124294139720771;
  t4358 = t1335_tmp * 20.124294139720771;
  t4366 = t2 * t3299;
  t4367 = t1108_tmp * -10.94959400318287;
  t4371 = t398_tmp * 3.09061121057581;
  t4372 = t748_tmp * 3.09061121057581;
  t4373 = t892_tmp * 57.644314236111107;
  t4374 = t892_tmp * 90.069240993923614;
  t4375 = t1332_tmp * 57.644314236111107;
  t4380 = t3055_tmp * 90.069240993923614;
  t4393 = t1335_tmp * 172.19119601779511;
  t4397 = t770_tmp * 2.7503496334876538;
  t4398 = t770_tmp * 3.6639931761188271;
  t4399 = t761_tmp * 2.7503496334876538;
  t4400 = t761_tmp * 3.6639931761188271;
  t4403 = t52_tmp * 1.0738137327594519;
  t4404 = t52_tmp * 5.071545824592496;
  t4405 = t52_tmp * 5.8021074459876543;
  t4406 = t52_tmp * 6.7080980465735918;
  t4407 = t3 * t3319;
  t4408 = t3 * t3320;
  t4409 = t3 * t3321;
  t4418 = t398_tmp * 5.880991617838542;
  t4419 = t398_tmp * 10.331471761067711;
  t4420 = t398_tmp * 15.099843343098961;
  t4423 = t748_tmp * 5.880991617838542;
  t4424 = t748_tmp * 11.76198323567708;
  t4436 = t10 * 0.31600763768325618;
  t4437 = t10 * 0.63201527536651236;
  t4442 = t398_tmp * 3.3277582239221641;
  t4447 = t2 * t3328;
  t4452 = t3 * 0.2757413887683256;
  t4462_tmp = t5 * t17;
  t4463 = t4462_tmp * 165.5684577094184;
  t4464 = t4462_tmp * 331.13691541883679;
  t4469 = t761_tmp * -10.19371880425347;
  t4474 = t52_tmp * 0.52981906467013884;
  t4475 = t52_tmp * 2.9140048556857638;
  t4476 = t52_tmp * 5.8280097113715277;
  t4477 = t398_tmp * 0.52981906467013884;
  t4478 = t398_tmp * 0.91128879123263884;
  t4479 = t398_tmp * 1.8225775824652779;
  t4481 = t748_tmp * 0.52981906467013884;
  t4482 = t748_tmp * 11.656019422743061;
  t4491 = t10 * 0.8776393937475887;
  t4492 = t11 * 0.8661953019507137;
  t4500 = t2 * t3363;
  t4501 = t892_tmp * 1.309241777584877;
  t4503 = t2 * t3366;
  t4504 = t2 * t3367;
  t4514 = t3 * 0.20003613130545911;
  t4520 = t10 * 0.1306887026186343;
  t4524 = t770_tmp * 2.354751398533951;
  t4525 = t761_tmp * 2.354751398533951;
  t4526 = t2 * t3377;
  t4528 = t52_tmp * 1.109252741307388;
  t4530 = t398_tmp * 8.4653312777295522;
  t4531 = t3 * t3378;
  t4532 = t2113_tmp * -15.847476912133491;
  t4536 = t770_tmp * 8.2416298948688276;
  t4537 = t2 * t3384;
  t4538 = t761_tmp * 8.2416298948688276;
  t4540 = t748_tmp * 1.030203736858603;
  t4549 = t10 * 0.33331506046248072;
  t4550 = t11 * 0.5839783468364198;
  t4554 = t2 * t3393;
  t4559 = t398_tmp * 3.221441198278356;
  t4560 = t398_tmp * 4.4724499737774881;
  t4561 = t398_tmp * 15.21463747377749;
  t4565 = t52_tmp * 1.7248553994261191;
  t4566 = t3 * t3398;
  t4578 = t3 * t3404;
  t4579 = t52_tmp * 5.274643132716049;
  t4580 = t770_tmp * -21.545975296585649;
  t4582 = t761_tmp * 8.3888018572772;
  t4585 = t398_tmp * 3.122400354456019;
  t4586 = t398_tmp * 6.2448007089120372;
  t4591 = t3 * 0.064873401029610339;
  t4593 = t10 * 0.15254079559702929;
  t4599 = t11 * 0.44858014142071762;
  t4600 = t11 * 0.89716028284143523;
  t4602 = t13 * 0.30552899395978012;
  t4607 = t3 * t3414;
  t4608 = t52_tmp * 1.544716917438272;
  t4620 = t2 * 0.09183530454282407;
  t4621 = t2 * 0.152729175708912;
  t4622 = t2 * 0.85477475766782407;
  t4626 = t10 * 0.44787371600115738;
  t4631 = t761_tmp * 5.76266536006221;
  t4633 = t1335_tmp * 52.981906467013893;
  t4638 = t4462_tmp * 52.981906467013893;
  t4639 = t1332_tmp * 6.2548084023558062;
  t4642 = t2 * 0.235475139853395;
  t4646 = t5 * 0.39736429850260419;
  t4655 = t10 * 0.56867246274594907;
  t4659 = t895_tmp * 135.10386149088541;
  t4660 = t895_tmp * 270.20772298177081;
  t4663 = t3055_tmp * 135.10386149088541;
  t4664 = t3055_tmp * 270.20772298177081;
  t4667 = t11 * 0.20721812307098769;
  t4676 = t52_tmp * 0.62412685818142366;
  t4678 = t52_tmp * 1.2482537163628471;
  t4681 = t52_tmp * 3.6027696397569451;
  t4685 = t398_tmp * 2.6490953233506951;
  t4686 = t398_tmp * 5.03328111436632;
  t4687 = t398_tmp * 10.278489854600689;
  t4688 = t398_tmp * 14.093187120225689;
  t4697 = t748_tmp * 2.4965074327256951;
  t4698 = t748_tmp * 5.03328111436632;
  t4699 = t748_tmp * 10.278489854600689;
  t4700 = t748_tmp * 14.093187120225689;
  t4706 = t5 * t3211;
  t4707 = t5 * t3213;
  t4710 = t10 * 0.8846801004292052;
  t4718 = t52_tmp * 7.0760279525945213;
  t4719 = t3 * t3224;
  t4723 = t52_tmp * 1.49081665792583;
  t4724 = t3 * t3227;
  t4730 = t2 * 0.2445644802517361;
  t4734 = t10 * 0.9772218303915895;
  t4740 = t52_tmp * 1.872380574544271;
  t4741 = t52_tmp * 2.781550089518229;
  t4742 = t52_tmp * 4.132588704427083;
  t4743 = t52_tmp * 5.563100179036458;
  t4744 = t52_tmp * 8.7420145670572911;
  t4749 = t398_tmp * 3.973642985026042;
  t4750 = t398_tmp * 15.89457194010417;
  t4754 = t748_tmp * 7.489522298177083;
  t4755 = t748_tmp * 11.12620035807292;
  t4756 = t748_tmp * 15.89457194010417;
  t4767 = t3 * t3251;
  t4768 = t3 * t3252;
  t4769 = t3 * t3253;
  t4775 = t892_tmp * 43.5595100308642;
  t4780 = t770_tmp * -15.98287511754919;
  t4789 = t761_tmp * -2.23748477888696;
  t4795 = t1108_tmp * -2.9434392481674378;
  t4796 = t1108_tmp * -2.5207613721305941;
  t4797 = t1169_tmp * -2.5684450879509071;
  t4807 = t770_tmp * -12.53905119719329;
  t4811 = t1332_tmp * 37.234506489318093;
  t4812 = t1108_tmp * -1.266856252411265;
  t4813 = t1169_tmp * -1.92088845335407;
  t4821 = t748_tmp * -5.2334349832417049;
  t4827 = t770_tmp * -3.5526134349681708;
  t4828 = t770_tmp * -2.8808028609664351;
  t4830 = t2 * t3581;
  t4831 = t2 * t3582;
  t4833 = t2 * t3585;
  t4834 = t1108_tmp * -5.4747970015914351;
  t4841 = t892_tmp * 7.2055392795138893;
  t4842 = t892_tmp * 8.2121955023871536;
  t4843 = t892_tmp * 9.11288791232639;
  t4844 = t892_tmp * 14.41107855902778;
  t4845 = t892_tmp * 28.822157118055561;
  t4846 = t892_tmp * 45.034620496961807;
  t4847 = t895_tmp * 5.2981906467013893;
  t4848 = t895_tmp * 14.41107855902778;
  t4849 = t895_tmp * 28.822157118055561;
  t4850 = t1332_tmp * 5.2981906467013893;
  t4851 = t1332_tmp * 8.2121955023871536;
  t4852 = t1332_tmp * 9.11288791232639;
  t4853 = t1332_tmp * 14.834933810763889;
  t4854 = t1332_tmp * 28.822157118055561;
  t4857 = t1335_tmp * 29.669867621527779;
  t4858 = t1335_tmp * 34.438239203559029;
  t4859 = t1335_tmp * 45.034620496961807;
  t4873 = t2914_tmp * 5.2981906467013893;
  t4879 = t3055_tmp * 5.2981906467013893;
  t4880 = t3055_tmp * 17.219119601779511;
  t4881 = t3055_tmp * 34.438239203559029;
  t4882 = t3055_tmp * 45.034620496961807;
  t4887 = t4462_tmp * 5.2981906467013893;
  t4889 = t770_tmp * -1.76936020085841;
  t4890 = t761_tmp * -1.76936020085841;
  t4892 = t761_tmp * 0.4709502797067901;
  t4894 = t1335_tmp * 86.095598008897568;
  t4900 = t770_tmp * -1.3751748167438269;
  t4903 = t1108_tmp * -9.1246616693190585;
  t4909 = t748_tmp * -6.7080980465735918;
  t4910 = t748_tmp * -5.071545824592496;
  t4911 = t748_tmp * -1.0738137327594519;
  t4921 = t892_tmp * 16.530354817708329;
  t4922 = t892_tmp * 27.020772298177079;
  t4923 = t892_tmp * 33.060709635416657;
  t4924 = t892_tmp * 44.504801432291657;
  t4925 = t892_tmp * 51.657358805338539;
  t4926 = t892_tmp * 54.041544596354157;
  t4927 = t892_tmp * 66.121419270833329;
  t4928 = t892_tmp * 103.31471761067711;
  t4929 = t895_tmp * 16.530354817708329;
  t4930 = t895_tmp * 17.484029134114579;
  t4931 = t895_tmp * 27.020772298177079;
  t4932 = t895_tmp * 33.060709635416657;
  t4933 = t895_tmp * 51.657358805338539;
  t4934 = t895_tmp * 103.31471761067711;
  t4935 = t1332_tmp * 33.060709635416657;
  t4936 = t1332_tmp * 44.504801432291657;
  t4937 = t1332_tmp * 54.041544596354157;
  t4938 = t1332_tmp * 66.121419270833329;
  t4939 = t1335_tmp * 22.252400716145829;
  t4940 = t1335_tmp * 27.020772298177079;
  t4941 = t1335_tmp * 34.968058268229157;
  t4942 = t1335_tmp * 39.736429850260407;
  t4943 = t1335_tmp * 79.472859700520829;
  t4968 = t3055_tmp * 27.020772298177079;
  t4969 = t3055_tmp * 51.657358805338539;
  t4970 = t3055_tmp * 103.31471761067711;
  t4981 = t4462_tmp * 39.736429850260407;
  t4982 = t4462_tmp * 79.472859700520829;
  t4983 = t1108_tmp * -3.945856918523341;
  t4998 = t761_tmp * -1.2927585177951391;
  t5012 = t5 * t3667;
  t5016 = t892_tmp * 12.43308738425926;
  t5020 = t761_tmp * -2.8845704632040889;
  t5022 = t892_tmp * 4.1443624614197532;
  t5023 = t895_tmp * 8.2887249228395063;
  t5024 = t1332_tmp * 4.1443624614197532;
  t5025 = t1332_tmp * 8.2887249228395063;
  t5026 = t1335_tmp * 8.2887249228395063;
  t5027 = t761_tmp * -7.5410913538049771;
  t5029 = t5 * 0.079472859700520829;
  t5034 = t761_tmp * -7.5705257462866511;
  t5038 = t748_tmp * -1.109252741307388;
  t5042 = t761_tmp * -1.068350709514853;
  t5050 = t761_tmp * -1.169134069372106;
  t5057 = t892_tmp * 8.703161168981481;
  t5058 = t895_tmp * 15.700304949725121;
  t5059 = t1335_tmp * 15.700304949725121;
  t5063 = t748_tmp * -1.7248553994261191;
  t5064 = t10 * 0.043562900872878077;
  t5065 = t1108_tmp * -1.9944744345582559;
  t5066 = t1169_tmp * -1.8991070029176309;
  t5074 = t892_tmp * 20.662943522135421;
  t5075 = t892_tmp * 21.616617838541671;
  t5076 = t892_tmp * 41.325887044270843;
  t5077 = t892_tmp * 86.466471354166671;
  t5078 = t895_tmp * 20.662943522135421;
  t5079 = t895_tmp * 41.325887044270843;
  t5080 = t895_tmp * 43.233235677083343;
  t5081 = t1332_tmp * 41.325887044270843;
  t5082 = t1332_tmp * 86.466471354166671;
  t5087 = t2914_tmp * 20.662943522135421;
  t5088 = t2914_tmp * 41.325887044270843;
  t5089 = t3055_tmp * 20.662943522135421;
  t5090 = t3055_tmp * 41.325887044270843;
  t5093 = t895_tmp * 21.22808385778356;
  t5094 = t1335_tmp * 21.22808385778356;
  t5099 = t770_tmp * -10.831856433256171;
  t5100 = t1169_tmp * -7.8001140076437112;
  t5108 = t4462_tmp * 16.556845770941841;
  t5109 = t4462_tmp * 33.113691541883682;
  t5114 = t2 * t3784;
  t5115 = t1108_tmp * -4.8272403669945989;
  t5116 = t3 * 0.0088303177445023147;
  t5117 = t11 * 0.01860253604841821;
  t5120 = t892_tmp * 6.6227383083767357;
  t5121 = t892_tmp * 9.00692409939236;
  t5122 = t892_tmp * 13.24547661675347;
  t5123 = t892_tmp * 18.013848198784721;
  t5124 = t895_tmp * 18.013848198784721;
  t5125 = t895_tmp * 36.027696397569443;
  t5126 = t1332_tmp * 13.775295681423611;
  t5127 = t1332_tmp * 18.013848198784721;
  t5129 = t1335_tmp * 6.6227383083767357;
  t5130 = t1335_tmp * 9.00692409939236;
  t5131 = t1335_tmp * 13.24547661675347;
  t5132 = t1335_tmp * 18.013848198784721;
  t5133 = t1335_tmp * 23.312038845486111;
  t5134 = t1335_tmp * 26.490953233506939;
  t5135 = t1335_tmp * 27.550591362847221;
  t5136 = t1335_tmp * 36.027696397569443;
  t5148 = t2914_tmp * 9.00692409939236;
  t5149 = t2914_tmp * 18.013848198784721;
  t5150 = t2914_tmp * 36.027696397569443;
  t5153 = t3055_tmp * 9.00692409939236;
  t5154 = t3055_tmp * 18.013848198784721;
  t5155 = t3055_tmp * 36.027696397569443;
  t5164 = t4462_tmp * 6.6227383083767357;
  t5165 = t4462_tmp * 13.24547661675347;
  t5166 = t4462_tmp * 26.490953233506939;
  t5169 = t2 * 0.029434392481674381;
  t5172 = t10 * 0.055807608145254629;
  t5186 = t770_tmp * -6.4637925889756946;
  t5187 = t761_tmp * -6.4637925889756946;
  t5189 = t761_tmp * -0.51922268337673616;
  t5206 = t2383_tmp * -1.3245476616753471;
  t5207 = t2383_tmp * -0.66227383083767366;
  t5212 = t748_tmp * -7.0760279525945213;
  t5216 = t748_tmp * -1.49081665792583;
  t5217 = t770_tmp * -2.3008275915075229;
  t5221 = t2 * 0.052981906467013888;
  t5240 = t895_tmp * 10.16369572392216;
  t5241 = t1335_tmp * 10.16369572392216;
  t5244 = t1169_tmp * -8.756731763298129;
  t5245 = t1169_tmp * -3.6792990602092979;
  t5246 = t1169_tmp * -2.796267285759066;
  t5252 = t892_tmp * 2.6373215663580249;
  t5253 = t895_tmp * 5.274643132716049;
  t5254 = t1332_tmp * 2.6373215663580249;
  t5255 = t1332_tmp * 5.274643132716049;
  t5256 = t1335_tmp * 5.274643132716049;
  t5258 = t892_tmp * 3.122400354456019;
  t5259 = t892_tmp * 7.9119646990740744;
  t5261 = t892_tmp * 1.544716917438272;
  t5262 = t895_tmp * 1.544716917438272;
  t5265 = t1108_tmp * -0.89716028284143523;
  t5278 = t2113_tmp * -16.424391004774311;
  t5279 = t2113_tmp * -8.2121955023871536;
  t5287 = t892_tmp * 1.3245476616753471;
  t5288 = t892_tmp * 1.8013848198784721;
  t5289 = t892_tmp * 2.6490953233506951;
  t5290 = t892_tmp * 5.03328111436632;
  t5291 = t892_tmp * 10.278489854600689;
  t5292 = t892_tmp * 14.093187120225689;
  t5296 = t895_tmp * 2.6490953233506951;
  t5297 = t895_tmp * 3.6027696397569451;
  t5302 = t1332_tmp * 0.66227383083767366;
  t5303 = t1332_tmp * 1.3245476616753471;
  t5304 = t1332_tmp * 2.6490953233506951;
  t5305 = t1332_tmp * 5.03328111436632;
  t5306 = t1332_tmp * 10.278489854600689;
  t5307 = t1332_tmp * 14.093187120225689;
  t5312 = t1335_tmp * 1.3245476616753471;
  t5313 = t1335_tmp * 2.6490953233506951;
  t5331 = t2914_tmp * 0.66227383083767366;
  t5332 = t2914_tmp * 1.3245476616753471;
  t5333 = t2914_tmp * 1.8013848198784721;
  t5334 = t2914_tmp * 2.6490953233506951;
  t5335 = t2914_tmp * 3.6027696397569451;
  t5346 = t3055_tmp * 1.3245476616753471;
  t5347 = t3055_tmp * 2.6490953233506951;
  t5348 = t3055_tmp * 3.6027696397569451;
  t5356 = t4462_tmp * 0.66227383083767366;
  t5357 = t4462_tmp * 2.6490953233506951;
  t5361 = t761_tmp * -0.235475139853395;
  t5362 = t2 * t4021;
  t5363 = t1332_tmp * 7.0760279525945213;
  t5364 = t1335_tmp * 7.0760279525945213;
  t5368 = t1332_tmp * 1.49081665792583;
  t5369 = t1335_tmp * 3.387898574640722;
  t5378 = t892_tmp * 1.986821492513021;
  t5379 = t892_tmp * 2.066294352213542;
  t5380 = t892_tmp * 3.973642985026042;
  t5381 = t892_tmp * 8.2651774088541661;
  t5386 = t895_tmp * 3.973642985026042;
  t5387 = t895_tmp * 4.132588704427083;
  t5388 = t895_tmp * 6.7551930745442714;
  t5389 = t895_tmp * 7.947285970052083;
  t5390 = t895_tmp * 8.7420145670572911;
  t5391 = t895_tmp * 13.510386149088539;
  t5396 = t1332_tmp * 1.986821492513021;
  t5397 = t1332_tmp * 3.973642985026042;
  t5398 = t1332_tmp * 7.947285970052083;
  t5399 = t1332_tmp * 15.89457194010417;
  t5403 = t1335_tmp * 2.781550089518229;
  t5404 = t1335_tmp * 3.973642985026042;
  t5405 = t1335_tmp * 5.563100179036458;
  t5406 = t1335_tmp * 6.7551930745442714;
  t5407 = t1335_tmp * 7.947285970052083;
  t5408 = t1335_tmp * 8.7420145670572911;
  t5409 = t1335_tmp * 11.12620035807292;
  t5441 = t2914_tmp * 2.066294352213542;
  t5442 = t2914_tmp * 4.132588704427083;
  t5455 = t3055_tmp * 3.973642985026042;
  t5456 = t3055_tmp * 4.132588704427083;
  t5457 = t3055_tmp * 7.947285970052083;
  t5475 = t4462_tmp * 7.947285970052083;
  t5476 = t892_tmp * 4.4316421320408947;
  t5477 = t761_tmp * -0.2445644802517361;
  t5480 = t2383_tmp * -0.13245476616753471;
  t5482 = t2113_tmp * -16.24778464988426;
  t5483 = t2113_tmp * -6.71104148582176;
  t5486 = t892_tmp * 4.0336891456886574;
  t5487 = t1332_tmp * 10.081279424973481;
  t5490 = t892_tmp * 1.8461250964506171;
  t5492 = t895_tmp * 3.692250192901235;
  t5495 = t1332_tmp * 1.8461250964506171;
  t5496 = t1332_tmp * 3.692250192901235;
  t5498 = t1335_tmp * 3.692250192901235;
  t5501 = t895_tmp * 5.1745661982783568;
  t5502 = t1335_tmp * 5.1745661982783568;
  t5507 = t892_tmp * 1.648325978973765;
  t5508 = t892_tmp * 3.2966519579475309;
  t5509 = t895_tmp * 3.2966519579475309;
  t5511 = t1332_tmp * 5.2334349832417049;
  t5512 = t1335_tmp * 5.2334349832417049;
  t5524 = t892_tmp * 2.9010537229938271;
  t5525 = t895_tmp * 5.8021074459876543;
  t5526 = t1332_tmp * 1.0738137327594519;
  t5527 = t1332_tmp * 2.9010537229938271;
  t5528 = t1332_tmp * 5.071545824592496;
  t5529 = t1332_tmp * 5.8021074459876543;
  t5530 = t1332_tmp * 6.7080980465735918;
  t5531 = t1335_tmp * 5.071545824592496;
  t5532 = t1335_tmp * 5.8021074459876543;
  t5533 = t1335_tmp * 6.7080980465735918;
  t5538 = t892_tmp * 5.880991617838542;
  t5539 = t892_tmp * 10.331471761067711;
  t5542 = t895_tmp * 10.331471761067711;
  t5545 = t1332_tmp * 5.880991617838542;
  t5552 = t2914_tmp * 10.331471761067711;
  t5555 = t3055_tmp * 10.331471761067711;
  t5579 = t892_tmp * 0.26490953233506942;
  t5580 = t892_tmp * 0.52981906467013884;
  t5581 = t892_tmp * 0.91128879123263884;
  t5584 = t895_tmp * 0.52981906467013884;
  t5587 = t1332_tmp * 0.52981906467013884;
  t5596 = t1335_tmp * 0.26490953233506942;
  t5597 = t1335_tmp * 2.25173102484809;
  t5598 = t1335_tmp * 2.9140048556857638;
  t5599 = t1335_tmp * 3.4438239203559031;
  t5600 = t1335_tmp * 4.50346204969618;
  t5601 = t1335_tmp * 5.8280097113715277;
  t5602 = t1335_tmp * 11.656019422743061;
  t5622 = t2914_tmp * 0.26490953233506942;
  t5623 = t2914_tmp * 0.52981906467013884;
  t5630 = t3055_tmp * 0.26490953233506942;
  t5631 = t3055_tmp * 0.52981906467013884;
  t5632 = t3055_tmp * 3.4438239203559031;
  t5643 = t4462_tmp * 3.3113691541883679;
  t5652 = t892_tmp * 5.5383752893518521;
  t5655 = t892_tmp * 8.4653312777295522;
  t5656 = t1332_tmp * 1.109252741307388;
  t5658 = t1332_tmp * 1.030203736858603;
  t5663 = t895_tmp * 15.21463747377749;
  t5665 = t1335_tmp * 15.21463747377749;
  t5670 = t1332_tmp * 1.7248553994261191;
  t5671 = t1335_tmp * 1.7248553994261191;
  t5682 = t892_tmp * 0.87596752025462965;
  t5683 = t2113_tmp * -10.831856433256171;
  t5684 = t892_tmp * 0.77235845871913578;
  t5687 = t2461_tmp * -2.413620183497299;
  t5688 = t2113_tmp * -7.2408605504918979;
  t5694 = t2113_tmp * -3.2318962944878469;
  t5737 = t761_tmp * -0.029434392481674381;
  t5810 = t2113_tmp * -3.2071714048032409;
  t5815 = t2461_tmp * -0.63342812620563271;
  t5821 = t2113_tmp * -1.9002843786168979;
  t5824 = t2461_tmp * -5.4747970015914351;
  t5825 = t2461_tmp * -2.737398500795718;
  t5827 = t2113_tmp * -1.831996588059414;
  t5828 = t2113_tmp * -1.3751748167438269;
  t5853 = t2113_tmp * -1.3457404242621529;
  t5874 = t2914_tmp * 0.13245476616753471;
  t5887 = t2113_tmp * -1.1773756992669751;
  t5889 = t2113_tmp * -4.1208149474344138;
  t5900 = t2461_tmp * -0.44858014142071762;
  t5901 = t2113_tmp * -0.8846801004292052;
  t302 = t4 * 65.104166666666671;
  t323 = t12 * 65.104166666666671;
  t412_tmp = t149 * zeta_1_inv;
  t560 = t4 * 43.402777777777779;
  t563 = t4 * 32.552083333333329;
  t571 = t4 * 10.850694444444439;
  t572 = t4 * 8.1380208333333321;
  t612 = t12 * 43.402777777777779;
  t615 = t12 * 32.552083333333329;
  t625 = t12 * 14.46759259259259;
  t635 = t12 * 27.006172839506171;
  t637 = t12 * 17.08984375;
  t647 = t12 * 71.614583333333329;
  t736 = eta * t309;
  t744_tmp = t289 * zeta_1_inv;
  t753 = t294 * zeta_1_inv;
  t758 = eta * t311;
  t765 = eta * t317;
  t768 = eta * t318;
  t787 = t297 * zeta_1_inv;
  t791 = t298 * zeta_1_inv;
  t792_tmp = t4 * zeta_1_inv;
  t792 = t792_tmp * 173.61111111111109;
  t798 = t792_tmp * 86.805555555555557;
  t803 = eta * t325;
  t896 = t14 * t76;
  t933 = t4 * 5.4253472222222223;
  t937 = t4 * 1.356336805555556;
  t1003 = t12 * 6.103515625;
  t1008 = t12 * 3.6168981481481479;
  t1009 = t12 * 2.7126736111111112;
  t1020 = t12 * 6.7515432098765427;
  t1044 = t12 * 162.76041666666671;
  t1049 = t12 * 48.22530864197531;
  t1056 = t12 * 50.636574074074069;
  t1061 = t12 * 153.80859375;
  t1150 = eta * t591;
  t1159 = eta * t597;
  t1186 = t12 * t224;
  t1202 = eta * t626;
  t1208 = t4 * t269;
  t1231 = t4 * t271;
  t1233 = t562 * zeta_1_inv;
  t1235 = t566 * zeta_1_inv;
  t1236 = t567 * zeta_1_inv;
  t1237 = t792_tmp * 21.701388888888889;
  t1241 = t4 * t273;
  t1244 = t4 * t274;
  t1250 = eta * t638;
  t1252 = eta * t641;
  t1254 = eta * t643;
  t1276 = t792_tmp * 325.52083333333331;
  t1328 = t14 * t146;
  t1337_tmp = t3 * t16;
  t1337 = t1337_tmp * 156.25;
  t1343 = t1337_tmp * 520.83333333333326;
  t1344_tmp = t4 * t15;
  t1344 = t1344_tmp * 520.83333333333326;
  t1345_tmp = t4 * t16;
  t1345 = t1345_tmp * 520.83333333333326;
  t1346_tmp = t4 * t17;
  t1346 = t1346_tmp * 520.83333333333326;
  t1400 = t4 * 0.019073486328125;
  t1404 = t4 * 0.095367431640625;
  t1430 = t12 * 18.310546875;
  t1447 = t12 * 30.517578125;
  t1451 = t12 * 12.056327160493829;
  t1453 = t12 * 9.04224537037037;
  t1467 = t12 * 12.659143518518521;
  t1476 = t12 * 54.931640625;
  t1480 = t12 * 49.641927083333329;
  t1485 = t12 * 5.8774594907407414;
  t1556_tmp = eta * t12;
  t1556 = t1556_tmp * -32.552083333333329;
  t1557_tmp = t4 * zeta;
  t1557 = t1557_tmp * -32.552083333333329;
  t1579 = t792_tmp * -43.402777777777779;
  t1591 = eta * t1006;
  t1593 = t792_tmp * -10.850694444444439;
  t1603 = t4 * t504;
  t1611 = t792_tmp * 2.7126736111111112;
  t1620 = t4 * t513;
  t1657 = t953 * zeta;
  t1665 = t792_tmp * 162.76041666666671;
  t1667 = t792_tmp * 81.380208333333329;
  t1669 = t792_tmp * 40.690104166666671;
  t1686 = eta * t1062;
  t1687 = t967 * zeta_1_inv;
  t1742 = t15 * t289;
  t1746 = t1337_tmp * 78.125;
  t1747 = t14 * t290;
  t1753 = t1337_tmp * 39.0625;
  t1755 = t15 * t292;
  t1762 = t14 * t296;
  t1763 = t15 * t296;
  t1773 = t2 * t315;
  t1775 = t10 * t301;
  t1776 = t11 * t301;
  t1784 = t1337_tmp * 347.22222222222217;
  t1785 = t1344_tmp * 347.22222222222217;
  t1786 = t1345_tmp * 390.625;
  t1789 = t1345_tmp * 347.22222222222217;
  t1792 = t1346_tmp * 347.22222222222217;
  t1795 = t1345_tmp * 260.41666666666669;
  t1797_tmp = t4 * t14;
  t1799 = t14 * t298;
  t1800 = t1337_tmp * 195.3125;
  t1801 = t1344_tmp * 195.3125;
  t1802 = t15 * t298;
  t1803 = t1797_tmp * 173.61111111111109;
  t1804 = t1345_tmp * 195.3125;
  t1805 = t1344_tmp * 173.61111111111109;
  t1810 = t1797_tmp * 130.20833333333329;
  t1811 = t1337_tmp * 130.20833333333329;
  t1812 = t1344_tmp * 130.20833333333329;
  t1813 = t1345_tmp * 130.20833333333329;
  t1814 = t1346_tmp * 130.20833333333329;
  t1818 = t1337_tmp * 97.65625;
  t1820 = t14 * t299;
  t1821 = t1345_tmp * 97.65625;
  t1822 = t14 * t300;
  t1823 = t15 * t300;
  t1824 = t1797_tmp * 86.805555555555557;
  t1825 = t16 * t300;
  t1826 = t1344_tmp * 86.805555555555557;
  t1827 = t1345_tmp * 86.805555555555557;
  t1828 = t1346_tmp * 86.805555555555557;
  t1829 = t14 * t301;
  t1834 = t1337_tmp * 65.104166666666671;
  t1861 = t4 * 0.95367431640625;
  t1870 = t4 * 0.476837158203125;
  t1880 = t4 * 0.0095367431640625;
  t1882 = t4 * 0.0286102294921875;
  t1883 = t4 * 0.0476837158203125;
  t1888 = t4 * 1.430511474609375;
  t1935 = t12 * 90.4224537037037;
  t1937 = t12 * 22.605613425925931;
  t1945 = t12 * 274.658203125;
  t1981 = t792_tmp * -5.4253472222222223;
  t1989 = t792_tmp * -1.356336805555556;
  t1998 = eta * t1429;
  t2019 = eta * t1446;
  t2025 = t1372 * zeta;
  t2044 = eta * t1460;
  t2052 = t1388 * zeta;
  t2054 = t1391 * zeta;
  t2070 = t1396 * zeta_1_inv;
  t2079 = eta * t1483;
  t2115 = t2 * t585;
  t2116 = t10 * t541;
  t2145 = t14 * t540;
  t2160 = t14 * t551;
  t2166 = t10 * t558;
  t2168 = t10 * t561;
  t2169 = t10 * t564;
  t2172 = t10 * t568;
  t2173 = t11 * t568;
  t2177 = t2 * t631;
  t2204 = t1337_tmp * -86.805555555555557;
  t2213 = t1344_tmp * -65.104166666666671;
  t2214 = t1345_tmp * -65.104166666666671;
  t2215 = t15 * t558;
  t2216 = t14 * t559;
  t2217 = t15 * t559;
  t2220 = t14 * t561;
  t2225 = t16 * t562;
  t2228 = t14 * t566;
  t2230 = t14 * t567;
  t2231 = t15 * t567;
  t2232 = t1797_tmp * 21.701388888888889;
  t2234 = t1344_tmp * 21.701388888888889;
  t2235 = t1345_tmp * 21.701388888888889;
  t2236 = t1346_tmp * 21.701388888888889;
  t2239 = t1797_tmp * 16.276041666666671;
  t2240 = t1337_tmp * 16.276041666666671;
  t2241 = t1344_tmp * 16.276041666666671;
  t2242 = t1345_tmp * 16.276041666666671;
  t2246 = t15 * t570;
  t2255 = t2 * t642;
  t2261 = t14 * t578;
  t2262 = t15 * t578;
  t2263 = t16 * t578;
  t2272 = t1797_tmp * 325.52083333333331;
  t2273 = t1344_tmp * 325.52083333333331;
  t2292 = t4 * 0.1430511474609375;
  t2295 = t4 * 0.2384185791015625;
  t2304 = t4 * 2.384185791015625;
  t2306 = t4 * 0.15894571940104171;
  t2311 = t4 * 1.843770345052083;
  t2313 = t4 * 7.152557373046875;
  t2314 = t4 * 23.84185791015625;
  t2315 = t4 * 11.92092895507812;
  t2380 = t1557_tmp * -0.095367431640625;
  t2408 = eta * t1932;
  t2413 = eta * t1936;
  t2421 = t1889 * zeta_1_inv;
  t2422 = t1890 * zeta_1_inv;
  t2424 = eta * t1942;
  t2466 = t1797_tmp * -43.402777777777779;
  t2467 = t1344_tmp * -43.402777777777779;
  t2469 = t2 * t1002;
  t2476 = t1344_tmp * -32.552083333333329;
  t2482 = t2 * t1005;
  t2507 = t2 * t1010;
  t2511 = t1797_tmp * 2.7126736111111112;
  t2512 = t1344_tmp * 2.7126736111111112;
  t2543 = t1797_tmp * 244.140625;
  t2546 = t1797_tmp * 162.76041666666671;
  t2548 = t1797_tmp * 81.380208333333329;
  t2549 = t1344_tmp * 81.380208333333329;
  t2551 = t1797_tmp * 40.690104166666671;
  t2552 = t14 * t957;
  t2553 = t15 * t957;
  t2554 = t14 * t958;
  t2555 = t15 * t958;
  t2556 = t16 * t958;
  t2559 = t15 * t960;
  t2566 = t1337_tmp * 395.5078125;
  t2582 = t4 * 1.2291802300347221;
  t2584 = t4 * 0.79472859700520826;
  t2604 = t1557_tmp * -0.0476837158203125;
  t2609 = t4 * t1714;
  t2652 = t4 * t1725;
  t2656 = t4 * t1727;
  t2670 = t1797_tmp * -5.4253472222222223;
  t2677 = t1797_tmp * -1.356336805555556;
  t2680 = t10 * t1364;
  t2682 = t14 * t1365;
  t2690 = t2 * t1446;
  t2715 = t14 * t1384;
  t2716 = t15 * t1384;
  t2724 = t10 * t1388;
  t2726 = t2 * t1469;
  t2729 = t10 * t1395;
  t2730 = t11 * t1395;
  t2732 = t14 * t1396;
  t2733 = t14 * t1405;
  t2734 = t2 * t1483;
  t2753 = t792_tmp * -0.2384185791015625;
  t2757 = t1557_tmp * -4.76837158203125;
  t2759 = t1557_tmp * -2.384185791015625;
  t2769 = t4 * t2110;
  t2784 = t792_tmp * 61.98883056640625;
  t2786 = t792_tmp * 30.994415283203121;
  t2787 = t792_tmp * 119.20928955078119;
  t2788 = t792_tmp * 59.604644775390618;
  t2848 = t2 * t1931;
  t2849 = t2 * t1934;
  t2857 = t2 * t1938;
  t2861 = t10 * t1889;
  t2862 = t14 * t1890;
  t2865 = t2 * t1941;
  t2866 = t2 * t1943;
  t2874 = t1797_tmp * 49.591064453125;
  t2875 = t1344_tmp * 49.591064453125;
  t2877 = t1337_tmp * 95.367431640625;
  t2878 = t1345_tmp * 95.367431640625;
  t2882 = t1557_tmp * -1.1920928955078121;
  t2935 = t1344_tmp * 6.357828776041667;
  t2940 = t1797_tmp * 4.2385525173611107;
  t2941 = t1344_tmp * 4.2385525173611107;
  t2948 = t1797_tmp * 2.1192762586805558;
  t2949 = t1344_tmp * 2.1192762586805558;
  t2962 = t1797_tmp * 24.7955322265625;
  t2970 = t1344_tmp * 47.6837158203125;
  t2999 = t1797_tmp * 1.0596381293402779;
  t3023 = t1797_tmp * -11.92092895507812;
  t3028 = t1797_tmp * 5.9604644775390616;
  t3031 = t1337_tmp * 16.689300537109379;
  t3032 = t1344_tmp * 16.689300537109379;
  t3033 = t1345_tmp * 16.689300537109379;
  t3035 = t1337_tmp * 26.226043701171879;
  t3037 = t1345_tmp * 26.226043701171879;
  t3039 = t1797_tmp * 30.994415283203121;
  t3043 = t1797_tmp * 71.52557373046875;
  t3044 = t1344_tmp * 71.52557373046875;
  t3047 = t1797_tmp * 35.762786865234382;
  t3049 = t1344_tmp * 119.20928955078119;
  t3050 = t1345_tmp * 59.604644775390618;
  t3056_tmp = t5 * t16;
  t3067 = t1797_tmp * 8.3446502685546875;
  t3068 = t1337_tmp * 8.3446502685546875;
  t3069 = t1344_tmp * 8.3446502685546875;
  t3070 = t1345_tmp * 8.3446502685546875;
  t3088 = t1337_tmp * 20.265579223632809;
  t3092 = t1337_tmp * 25.033950805664059;
  t3093 = t1344_tmp * 25.033950805664059;
  t3094 = t1345_tmp * 25.033950805664059;
  t3098 = t1344_tmp * 29.802322387695309;
  t3099 = t1345_tmp * 29.802322387695309;
  t3102 = t1345_tmp * 89.406967163085938;
  t3281 = eta * t3189;
  t3330 = t12 * 43.704185956790127;
  t3365 = t12 * 4.4740276572145063;
  t3557 = t4 * 5.2981906467013893;
  t3558 = t4 * 10.59638129340278;
  t3631 = t12 * 111.8977864583333;
  t3760 = t12 * 19.591531635802468;
  t3802 = t12 * 1.9338395860460069;
  t3803 = t12 * 3.3113691541883679;
  t3818 = t3625 * zeta;
  t3819 = t3627 * zeta;
  t3837 = t12 * 1.527644969798901;
  t3864 = t12 * 3.6439777892312888;
  t3908 = t12 * 0.8650179262514468;
  t3909 = t12 * 8.3888018572772;
  t3912 = eta * t3759;
  t3925 = t792_tmp * 20.662943522135421;
  t3926 = t792_tmp * 41.325887044270843;
  t3935 = t12 * 1.983407102985147;
  t3936 = t12 * 15.600228015287421;
  t3957 = t4 * 0.61459011501736116;
  t3958 = t4 * 2.6490953233506951;
  t3975 = t792_tmp * 6.6227383083767357;
  t3976 = t792_tmp * 9.00692409939236;
  t3977 = t792_tmp * 18.013848198784721;
  t3978 = t792_tmp * 36.027696397569443;
  t3987 = t12 * 7.2061279673635221;
  t4014 = t4 * 1.986821492513021;
  t4015 = t4 * 3.973642985026042;
  t4016 = t4 * 7.947285970052083;
  t4017 = t4 * 15.89457194010417;
  t4025 = t12 * 5.533665786554784;
  t4030 = t12 * 1.236244484230324;
  t4078 = t12 * 3.25532607090326;
  t4092 = t12 * 1.363401059751157;
  t4102 = eta * t3530;
  t4103 = eta * t3531;
  t4125 = t12 * 4.2208918818721068;
  t4151 = t12 * 0.81709873529128085;
  t4198 = t3555 * zeta_1_inv;
  t4242 = t12 * 0.666394645785108;
  t4244 = t12 * 11.597150637779709;
  t4254 = t792_tmp * 27.020772298177079;
  t4255 = t792_tmp * 54.041544596354157;
  t4277 = t1344_tmp * 225.173102484809;
  t4278 = t1344_tmp * 450.346204969618;
  t4289 = eta * t4089;
  t4316 = eta * t4117;
  t4317 = eta * t4118;
  t4324 = eta * t4124;
  t4337 = eta * t4147;
  t4359 = t1337_tmp * 20.124294139720771;
  t4361 = eta * t4165;
  t4363 = eta * t4169;
  t4364 = eta * t4170;
  t4377 = t1797_tmp * 90.069240993923614;
  t4379 = t1345_tmp * 42.385525173611107;
  t4381 = t1346_tmp * 42.385525173611107;
  t4394 = t1344_tmp * 172.19119601779511;
  t4396 = eta * t4211;
  t4401 = eta * t4212;
  t4427 = t792_tmp * 10.331471761067711;
  t4443 = eta * t4239;
  t4449 = eta * t4241;
  t4459 = t1346_tmp * 82.7842288547092;
  t4460 = t1346_tmp * 165.5684577094184;
  t4461 = t1346_tmp * 331.13691541883679;
  t4465_tmp = t5 * std::pow(t14, 3.0);
  t4466 = t4465_tmp * 165.5684577094184;
  t4484 = t4 * t3346;
  t4485 = t792_tmp * 3.3113691541883679;
  t4486 = t4 * t3347;
  t4502 = eta * t3834;
  t4505 = eta * t3836;
  t4527 = eta * t3860;
  t4551 = t12 * 0.145994586709105;
  t4577 = eta * t3904;
  t4601 = t12 * 0.35321270978009262;
  t4611 = t1345_tmp * 66.227383083767364;
  t4634 = t1337_tmp * 52.981906467013893;
  t4635 = t1344_tmp * 52.981906467013893;
  t4636 = t1346_tmp * 52.981906467013893;
  t4637 = t3056_tmp * 52.981906467013893;
  t4645 = t4 * 0.39736429850260419;
  t4661 = t1337_tmp * 135.10386149088541;
  t4662 = t1337_tmp * 270.20772298177081;
  t4665 = t3056_tmp * 135.10386149088541;
  t4666 = t3056_tmp * 270.20772298177081;
  t4674 = eta * t4002;
  t4701 = t4 * t3210;
  t4703 = t4 * t3212;
  t4725 = eta * t4028;
  t4759 = t4 * t3242;
  t4760 = t4 * t3243;
  t4762 = t4 * t3244;
  t4764 = t4 * t3245;
  t4788 = t2 * t3529;
  t4817 = t1345_tmp * 49.670537312825523;
  t4818 = t1345_tmp * 99.341074625651046;
  t4861 = t1797_tmp * 7.2055392795138893;
  t4862 = t1797_tmp * 14.41107855902778;
  t4863 = t1797_tmp * 28.822157118055561;
  t4864 = t1797_tmp * 45.034620496961807;
  t4866 = t1337_tmp * 5.2981906467013893;
  t4868 = t16 * t3556;
  t4869 = t1344_tmp * 14.41107855902778;
  t4870 = t1344_tmp * 17.219119601779511;
  t4871 = t1344_tmp * 28.822157118055561;
  t4872 = t1344_tmp * 45.034620496961807;
  t4877 = t1345_tmp * 21.192762586805561;
  t4885 = t1346_tmp * 21.192762586805561;
  t4886 = t3056_tmp * 5.2981906467013893;
  t4896 = t1344_tmp * 86.095598008897568;
  t4912 = t4 * t3619;
  t4944 = t1797_tmp * 16.530354817708329;
  t4945 = t1797_tmp * 27.020772298177079;
  t4946 = t1797_tmp * 33.060709635416657;
  t4947 = t1797_tmp * 51.657358805338539;
  t4948 = t1797_tmp * 103.31471761067711;
  t4949 = t1337_tmp * 17.484029134114579;
  t4950 = t1337_tmp * 27.020772298177079;
  t4951 = t16 * t3606;
  t4952 = t1337_tmp * 39.736429850260407;
  t4953 = t1337_tmp * 51.657358805338539;
  t4954 = t16 * t3607;
  t4955 = t1337_tmp * 79.472859700520829;
  t4956 = t1337_tmp * 103.31471761067711;
  t4957 = t1344_tmp * 16.530354817708329;
  t4958 = t1344_tmp * 17.484029134114579;
  t4959 = t1344_tmp * 19.868214925130211;
  t4960 = t1344_tmp * 33.060709635416657;
  t4961 = t1344_tmp * 39.736429850260407;
  t4962 = t1344_tmp * 79.472859700520829;
  t4963 = t1345_tmp * 17.484029134114579;
  t4964 = t1345_tmp * 19.868214925130211;
  t4965 = t1345_tmp * 31.789143880208329;
  t4966 = t1345_tmp * 39.736429850260407;
  t4967 = t1345_tmp * 63.578287760416657;
  t4971 = t1346_tmp * 31.789143880208329;
  t4972 = t1346_tmp * 39.736429850260407;
  t4973 = t1346_tmp * 63.578287760416657;
  t4974 = t1346_tmp * 79.472859700520829;
  t4975 = t3056_tmp * 19.868214925130211;
  t4976 = t3056_tmp * 27.020772298177079;
  t4977 = t3056_tmp * 39.736429850260407;
  t4978 = t3056_tmp * 51.657358805338539;
  t4979 = t3056_tmp * 79.472859700520829;
  t4980 = t3056_tmp * 103.31471761067711;
  t5009 = t792_tmp * -5.8280097113715277;
  t5011 = t792_tmp * -2.9140048556857638;
  t5013 = t10 * t3625;
  t5014 = t2 * t3669;
  t5028 = t4 * 0.079472859700520829;
  t5060 = t1337_tmp * 15.700304949725121;
  t5068 = t2 * t3758;
  t5083 = t1797_tmp * 20.662943522135421;
  t5084 = t1797_tmp * 21.616617838541671;
  t5085 = t1797_tmp * 43.233235677083343;
  t5086 = t1344_tmp * 43.233235677083343;
  t5095 = t1337_tmp * 21.22808385778356;
  t5103 = t1345_tmp * 16.556845770941841;
  t5104 = t1345_tmp * 33.113691541883682;
  t5105 = t1346_tmp * 16.556845770941841;
  t5106 = t1346_tmp * 33.113691541883682;
  t5110 = t4465_tmp * 16.556845770941841;
  t5111 = t4465_tmp * 33.113691541883682;
  t5113 = eta * t4437;
  t5137 = t1797_tmp * 6.6227383083767357;
  t5138 = t1797_tmp * 9.00692409939236;
  t5139 = t1797_tmp * 13.24547661675347;
  t5140 = t1797_tmp * 18.013848198784721;
  t5142 = t1337_tmp * 13.24547661675347;
  t5143 = t1337_tmp * 26.490953233506939;
  t5145 = t1344_tmp * 6.6227383083767357;
  t5146 = t1344_tmp * 13.24547661675347;
  t5147 = t1344_tmp * 26.490953233506939;
  t5151 = t1345_tmp * 6.6227383083767357;
  t5152 = t1345_tmp * 13.24547661675347;
  t5157 = t1346_tmp * 13.24547661675347;
  t5158 = t1346_tmp * 26.490953233506939;
  t5160 = t3056_tmp * 6.6227383083767357;
  t5161 = t3056_tmp * 13.24547661675347;
  t5162 = t3056_tmp * 26.490953233506939;
  t5182 = t12 * 0.051804530767746923;
  t5203 = t792_tmp * -1.2482537163628471;
  t5205 = t792_tmp * -0.62412685818142366;
  t5232 = t792_tmp * -8.7420145670572911;
  t5233 = t792_tmp * -7.947285970052083;
  t5234 = t792_tmp * -5.563100179036458;
  t5235 = t792_tmp * -3.973642985026042;
  t5236 = t792_tmp * -2.781550089518229;
  t5237 = t792_tmp * -1.872380574544271;
  t5239 = t2 * t3503;
  t5242 = t1337_tmp * 10.16369572392216;
  t5260 = t2 * t3933;
  t5280 = t2 * t3997;
  t5283 = t2 * t4001;
  t5315 = t1797_tmp * 0.62412685818142366;
  t5316 = t1797_tmp * 0.66227383083767366;
  t5317 = t1797_tmp * 1.2482537163628471;
  t5318 = t1797_tmp * 1.3245476616753471;
  t5320 = t1337_tmp * -21.192762586805561;
  t5323 = t1337_tmp * 2.6490953233506951;
  t5328 = t1344_tmp * 1.3245476616753471;
  t5337 = t1345_tmp * -10.59638129340278;
  t5338 = t1345_tmp * -5.2981906467013893;
  t5339 = t1345_tmp * 0.66227383083767366;
  t5340 = t1345_tmp * 1.3245476616753471;
  t5352 = t3056_tmp * 0.66227383083767366;
  t5353 = t3056_tmp * 1.3245476616753471;
  t5354 = t3056_tmp * 2.6490953233506951;
  t5370 = t2 * t4049;
  t5414 = t1797_tmp * 1.872380574544271;
  t5416 = t1797_tmp * 2.781550089518229;
  t5418 = t1797_tmp * 5.563100179036458;
  t5419 = t1797_tmp * 8.2651774088541661;
  t5420 = t1797_tmp * 8.7420145670572911;
  t5427 = t1337_tmp * 3.973642985026042;
  t5428 = t1337_tmp * 6.7551930745442714;
  t5429 = t1337_tmp * 7.947285970052083;
  t5430 = t1337_tmp * 8.7420145670572911;
  t5431 = t1337_tmp * 13.510386149088539;
  t5433 = t1344_tmp * 2.781550089518229;
  t5435 = t1344_tmp * 5.563100179036458;
  t5436 = t1344_tmp * 6.7551930745442714;
  t5438 = t1344_tmp * 8.7420145670572911;
  t5439 = t1344_tmp * 9.9341074625651036;
  t5440 = t1344_tmp * 13.510386149088539;
  t5446 = t1345_tmp * 6.7551930745442714;
  t5448 = t1345_tmp * 8.7420145670572911;
  t5449 = t1345_tmp * 9.9341074625651036;
  t5450 = t1345_tmp * 13.510386149088539;
  t5469 = t3056_tmp * 1.986821492513021;
  t5470 = t3056_tmp * 3.973642985026042;
  t5471 = t3056_tmp * 7.947285970052083;
  t5472 = t3056_tmp * 9.9341074625651036;
  t5499 = t2 * t4122;
  t5500 = t2 * t4123;
  t5503 = t1337_tmp * 5.1745661982783568;
  t5522 = t2 * t4210;
  t5523 = t2 * t4211;
  t5548 = t1797_tmp * 10.331471761067711;
  t5549 = t1337_tmp * 10.331471761067711;
  t5556 = t3056_tmp * 10.331471761067711;
  t5607 = t1797_tmp * 2.9140048556857638;
  t5608 = t1797_tmp * 5.8280097113715277;
  t5614 = t1344_tmp * 2.25173102484809;
  t5615 = t1344_tmp * 2.9140048556857638;
  t5616 = t1344_tmp * 3.3113691541883679;
  t5617 = t1344_tmp * 4.50346204969618;
  t5618 = t1344_tmp * 5.8280097113715277;
  t5626 = t1345_tmp * 3.3113691541883679;
  t5635 = t1346_tmp * 3.3113691541883679;
  t5639 = t3056_tmp * 3.3113691541883679;
  t5644 = t4465_tmp * 3.3113691541883679;
  t5651 = t2 * t3835;
  t5653 = t2 * t3858;
  t5654 = t2 * t3859;
  t5657 = t2 * t3862;
  t5667 = t1337_tmp * 15.21463747377749;
  t5686 = t2 * t4436;
  t5768 = t1797_tmp * -3.973642985026042;
  t5770 = t1797_tmp * -1.986821492513021;
  t5823 = t2 * t4655;
  t5849 = t2 * t4734;
  t5883 = t2 * t4308;
  t5884 = t2 * t4309;
  t1833 = t14 * t302;
  t1835 = t15 * t302;
  t1836 = t16 * t302;
  t2218 = t14 * t560;
  t2219 = t15 * t560;
  t2224 = t14 * t563;
  t2226 = t15 * t563;
  t2227 = t16 * t563;
  t2247 = t14 * t571;
  t2248 = t15 * t571;
  t2250 = t14 * t572;
  t2504 = t14 * t933;
  t2505 = t15 * t933;
  t2518 = t14 * t937;
  t2980 = t14 * t2315;
  t4203 = t3557 * zeta_1_inv;
  t4705 = t3958 * zeta_1_inv;
  t4875 = t16 * t3557;
  t4876 = t16 * t3558;
  t5319 = t14 * t3958;
  t5329 = t15 * t3958;
  t5415 = t14 * t4014;
  t5417 = t14 * t4015;
  t5434 = t15 * t4015;
  t5447 = t16 * t4016;
  t5451 = t16 * t4017;
  t5909 = ((-t34 - t309) + t592) + t615;
  t5912 = -t6 * (((t117 + t180) + t190) + t200);
  t5922 = -t7 * ((((t141 - t398_tmp * 651.04166666666674) + t1344) + t1345) -
                 t892_tmp * 651.04166666666674);
  t5924 = (((t263 + t1812) + t1813) + t398_tmp * -162.76041666666671) +
          t892_tmp * -162.76041666666671;
  t5930_tmp = -t1346 - t1786;
  t5938_tmp = t111 + t182;
  t5944_tmp = t33 + t51;
  t5944 = (((((t5944_tmp + t166) + t305) + t775) + t776) + t805) + t896;
  t5946_tmp = (((((-t65 + t304) + t10 * 78.125) - t318) + t767) + t804) + t894;
  t5946 = -xi * t5946_tmp;
  t5947 =
      -t6 * ((((((-t67 + t305) + t10 * 39.0625) - t322) + t776) + t805) + t896);
  t5952_tmp =
      ((((((-t51 - t33) + t305) + t77_tmp * -26.041666666666668) + t776) +
        t805) +
       t896) +
      t1174;
  t5952 = xi * t5952_tmp;
  t5968 =
      ((((((t302 + t319) - t265) + t612) + t2 * t142) + t4 * t144) - t1047) +
      t2113_tmp * -108.5069444444444;
  t5988 = (((((((t43 - t34) + t593) + t647) + t736) - t616) - t640) + t1537) +
          t1556;
  t5989 = (((((((-t34 + t77) + t593) + t647) - t616) - t640) + t1108) + t1154) +
          t1186;
  t6001_tmp = t113 + t185;
  t6001 = -t7 *
          ((((((t6001_tmp + t783) + t1778) - t1785) - t1789) + t2187) + t2188);
  t6005_tmp = t223 + t370;
  t6005 = (((((t6005_tmp + t398_tmp * -86.805555555555557) + t1826) + t1827) +
            t2199) +
           t2464) +
          t2465;
  t6021_tmp = t398_tmp * 21.701388888888889;
  b_t6021_tmp = t226 + t226 * zeta_1_inv;
  t6021 = -t7 * ((((((b_t6021_tmp + t1826) + t1827) + t2201) + t2202) + t2478) -
                 t6021_tmp);
  t6032_tmp = t227 + t375;
  t6033_tmp = -t478 + t1036;
  t6037_tmp = t436 + t436 * zeta_1_inv;
  t6037 = (((((t6037_tmp + t398_tmp * -5.4253472222222223) + t2234) + t2235) +
            t2479) +
           t2480) -
          t2501;
  t6059_tmp = t440 + t440 * zeta_1_inv;
  t6077 =
      t6 *
      ((((((((((t73 + t452) + t518) + t720) + t722) + t757) + t1395) + t1446) +
         t2088) +
        t2259) +
       15.625);
  t6078 = -xi * ((((((((-t479 + t946) + t10 * 33.275462962962962) +
                      t792_tmp * 16.276041666666671) -
                     t1932) +
                    t2052) +
                   t2090) +
                  t2239) +
                 t2253);
  t6087 = ((((((((t280 + t722) - t442) + t1395) - t1767) + t2258) - t1939) -
            t2562) +
           t2746) -
          6.591796875;
  t6110 = (((((((((t212 + t212 * zeta_1_inv) + t468) + t435 * zeta) + t1395) -
               t1001) +
              t2088) +
             t2259) +
            t2378) +
           t2526) -
          t2746;
  t6111 =
      (((((((((-t212 + t468) + t26_tmp * -4.8828125) + t77_tmp * -6.103515625) +
            t1395) -
           t1001) +
          t2070) +
         t2088) +
        t2259) +
       t2262) +
      t2746;
  t6124_tmp = t452 + t514;
  t6124 =
      ((((((((t6124_tmp + t452 * zeta_1_inv) + t1395) + t1301 * zeta) - t1474) +
          t2088) +
         t2259) +
        t2623) +
       t2704) -
      t2870;
  t6125 = (((((((((t514 - t452) + t26_tmp * -131.8359375) + t1395) - t1474) +
               t77_tmp * -164.794921875) +
              t2088) +
             t2259) +
            t2422) +
           t2555) +
          t2870;
  t6135 = ((((((((((t578 - t468) + t1003) + t1019) + t1064) + t1159) + t1257) -
              t1031) +
             t1623) +
            t1970) +
           t2067) +
          t2813;
  t6160 = ((((((((((-t514 + t958) + t1476) + t1481) + t1493) + t1623) + t1672) +
              t1686) -
             t1489) +
            t2420) +
           t2620) +
          t2813;
  t6192_tmp = eta * t1727 + t5109;
  t6192 = (((t6192_tmp + t5151) - t4859) - t5121) + 2.384185791015625;
  t6204 = ((((t1504 + t5626) + t5643) - t5287) - t5312) + 0.0476837158203125;
  t6228_tmp = t3 * t10;
  t6233_tmp = t22 + t22 * zeta_1_inv;
  t6233 =
      (((((((((((((t6233_tmp + t146) + t405) + t688) - t486) - t548) + t1430) +
             t1436) +
            t1536) +
           t1621) +
          t1632) -
         t1434) +
        t1982) +
       t2413) +
      t2690;
  t6234_tmp = -t22 + t26_tmp * -4.166666666666667;
  t6234 =
      (((((((((((((t6234_tmp + t146) + t405) + t548) - t486) + t1072) + t1153) +
             t1254) +
            t1430) +
           t1436) +
          t1608) +
         t1632) -
        t1434) +
       t2613) +
      t2690;
  t6247 =
      -xi * (((((((((((((((-t90 - t57) - t125) + t338) + t565) + t588) + t755) +
                     t960) -
                    t1006) +
                   t1558) +
                  t1579) +
                 t1660) -
                t1764) +
               t2251) +
              t2410) +
             t2466);
  t6248_tmp = t57 + t90;
  t6248 =
      -xi *
      ((((((((((((((t6248_tmp - t125) + t588) + t656) - t565) + t960) - t1006) -
              t755) +
             t1188) +
            t1579) +
           t1660) +
          t1764) +
         t2251) +
        t2410) +
       t2466);
  t6254 = ((((((((((((((-t147 + t540) + t653) + t732) - t485) + t933) + t1144) +
                  t1207) +
                 t1250) +
                t1431) +
               t1453) +
              t1538) +
             t1572) +
            t1603) -
           t1470) +
          t2458;
  t6264_tmp = t895_tmp * 49.591064453125 - t1346_tmp * 95.367431640625;
  t6266_tmp = (eta * t3211 + t5108) - t1335_tmp * 17.219119601779511;
  t6266 = ((t6266_tmp + t5449) - t5539) + 0.39736429850260419;
  t6279_tmp = (((t259 + t885) + t1266) + t1387) + t1483;
  t6301_tmp = t1337_tmp * 31.789143880208329;
  t6323_tmp = t217 + t351;
  t6323 = -xi *
          ((((((((((((((t6323_tmp + t517) + t1094) + t1268) + t1389) - t1460) +
                   t1611) +
                  t2076) +
                 t2325) +
                t2511) +
               t2717) -
              t2736) -
             t3750) -
            t3949) -
           t4096);
  t6328_tmp =
      (-(t895_tmp * 26.226043701171879) - t892_tmp * 107.2883605957031) + t3245;
  b_t6328_tmp = t1337_tmp * 63.578287760416657;
  t6365_tmp = t1345_tmp * 7.947285970052083;
  t6381 = -t7 *
          ((((((((((t875 - t1703) - t2929) - t3304) - t4192) + t4877) + t4886) +
              t5132) +
             t5147) +
            t5399) -
           0.0762939453125);
  t6415_tmp = t1345_tmp * 15.89457194010417;
  t6450_tmp = -(eta * 2.593994140625) + t3 * 3.814697265625;
  t6486_tmp = (-(eta * 0.49591064453125) + eta * t1319) + t3 * 0.95367431640625;
  t6516_tmp = t41 + t3266;
  t6534_tmp = -t842 - t2414;
  t6543_tmp = (-(eta * 6.4849853515625) + t770_tmp * -15.07040895061728) +
              t1332_tmp * 0.52746431327160492;
  t6548_tmp = t761_tmp * 26.137740523726851;
  t6568 = ((((((((((((((((-t1710 - t1877) + t2654) + t2922) + t3229) + t3365) -
                     t3181) +
                    t3476) +
                   t3558) +
                  t3574) +
                 t3825) +
                t4155) +
               t4317) +
              t4486) +
             t4580) -
            t4115) +
           t4719) +
          1.71661376953125;
  t6583 = (((((((((((((((((t199 - t837) + t1887) + t2074) + t2582) + t3381) -
                      t3545) +
                     t4160) +
                    t4258) -
                   t3804) +
                  t4303) +
                 t4363) +
                t4407) +
               t4551) +
              t4578) +
             t4703) +
            t5065) +
           t5828) -
          0.006866455078125;
  t6586 = (((((((((((((((((t199 + t837) + t1887) + t2383) + t2582) + t3381) +
                      t3789) -
                     t3545) -
                    t3804) +
                   t4303) +
                  t4551) +
                 t4577) -
                t4160) +
               t4703) +
              t4828) +
             t4911) +
            t5066) +
           t5828) -
          0.006866455078125;
  t6587 = (((((((((((((((((t398 + t845) - t1875) + t2311) + t2607) - t3295) +
                      t3986) +
                     t4086) +
                    t4092) +
                   t4219) +
                  t4318) -
                 t3883) +
                t4364) +
               t4554) +
              t4724) +
             t4759) +
            t4796) +
           t5810) -
          0.0011444091796875;
  t6598 = ((((((((((((((((t1293 - t2308) + t2777) - t3263) + t3700) + t3821) +
                     t4017) -
                    t3622) +
                   t4168) +
                  t4401) -
                 t3962) +
                t4601) +
               t4764) +
              t4767) +
             t4807) +
            t4821) +
           t5482) +
          0.286102294921875;
  t6599 = ((((((((((((((((-t1293 - t2308) + t2657) - t3263) + t3622) + t3821) +
                     t4017) +
                    t4120) +
                   t4168) +
                  t4337) +
                 t4355) -
                t3962) +
               t4601) +
              t4764) +
             t4903) +
            t5246) +
           t5482) +
          0.286102294921875;
  t6620_tmp = t26_tmp * 1.0416666666666667 + eta * 1.093546549479167;
  t6620 =
      -xi *
      ((((((((((((((((t6620_tmp - t3296) + t3656) + t3687) - t3929) - t3977) +
                 t4150) +
                t4201) -
               t4274) -
              t4437) -
             t4862) +
            t4892) -
           t4397) -
          t5261) +
         t5335) +
        t5496) +
       0.0518798828125);
  t6627_tmp = eta * t41 + eta * 0.54677327473958326;
  t6630 = ((((((((((((((((-t1293 - t3162) + t3557) - t3385) + t3828) + t3939) +
                     t4025) +
                    t4120) +
                   t4234) +
                  t4337) +
                 t4355) +
                t4526) +
               t4607) +
              t4707) +
             t4762) +
            t4903) +
           t5683) -
          0.095367431640625;
  t6632 = ((((((((((((((((t1293 - t3162) + t3557) + t3700) - t3385) + t3939) +
                     t4025) +
                    t4234) -
                   t3828) +
                  t4401) +
                 t4526) +
                t4762) +
               t4807) +
              t4821) +
             t5100) +
            t5206) +
           t5683) -
          0.095367431640625;
  t6661_tmp = (-(t2 * 0.247955322265625) - zeta * 0.1621246337890625) + t2295;
  t5908 = ((t34 + t309) - t592) - t615;
  t5910 = ((((t24 + zeta * 7.8125) + t11 * 32.552083333333329) -
            t10 * 6.510416666666667) +
           6.25) *
          xi;
  t5921 = t6 * (((((-(zeta * 78.125) + t315) - t301) + t895) + t1837) +
                5.208333333333333);
  t5931 = t7 * t5924;
  t5948 = t5944 * xi;
  t5949 =
      ((((((t67 + t76) + t151) + t2 * t42) - t313) - t323) + t2 * t132) + t1775;
  t5955_tmp = t21 + t21 * zeta_1_inv;
  b_t5955_tmp =
      ((t5955_tmp + t58 * zeta) + t11 * t224) + t770_tmp * -6.510416666666667;
  t5955 = b_t5955_tmp + t5909;
  t5959 = (((((((t31 + t138) + t327) + t349) - t326) + t758) + t1168) - t1044) -
          1.5625;
  t5960 =
      (((((((-t31 + t138) + t176) + t327) - t326) + t768) + t1156) - t1044) -
      1.5625;
  t5962_tmp = t56 + t89;
  t6000 =
      t7 * ((((((t6001_tmp - t783) + t1785) + t1789) - t1778) + t2187) + t2188);
  t6003 =
      (((((t6005_tmp + t299 * zeta_1_inv) + t1820) - t1826) - t1827) + t2464) +
      t2465;
  t6035 =
      (((((t6037_tmp + t2 * t504) + t2479) + t2480) - t2234) - t2235) + t2501;
  t6039 = ((((((((t275 + t558) + t11 * 28.93518518518519) +
                t792_tmp * 260.41666666666669) -
               t10 * 101.2731481481481) +
              t1645) -
             t1272) +
            t1762) +
           t1797_tmp * 260.41666666666669) *
          xi;
  t6044 = t7 * t6037;
  t6057 =
      t6 * (((((((t6124_tmp + t720) + t722) + t757) + t1889) - t1474) + t2425) +
            t2552);
  t6061 =
      t6 *
      ((((((((t452 + t720) + t722) + t757) - t514) + t1474) - t1889) - t2425) +
       t892_tmp * -131.8359375);
  t6069 = ((((((((t148 + t2 * t75) + t572) - t494) + t1030) + t1244) - t975) -
            t1009) +
           t2 * t520) +
          t2664;
  t6085 =
      t6 *
      ((((((((((t73 + t518) - t452) - t720) + t77_tmp * -109.86328125) - t757) +
           t1395) +
          t1446) +
         t2088) +
        t2259) +
       15.625);
  t6089_tmp = t5955_tmp + t78;
  t6089 =
      ((((((t6089_tmp + t146) + t405) + t741) + t777) + t1109) + t2168) + t5909;
  t6092 =
      t6 * (((((((((-t280 + t722) - t442) + t1767) - t1395) + t1939) + t2258) +
              t2562) +
             t2746) +
            6.591796875);
  t6095_tmp = -t21 + t26_tmp * -6.25;
  t6095 = (((((((t6095_tmp + t146) + t152) + t405) + t737) + t741) + t1176) +
           t2168) +
          t5909;
  t6107 =
      t6 *
      ((((((((((t14 * t56 - t239) - t443) - t715) + t1429) + t1767) - t1395) +
          t2159) +
         t2562) +
        t2708) +
       0.732421875);
  t6108 =
      t6 * ((((((((((t443 - t239) + t715) + t729) + t1429) + t1767) - t1395) -
               t2159) +
              t2562) -
             t2708) +
            0.732421875);
  t6127 = (((((((((((t385 - t272) + t641) + t957) + t963) - t1058) + t1675) +
               t1683) +
              t1688) +
             t1766) +
            t2061) +
           t2257) *
          xi;
  t6134 = ((((((((((t468 + t578) + t1031) + t1064) + t1159) + t1257) - t1003) -
              t1019) +
             t1970) +
            t1990) +
           t2067) +
          t2729;
  t6136 = (((((((((((-t272 + t641) - t385) + t957) - t963) - t1058) + t1675) +
               t1682) +
              t1683) +
             t1766) -
            t1688) -
           t2257) *
          xi;
  t6149 =
      t6 * (((((((((((t642 + t699) - t501) + t959) + t1396) + t1676) - t1475) +
                t2066) +
               t2089) +
              t2153) +
             t2261) +
            t770_tmp * -54.931640625);
  t6150 =
      ((((((((((((t243 + t290) + t330) + t560) + t648) + t747) + t774) + t803) -
           t625) -
          t636) +
         t1172) +
        t1231) +
       t1246) +
      t2456;
  t6152 =
      ((((((((((((t5944_tmp - t129) + t389) + t584) + t944) + t957) - t626) +
            t1658) +
           t1673) +
          t1675) +
         t1683) +
        t1766) +
       t2158) *
      xi;
  t6159 = ((((((((((t514 + t958) + t1489) + t1493) + t1672) + t1686) - t1476) -
              t1481) +
             t1990) +
            t2420) +
           t2620) +
          t2729;
  t6161_tmp = t258 + t2 * 0.28935185185185186;
  t6164 =
      t6 * (((((((((((t642 - t501) + t959) + t1076) + t1676) - t1396) - t1475) +
                t10 * t835) +
               t2066) +
              t2153) -
             t2089) +
            t1332_tmp * -43.9453125);
  t6167_tmp = -t215 + t454 * zeta;
  t6172 =
      ((((((((((((t5944_tmp + t129) + t389) + t626) + t944) - t584) - t957) +
            t1658) +
           t1673) -
          t1675) +
         t2062) -
        t1766) +
       t2158) *
      xi;
  t6186 = ((((((((((((t292 + t474) + t571) + t653) + t751) + t1032) + t1180) +
                t1241) +
               t1250) -
              t1008) -
             t1022) +
            t1517) +
           t1572) +
          t2724;
  t6197 = (((t6192_tmp + t5121) - t4859) - t5151) - 2.384185791015625;
  t6200 =
      t6 *
      ((((((((((((t5962_tmp - t244) + t587) + t705) + t959) + t1365) - t1002) +
            t1676) +
           t2019) +
          t2036) +
         t2066) +
        t2153) +
       t2161);
  t6203_tmp = (t146 + t405) + t475;
  t6203 =
      ((((((((((t6203_tmp + t542) + t1064) + t1147) + t1159) + t1471) + t1582) +
          t1632) -
         t1432) -
        t1447) +
       t1970) +
      t2690;
  t6208 = ((((t1504 + t5287) + t5643) - t5312) - t5626) - 0.0476837158203125;
  t6209 =
      ((((((((((t6203_tmp + t658) - t542) + t1471) + t1531) + t1544) + t1581) +
          t1632) -
         t1432) -
        t1447) +
       t1971) +
      t2690;
  t6212 =
      t6 *
      ((((((((((((t5962_tmp + t244) + t705) - t587) + t1002) + t1365) - t959) +
            t2019) +
           t2036) -
          t1676) +
         t2161) +
        t761_tmp * -54.931640625) -
       t2153);
  t6219_tmp = t244 + t11 * 16.6015625;
  b_t6219_tmp = ((t6219_tmp - t595) + t1004) - t637;
  t6253 = ((((((((((((((t147 + t407) + t485) + t540) + t653) + t1144) + t1207) +
                  t1250) -
                 t933) +
                t1470) +
               t1572) -
              t1431) -
             t1453) +
            t1963) +
           t1981) +
          t2172;
  t6268 = ((t6266_tmp + t5539) - t5449) - 0.39736429850260419;
  t6270_tmp = (t31 + t46) + t61 * zeta;
  t6270 = ((((((((((((((t6270_tmp + t550) - t521) - t543) + t1158) + t1194) -
                   t937) +
                  t1466) +
                 t1485) +
                t1534) +
               t1571) -
              t1487) +
             t1973) +
            t1989) +
           t2058) +
          t2734;
  t6271_tmp = (-t31 + t83) + t77_tmp * -3.4722222222222223;
  t6271 = ((((((((((((((t6271_tmp + t543) + t550) - t521) + t1149) + t1158) +
                   t1204) -
                  t937) +
                 t1466) +
                t1485) +
               t1562) +
              t1588) -
             t1487) +
            t1989) +
           t2058) +
          t2734;
  t6317_tmp = t218 + t218 * zeta_1_inv;
  t6371_tmp = -(t895_tmp * 16.689300537109379) + t3244;
  t6373_tmp = -(t895_tmp * 8.3446502685546875) + t3243;
  t6427 =
      -t7 *
      ((((((((((-t1723 + t3194) + t3646) + t3920) + t4923) - t4961) - t4965) +
          t5304) -
         t5161) -
        t5409) +
       0.31789143880208331);
  t6444_tmp = t2636 + t2725;
  t6455_tmp = eta * 2.9754638671875 - t3 * 5.7220458984375;
  t6466_tmp = -(eta * 0.3814697265625) + t3 * 1.9073486328125;
  t6203_tmp = -(eta * 0.0518798828125) + t3 * 0.0762939453125;
  t6479_tmp = t52_tmp * 0.78125 + t1335_tmp * 1.5823929398148151;
  t6481_tmp = (((t2639 - t2859) + t3349) + t3427) + t3683;
  t6524_tmp = (t2 * 1.811981201171875 - t4 * 1.1920928955078121) +
              zeta * 1.809861924913194;
  t6538_tmp = -(t4 * 4.76837158203125) + zeta * 22.05365969810957;
  t6560_tmp = -t1883 + zeta * 1.5664748203607251;
  t6570 = ((((((((((((((((t1877 - t1710) + t2654) + t2857) + t3181) + t3229) +
                     t3574) -
                    t3365) -
                   t3476) -
                  t3558) +
                 t4115) +
                t4155) +
               t4302) +
              t4317) +
             t4580) +
            t4719) +
           t5009) -
          1.71661376953125;
  t6585 = (((((((((((((((((t197 + t845) + t1875) - t2311) + t2607) + t3295) +
                      t3883) +
                     t3986) +
                    t4219) +
                   t4318) +
                  t4364) -
                 t4086) -
                t4092) +
               t4724) +
              t4796) +
             t5050) +
            t5237) +
           t5500) +
          0.0011444091796875;
  t6600 = ((((((((((((((((-t837 - t1859) + t2633) + t3238) + t3557) - t3533) +
                     t4258) +
                    t4363) +
                   t4484) +
                  t4500) +
                 t4566) +
                t4593) +
               t4768) +
              t5065) +
             t5117) -
            t5182) +
           t5887) +
          0.034332275390625;
  t6603 = ((((((((((((((((-t837 + t1859) + t2633) + t3238) + t3533) - t3557) +
                     t4258) +
                    t4363) +
                   t4566) +
                  t4768) +
                 t5011) +
                t5020) +
               t5065) -
              t4593) +
             t5182) -
            t5117) +
           t5653) -
          0.034332275390625;
  t6611 =
      ((((((((((((((((t6620_tmp + t3296) + t3656) + t3687) + t3929) + t3977) +
                 t4201) +
                t4274) +
               t4437) -
              t4150) +
             t4862) -
            t4397) +
           t5261) +
          t5335) -
         t4892) +
        t5496) -
       0.0518798828125) *
      xi;
  t6636 = ((((((((((((((((((t20 + t740) + t1699) + t2403) + t3824) - t3562) +
                       t4011) +
                      t4151) -
                     t3827) +
                    t4449) -
                   t3957) +
                  t4537) +
                 t4549) +
                t4813) -
               t4492) +
              t5038) +
             t5205) +
            t5217) +
           t5523) +
          0.0001373291015625;
  t6637 = ((((((((((((((((((t26 + t740) - t1699) + t2603) + t3827) - t3562) +
                       t4011) +
                      t4151) +
                     t4301) +
                    t4343) -
                   t3957) +
                  t4531) +
                 t4537) +
                t4549) +
               t4725) +
              t4983) -
             t4492) +
            t5205) +
           t5523) +
          0.0001373291015625;
  t6639_tmp = t2309 + t4 * t2434;
  t6639 =
      (((((((((((((((t6639_tmp + t3535) + t3550) + t3872) + t3884) + t3902) +
                t4016) +
               t4041) +
              t4162) +
             t4289) +
            t4409) +
           t4504) -
          t4030) -
         t4121) +
        t5207) +
       t5483) -
      0.015894571940104171;
  t6642 = ((((((((((((((((t845 + t3512) + t3888) + t3958) + t4054) + t4219) +
                     t4364) +
                    t4408) -
                   t4242) +
                  t4760) +
                 t4769) +
                t4796) -
               t4491) +
              t5221) +
             t5480) +
            t5657) +
           t5737) -
          0.0019073486328125;
  t6643_tmp = -t2309 + t792_tmp * -8.3446502685546875;
  t6643 =
      (((((((((((((((t6643_tmp + t3535) + t3550) + t3872) + t3902) + t4030) +
                t4041) +
               t4121) +
              t4289) -
             t3884) +
            t4409) -
           t4016) -
          t4162) +
         t5013) +
        t5027) +
       t5207) +
      0.015894571940104171;
  t6645 = ((((((((((((((((-t845 + t3512) + t3763) + t3888) + t3958) + t4316) -
                     t4054) -
                    t4242) +
                   t4760) +
                  t4827) +
                 t4910) +
                t5012) -
               t4491) +
              t5221) +
             t5244) +
            t5657) +
           t5737) -
          0.0019073486328125;
  t5956 = b_t5955_tmp + t5908;
  t6020 = t7 * ((((((b_t6021_tmp + t1235) + t2201) + t2202) - t1826) - t1827) +
                t2228);
  t6045 = -t7 * t6035;
  t6168 = (((((((((((((-t69 + t189) + t293) + t303) + t591) + t748) - t622) +
                 t1162) +
                t1177) -
               t792) +
              t1652) +
             t1733) -
            t1757) -
           t1803) *
          xi;
  t6173 =
      (((((((((((((-t69 + t293) - t189) - t303) + t591) + t10 * t116) - t622) -
             t748) +
            t1162) -
           t792) +
          t1652) +
         t1733) +
        t1757) -
       t1803) *
      xi;
  t6187_tmp = -t124 + t296;
  t6316 = ((((((((((((((t6323_tmp - t517) + t1094) + t1268) + t1389) + t1460) -
                   t1611) +
                  t2076) -
                 t2325) -
                t2511) +
               t2717) +
              t2736) +
             t3750) +
            t3949) +
           t4096) *
          xi;
  t6378 =
      t7 *
      ((((((((((-t875 - t1703) + t2929) - t3304) + t4192) + t4886) + t5132) -
          t4877) +
         t5399) -
        t5147) +
       0.0762939453125);
  t6426 =
      t7 *
      ((((((((((t1723 + t3194) + t3646) - t3920) + t4961) + t4965) + t5304) -
          t4923) -
         t5161) -
        t5409) -
       0.31789143880208331);
  t2383_tmp = t46 + t1290;
  t6563_tmp = t83 - t1290;
  t6596_tmp =
      (t2951 - t1797_tmp * 6.357828776041667) - zeta * 1.0384453667534721;
  t6596 = ((((((((((((((t6596_tmp + t3573) + t3819) + t3952) + t4124) + t4199) +
                   t4300) -
                  t4043) -
                 t4175) +
                t4716) +
               t5025) -
              t4536) +
             t5233) -
            t5334) +
           0.063578287760416671) *
          xi;
  t6597 = ((((((((((((((t6596_tmp + t3819) + t3952) - t3573) + t4043) + t4124) +
                   t4300) +
                  t4536) -
                 t4175) -
                t4199) -
               t4716) +
              t5233) +
             t5334) -
            t5025) +
           0.063578287760416671) *
          xi;
  t6616_tmp = -(t1797_tmp * 3.178914388020833) - zeta * 0.51922268337673616;
  sfvals_tmp =
      (-t8 *
           ((((((((((t1317 - t2998) - t3425) + t4010) + t16 * t3958) + t5352) +
                t5396) +
               t5597) +
              t5616) -
             t398_tmp * 1.3245476616753471) -
            0.0095367431640625) +
       -t6 *
           (((((((((((((((((t167 - t2999) + t3217) + t3489) - t3582) + t3625) -
                       t3859) +
                      t3752 * zeta) +
                     t4038) +
                    t4396) +
                   t4530) +
                  t4698) +
                 t4710) +
                t5254) +
               t5507) -
              t5622) -
             t792_tmp * 1.3245476616753471) +
            0.003814697265625)) +
      ((((((((((((((((((((-t458 + t965) - t964) + t1880) - t1881) + t2604) -
                     t3249) -
                    t3580) +
                   t4078) +
                  t3541 * zeta) +
                 t4333) -
                t4026) +
               t1556_tmp * -0.81709873529128085) +
              t4831) +
             eta * t4492) +
            t1169_tmp * -0.064873401029610339) +
           t5654) +
          t770_tmp * -0.33331506046248072) +
         t3 * t4335) +
        t5901) +
       0.0001373291015625);
  b_sfvals_tmp = t6636 * xi;
  c_sfvals_tmp =
      t9 * (((((t1503 + t5339) + t5356) - t5579) - t5596) + 0.0095367431640625);
  d_sfvals_tmp = t7 * ((((((((((((((t2928 + t3563) + t3568) - t3357) +
                                 t26_tmp * -1.109252741307388) +
                                t4036) +
                               t77_tmp * -1.92088845335407) +
                              t4686) -
                             t4335) +
                            t5252) +
                           t5369) +
                          t5415) +
                         t5614) -
                        t5630) -
                       0.003814697265625);
  sfvals[0] = ((sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp) - d_sfvals_tmp;
  sfvals[1] = ((sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp) + d_sfvals_tmp;
  sfvals_tmp =
      (t8 * ((((((((((-t1317 + t2998) - t3425) + t4010) + t2 * t3213) + t5352) +
                 t5396) +
                t5597) +
               t1345_tmp * -2.6490953233506951) -
              t5616) +
             0.0095367431640625) +
       t6 * (((((((((((((((((t167 + t2999) + t3217) + t3489) + t3582) + t3859) +
                        t4038) -
                       t3625) +
                      t4396) +
                     t761_tmp * -6.4755663459683639) +
                    t4698) +
                   t4 * t3213) -
                  t4530) -
                 t4710) +
                t5254) -
               t5507) -
              t5622) -
             0.003814697265625)) +
      ((((((((((((((((((((t458 - t964) - t965) + t1880) + t1881) + t2604) -
                     t3249) -
                    t3580) +
                   t4078) +
                  t4333) +
                 eta * t4151) -
                t4026) +
               t77_tmp * -0.034355822904610339) +
              t3 * t3563) +
             t4831) +
            eta * t4549) +
           t1108_tmp * -0.8661953019507137) +
          t5654) +
         t5901) +
        t6228_tmp * -0.41973443678867672) +
       0.0001373291015625);
  b_sfvals_tmp = t6637 * xi;
  c_sfvals_tmp =
      t9 * (((((t1503 + t5356) + t5579) - t5339) - t5596) - 0.0095367431640625);
  d_sfvals_tmp =
      t7 *
      ((((((((((((((-t2928 + t3357) + eta * t3378) + t3563) + t3274 * zeta) -
                t3568) +
               t4036) +
              t4686) -
             t4335) +
            t5252) +
           t5415) +
          t5614) +
         t5630) -
        t5369) -
       0.003814697265625);
  sfvals[2] = ((sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp) + d_sfvals_tmp;
  sfvals[3] = ((sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp) - d_sfvals_tmp;
  sfvals[4] = (((t10 * -10.416666666666666 + t11 * 36.458333333333336) -
                t12 * 52.083333333333336) +
               t13 * 26.041666666666668) +
              zeta;
  sfvals_tmp =
      (t8 * ((((((((((t1714 - t1709) - t2942) + t3027) + t4061) - t4749) +
                 t5406) +
                t5439) +
               t5447) +
              t5469) -
             0.0286102294921875) +
       t6 * (((((((((((((((((eta * t40 + t1296) - t2646) + t2837) + t3818) +
                         t77_tmp * -1.169134069372106) +
                        t3951) -
                       t3662) -
                      t3713) +
                     t4299) +
                    eta * t4123) +
                   t4655) -
                  t4427) -
                 t4599) +
                t5682) -
               t5419) -
              t5441) +
             0.029754638671875)) +
      ((((((((((((((((((((t844 + t1892) - t1893) + t3285 * zeta) + t3833) +
                      t4091) -
                     t3908) +
                    eta * t3883) +
                   t4602) -
                  t4164) +
                 t770_tmp * -0.85145455819589122) +
                t1556_tmp * -1.363401059751157) +
               t4912) +
              t5029) +
             t5189) +
            t5499) -
           t5028) +
          t6228_tmp * -0.7505770082826968) +
         t1169_tmp * -0.0088303177445023147) +
        t5825) -
       0.0011444091796875);
  b_sfvals_tmp = t9 * t6204;
  c_sfvals_tmp = t6642 * xi;
  d_sfvals_tmp =
      t7 *
      ((((((((((((((-t3204 + t3513) + t3571) + t26_tmp * -1.49081665792583) +
                 t77_tmp * -2.5684450879509071) +
                t4190) +
               t4311) -
              t4238) +
             t5022) +
            t5126) +
           t5433) +
          t5531) -
         t5316) -
        t5632) -
       0.049591064453125);
  sfvals[5] = ((sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp) + d_sfvals_tmp;
  e_sfvals_tmp =
      (-t8 * ((((((((((t888 - t2103) - t2946) + t4008) - t4685) + t4875) +
                  t5145) +
                 t5353) +
                t5397) +
               t5600) -
              0.019073486328125) +
       t6 * ((((((((((((((((t6627_tmp + t3581) + t3686) + t3928) + t3976) +
                        t4076) +
                       t4273) +
                      t4436) -
                     t4149) +
                    t4699) +
                   t4861) +
                  t4900) +
                 t5333) +
                t5361) +
               t5495) +
              t5684) -
             0.02593994140625)) +
      ((((((((((((((((((((-t456 + t1381) - t1380) + t1870) - t1871) + t2759) +
                     eta * t3381) +
                    t4024) +
                   t4152) +
                  t4214) +
                 t3 * t3318) -
                t3935) +
               t77_tmp * -0.49281179169077932) -
              t4237) +
             t4833) +
            t1108_tmp * -1.319367208598573) +
           eta * t4551) +
          t5687) +
         t6228_tmp * -3.7381678451726472) +
        t5849) +
       0.006866455078125);
  f_sfvals_tmp = t6600 * xi;
  g_sfvals_tmp =
      t9 * (((((t1098 + t5151) + t5164) - t5289) - t5313) + 0.095367431640625);
  h_sfvals_tmp = t7 * ((((((((((((((t2823 + t2933) + t2980) - t3293) - t3442) +
                                t77_tmp * -1.8991070029176309) +
                               t26_tmp * -1.0738137327594519) +
                              t4477) +
                             t4540) -
                            t4260) +
                           t5064) +
                          t5153) +
                         t5615) +
                        t5671) +
                       0.12969970703125);
  sfvals[6] = ((e_sfvals_tmp - f_sfvals_tmp) - g_sfvals_tmp) + h_sfvals_tmp;
  sfvals[7] = ((e_sfvals_tmp + f_sfvals_tmp) + g_sfvals_tmp) - h_sfvals_tmp;
  sfvals[8] = ((sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp) - d_sfvals_tmp;
  sfvals_tmp =
      (t398_tmp * 5.245208740234375 - t892_tmp * 0.79119646990740744) - t3028;
  b_sfvals_tmp =
      (-t8 * ((((((((((t3426 - t3619) + t3641) + t4419) + t5302) + t5381) -
                  t5439) -
                 t5403) -
                t5639) -
               t6365_tmp) +
              0.079472859700520829) +
       t6 * (((((((((((((((t6616_tmp + t3572) + t3818) + t3951) + t4122) +
                       t4195) +
                      t4299) -
                     t4042) -
                    t4173) +
                   t3980 * zeta) +
                  t5024) +
                 t770_tmp * -4.1208149474344138) +
                t5235) +
               t5682) -
              t5332) +
             0.031789143880208329)) +
      ((((((((((((((((((((t845 + t1401) - t1402) + t1884) - t1882) + t2609) +
                     t3833) +
                    t4091) -
                   t3908) +
                  eta * t4242) +
                 t77_tmp * -0.10848339693045909) +
                t4602) -
               t4164) +
              t1108_tmp * -1.43745799123505) +
             eta * t4491) +
            t3 * t3513) +
           t5477) +
          t5823) +
         t6228_tmp * -0.71407836160542049) +
        t5900) -
       0.0011444091796875);
  c_sfvals_tmp = t6587 * xi;
  d_sfvals_tmp =
      t7 *
      ((((((((((((sfvals_tmp + t3248) + t3223 * zeta) + t3711) + eta * t3320) +
              t3906) +
             t3991) -
            t4311) +
           t5346) -
          t5126) -
         t5436) -
        t5531) +
       0.031789143880208329);
  e_sfvals_tmp = t9 * (((((t3812 + t16 * t4014) + t5643) - t5379) - t5599) +
                       0.079472859700520829);
  sfvals[9] = ((b_sfvals_tmp + c_sfvals_tmp) + d_sfvals_tmp) - e_sfvals_tmp;
  f_sfvals_tmp = eta * t1722 + t5164;
  g_sfvals_tmp =
      (-t8 * ((((((((((t1721 - t2978) + t3193) + t3434) - t3970) - t4841) +
                  t4875) +
                 t5145) +
                t5160) -
               t5598) -
              0.476837158203125) +
       t6 * ((((((((((((((((t1285 + t2824) + t2948) + t3585) +
                         t77_tmp * -2.8845704632040889) +
                        t3928) +
                       t4273) -
                      t3940) +
                     t4481) +
                    eta * t3858) +
                   t4705) +
                  t4734) -
                 t4261) +
                t5334) +
               t5361) +
              t5684) -
             0.19073486328125)) +
      ((((((((((((((((((((-t837 - t956) + t1379) + t1400) - t1405) + t2380) +
                     t4024) +
                    t3506 * zeta) +
                   t4152) +
                  t4214) -
                 t3935) -
                t4237) +
               t4830) +
              t770_tmp * -0.15254079559702929) +
             eta * t5182) +
            t1169_tmp * -0.2757413887683256) +
           t5686) +
          t1108_tmp * -0.01860253604841821) +
         t5815) +
        t3 * t5064) +
       0.006866455078125);
  h_sfvals_tmp = t6586 * xi;
  i_sfvals_tmp =
      t9 * ((((f_sfvals_tmp + t5340) - t5130) - t5288) + 0.476837158203125);
  j_sfvals_tmp =
      t7 *
      ((((((((((((((t2933 - t3129) + t3318) + t26_tmp * -1.7248553994261191) +
                 t77_tmp * -3.6792990602092979) +
                t4072) +
               t4540) -
              t4154) +
             t4687) +
            t5347) +
           t5490) +
          t5671) +
         t5768) -
        t5617) +
       0.19073486328125);
  sfvals[10] = ((g_sfvals_tmp - h_sfvals_tmp) + i_sfvals_tmp) - j_sfvals_tmp;
  k_sfvals_tmp =
      (t8 * ((((((((((-t1721 - t2978) + t3193) + t3434) + t3970) + t4841) +
                 t5160) +
                t5338) -
               t5145) -
              t5598) +
             0.476837158203125) +
       t6 * ((((((((((((((((-t1285 - t2824) + t2948) + t3335 * zeta) + t3585) +
                        t3928) +
                       t4261) +
                      t4273) -
                     t3940) +
                    t4705) +
                   t4734) -
                  t4481) +
                 t770_tmp * -1.1773756992669751) +
                t5361) +
               t5684) -
              t5334) -
             0.19073486328125)) +
      ((((((((((((((((((((t837 - t956) + t1400) + t1405) - t1379) + t2380) +
                     t4024) +
                    t4152) +
                   t4214) -
                  t3935) +
                 t77_tmp * -0.1536710762683256) -
                t4237) +
               eta * t4593) +
              t4830) +
             t3 * t3442) +
            eta * t5117) +
           t5686) +
          t1556_tmp * -0.051804530767746923) +
         t5815) +
        t6228_tmp * -0.043562900872878077) +
       0.006866455078125);
  l_sfvals_tmp = t6583 * xi;
  f_sfvals_tmp =
      t9 * ((((f_sfvals_tmp + t5288) - t5130) - t5340) - 0.476837158203125);
  m_sfvals_tmp =
      t7 *
      ((((((((((((((-t2933 + t3129) + t3318) + eta * t3398) + t3222 * zeta) +
                t4072) -
               t4154) +
              t4687) -
             t4540) +
            t5490) -
           t5347) +
          t5768) -
         t5617) -
        t5671) +
       0.19073486328125);
  sfvals[11] = ((k_sfvals_tmp - l_sfvals_tmp) - f_sfvals_tmp) - m_sfvals_tmp;
  n_sfvals_tmp =
      (t8 * ((((((((((t3426 + t3619) + t3641) - t4419) + t5302) + t5439) +
                 t5447) -
                t5381) -
               t5403) -
              t5639) -
             0.079472859700520829) +
       t6 * (((((((((((((((t6616_tmp + t3818) + t3951) - t3572) + t4042) +
                       t4122) +
                      t4299) +
                     eta * t3862) -
                    t4173) -
                   t4195) +
                  t77_tmp * -0.029434392481674381) +
                 t5235) +
                t5332) -
               t5024) +
              t5682) +
             0.031789143880208329)) +
      ((((((((((((((((((((-t845 + t1401) + t1402) - t1882) - t1884) + t2609) +
                     t3833) +
                    t3470 * zeta) +
                   t4091) -
                  t3908) +
                 eta * t3888) +
                t4602) -
               t4164) +
              t1556_tmp * -0.666394645785108) +
             t5477) +
            t3 * t4238) +
           t770_tmp * -0.8776393937475887) +
          t1169_tmp * -0.20003613130545911) +
         t5823) +
        t5900) -
       0.0011444091796875);
  o_sfvals_tmp = t6585 * xi;
  sfvals_tmp = t7 * ((((((((((((sfvals_tmp - t3248) + t3711) + t3906) + t3991) +
                            t77_tmp * -8.756731763298129) +
                           t26_tmp * -5.071545824592496) +
                          t4311) +
                         t5126) +
                        t5531) -
                       t5346) -
                      t5436) +
                     0.031789143880208329);
  p_sfvals_tmp =
      t9 *
      (((((t3812 + t5379) + t5643) + t1345_tmp * -1.986821492513021) - t5599) -
       0.079472859700520829);
  sfvals[12] = ((n_sfvals_tmp - o_sfvals_tmp) + sfvals_tmp) + p_sfvals_tmp;
  q_sfvals_tmp =
      (-t8 * ((((((((((-t1714 - t1709) + t2942) + t3027) + t4061) + t4749) +
                  t5406) -
                 t5439) +
                t5469) -
               t6365_tmp) +
              0.0286102294921875) +
       t6 * (((((((((((((((((t26_tmp * -0.78125 - t1296) + t2646) - t2837) +
                          t3370 * zeta) +
                         t3713) +
                        t3818) +
                       t3951) -
                      t3662) +
                     t4299) +
                    t4655) +
                   t770_tmp * -3.2071714048032409) -
                  t4427) -
                 t4599) +
                t5441) +
               t5682) -
              t5419) +
             0.029754638671875)) +
      ((((((((((((((((((((-t844 + t1892) + t1893) + t3833) + t4091) +
                      t77_tmp * -0.13293513545283561) +
                     eta * t4086) +
                    eta * t4092) -
                   t3908) +
                  t4602) -
                 t4164) +
                t4912) +
               t1108_tmp * -2.0807760733145249) +
              t5189) +
             t3 * t3906) +
            t3 * t3991) +
           t5499) -
          t5028) -
         t5029) +
        t5825) -
       0.0011444091796875);
  r_sfvals_tmp = t9 * t6208;
  s_sfvals_tmp = t6645 * xi;
  t_sfvals_tmp =
      t7 *
      ((((((((((((((t3204 + t3513) + t3571) + eta * t3227) + t3258 * zeta) +
                t4190) -
               t4238) -
              t4311) +
             t5022) +
            t5433) -
           t5126) +
          t5632) -
         t5316) -
        t5531) -
       0.049591064453125);
  sfvals[13] = ((q_sfvals_tmp + r_sfvals_tmp) + s_sfvals_tmp) - t_sfvals_tmp;
  u_sfvals_tmp =
      (t8 * ((((((((((-t888 - t2103) + t2946) + t4008) + t4685) + t5338) +
                 t5353) +
                t5397) +
               t5600) -
              t5145) +
             0.019073486328125) +
       -t6 * ((((((((((((((((t6627_tmp - t3581) + t3686) - t3928) - t3976) +
                         t4076) +
                        t4149) -
                       t4273) -
                      t4436) +
                     t4699) -
                    t4861) +
                   t4642 * zeta) +
                  t4900) +
                 t5333) +
                t5495) -
               t5684) +
              0.02593994140625)) +
      ((((((((((((((((((((t456 - t1380) - t1381) + t1870) + t1871) + t2759) +
                     t770_tmp * -1.673050868658372) +
                    t4024) +
                   t3524 * zeta) +
                  t4152) +
                 t4214) -
                t3935) +
               eta * t3804) -
              t4237) +
             t4833) +
            t1169_tmp * -1.701307885440779) +
           t3 * t4154) +
          t1556_tmp * -0.145994586709105) +
         t5687) +
        t5849) +
       0.006866455078125);
  v_sfvals_tmp = t6603 * xi;
  w_sfvals_tmp =
      t9 * (((((t1098 + t5164) + t5289) - t5151) - t5313) - 0.095367431640625);
  x_sfvals_tmp =
      t7 * ((((((((((((((t2823 + t2980) - t2933) + t3293) + t3390 * zeta) +
                     eta * t3319) -
                    t3442) +
                   t4477) -
                  t4260) -
                 t4540) +
                t5064) +
               t5615) -
              t5153) -
             t5671) +
            0.12969970703125);
  sfvals[14] = ((u_sfvals_tmp - v_sfvals_tmp) - w_sfvals_tmp) - x_sfvals_tmp;
  sfvals[15] = ((u_sfvals_tmp + v_sfvals_tmp) + w_sfvals_tmp) + x_sfvals_tmp;
  sfvals[16] = ((q_sfvals_tmp - r_sfvals_tmp) - s_sfvals_tmp) + t_sfvals_tmp;
  sfvals[17] = ((n_sfvals_tmp + o_sfvals_tmp) - sfvals_tmp) - p_sfvals_tmp;
  sfvals[18] = ((k_sfvals_tmp + l_sfvals_tmp) + f_sfvals_tmp) + m_sfvals_tmp;
  sfvals[19] = ((g_sfvals_tmp + h_sfvals_tmp) - i_sfvals_tmp) + j_sfvals_tmp;
  sfvals[20] = ((b_sfvals_tmp - c_sfvals_tmp) - d_sfvals_tmp) + e_sfvals_tmp;
  sfvals_tmp =
      (-t8 * ((((((t6059_tmp + t2 * t513) + t2517) + t2668) + t2669) +
               t1344_tmp * -5.4253472222222223) -
              t1345_tmp * 5.4253472222222223) +
       (((((((((((((t35 + t77_tmp * -0.26403356481481483) + t3 * t482) +
                  t2005) +
                 eta * t1466) +
                eta * t1485) -
               t1929) +
              t2323) +
             t1108_tmp * -6.4199942129629628) +
            t6228_tmp * -1.808449074074074) +
           t2726) +
          t2997) +
         t3863) -
        t3760)) +
      t6 * ((((((((((((((t6317_tmp - t526) + t1095) + t1270) + t1392) + t1469) +
                    t1989) +
                   t2079) -
                  t2326) +
                 t2677) +
                t2721) +
               t2740) +
              t3749) +
             t3755 * zeta) +
            t4095);
  b_sfvals_tmp =
      t7 * ((((((((((((-t214 + t482) + t26_tmp * -3.2552083333333335) +
                     t77_tmp * -5.4253472222222223) +
                    t1236) +
                   t1269) +
                  t1391) -
                 t1018) +
                t1752) +
               t1761) +
              t2504) +
             t2505) +
            t2720);
  c_sfvals_tmp = t6270 * xi;
  sfvals[21] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  d_sfvals_tmp =
      -t6200 +
      (((((((((((((t429 * zeta - t467) + t1123) + t1427) - t1041) + t1480) -
              t1479) +
             t1169_tmp * -0.40690104166666669) +
            eta * t1434) +
           t1556_tmp * -18.310546875) +
          t770_tmp * -7.405598958333333) +
         t2435) +
        t2469) +
       t10 * t936);
  e_sfvals_tmp = t7 * ((((((((((-t216 + t481) + t26_tmp * -1.6276041666666667) +
                              t77_tmp * -2.034505208333333) +
                             t1364) -
                            t1016) +
                           t1365 * zeta_1_inv) +
                          t2035) +
                         t2160) +
                        t2162) +
                       t2708);
  f_sfvals_tmp = t6233 * xi;
  sfvals[22] = (d_sfvals_tmp - e_sfvals_tmp) - f_sfvals_tmp;
  g_sfvals_tmp =
      t6 * ((((((t5962_tmp + t168) + t575) + t1182) + t1183) + t1260) + t1328) +
      ((((((((t34 + t77) + t616) + t640) - t593) - t647) + t1108) + t1154) +
       t1186);
  h_sfvals_tmp = t6089 * xi;
  sfvals[23] = g_sfvals_tmp + h_sfvals_tmp;
  i_sfvals_tmp = t5955 * xi;
  sfvals[24] = t5988 - i_sfvals_tmp;
  sfvals[25] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[26] = (d_sfvals_tmp + e_sfvals_tmp) + f_sfvals_tmp;
  sfvals[27] = g_sfvals_tmp - h_sfvals_tmp;
  sfvals[28] = t5988 + i_sfvals_tmp;
  sfvals_tmp =
      (t8 * ((((((t6059_tmp + t398_tmp * -1.356336805555556) + t2505) +
                t16 * t933) +
               t2668) +
              t2669) -
             t2517) +
       (((((((((((((t35 + t446 * zeta) + t1169_tmp * -0.36168981481481483) +
                  t2005) +
                 eta * t1487) -
                t1929) +
               t2323) +
              t770_tmp * -2.3690682870370372) +
             t1556_tmp * -5.8774594907407414) +
            t3 * t1018) +
           t2726) +
          t2997) +
         t3863) -
        t3760)) +
      -t6 *
          ((((((((((((((t6317_tmp + t526) + t1095) + t1270) + t1392) - t1469) +
                   t1620) +
                  t2079) +
                 t2326) +
                t2518) +
               t2721) -
              t2740) -
             t3749) -
            t4095) -
           t761_tmp * 30.442226080246911);
  b_sfvals_tmp =
      t7 *
      ((((((((((((t214 + t214 * zeta_1_inv) + t482) + t436 * zeta) + t1269) +
              t1391) -
             t1018) +
            t1586) -
           t1752) -
          t1761) +
         t2504) +
        t2505) +
       t2720);
  c_sfvals_tmp = t6271 * xi;
  sfvals[29] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      t6212 +
      (((((((((((((-t467 + t77_tmp * -0.79752604166666674) + t1123) + t1427) -
                t1041) +
               t1480) +
              t3 * t481) -
             t1479) +
            eta * t1430) +
           eta * t1436) +
          t1108_tmp * -20.751953125) +
         t2435) +
        t2469) +
       t6228_tmp * -2.034505208333333);
  e_sfvals_tmp =
      t7 * ((((((((((t216 + t216 * zeta_1_inv) + t481) + t439 * zeta) + t1364) -
                 t1016) +
                t2035) +
               t2160) +
              t748_tmp * -18.310546875) -
             t2162) -
            t2708);
  f_sfvals_tmp = t6234 * xi;
  sfvals[30] = (d_sfvals_tmp + e_sfvals_tmp) + f_sfvals_tmp;
  g_sfvals_tmp =
      t6 * (((((((-t89 - t56) + t333) + t575) + t1183) + t1260) + t1328) +
            t1553) +
      ((((((((t34 + t43) + t616) + t640) + t736) - t593) - t647) + t1537) +
       t1556);
  h_sfvals_tmp = t6095 * xi;
  sfvals[31] = g_sfvals_tmp - h_sfvals_tmp;
  i_sfvals_tmp = t5956 * xi;
  sfvals[32] = t5989 - i_sfvals_tmp;
  sfvals[33] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[34] = (d_sfvals_tmp - e_sfvals_tmp) - f_sfvals_tmp;
  sfvals[35] = g_sfvals_tmp + h_sfvals_tmp;
  sfvals[36] = t5989 + i_sfvals_tmp;
  sfvals_tmp =
      (t8 * ((((((((((-t2109 + t2593) + t2785) + t2961) +
                   t1345_tmp * -23.84185791015625) -
                  t3066) -
                 t3098) +
                t3219) +
               t5396) -
              t5472) +
             0.2384185791015625) +
       t6 * ((((((((((((((((t1322 + t1708) + t1872) + t2786) - t2735) - t2841) +
                       t2962) +
                      t3460) +
                     t4001) +
                    t761_tmp * -32.848782009548607) +
                   t4284) +
                  t4423) -
                 t3930) -
                t3998) -
               t4478) +
              t5552) -
             0.247955322265625)) +
      ((((((((((((((((((t6661_tmp + t2310) + t2423) + t2882) + t3802) + t4269) -
                   t3800) +
                  t4138 * zeta) -
                 t3988) -
                t4003) +
               eta * t3884) +
              t770_tmp * -1.269799691659433) +
             t1169_tmp * -0.80355891474971064) -
            t4646) +
           t1556_tmp * -1.236244484230324) +
          t5283) +
         t3 * t3880) +
        t5694) +
       0.0095367431640625);
  b_sfvals_tmp = t9 * t6266;
  c_sfvals_tmp = t6639 * xi;
  d_sfvals_tmp =
      t7 * ((((((((((((((-t2840 - t3069) + t3389) + t3403) - t3298) + t3768) +
                    t3880) -
                   t3702) +
                  t4418) -
                 t3927) +
                t4880) +
               t5415) -
              t5127) -
             t5533) +
            0.41325887044270831);
  sfvals[37] = ((sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp) + d_sfvals_tmp;
  e_sfvals_tmp =
      (-t8 * ((((((((((-t2110 + t3193) + t3642) + t3918) + t4921) - t4959) +
                  t5303) -
                 t5160) -
                t5405) -
               t6415_tmp) +
              0.15894571940104171) +
       -t6 *
           ((((((((((((((((t2864 + t3323) + t3342) + t3480) + t3777) + t4112) +
                      t4254) -
                     t4308) -
                    t4309) +
                   t4585) +
                  t4700) +
                 t5084) +
                t5099) +
               t5148) +
              t5527) -
             t6548_tmp) -
            0.21616617838541671)) +
      ((((((((((((((((((((t838 + t1868) - t1874) - t1888) + t2305) + t2652) +
                     eta * t3162) +
                    t3362 * zeta) +
                   t3663) +
                  t4125) +
                 t4469) -
                t4093) +
               t3 * t3413) +
              t4626) -
             t4174) +
            t4788) +
           t770_tmp * -10.512787618754819) +
          t1556_tmp * -5.533665786554784) +
         t3 * t4022) +
        t5824) -
       0.057220458984375);
  f_sfvals_tmp = t6599 * xi;
  g_sfvals_tmp = t9 * (((((t3602 + t4964) + t5109) - t4858) - t5074) +
                       0.79472859700520826);
  sfvals_tmp_tmp =
      (t892_tmp * 0.2260561342592593 - t398_tmp * 8.58306884765625) + t3047;
  h_sfvals_tmp = t7 * ((((((((((((sfvals_tmp_tmp - t3312) - t3358) - t3408) +
                               t77_tmp * -7.8001140076437112) +
                              t4176) +
                             t4236) -
                            t4156) +
                           t4853) +
                          t4882) +
                         t5438) +
                        t5512) +
                       1.080830891927083);
  sfvals[38] = ((e_sfvals_tmp + f_sfvals_tmp) + g_sfvals_tmp) - h_sfvals_tmp;
  sfvals[39] = ((e_sfvals_tmp - f_sfvals_tmp) - g_sfvals_tmp) + h_sfvals_tmp;
  sfvals[40] = ((sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp) - d_sfvals_tmp;
  sfvals_tmp =
      (t8 * ((((((((((t1725 - t3046) + t3220) + t3645) - t4248) + t4959) +
                 t4975) +
                t5451) -
               t5075) -
              t5408) -
             1.430511474609375) +
       -t6 *
           ((((((((((((((((t1707 + t2700) - t2642) + t2864) + t3164) - t3529) -
                      t3313) +
                     t77_tmp * -23.912500452112269) +
                    t3777) +
                   eta * t3669) +
                  t3925) +
                 t4175) +
                t4585) +
               t4944) +
              t5087) -
             t6548_tmp) -
            1.48773193359375)) +
      ((((((((((((((((((((t1291 + t1876) - t1894) - t2306) + t2585) + t2769) +
                     t3663) +
                    t77_tmp * -1.4375757288049771) +
                   t4125) +
                  eta * t4168) -
                 t4093) +
                t3 * t3408) +
               t4626) -
              t4174) +
             eta * t4601) +
            t4998) +
           t1108_tmp * -1.571796558521412) +
          t6228_tmp * -1.147941306785301) +
         t5883) +
        t5884) -
       0.057220458984375);
  b_sfvals_tmp = t9 * t6192;
  c_sfvals_tmp = t6632 * xi;
  d_sfvals_tmp =
      t7 *
      ((((((((((((((-t3138 + t3221 * zeta) - t3413) + t4109) + t4176) - t4022) -
               t4156) +
              t4688) +
             t4853) +
            t4881) +
           t5318) +
          t5512) +
         t5524) -
        t5435) +
       2.47955322265625);
  sfvals[41] = ((sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp) + d_sfvals_tmp;
  e_sfvals_tmp =
      (-t8 * ((((((((((-t1725 - t3046) + t3220) + t3645) + t4248) - t4959) +
                  t4975) +
                 t5075) -
                t5408) -
               t6415_tmp) +
              1.430511474609375) +
       -t6 *
           ((((((((((((((((-t1707 + t2642) - t2700) + t2864) + t3164) + t3313) +
                      t3140 * zeta) -
                     t3529) +
                    t3777) +
                   t3925) +
                  t4175) +
                 t770_tmp * -16.24778464988426) +
                t4585) +
               t4944) -
              t5087) -
             t6548_tmp) -
            1.48773193359375)) +
      ((((((((((((((((((((-t1291 + t1876) + t1894) - t2306) - t2585) + t2769) +
                     t3663) +
                    t3241 * zeta) +
                   t4125) -
                  t4093) +
                 t4626) +
                eta * t3962) -
               t4174) +
              t770_tmp * -2.3700572826244208) +
             t4998) +
            t1169_tmp * -2.454828332971644) +
           t1556_tmp * -0.35321270978009262) +
          t3 * t4236) +
         t5883) +
        t5884) -
       0.057220458984375);
  f_sfvals_tmp = t9 * t6197;
  g_sfvals_tmp = t6630 * xi;
  h_sfvals_tmp =
      t7 *
      ((((((((((((((t3138 + t3737) - t3413) + t77_tmp * -2.796267285759066) +
                 t4109) +
                t4156) -
               t4022) +
              t4688) -
             t4853) +
            t5318) -
           t4881) +
          t5524) -
         t5435) -
        t5512) +
       2.47955322265625);
  sfvals[42] = ((e_sfvals_tmp + f_sfvals_tmp) + g_sfvals_tmp) + h_sfvals_tmp;
  i_sfvals_tmp =
      (-t8 *
           ((((((((((t2109 + t2593) - t2785) - t2961) + t16 * t2314) + t3098) -
                t3066) +
               t3219) +
              t5396) -
             t5472) -
            0.2384185791015625) +
       -t6 *
           ((((((((((((((((-t1322 + t1708) - t1872) + t2735) - t2786) - t2841) -
                      t2962) +
                     t3460) +
                    t3286 * zeta) +
                   t3998) -
                  t4001) +
                 t4284) +
                t4423) -
               t3930) +
              t4478) +
             t5552) +
            0.247955322265625)) +
      ((((((((((((((((((t6661_tmp + t2423) - t2310) + t2882) + t3802) + t3988) +
                   t4269) -
                  t3800) +
                 eta * t4121) +
                t3 * t3298) -
               t4003) +
              t4646) +
             eta * t4030) +
            t77_tmp * -0.040619461624710647) +
           t1108_tmp * -2.48131928620515) +
          t5283) +
         t5694) +
        t6228_tmp * -1.633608782732928) +
       0.0095367431640625);
  j_sfvals_tmp = t9 * t6268;
  k_sfvals_tmp = t6643 * xi;
  l_sfvals_tmp =
      t7 * ((((((((((((((t2840 + t3069) + t3298) + t3389) + t3403) + t3768) +
                    t3927) -
                   t3702) -
                  t3880) +
                 t4880) -
                t4418) -
               t5127) +
              t5770) -
             t5533) -
            0.41325887044270831);
  sfvals[43] = ((i_sfvals_tmp - j_sfvals_tmp) + k_sfvals_tmp) + l_sfvals_tmp;
  m_sfvals_tmp =
      (t8 * ((((((((((t2110 + t3193) + t3642) - t3918) + t4959) + t5303) -
                 t4921) +
                t5451) -
               t5160) -
              t5405) -
             0.15894571940104171) +
       t6 * ((((((((((((((((-t2864 + t3323) + t3480) - t3342) + t3466 * zeta) +
                        t4112) -
                       t3777) +
                      t4308) +
                     t4309) +
                    t4700) -
                   t4254) -
                  t4585) +
                 t5099) +
                t5148) +
               t5527) -
              t5084) +
             0.21616617838541671)) +
      ((((((((((((((((((((-t838 + t1868) + t1874) - t1888) - t2305) + t2652) +
                     t3663) +
                    t1108_tmp * -13.6045762050299) +
                   t77_tmp * -2.3465097686390819) +
                  t4125) +
                 t4469) -
                t4093) +
               eta * t3939) +
              t4626) -
             t4174) +
            eta * t4025) +
           t4788) +
          t1169_tmp * -2.2311269501109181) +
         t6228_tmp * -3.149479995539159) +
        t5824) -
       0.057220458984375);
  n_sfvals_tmp = t6598 * xi;
  o_sfvals_tmp = t9 * (((((t3602 + t5074) + t5109) - t4858) - t4964) -
                       0.79472859700520826);
  p_sfvals_tmp =
      t7 *
      ((((((((((((sfvals_tmp_tmp + t3358) + t3401 * zeta) - t3312) + t3737) -
              t3408) +
             t4156) +
            t4236) -
           t4853) -
          t4882) +
         t5438) -
        t5512) +
       1.080830891927083);
  sfvals[44] = ((m_sfvals_tmp - n_sfvals_tmp) + o_sfvals_tmp) + p_sfvals_tmp;
  sfvals[45] = ((m_sfvals_tmp + n_sfvals_tmp) - o_sfvals_tmp) - p_sfvals_tmp;
  sfvals[46] = ((i_sfvals_tmp + j_sfvals_tmp) - k_sfvals_tmp) - l_sfvals_tmp;
  sfvals[47] = ((e_sfvals_tmp - f_sfvals_tmp) - g_sfvals_tmp) - h_sfvals_tmp;
  sfvals[48] = ((sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp) - d_sfvals_tmp;
  sfvals_tmp =
      (-t8 * ((((((((((t1719 - t2971) + t3194) + t3436) - t3971) - t4844) +
                  t4876) +
                 t5146) +
                t5161) -
               t5601) -
              0.95367431640625) +
       -t6 * ((((((((((((((t6543_tmp + t2863) + t3174) - t3185) + t3354) +
                       t3458) +
                      t3657) -
                     t3758) -
                    t3853) +
                   t3753 * zeta) -
                  t3977) +
                 t4196) -
                t4862) -
               t5149) +
              1.2969970703125)) +
      ((((((((((((((((((((-t1292 + t1861) + t1878) - t1844) - t2299) + t2757) +
                     t3172 * zeta) -
                    t3228) -
                   t3443) +
                  t1556_tmp * -4.4740276572145063) +
                 t4104) +
                t4209) +
               t4244) +
              eta * t4115) +
             t4532) +
            t770_tmp * -17.51699565369406) +
           t1169_tmp * -15.19992027753665) -
          t4119) +
         t3 * t3697) +
        t5068) +
       0.34332275390625);
  b_sfvals_tmp = t6568 * xi;
  sfvals_tmp_tmp = (eta * t1726 + t4462_tmp * 66.227383083767364) -
                   t1335_tmp * 90.069240993923614;
  c_sfvals_tmp = t9 * (((sfvals_tmp_tmp + t5152) - t5123) + 4.76837158203125);
  d_sfvals_tmp =
      t7 *
      ((((((((((((((t2859 - t2842) + t14 * t2314) + t3156) - t3134) - t3182) +
               t3697) +
              t4027) -
             t3654) -
            t3703) +
           t4380) -
          t4191) +
         t5364) +
        t5618) +
       6.4849853515625);
  sfvals[49] = ((sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp) + d_sfvals_tmp;
  sfvals[50] = ((sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp) - d_sfvals_tmp;
  sfvals_tmp =
      (t8 * ((((((((((-t1719 - t2971) + t3194) + t3436) + t3971) + t4844) +
                 t5161) +
                t5337) -
               t5146) -
              t5601) +
             0.95367431640625) +
       t6 * ((((((((((((((t6543_tmp - t2863) + t3185) + t3354) - t3174) +
                      t3657) +
                     t3758) -
                    t3458) +
                   t3853) +
                  t3977) +
                 t4196) +
                t761_tmp * -25.902265383873459) +
               t4862) -
              t5149) -
             1.2969970703125)) +
      ((((((((((((((((((((t1292 + t1861) - t1844) - t1878) + t2299) + t2757) +
                     eta * t3365) -
                    t3228) +
                   t77_tmp * -9.096404652536652) -
                  t3443) +
                 eta * t3476) +
                t3 * t3182) +
               t4104) +
              t4209) +
             t4244) +
            t4532) -
           t4119) +
          t1108_tmp * -14.611232427903159) +
         t5068) +
        t6228_tmp * -9.2423992392457563) +
       0.34332275390625);
  b_sfvals_tmp = t6570 * xi;
  c_sfvals_tmp = t9 * (((sfvals_tmp_tmp + t5123) - t5152) - 4.76837158203125);
  d_sfvals_tmp =
      t7 *
      ((((((((((((((t2842 + t2859) + t1797_tmp * -23.84185791015625) + t3156) +
                 t3182) -
                t3134) +
               t3654) +
              t4027) -
             t3697) -
            t3703) +
           t4191) +
          t4380) +
         t5364) -
        t5618) -
       6.4849853515625);
  sfvals[51] = ((sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp) + d_sfvals_tmp;
  sfvals[52] = ((sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp) - d_sfvals_tmp;
  sfvals_tmp =
      (t8 * t6035 + (((((((((((((-t126 + t980) - t602) + t1020) +
                              t77_tmp * -0.5063657407407407) -
                             t1011) +
                            t1169_tmp * -1.4467592592592593) +
                           t1615) +
                          eta * t1431) +
                         eta * t1453) +
                        t3 * t631) +
                       t1108_tmp * -13.382523148148151) +
                      t2804) +
                     t2866)) +
      -t6 *
          (((((((((((((((t59 + t92) - t126) + t589) - t569) - t1010) + t1065) +
                   eta * t623) -
                  t1237) +
                 t1384) -
                t1142) +
               t2025) +
              t2147) +
             t2411) -
            t2232) +
           t2514);
  b_sfvals_tmp =
      t7 * ((((((((((((-t211 + t474) + t26_tmp * -6.510416666666667) + t678) +
                    t1230) +
                   t1267) +
                  t1388) -
                 t1007) +
                t1743) +
               t1755) +
              t2247) +
             t2248) +
            t2715);
  c_sfvals_tmp = t6186 * xi;
  sfvals[53] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  d_sfvals_tmp = t228 + t228 * zeta_1_inv;
  e_sfvals_tmp = t1335_tmp * 32.552083333333329;
  sfvals[54] =
      (((((((((((((((t434 * zeta - t478) + t1036) + t1208) + t1467) +
                 eta * t975) +
                t1551) +
               t1573) +
              eta * t1009) -
             t1435) -
            t1455) +
           t10 * t567) +
          t2792) +
         t2849) -
        t770_tmp * 5.3168402777777777) -
       t6 * (((((((((((((((t60 + t93) + t445 * zeta) + t801) - t478) + t955) +
                      t1007) +
                     t1368) -
                    t1454) +
                   t1669) +
                  t2054) +
                 t2091) +
                t14 * t570) +
               t2519) +
              t2551) -
             t770_tmp * 5.4253472222222223)) -
      t8 * ((((((d_sfvals_tmp + t2 * t274) + t2249) + t2473) + t2476) +
             t1345_tmp * -32.552083333333329) -
            e_sfvals_tmp);
  sfvals[55] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp =
      t6200 + ((((((((((((t6219_tmp + t426 * zeta) - t595) + t1004) - t637) +
                      t3 * t483) +
                     t1974) +
                    eta * t1471) +
                   t2255) +
                  t770_tmp * -19.287109375) +
                 t1556_tmp * -30.517578125) +
                t6228_tmp * -18.310546875) +
               t2814);
  b_sfvals_tmp = t7 * t6111;
  c_sfvals_tmp = t6134 * xi;
  sfvals[56] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[57] = ((((((t395 + eta * t313) + t12 * t115) + t1776) + t2113) -
                 t1108_tmp * 104.16666666666667) -
                t77_tmp * 5.208333333333333) -
               t6 * t5944;
  sfvals[58] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp =
      (t8 * ((((((t6032_tmp + t1235) + t2228) - t2234) - t2235) + t2493) +
             t2494) +
       (((((((((((((-t126 + t664) + t728) + t980) - t602) + t1020) - t1011) +
              eta * t1032) +
             t1169_tmp * -0.72337962962962965) +
            t1556_tmp * -3.6168981481481479) +
           t770_tmp * -5.0636574074074074) +
          t2436) +
         t3 * t1007) +
        t2507)) +
      -t6 * (((((((((((((t337 - t511) + t1268) + t1384) + t1389) + t1458) -
                    t1943) +
                   t1981) +
                  t2025) +
                 t2362) +
                t2411) +
               t2514) +
              t2670) +
             t2717);
  b_sfvals_tmp =
      t7 * ((((((((((((-t108 + t246) + t26_tmp * -26.041666666666668) +
                     t77_tmp * -43.402777777777779) -
                    t568) -
                   t631) +
                  t1230) -
                 t1141) +
                t1743) +
               t1755) +
              t2146) +
             t2232) +
            t2234);
  c_sfvals_tmp = t6254 * xi;
  sfvals[59] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  f_sfvals_tmp =
      (t8 * ((((t269 - t398_tmp * 40.690104166666671) + t2226) + t2227) -
             t2550) +
       ((((((t6033_tmp + t1467) + t2 * t478) - t1435) - t1455) +
         t2113_tmp * -3.6168981481481479) +
        t2 * t1454)) +
      -t6 *
          ((((((((-t484 + t1244) + t1368) + t10 * 16.637731481481481) - t1934) +
              t2054) +
             t2091) +
            t2250) +
           t2519);
  g_sfvals_tmp = t6069 * xi;
  h_sfvals_tmp = t7 * ((((((t268 + t800) + t2 * 54.253472222222221) - t620) +
                         t892_tmp * 10.850694444444439) +
                        t1797_tmp * -32.552083333333329) +
                       t2476);
  sfvals[60] = (f_sfvals_tmp + g_sfvals_tmp) + h_sfvals_tmp;
  i_sfvals_tmp =
      (-t8 * ((((((t6032_tmp + t2234) + t2235) + t2478) + t2493) + t2494) -
              t6021_tmp) +
       (((((((((((((-t126 + t728) + t980) - t602) + t1020) + t1065) - t1011) +
              t3 * t474) +
             eta * t1008) +
            eta * t1022) +
           t1108_tmp * -7.9571759259259256) +
          t2436) +
         t2507) +
        t6228_tmp * -3.6168981481481479)) +
      t6 * (((((((((((((t337 + t511) + t1268) + t1389) + t1603) - t1384) -
                   t1458) +
                  t1943) +
                 t761_tmp * -24.112654320987652) +
                t2362) +
               t2504) -
              t2411) -
             t2514) +
            t2717);
  j_sfvals_tmp =
      t7 *
      ((((((((((((t108 + t108 * zeta_1_inv) + t246) + t223 * zeta) - t568) -
              t631) -
             t1141) +
            t1578) -
           t1743) +
          t2132) +
         t2146) +
        t2232) +
       t2234);
  k_sfvals_tmp = t6253 * xi;
  sfvals[61] = (i_sfvals_tmp + j_sfvals_tmp) + k_sfvals_tmp;
  l_sfvals_tmp =
      t6164 + ((((((((((((t6219_tmp + t658) - t595) + t1004) - t637) + t1519) +
                     t11 * t443) +
                    t1169_tmp * -1.220703125) +
                   t1556_tmp * -6.103515625) +
                  t770_tmp * -8.544921875) +
                 t2116) +
                t10 * t931) +
               t2662);
  m_sfvals_tmp =
      t7 * ((((((((((t231 + t231 * zeta_1_inv) + t483) + t835 * zeta) + t1364) -
                 t1429) +
                t2035) +
               t2160) +
              t2378) +
             t2526) -
            t2746);
  n_sfvals_tmp = t6203 * xi;
  sfvals[62] = (l_sfvals_tmp - m_sfvals_tmp) - n_sfvals_tmp;
  o_sfvals_tmp = t5949 * xi;
  sfvals[63] = t5947 + o_sfvals_tmp;
  p_sfvals_tmp =
      t6149 +
      (((((((((b_t6219_tmp + t1064) + t1519) + t3 * t468) + t12 * t435) +
           eta * t1019) +
          t1108_tmp * -13.427734375) +
         t2116) +
        t2662) +
       t6228_tmp * -6.103515625);
  q_sfvals_tmp =
      t7 * ((((((((((-t231 + t483) + t26_tmp * -43.9453125) + t1364) +
                  t77_tmp * -54.931640625) -
                 t1429) +
                t2035) +
               t2070) +
              t2160) +
             t2262) +
            t2746);
  r_sfvals_tmp = t6209 * xi;
  sfvals[64] = (p_sfvals_tmp - q_sfvals_tmp) - r_sfvals_tmp;
  s_sfvals_tmp =
      (-t8 * t6037 +
       (((((((((((((-t126 + t428 * zeta) + t980) - t602) + t1020) + t3 * t246) -
               t1011) +
              t1615) +
             eta * t1470) +
            t770_tmp * -4.846643518518519) +
           t1556_tmp * -9.04224537037037) +
          t6228_tmp * -7.2337962962962958) +
         t2804) +
        t2866)) +
      -t6 *
          (((((((((((((((-t92 - t59) - t126) + t569) + t589) + t664) - t1010) +
                   t1142) -
                  t1237) +
                 t1384) +
                t770_tmp * -14.46759259259259) +
               t2025) +
              t2411) -
             t2147) -
            t2232) +
           t2514);
  t_sfvals_tmp =
      t7 *
      ((((((((((((t211 + t211 * zeta_1_inv) + t367) + t474) + t1267) + t1388) -
             t1007) +
            t1578) -
           t1743) +
          t2132) +
         t2247) +
        t2248) +
       t2715);
  u_sfvals_tmp =
      xi *
      (((((((((((((t474 - t292) + t571) - t751) + t1032) - t1008) - t1022) +
             t1609) +
            t2724) +
           eta * t628) +
          t77_tmp * 4.3402777777777777) +
         t2 * -t243) +
        t3 * -t262) +
       t571 * zeta_1_inv);
  sfvals[65] = (s_sfvals_tmp + t_sfvals_tmp) - u_sfvals_tmp;
  sfvals[66] =
      ((((((((((((((t6033_tmp + t1207) + t1208) + t1467) + t1551) +
                eta * t1030) -
               t1435) -
              t1455) +
             t2792) +
            t2849) -
           t1108_tmp * 0.54253472222222221) -
          t1556_tmp * 2.7126736111111112) -
         t77_tmp * 2.0616319444444442) -
        t6228_tmp * 21.701388888888889) +
       t8 * ((((((d_sfvals_tmp + t398_tmp * -8.1380208333333321) + t2226) +
                t2227) +
               t2473) -
              t2249) -
             e_sfvals_tmp)) -
      t6 * (((((((((((((((-t60 - t93) - t478) - t955) + t1007) + t1227) +
                     t1368) -
                    t1454) +
                   t10 * t436) +
                  t1669) +
                 t2054) +
                t2091) +
               t2493) +
              t2519) +
             t2551) -
            t77_tmp * 14.10590277777778);
  sfvals[67] = (s_sfvals_tmp - t_sfvals_tmp) + u_sfvals_tmp;
  d_sfvals_tmp = -t6212 + (((((((((b_t6219_tmp + t77_tmp * -2.197265625) +
                                  t1169_tmp * -3.662109375) +
                                 t1974) +
                                eta * t1432) +
                               eta * t1447) +
                              t2255) +
                             t1108_tmp * -47.607421875) +
                            t10 * t1365) +
                           t2814);
  e_sfvals_tmp = t7 * t6110;
  s_sfvals_tmp = t6135 * xi;
  sfvals[68] = (d_sfvals_tmp + e_sfvals_tmp) + s_sfvals_tmp;
  sfvals[69] = ((((((t59 * zeta + t395) + eta * t151) + t1776) + t2113) -
                 t6 * t5952_tmp) -
                t770_tmp * 44.270833333333329) -
               t1556_tmp * 65.104166666666671;
  sfvals[70] = (d_sfvals_tmp - e_sfvals_tmp) - s_sfvals_tmp;
  sfvals[71] = (i_sfvals_tmp - j_sfvals_tmp) - k_sfvals_tmp;
  sfvals[72] = (f_sfvals_tmp - g_sfvals_tmp) - h_sfvals_tmp;
  sfvals[73] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[74] = (p_sfvals_tmp + q_sfvals_tmp) + r_sfvals_tmp;
  sfvals[75] = t5947 - o_sfvals_tmp;
  sfvals[76] = (l_sfvals_tmp + m_sfvals_tmp) + n_sfvals_tmp;
  sfvals_tmp =
      (-t8 * t6003 +
       (((((((((((((t124 + t599) + t630) + t77_tmp * -2.8935185185185186) -
                 t594) -
                t635) +
               t1105) +
              t3 * t243) +
             eta * t625) +
            eta * t636) +
           t1108_tmp * -31.8287037037037) +
          t2115) +
         t6228_tmp * -14.46759259259259) +
        t2461)) +
      t6 * ((((((((((((t6187_tmp + t585) + t689) - t565) - t629) - t755) +
                  t1163) +
                 t1188) -
                t798) +
               t1657) +
              t1732) +
             t1764) -
            t1824);
  b_sfvals_tmp =
      t7 * ((((((((((((-t106 + t243) + t26_tmp * -52.083333333333336) + t359) +
                    t300 * zeta_1_inv) -
                   t564) -
                  t623) -
                 t754) +
                t15 * t290) +
               t1762) +
              t1770) +
             t2218) +
            t2219);
  c_sfvals_tmp = t6150 * xi;
  sfvals[77] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp = t115 + t115 * zeta_1_inv;
  sfvals[78] =
      (((((((((((((((t245 + t676) + t10 * t114) - t650) + t1038) + t12 * t223) +
                t3 * t265) +
               t1247) +
              t1449) -
             t1056) +
            t1557) +
           t2173) +
          t2723) -
         t1108_tmp * 108.5069444444444) -
        t6228_tmp * 43.402777777777779) +
       t6 * (((((((((((((t181 - t245) + t566) + t623) + t794) + t952) + t1646) +
                   t1665) -
                  t1448) +
                 t2012) +
                t2146) +
               t2230) +
              t2546) -
             t770_tmp * 108.5069444444444)) +
      t8 * ((((((d_sfvals_tmp + t793) + t1806) - t1812) - t1813) - t1831) -
            t1832);
  sfvals[79] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      (-t8 * t5924 +
       (((((((t245 - t650) + t1038) + t1449) - t1056) + t1520) + t2172) +
        t2461_tmp * -18.08449074074074)) +
      t6 * ((((((((t277 + t566) + t624) + t792_tmp * 130.20833333333329) -
                t10 * 50.636574074074069) +
               t1646) +
              t1810) +
             t2012) +
            t2146);
  b_sfvals_tmp = t5968 * xi;
  c_sfvals_tmp =
      t7 *
      ((((((t265 + t793) + t951) - t611) + t1797_tmp * -65.104166666666671) +
        t2213) +
       t2228);
  sfvals[80] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  e_sfvals_tmp =
      (t8 * t6005 +
       t6 * ((((((((((((t6187_tmp + t380) + t565) + t585) + t755) - t629) +
                   t1163) -
                  t798) +
                 t1558) +
                t1657) +
               t1732) -
              t1764) -
             t1824)) +
      (((((((((((((t124 + t337) + t599) + t630) - t594) - t635) + t1105) +
             eta * t648) +
            t1169_tmp * -2.8935185185185186) +
           t1556_tmp * -14.46759259259259) +
          t770_tmp * -20.25462962962963) +
         t2115) +
        t10 * t569) +
       t2461);
  f_sfvals_tmp =
      t7 *
      ((((((((((((t106 + t106 * zeta_1_inv) + t181) + t243) - t564) - t623) -
             t754) +
            t1224) +
           t1762) +
          t1335_tmp * -52.083333333333336) -
         t1770) +
        t2218) +
       t2219);
  g_sfvals_tmp =
      xi * (((((((((((((t243 - t290) + t560) + t648) - t747) - t774) - t625) -
                  t636) +
                 t1245) +
                t2456) +
               eta * t320) +
              t77_tmp * 34.722222222222221) +
             t576 * zeta) +
            t560 * zeta_1_inv);
  sfvals[81] = (e_sfvals_tmp - f_sfvals_tmp) + g_sfvals_tmp;
  sfvals[82] =
      (((((((((((((((t245 + t365) - t650) + t1038) + t1247) + t1449) - t1056) +
               t1557) +
              t11 * t450) +
             t10 * t559) +
            t2173) +
           t2723) -
          t770_tmp * 86.805555555555557) -
         t1556_tmp * 43.402777777777779) -
        t1169_tmp * 21.701388888888889) +
       t6 * (((((((((((((t359 - t245) + t566) + t623) - t794) - t952) + t1646) +
                   t10 * t450) +
                  t1665) -
                 t1448) +
                t2012) +
               t2146) +
              t2479) +
             t2546)) -
      t8 * ((((((d_sfvals_tmp - t793) + t1812) + t1813) - t1806) - t1831) -
            t1832);
  sfvals[83] = (e_sfvals_tmp + f_sfvals_tmp) - g_sfvals_tmp;
  sfvals[84] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      -t6149 +
      (((((((((((((t699 - t501) + t1043) + t1061) - t1051) + t1594) - t1477) +
             t1169_tmp * -10.986328125) +
            eta * t1489) +
           t1556_tmp * -54.931640625) +
          t770_tmp * -76.904296875) +
         t2516) +
        t2730) +
       t10 * t1396);
  b_sfvals_tmp = t7 * t6125;
  c_sfvals_tmp = t6159 * xi;
  sfvals[85] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[86] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp =
      -t6164 + (((((((((((((-t501 + t1043) + t1061) + t1076) - t1051) + t1594) +
                       t3 * t514) -
                      t1477) +
                     t12 * t835) +
                    eta * t1481) +
                   t1108_tmp * -120.849609375) +
                  t2516) +
                 t2730) +
                t6228_tmp * -54.931640625);
  b_sfvals_tmp = t7 * t6124;
  c_sfvals_tmp = t6160 * xi;
  sfvals[87] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[88] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[89] = (((((((t10 * -98.958333333333329 + t11 * 296.875) -
                     t12 * 338.54166666666669) +
                    t13 * 130.20833333333329) +
                   t65) -
                  t2461_tmp * 130.20833333333329) +
                 t10 * t289) -
                t761_tmp * 10.416666666666666) +
               t6 * t5946_tmp;
  sfvals[90] =
      (((((((t10 * -65.538194444444443 + t11 * 109.8090277777778) -
            t12 * 80.295138888888886) +
           t13 * 21.701388888888889) +
          zeta * 14.32291666666667) +
         t8 * ((((t1801 + t1804) - t2542) + zeta * 48.828125) -
               t398_tmp * 244.140625)) -
        t6 * ((((((((t2 * -6.510416666666667 - t10 * 134.54861111111109) +
                    t11 * 70.529513888888886) +
                   t2543) +
                  zeta * 63.151041666666671) +
                 t892_tmp * 0.86805555555555558) -
                t761_tmp * 314.67013888888891) -
               t398_tmp * 5.6423611111111107) +
              t792_tmp * 244.140625)) +
       t2113_tmp * 134.54861111111109) +
      ((t2461_tmp * -70.529513888888886 - t761_tmp * 63.151041666666671) +
       t1557_tmp * 48.828125);
  sdvals_tmp =
      -t7 *
          ((((((((((t880 - t1705) - t2937) - t3603) - t4189) + t4876) + t5130) +
              t5146) +
             t5354) +
            t5398) -
           0.03814697265625) +
      -xi * (((((((((((((((((t94 - t2948) + t3218) + t3490) - t3584) + t3627) -
                        t3860) +
                       t3946) +
                      t4031) +
                     t4039) +
                    t4197) +
                   t4208) +
                  t4398) +
                 t5255) +
                t5508) -
               t5623) -
              t792_tmp * 2.6490953233506951) +
             0.00762939453125);
  b_sdvals_tmp = t8 * t6204;
  c_sdvals_tmp =
      t6 * ((((((((((((((t2964 + t3028) + t3055_tmp * -0.79472859700520826) +
                       t3583) -
                      t3311) -
                     t3565) +
                    t4142) -
                   t3786) +
                  t4257) +
                 t4420) -
                t4166) +
               t5241) +
              t5259) +
             t5436) -
            0.011444091796875);
  sdvals[0] =
      ((sdvals_tmp +
        (((((((((((((((((((t26 + t1112) - t1699) + t2603) + t3562) + t3827) +
                      t3957) +
                     t4301) +
                    t4343) +
                   t4492) -
                  t4011) +
                 t4531) -
                t4151) +
               t4701) +
              t4725) +
             t4983) +
            t5042) -
           t4549) +
          t5827) -
         0.0001373291015625)) -
       b_sdvals_tmp) -
      c_sdvals_tmp;
  t2461_tmp =
      (-t8 * ((((((((-t2634 + t3026) - t3210) + t16 * t3555) + t5131) + t5388) +
                t5626) -
               t26_tmp * 2.6490953233506951) -
              0.61459011501736116) +
       ((((((((((((((-t451 + t966) + t1376) - t1883) + t2357) + t3562) +
                t4181) +
               t4492) +
              t4527) -
             t4151) +
            t4889) -
           t4549) +
          t761_tmp * -0.194620203088831) +
         t2 * t4166) -
        0.0001373291015625)) +
      -t6 * (((((((((((((t133 - t2939) + t3139) + t3230) + t3384) + t3419) +
                    t4142) -
                   t4194) +
                  t4211) +
                 t4345) +
                t4420) +
               t5259) -
              t5318) +
             1.298268636067708);
  t3055_tmp =
      t7 *
      (((((((((((t2963 + t3236) + t3306) - t3289) - t3378) + t4256) + t4579) +
           t5130) +
          t5240) +
         t5398) -
        t5328) -
       1.105438044041763);
  t6059_tmp = t1316 - t895_tmp * 0.79472859700520826;
  t5946_tmp = t9 * (((t6059_tmp - t4474) + t5323) + t5635);
  t1556_tmp =
      xi * ((((((((((((((t19 + t94) + t4 * t1318) - t2307) + t3218) + t3490) +
                    t3672) +
                   t4241) +
                  t4398) -
                 t4028) -
                t4205) -
               t4442) -
              t4631) -
             t4697) +
            0.2498626708984375);
  sdvals[1] = ((t2461_tmp - t3055_tmp) - t5946_tmp) - t1556_tmp;
  t1557_tmp =
      (t8 * ((((((((-t2947 + t17 * t3558) - t4676) + t5357) + t5404) + t5428) +
               t5449) -
              t5287) -
             0.0476837158203125) +
       -t6 * (((((((((((((-t739 + t2949) + t3316) + t3361) + t3752) + t3765) -
                     t3835) +
                    t5318) -
                   t5509) +
                  t5631) -
                 t5655) -
                t5256) -
               t5305) -
              0.152729175708912)) +
      (((((((((((((t6560_tmp + t3541) + t77_tmp * -0.66663012092496143) +
                 t4077) +
                eta * t4087) +
               t1108_tmp * -3.268394941165123) -
              t3987) +
             t3 * t3383) +
            t4621) -
           t4146) +
          t4890) -
         t4591) +
        t5651) -
       0.080387256763599535);
  t6032_tmp =
      xi *
      ((((((((((((((-t52 - t1731) + t2914_tmp * -0.0095367431640625) + t3250) +
                 t3632) +
                t3718) +
               t3830) -
              t3623) +
             t4101) +
            t4400) -
           t4087) -
          t4113) +
         t5315) +
        t5656) -
       0.034355822904610339);
  t5952_tmp = t52_tmp * 0.0095367431640625 - t1337_tmp * 0.79472859700520826;
  t6033_tmp = t9 * (((t5952_tmp + t17 * t3958) + t5644) - t5584);
  t6021_tmp =
      t7 *
      (((((((((((t2856 + t3056_tmp * -0.79472859700520826) + t3274) + t3383) +
              t4639) -
             t4528) +
            t5242) +
           t5253) +
          t5290) +
         t5434) +
        t5446) -
       0.064873401029610339);
  sdvals[2] = ((t1557_tmp - t6032_tmp) + t6033_tmp) + t6021_tmp;
  sdvals[3] = ((sdvals_tmp + t6636) + b_sdvals_tmp) + c_sdvals_tmp;
  sdvals[4] = ((t2461_tmp + t3055_tmp) + t5946_tmp) + t1556_tmp;
  sdvals[5] = ((t1557_tmp + t6032_tmp) - t6033_tmp) - t6021_tmp;
  sdvals_tmp =
      t7 * ((((((((((-t880 - t1705) + t2937) - t3603) + t4189) + t5130) +
                t5337) +
               t5354) +
              t5398) -
             t5146) +
            0.03814697265625) +
      (((((((((((((((((t94 + t2948) + t3218) + t3490) + t3584) + t3860) +
                  t4039) -
                 t3627) +
                t4197) +
               t4398) -
              t3946) -
             t4031) +
            t4705) -
           t4208) +
          t5255) -
         t5508) -
        t5623) -
       0.00762939453125) *
          xi;
  b_sdvals_tmp = t8 * t6208;
  c_sdvals_tmp =
      t6 *
      ((((((((((((((t15 * t2585 - t2964) + t3028) + t3311) + t3565) + t3583) +
               t3786) +
              t4142) +
             t4420) -
            t4166) -
           t4257) +
          t5259) +
         t5436) -
        t5241) -
       0.011444091796875);
  sdvals[6] = ((sdvals_tmp + t6637) - b_sdvals_tmp) + c_sdvals_tmp;
  t2461_tmp =
      (t8 * ((((((((t2634 + t3026) - t3210) + t3426 * zeta_1_inv) +
                 t1337_tmp * -10.59638129340278) +
                t5388) -
               t5131) +
              t5626) -
             0.61459011501736116) +
       ((((((((((((((-t451 + t1376) - t966) + t1883) + t2357) - t3562) +
                t4151) +
               t4181) +
              t4527) +
             t4549) +
            t2 * t3583) +
           t4889) -
          t4492) +
         t2113_tmp * -1.25920331036603) +
        0.0001373291015625)) +
      t6 * (((((((((((((t133 + t2939) - t3139) + t3384) - t3230) - t3419) +
                   t4142) +
                  t4194) +
                 t4211) +
                t4420) -
               t4345) +
              t5259) -
             t5318) +
            1.298268636067708);
  t3055_tmp =
      t7 *
      (((((((((((-t2963 + t3236) + t3289) + t3306) + t3378) + t4579) - t4256) +
           t5130) +
          t5328) +
         t5398) -
        t5240) +
       1.105438044041763);
  t5946_tmp = t9 * (((t6059_tmp + t4474) + t5635) - t5323);
  t1556_tmp =
      xi *
      ((((((((((((((-t19 + t94) - t2307) + t792_tmp * -0.0476837158203125) +
                 t3218) +
                t3490) +
               t4028) -
              t3672) +
             t4205) +
            t4398) +
           t4442) +
          t4631) -
         t4241) -
        t4697) -
       0.2498626708984375);
  sdvals[7] = ((t2461_tmp + t3055_tmp) - t5946_tmp) + t1556_tmp;
  t1557_tmp =
      (-t8 *
           ((((((((t2947 - t4676) + t5287) + t5357) + t5404) + t5428) - t5449) -
             t1346_tmp * 10.59638129340278) +
            0.0476837158203125) +
       t6 * (((((((((((((-t739 - t2949) + t3361) - t3316) + t3765) + t3835) -
                    t3752) +
                   t5509) +
                  t5631) +
                 t5655) -
                t5256) -
               t5305) -
              t5318) +
             0.152729175708912)) +
      (((((((((((((t6560_tmp + eta * t3250) + eta * t3718) - t3541) + t4077) -
               t3987) +
              t4591) +
             t4621) -
            t4146) +
           t770_tmp * -2.5985859058521412) +
          t4890) +
         t1169_tmp * -0.83946887357735345) +
        t5651) -
       0.080387256763599535);
  t6032_tmp =
      xi *
      ((((((((((((((t52 - t1731) + t14 * t1881) + t3250) + t3623) + t3718) +
               t3830) -
              t3632) +
             t4113) +
            t4400) -
           t4087) -
          t4101) +
         t5315) -
        t5656) -
       0.034355822904610339);
  t6033_tmp =
      t9 * (((t5952_tmp + t5584) + t5644) + t1346_tmp * -2.6490953233506951);
  t6021_tmp =
      t7 *
      (((((((((((-t2856 + t16 * t2585) + t3383) - t3274) + t4528) - t4639) +
            t5253) +
           t5290) +
          t5434) +
         t5446) -
        t5242) -
       0.064873401029610339);
  sdvals[8] = ((t1557_tmp + t6032_tmp) + t6033_tmp) - t6021_tmp;
  sdvals[9] =
      ((sdvals_tmp +
        (((((((((((((((((((t20 + t1112) + t1699) + t2403) + t3562) + t3824) +
                      t3957) -
                     t3827) +
                    t4449) +
                   t4492) -
                  t4011) -
                 t4151) +
                t4701) +
               t4813) +
              t5038) +
             t5042) -
            t4549) +
           t5217) +
          t5827) -
         0.0001373291015625)) +
       b_sdvals_tmp) -
      c_sdvals_tmp;
  sdvals[10] = ((t2461_tmp - t3055_tmp) + t5946_tmp) - t1556_tmp;
  sdvals[11] = ((t1557_tmp - t6032_tmp) - t6033_tmp) + t6021_tmp;
  sdvals[12] = 0.0;
  sdvals[13] = 0.0;
  sdvals[14] =
      (((t10 * 109.375 - t11 * 208.33333333333334) + t12 * 130.20833333333329) -
       t36) +
      1.0;
  sdvals_tmp =
      t7 * ((((((((((t1311 - t1702) - t2858) + t2971) - t3643) + t4940) +
                t4961) +
               t4965) -
              t4750) +
             t5471) -
            0.11444091796875) +
      ((((((((((((((((t2383_tmp - t2644) + t2820) + t2951) + t3819) - t3515) +
                 t3952) -
                t3664) -
               t3714) +
              t4165) +
             t4300) +
            t4325) -
           t3925) -
          t4600) -
         t4944) -
        t5442) +
       0.05950927734375) *
          xi;
  b_sdvals_tmp =
      t8 * (((((t1952 + t5103) + t5108) - t5120) - t5129) + 0.2384185791015625);
  c_sdvals_tmp =
      t6 * ((((((((((((((t3069 + t3559) - t3372) + t3793) - t3517) - t3682) +
                    t4129) +
                   t4247) -
                  t3960) +
                 t5016) +
                t5081) +
               t5665) +
              t5770) -
             t5555) -
            0.148773193359375);
  sdvals[15] =
      ((sdvals_tmp +
        (((((((((((((((((-t845 + t3763) - t3512) + t4242) + t4316) - t3888) -
                    t3958) +
                   t4491) -
                  t4054) +
                 t4827) +
                t4910) +
               t5012) +
              t5236) +
             t5244) +
            t5362) -
           t5221) +
          t5889) +
         0.0019073486328125)) +
       b_sdvals_tmp) +
      c_sdvals_tmp;
  t2461_tmp =
      (t8 * ((((((((-t2625 + t3085) + t3087) - t3242) +
                 t26_tmp * -7.947285970052083) +
                t4942) +
               t4951) +
              t5449) -
             1.843770345052083) +
       t6 * (((((((((((((t40 + t2639) - t2659) + t2817) + t3349) + t3427) +
                    t3683) -
                   t3393) +
                  t4123) -
                 t3780) -
                t3923) -
               t4935) -
              t5548) +
             0.751495361328125)) +
      ((((((((((((((t841 - t1403) - t1879) + t2635) + t3295) + t3883) + t4005) +
              t4324) -
             t4086) -
            t4092) +
           t4645) +
          t4834) +
         t761_tmp * -0.026490953233506941) +
        t2113_tmp * -2.25173102484809) +
       0.0011444091796875);
  t3055_tmp =
      t9 *
      ((((t1318 + t5105) + t5142) + t52_tmp * -2.6490953233506951) - t5386);
  t5946_tmp =
      t7 *
      (((((((((((t3133 + t3307) - t3227) - t3277) + t3845) + t4128) + t5076) -
           t4870) +
          t5409) +
         t5663) -
        t5304) -
       1.441225593472705);
  t1556_tmp =
      xi *
      ((((((((((((t3439 + t3555) - t3317) + t3865) + t4043) + t4170) + t4536) +
            t4561) -
           t4117) +
          t4755) +
         t792_tmp * -0.66227383083767366) -
        t4716) +
       0.0019073486328125);
  sdvals[16] = ((t2461_tmp + t3055_tmp) + t5946_tmp) - t1556_tmp;
  t1557_tmp =
      (-t8 * ((((((((-t2932 + t2979) + t3088) + t3099) + t4971) - t4740) +
                t5475) -
               t5380) -
              0.1430511474609375) +
       -t6 *
           ((((((((((((t6479_tmp + t2952) - t2958) - t3299) + t3370) + t3796) -
                  t3625) -
                 t3706) -
                t4957) +
               t5486) -
              t5456) -
             t5548) +
            0.2445644802517361)) +
      ((((((((((((((t3285 - t3297) + t3798) + t3837) +
                 t77_tmp * -1.702909116391782) +
                eta * t3586) +
               t1108_tmp * -5.45360423900463) +
              t4326) -
             t3907) -
            t3950) +
           t4645) +
          t1169_tmp * -1.501154016565394) +
         t5279) -
        t5116) +
       0.046581692165798612);
  t6059_tmp = t52_tmp * 0.0476837158203125 + t5110;
  t6032_tmp = t9 * (((t6059_tmp + t5157) - t5296) - t5427);
  t6033_tmp =
      t7 *
      (((((((((((t3070 + t3258) + t3327) + t4842) + t5023) + t5135) - t4723) +
           t5487) +
          t5667) -
         t5328) -
        t5556) -
       0.20003613130545911);
  t6021_tmp =
      xi *
      ((((((((((((t3205 + t3292) - t3744) + t4240) + t4287) - t3881) - t4020) -
            t4538) +
           t5169) +
          t5416) +
         t5528) -
        t5874) -
       0.10848339693045909);
  sdvals[17] = ((t1557_tmp - t6032_tmp) - t6033_tmp) + t6021_tmp;
  t6415_tmp =
      t8 * (((((t1501 + t5104) + t5109) - t5122) - t5131) + 0.476837158203125);
  t6228_tmp =
      t6 * (((((((((((((t6444_tmp + t2855) + t3047) - t3262) - t3371) - t3516) -
                   t3626) -
                  t3724) +
                 t4372) +
                t4520) +
               t4968) +
              t5438) +
             t5502) +
            0.38909912109375);
  sdvals[18] =
      (((t6381 +
         (((((((((((((((((t837 + t1859) + t2761) - t3238) + t3533) + t3789) -
                     t3557) +
                    t4577) +
                   t4828) +
                  t5011) +
                 t5020) +
                t5063) -
               t4593) +
              t5182) +
             t5245) -
            t5117) +
           t5653) -
          0.034332275390625)) +
        t6611) -
       t6415_tmp) +
      t6228_tmp;
  t6627_tmp =
      (-t8 * ((((((((-t2628 + t2977) - t3212) + t4868) + t5134) + t5151) +
                t5391) -
               t26_tmp * 5.2981906467013893) -
              1.2291802300347221) +
       (((((((((((((t6466_tmp + t1856) - t2304) + t2754) + t3381) + t3742) -
               t3545) -
              t3804) +
             t4443) +
            t4551) +
           t2 * t3395) +
          t5115) +
         t2113_tmp * -11.21450353551794) -
        0.006866455078125)) +
      t6 * ((((((((((((t6516_tmp + t3412) + t3673) + t3748) + t3974) + t4249) +
                  t4608) -
                 t4210) -
                t4215) +
               t4854) +
              t5138) +
             t5652) +
            0.54677327473958326);
  t6661_tmp =
      t9 * ((((t889 + t52_tmp * -5.2981906467013893) + t5106) + t5143) - t5389);
  t6365_tmp =
      xi *
      ((((((((((((-t1281 + t2656) + t3454) + t3522) + t3556) - t3325) + t4033) +
            t4169) +
           t4328) -
          t3904) +
         t4482) -
        t4524) -
       0.034332275390625);
  t5952_tmp = t26_tmp * 1.0596381293402779 + t52_tmp * 1.507040895061728;
  t6543_tmp =
      t7 * ((((((((((t5952_tmp + t2854) + t2968) - t3319) - t3336) - t3404) +
                t4371) +
               t4872) +
              t5501) +
             t5602) -
            1.2035134397907019);
  sdvals[19] = ((t6627_tmp - t6661_tmp) - t6365_tmp) + t6543_tmp;
  t6548_tmp =
      (t8 * ((((((((-t2938 + t4885) + t4887) + t4964) - t4678) + t5407) +
               t5431) -
              t5289) -
             0.095367431640625) +
       -t6 * (((((((((((((t198 - t3247) + t3764) - t3784) + t4167) + t4642) +
                     t4869) +
                    t5138) +
                   t5262) +
                  t5306) +
                 t5348) +
                t5476) +
               t5498) -
              0.09183530454282407)) +
      ((((((((((((((-t2304 + eta * t3128) - t3326) + t3864) + t3882) - t3524) +
               t4161) -
              t3934) +
             t4447) +
            t4622) +
           t1169_tmp * -7.4763356903452944) +
          t770_tmp * -3.958101625795718) +
         eta * t4550) +
        t5688) +
       0.02794618959780093);
  b_t5955_tmp = t14 * t2305 + t3315;
  t6323_tmp =
      xi * (((((((((((b_t5955_tmp - t3399) - t3544) + t4336) - t4019) + t4525) +
                 t4667) -
                t4259) +
               t5607) -
              t5172) +
             t5670) +
            0.1536710762683256);
  b_t6021_tmp =
      t7 * (((((((((((t2810 + t2860) + t15 * t2314) + t3390) - t3903) - t4403) +
                 t4976) +
                t5448) +
               t5503) +
              t5580) +
             t5658) +
            0.2757413887683256);
  t5962_tmp = t9 * ((((t2073 + t5111) + t5158) - t4847) - t5429);
  sdvals[20] = ((t6548_tmp + t6323_tmp) - b_t6021_tmp) + t5962_tmp;
  sdvals[21] = (((t6381 + t6600) + t6611) + t6415_tmp) - t6228_tmp;
  sdvals[22] = ((t6627_tmp + t6661_tmp) + t6365_tmp) - t6543_tmp;
  sdvals[23] = ((t6548_tmp - t6323_tmp) + b_t6021_tmp) - t5962_tmp;
  sdvals[24] = ((sdvals_tmp + t6642) - b_sdvals_tmp) - c_sdvals_tmp;
  sdvals[25] = ((t2461_tmp - t3055_tmp) - t5946_tmp) + t1556_tmp;
  sdvals[26] = ((t1557_tmp + t6032_tmp) + t6033_tmp) - t6021_tmp;
  sdvals_tmp = ((t2659 - t2817) - t1797_tmp * 17.881393432617191) -
               t1344_tmp * 20.265579223632809;
  b_sdvals_tmp = t8 * t6266;
  c_sdvals_tmp =
      t6 * (((((((((((sdvals_tmp + t3168) + t3387) + t3518) + t3780) + t3797) +
                 t4081) -
                t4129) +
               t5455) -
              t5081) -
             t5665) +
            0.095367431640625);
  sdvals[27] = (((t6427 + t6587) + t6596) - b_sdvals_tmp) + c_sdvals_tmp;
  t2461_tmp =
      (-t8 * (((((((t6373_tmp + t3409) + t4245) - t4942) + t5378) - t5103) -
               t6301_tmp) +
              2.6490953233506951) +
       ((((((((((((((t827 - t1378) - t1406) + t2295) + t2371) - t3512) +
                t4242) +
               t4279) -
              t3888) +
             t4361) +
            t4491) +
           t2 * t3559) +
          t5265) +
         t2113_tmp * -2.142235084816261) +
        0.0019073486328125)) +
      t6 * ((((((((t6481_tmp + t3793) + t4021) + t4247) - t3862) + t5016) -
              t4756) -
             t5137) -
            0.052981906467013888);
  t3055_tmp =
      xi * ((((((((((((t6563_tmp + t2302) + t2753) + t3515) - t3317) + t3854) +
                  t4170) +
                 t4296) +
                t4560) -
               t4117) +
              t4754) -
             t4325) +
            0.0019073486328125);
  t5946_tmp = t9 * ((((t3667 + t5105) - t4742) + t5429) - t5542);
  t1556_tmp =
      t7 *
      (((((((((((t1956 - t2381) - t2971) + t3152) + t3253) + t3320) - t4128) +
           t5145) -
          t4940) -
         t5076) -
        t5663) +
       5.0185639181254826);
  sdvals[28] = ((t2461_tmp + t3055_tmp) - t5946_tmp) + t1556_tmp;
  t1557_tmp = t52_tmp * 0.13245476616753471 + t5110;
  t6032_tmp = ((t895_tmp * 1.5823929398148151 + t15 * t2315) -
               t892_tmp * 5.245208740234375) +
              t1345_tmp * 20.265579223632809;
  t6033_tmp =
      (t8 * ((((((((-t3068 - t3099) + t4741) + t4929) + t5312) - t4971) +
               t5539) -
              t5165) +
             0.39736429850260419) +
       -t6 * ((((((((((((-t2935 + t2952) - t3279) + t3492) + t3588) - t3625) -
                    t3980) +
                   t4851) +
                  t5026) +
                 t5486) -
                t5347) +
               t5768) +
              0.51922268337673616)) +
      ((((((((((((((t2292 - t3297) + eta * t3205) + t3798) + t3837) - t3470) +
               t4366) -
              t3907) +
             eta * t4240) +
            t4514) +
           t1169_tmp * -1.428156723210841) +
          t770_tmp * -4.31237397370515) -
         t4730) +
        t5853) +
       0.046581692165798612);
  t6021_tmp = t9 * (((t1557_tmp + t17 * t4016) - t5387) - t5549);
  t6415_tmp =
      xi *
      (((((((((((((-t892 + t2915) + t3292) - t3264) + t3586) - t3671) - t3744) +
             t4287) +
            t4327) -
           t3851) -
          t4075) +
         t5368) +
        t5414) +
       0.13293513545283561);
  t6228_tmp =
      t7 *
      ((((((((t6032_tmp + t3223) + t3407) - t4404) + t5135) + t5487) + t5667) -
        t5470) +
       0.0088303177445023147);
  sdvals[29] = ((t6033_tmp + t6021_tmp) - t6415_tmp) + t6228_tmp;
  t6627_tmp =
      -t7 * ((((((((((t1718 - t2968) + t3195) + t3437) - t3972) - t4845) +
                 t4877) +
                t5147) +
               t5162) -
              t5602) -
             1.9073486328125) +
      ((((((((((((((((t1281 + t2766) + t2811) + t2940) + t3300) - t3454) +
                 t3929) +
                t4203) +
               t4239) +
              t4274) -
             t3941) +
            t4524) -
           t4262) +
          t4873) +
         t5261) -
        t4892) -
       0.3814697265625) *
          xi;
  t6661_tmp = t8 * t6192;
  t6365_tmp =
      t6 * ((((((((((((((t2855 + t3023) + t3395) - t3183) - t3233) + t3748) -
                    t3707) +
                   t4249) +
                  t4372) -
                 t4088) +
                t5457) +
               t5502) +
              t5652) -
             t5440) +
            0.57220458984375);
  sdvals[30] =
      ((t6627_tmp +
        ((((((((((((((((((t400 - t837) + t2074) - t1887) - t2582) + t3545) -
                     t3381) +
                    t3804) +
                   t4160) +
                  t4258) +
                 t4363) +
                t4407) +
               t4578) +
              t4789) -
             t4551) +
            t5065) +
           t5203) +
          t5522) +
         0.006866455078125)) +
       t6661_tmp) -
      t6365_tmp;
  t6543_tmp = t6620_tmp + t3 * 4.9167209201388893;
  t6548_tmp =
      (-t8 * ((((((((-t3045 - t3198) + t3346) - t4187) + t4868) + t5104) +
                t5134) -
               t5390) +
              5.2981906467013893) +
       t6 * (((((((((((t6444_tmp + t2930) + t3412) + t3673) - t3363) + t3858) -
                  t3626) +
                 t4198) +
                t4608) -
               t4215) +
              t5139) +
             0.95367431640625)) +
      (((((((((((((t6203_tmp + t1390) - t1870) + t2348) + t3533) + t3741) +
              t761_tmp * -0.82722416630497686) +
             t4812) -
            t4593) +
           t5113) +
          t5182) -
         t5117) +
        t2 * t4520) -
       0.034332275390625);
  t6323_tmp =
      xi *
      (((((((((((t6543_tmp + t792_tmp * -0.476837158203125) + t3325) + t3687) +
              t3904) +
             t4193) -
            t3852) -
           t4169) -
          t4339) -
         t4397) -
        t4559) +
       0.034332275390625);
  b_t6021_tmp =
      t7 *
      (((((((((((t2854 + t3144) + t3309) - t3252) - t3398) + t4320) + t4371) +
           t5146) +
          t5501) -
         t5132) -
        t5399) -
       2.6785297158323691);
  t5962_tmp = t9 * ((((t1722 + t4866) + t5106) - t4681) - t4931);
  sdvals[31] = ((t6548_tmp - t6323_tmp) - b_t6021_tmp) + t5962_tmp;
  t6192_tmp = t2860 + t3222;
  t6266_tmp =
      (-t8 *
           ((((((((t2972 + t4848) - t4885) - t4475) + t5121) + t5430) - t4964) -
             t5166) +
            2.384185791015625) +
       -t6 * ((((((((((((t2812 + t2941) - t3328) + t3335) - t3479) + t3961) +
                    t4642) +
                   t4879) +
                  t5262) +
                 t5319) +
                t5476) +
               t5587) -
              0.85477475766782407)) +
      ((((((((((((((-t1404 + t3506) - t3326) + t3864) + t3882) - t3934) +
               t77_tmp * -0.30508159119405859) +
              t4620) +
             eta * t4667) -
            t4452) +
           t5114) +
          t3 * t3903) +
         t770_tmp * -0.055807608145254629) +
        t5821) +
       0.02794618959780093);
  t6219_tmp = t9 * ((((t2632 + t17 * t3557) + t5111) - t4950) - t5297);
  b_t6219_tmp =
      xi *
      (((((((((((((-t893 + t2733) + t3128) + t3315) - t3399) + t4053) + t4336) -
             t3877) +
            t4550) -
           t4171) -
          t4399) +
         t5526) -
        t5317) -
       0.49281179169077932);
  t6560_tmp =
      t7 * ((((((((((t6192_tmp + t3290) - t4565) + t5291) + t5471) + t5492) +
                t5503) +
               t5658) +
              t1344_tmp * -7.947285970052083) -
             t5450) -
            1.701307885440779);
  sdvals[32] = ((t6266_tmp - t6219_tmp) - b_t6219_tmp) + t6560_tmp;
  t6317_tmp =
      t7 * ((((((((((-t1718 - t2968) + t3195) + t3437) + t3972) + t4845) +
                t5162) -
               t4877) -
              t5147) -
             t5602) +
            1.9073486328125) +
      ((((((((((((((((-t1281 - t2766) - t2811) + t2940) + t3300) + t3454) +
                 t3929) +
                t4203) +
               t4239) +
              t4262) +
             t4274) -
            t3941) -
           t4524) +
          t5261) -
         t4873) -
        t4892) -
       0.3814697265625) *
          xi;
  t6037_tmp = t8 * t6197;
  t6124_tmp =
      t6 * ((((((((((((((-t2855 + t3023) + t3183) + t3233) + t3395) + t3707) +
                    t3748) +
                   t4249) -
                  t4088) -
                 t4372) +
                t5652) -
               t5440) -
              t5457) -
             t5502) +
            0.57220458984375);
  sdvals[33] =
      ((t6317_tmp +
        ((((((((((((((((((t400 + t837) - t1887) + t2383) - t2582) + t3545) -
                     t3381) +
                    t3789) +
                   t3804) +
                  t4577) -
                 t4160) +
                t4789) +
               t4828) +
              t4911) -
             t4551) +
            t5066) +
           t5203) +
          t5522) +
         0.006866455078125)) -
       t6037_tmp) -
      t6124_tmp;
  t6005_tmp =
      (t8 * ((((((((-t3045 + t3198) + t3346) + t4187) + t5104) + t5320) -
               t5134) -
              t5390) +
             5.2981906467013893) +
       t6 * ((((((((((((-t2636 - t2725) + t2930) + t3363) + t3412) + t3626) +
                   t3673) +
                  t4198) -
                 t3858) +
                t4608) -
               t4215) -
              t5139) -
             0.95367431640625)) +
      (((((((((((((t6203_tmp - t1390) + t1870) + t2348) + t3741) - t3533) +
              t2 * t3262) +
             t4593) +
            t4812) +
           t5113) +
          t5117) -
         t5182) +
        t2113_tmp * -0.1306887026186343) +
       0.034332275390625);
  t6543_tmp =
      xi *
      (((((((((((t6543_tmp + t1870 * zeta_1_inv) - t3325) + t3687) + t3852) +
             t4169) +
            t4193) +
           t4339) -
          t3904) +
         t4559) -
        t4397) -
       0.034332275390625);
  t6001_tmp =
      t7 *
      (((((((((((-t2854 + t3144) + t3252) + t3309) + t3398) + t4320) - t4371) -
           t5132) -
          t5146) -
         t5399) -
        t5501) +
       2.6785297158323691);
  t5955_tmp = t9 * ((((t1722 + t4681) + t5106) - t4866) - t4931);
  sdvals[34] = ((t6005_tmp - t6543_tmp) - t6001_tmp) - t5955_tmp;
  t6187_tmp =
      (-t8 * ((((((((-t2972 + t4475) + t4848) - t4885) + t5121) + t5166) -
                t4964) -
               t5430) +
              2.384185791015625) +
       -t6 * ((((((((((((-t2812 + t2941) - t3328) + t3479) - t3335) + t3961) +
                    t4642) +
                   t5262) +
                  t5319) -
                 t4879) +
                t5476) -
               t5587) -
              0.85477475766782407)) +
      ((((((((((((((-t1404 - t3326) + t3864) + t3882) - t3506) + eta * t3544) -
               t3934) +
              t4452) +
             t4620) +
            t5114) +
           eta * t5172) +
          t1108_tmp * -0.20721812307098769) +
         t1169_tmp * -0.087125801745756168) +
        t5821) +
       0.02794618959780093);
  t6203_tmp =
      t9 *
      ((((t2632 + t5111) + t5297) + t1346_tmp * -5.2981906467013893) - t4950);
  d_sfvals_tmp =
      xi *
      (((((((((((((t893 + t2733) - t3128) + t3315) - t3399) + t4171) + t4336) -
             t3877) +
            t4399) -
           t4053) -
          t4550) +
         t5317) +
        t5526) +
       0.49281179169077932);
  t6192_tmp =
      t7 *
      ((((((((((t6192_tmp - t3290) - t4565) + t15 * t4016) + t5450) + t5471) +
           t5503) +
          t5658) -
         t5291) -
        t5492) +
       1.701307885440779);
  sdvals[35] = ((t6187_tmp + t6203_tmp) + d_sfvals_tmp) - t6192_tmp;
  c_sfvals_tmp = t8 * t6268;
  sdvals_tmp =
      t6 * (((((((((((sdvals_tmp - t3168) - t3387) + t3780) + t3797) - t3518) +
                 t4081) +
                t4129) +
               t5081) +
              t5665) -
             t5455) +
            0.095367431640625);
  sdvals[36] =
      (((t6426 +
         ((((((((((((((((((t398 - t845) - t1875) + t2311) + t2407) - t3295) +
                      t3763) +
                     t4086) +
                    t4092) +
                   t4316) -
                  t3883) -
                 t3986) +
                t4554) +
               t4759) +
              t4797) +
             t4827) +
            t5216) +
           t5810) -
          0.0011444091796875)) +
        t6597) +
       c_sfvals_tmp) +
      sdvals_tmp;
  b_sfvals_tmp =
      (t8 * (((((((t6373_tmp - t3409) - t4245) + t4942) + t4951) + t5378) -
              t5103) +
             2.6490953233506951) +
       ((((((((((((((t827 + t1406) - t1378) + t2371) - t2295) + t3512) +
                t3888) +
               t4279) +
              t4361) -
             t4242) -
            t4491) +
           t5265) +
          t761_tmp * -0.60010839391637727) +
         t2 * t3960) -
        0.0019073486328125)) +
      t6 * ((((((((t6481_tmp + t3862) - t3793) - t4021) - t4247) + t5137) -
              t4756) -
             t5016) +
            0.052981906467013888);
  sfvals_tmp =
      xi * ((((((((((((t2383_tmp - t2302) + t2753) - t3317) + t3854) - t3515) +
                  t4170) +
                 t4296) +
                t4325) +
               t4560) -
              t4117) -
             t4754) +
            0.0019073486328125);
  t6616_tmp = t9 * ((((t3667 + t4742) + t5105) - t5429) - t5542);
  t6596_tmp =
      t7 *
      (((((((((((-t1956 + t2381) + t2971) + t3253) - t3152) + t3320) - t4128) +
           t4940) +
          t5145) -
         t5076) -
        t5663) +
       5.0185639181254826);
  sdvals[37] = ((b_sfvals_tmp - sfvals_tmp) + t6616_tmp) - t6596_tmp;
  h_sfvals_tmp =
      (t8 *
           ((((((((t3068 - t3099) + t4929) + t5165) - t4741) - t4971) + t5539) -
             t5312) +
            0.39736429850260419) +
       t6 * ((((((((((((t2935 - t2952) + t3279) + t3492) + t3625) - t3588) -
                   t3980) +
                  t4851) +
                 t5026) +
                t5417) -
               t5347) -
              t5486) -
             0.51922268337673616)) +
      ((((((((((((((t2292 + t3470) - t3297) + t3798) + t3837) +
                t77_tmp * -1.755278787495177) +
               t4366) -
              t3907) +
             t3 * t3327) +
            eta * t3881) +
           t1108_tmp * -2.6655785831404319) -
          t4514) -
         t4730) +
        t5853) +
       0.046581692165798612);
  t1557_tmp =
      t9 * (((t1557_tmp + t5387) + t1346_tmp * -7.947285970052083) - t5549);
  g_sfvals_tmp =
      xi *
      (((((((((((((t892 + t2915) + t3264) + t3292) + t3671) + t3851) - t3586) -
             t3744) +
            t4287) -
           t4075) -
          t4327) +
         t5368) -
        t5414) -
       0.13293513545283561);
  t6032_tmp =
      t7 *
      ((((((((t6032_tmp + t3407) - t3223) + t4404) + t5470) - t5135) - t5487) -
        t5667) +
       0.0088303177445023147);
  sdvals[38] = ((h_sfvals_tmp - t1557_tmp) + g_sfvals_tmp) + t6032_tmp;
  f_sfvals_tmp =
      -t7 * ((((((((((-t1311 - t1702) + t2858) + t2971) - t3643) + t4750) +
                 t4940) -
                t4961) -
               t4965) +
              t5471) +
             0.11444091796875) +
      ((((((((((((((((t6563_tmp + t2644) - t2820) + t2951) + t3515) + t3714) +
                 t3819) +
                t3952) -
               t3664) +
              t4165) +
             t4300) -
            t3925) -
           t4325) -
          t4600) -
         t4944) +
        t5442) +
       0.05950927734375) *
          xi;
  e_sfvals_tmp =
      t8 * (((((t1952 + t5108) + t5120) - t5103) - t5129) - 0.2384185791015625);
  j_sfvals_tmp =
      t6 * ((((((((((((((t3069 + t3372) + t3517) + t3559) + t3682) + t3793) +
                    t4247) -
                   t3960) -
                  t4129) +
                 t5016) -
                t5081) +
               t5555) +
              t5770) -
             t5665) -
            0.148773193359375);
  sdvals[39] = ((f_sfvals_tmp + t6645) + e_sfvals_tmp) - j_sfvals_tmp;
  i_sfvals_tmp =
      (-t8 * ((((((((t2625 + t3085) + t3087) - t3242) + t3219 * zeta_1_inv) -
                 t4942) +
                t5449) -
               t6301_tmp) -
              1.843770345052083) +
       t6 * (((((((((((((-t40 + t2639) + t2659) - t2817) + t3349) + t3393) +
                    t3427) +
                   t3683) +
                  t3780) -
                 t3923) -
                t4123) -
               t4935) +
              t5548) -
             0.751495361328125)) +
      ((((((((((((((t841 + t1403) - t1879) + t2635) - t3295) + t4005) + t4086) +
              t4092) +
             t4324) -
            t3883) +
           t4834) -
          t4645) +
         t2 * t4081) +
        t2 * t3797) -
       0.0011444091796875);
  l_sfvals_tmp = t9 * ((((t1318 + t14 * t3426) + t5105) - t5142) - t5386);
  k_sfvals_tmp =
      t7 *
      (((((((((((t3133 + t3227) + t3277) + t3307) + t3845) - t4128) + t4870) +
           t5409) -
          t5076) -
         t5304) -
        t5663) +
       1.441225593472705);
  m_sfvals_tmp =
      xi *
      ((((((((((((t3317 + t3555) - t3439) + t4043) + t4117) - t3865) + t4536) -
            t4170) +
           t4 * t3211) +
          t4755) -
         t4561) -
        t4716) -
       0.0019073486328125);
  sdvals[40] = ((i_sfvals_tmp + l_sfvals_tmp) - k_sfvals_tmp) + m_sfvals_tmp;
  o_sfvals_tmp =
      (t8 *
           ((((((((t2932 + t2979) + t3088) - t3099) - t4740) + t5380) - t4971) +
             t5475) +
            0.1430511474609375) +
       t6 * ((((((((((((t6479_tmp - t2952) - t2958) + t3299) + t3370) + t3625) -
                   t3706) -
                  t3796) +
                 t4957) +
                t5548) -
               t5456) -
              t5486) -
             0.2445644802517361)) +
      ((((((((((((((-t3285 - t3297) + eta * t3264) + t3798) + eta * t3671) +
                t3837) +
               t4326) -
              t3907) -
             t3950) +
            t3 * t3407) +
           t4645) +
          t770_tmp * -6.2423282199435768) +
         t5116) +
        t5279) +
       0.046581692165798612);
  n_sfvals_tmp = t9 * (((t6059_tmp + t5296) - t5157) - t5427);
  p_sfvals_tmp =
      t7 *
      (((((((((((-t3070 + t3258) - t3327) + t5135) - t4723) - t4842) + t5328) +
           t5487) -
          t5023) +
         t5667) -
        t5556) +
       0.20003613130545911);
  s_sfvals_tmp =
      xi *
      ((((((((((((t3205 - t3292) + t3744) + t4020) + t4240) - t3881) - t4287) -
            t4538) +
           t5169) +
          t5416) -
         t5528) +
        t5874) -
       0.10848339693045909);
  sdvals[41] = ((o_sfvals_tmp - n_sfvals_tmp) - p_sfvals_tmp) - s_sfvals_tmp;
  r_sfvals_tmp =
      t8 * (((((t1501 + t5109) + t5122) - t5104) - t5131) - 0.476837158203125);
  q_sfvals_tmp =
      t6 * (((((((((((((t6444_tmp - t2855) + t3047) + t3371) + t3516) - t3262) +
                   t3724) -
                  t3626) +
                 t4520) -
                t4372) +
               t5438) -
              t4968) -
             t5502) +
            0.38909912109375);
  sdvals[42] =
      (((t6378 +
         (((((((((((((((((t837 - t1859) + t2761) - t3238) + t3557) + t3789) -
                     t3533) +
                    t4484) +
                   t4500) +
                  t4577) +
                 t4593) +
                t4828) +
               t5063) +
              t5117) +
             t5245) -
            t5182) +
           t5887) +
          0.034332275390625)) +
        t6620) -
       r_sfvals_tmp) -
      q_sfvals_tmp;
  t_sfvals_tmp =
      (t8 * ((((((((t2628 + t2977) + t3193 * zeta_1_inv) - t3212) + t5151) +
                t5320) +
               t5391) -
              t5134) -
             1.2291802300347221) +
       (((((((((((((t6466_tmp - t1856) + t2304) + t2754) + t3545) - t3381) +
               t3742) +
              t3804) +
             t4443) -
            t4551) +
           t761_tmp * -5.1039236563223378) +
          t5115) +
         t2 * t4088) +
        0.006866455078125)) +
      -t6 * ((((((((((((t6516_tmp - t3412) - t3673) + t3748) - t3974) + t4215) +
                   t4249) -
                  t4608) -
                 t4210) -
                t4854) +
               t5138) +
              t5652) +
             0.54677327473958326);
  v_sfvals_tmp = t9 * ((((t889 + t14 * t3193) + t5106) - t5143) - t5389);
  u_sfvals_tmp =
      xi *
      ((((((((((((t1281 + t2656) + t3522) - t3325) - t3454) - t3556) + t4033) +
            t4169) +
           t4328) -
          t3904) +
         t4524) -
        t4482) -
       0.034332275390625);
  t6059_tmp =
      t7 * ((((((((((t5952_tmp - t2854) + t2968) + t3319) + t3404) - t3336) -
                t4371) -
               t4872) +
              t5602) -
             t5501) +
            1.2035134397907019);
  sdvals[43] = ((t_sfvals_tmp - v_sfvals_tmp) - u_sfvals_tmp) - t6059_tmp;
  w_sfvals_tmp =
      (-t8 *
           ((((((((t2938 - t4885) + t4887) - t4678) + t5289) + t5407) + t5431) -
             t4964) +
            0.095367431640625) +
       -t6 * (((((((((((((-t198 + t3247) - t3784) + t4167) - t3764) + t4642) +
                     t4869) +
                    t5138) +
                   t5262) +
                  t5476) -
                 t5306) -
                t5348) -
               t5498) -
              0.09183530454282407)) +
      ((((((((((((((-t2304 + t77_tmp * -3.3461017373167441) + t3524) - t3326) +
                 t3864) +
                t3882) +
               t3 * t3290) +
              eta * t4171) -
             t3934) +
            t4447) +
           t4622) -
          t4161) +
         t1108_tmp * -0.5839783468364198) +
        t5688) +
       0.02794618959780093);
  x_sfvals_tmp =
      xi * (((((((((((b_t5955_tmp + t3544) - t3399) + t4259) + t4336) - t4019) -
                 t4525) +
                t5172) -
               t4667) +
              t5670) -
             t5607) -
            0.1536710762683256);
  sfvals_tmp_tmp =
      t7 *
      (((((((((((t2860 - t2810) + t1344_tmp * -23.84185791015625) + t3390) +
              t3903) -
             t4403) +
            t4976) +
           t5503) +
          t5658) -
         t5448) -
        t5580) -
       0.2757413887683256);
  t2383_tmp = t9 * ((((t2073 + t4847) + t5111) - t5158) - t5429);
  sdvals[44] = ((w_sfvals_tmp + x_sfvals_tmp) - sfvals_tmp_tmp) + t2383_tmp;
  sdvals[45] = (((t6378 + t6603) + t6620) + r_sfvals_tmp) + q_sfvals_tmp;
  sdvals[46] = ((t_sfvals_tmp + v_sfvals_tmp) + u_sfvals_tmp) + t6059_tmp;
  sdvals[47] = ((w_sfvals_tmp - x_sfvals_tmp) + sfvals_tmp_tmp) - t2383_tmp;
  sdvals[48] =
      ((f_sfvals_tmp +
        (((((((((((((((((t845 - t3512) + t4054) + t4219) + t4242) - t3888) +
                    t4364) +
                   t4408) -
                  t3958) +
                 t4491) +
                t4769) +
               t4796) +
              t5236) +
             t5362) +
            t5480) -
           t5221) +
          t5889) +
         0.0019073486328125)) -
       e_sfvals_tmp) +
      j_sfvals_tmp;
  sdvals[49] = ((i_sfvals_tmp - l_sfvals_tmp) + k_sfvals_tmp) - m_sfvals_tmp;
  sdvals[50] = ((o_sfvals_tmp + n_sfvals_tmp) + p_sfvals_tmp) + s_sfvals_tmp;
  sdvals[51] = (((t6426 + t6585) + t6597) - c_sfvals_tmp) - sdvals_tmp;
  sdvals[52] = ((b_sfvals_tmp + sfvals_tmp) - t6616_tmp) + t6596_tmp;
  sdvals[53] = ((h_sfvals_tmp + t1557_tmp) - g_sfvals_tmp) - t6032_tmp;
  sdvals[54] = ((t6317_tmp + t6583) + t6037_tmp) + t6124_tmp;
  sdvals[55] = ((t6005_tmp + t6543_tmp) + t6001_tmp) + t5955_tmp;
  sdvals[56] = ((t6187_tmp - t6203_tmp) - d_sfvals_tmp) + t6192_tmp;
  sdvals[57] = ((t6627_tmp + t6586) - t6661_tmp) + t6365_tmp;
  sdvals[58] = ((t6548_tmp + t6323_tmp) + b_t6021_tmp) - t5962_tmp;
  sdvals[59] = ((t6266_tmp + t6219_tmp) + b_t6219_tmp) - t6560_tmp;
  sdvals[60] =
      (((t6427 +
         ((((((((((((((((((t197 - t845) + t1875) + t2407) - t2311) + t3295) +
                      t3763) +
                     t3883) +
                    t4316) -
                   t3986) -
                  t4086) -
                 t4092) +
                t4797) +
               t4827) +
              t5050) +
             t5216) +
            t5237) +
           t5500) +
          0.0011444091796875)) +
        t6596) +
       b_sdvals_tmp) -
      c_sdvals_tmp;
  sdvals[61] = ((t2461_tmp - t3055_tmp) + t5946_tmp) - t1556_tmp;
  sdvals[62] = ((t6033_tmp - t6021_tmp) + t6415_tmp) - t6228_tmp;
  sdvals_tmp =
      t6 * ((((((((((((-t210 + t471) + t26_tmp * -9.765625) - t366) + t801) +
                   t1266) +
                  t1336) +
                 t1387) -
                t1005) +
               t1751) +
              t2239) +
             t2241) +
            t2714);
  sdvals[63] = ((t6045 + t6270) + t6316) + sdvals_tmp;
  b_sdvals_tmp =
      (-t8 * (((((((t513 + t693) + t1610) + t2480) - t2237) - t2238) -
               t1337_tmp * 21.701388888888889) +
              1.356336805555556) +
       ((((((((-t521 + t1077) + t1466) + t1485) + t2 * t471) - t1487) + t2044) +
         t2664) +
        t2758)) +
      t6 * ((((((((t6279_tmp + t1980) + t2082) + t2668) + t2714) + t3159) +
              t3267) +
             t3421) +
            7.161458333333333);
  c_sdvals_tmp =
      xi *
      (((((((((((((t39 + t68) + t217) + t351) + t621) - t539) - t627) + t1094) -
            t932) +
           t398_tmp * -9.765625) -
          t1197) +
         t1980) +
        t2076) +
       1.5625);
  t2461_tmp =
      t7 * ((((((((((t391 - t251) + t800) + t831) - t499) + t1334) + t1749) +
               t2041) +
              t2230) +
             t2231) -
            3.2552083333333335);
  sdvals[64] = (b_sdvals_tmp + c_sdvals_tmp) + t2461_tmp;
  t3055_tmp =
      (-t8 * ((((((t1987 + t2236) + t2240) + t2242) + t2246) - t2510) - t2517) +
       -t6 * ((((((((((((-t883 + t1157) - t833) - t1100) + t1944) + t2268) -
                    t2512) +
                   t2677) +
                  t2718) +
                 t2737) -
                t3755) +
               t4775) +
              0.560619212962963)) +
      (((((((((((((-t446 + t916) + eta * t881) - t891) - t945) +
               t1169_tmp * -3.6168981481481479) +
              t2045) +
             eta * t1482) +
            t770_tmp * -19.259982638888889) +
           t2944) +
          t3330) +
         t3734) -
        t3405) +
       0.46296296296296297);
  t5946_tmp =
      xi *
      (((((((((((((t61 + t52_tmp * -1.5625) + t676) + t775) + t881) - t932) +
              t1393) +
             t1482) -
            t1484) +
           t2077) +
          t14 * t543) +
         t2446) +
        t2518) -
       0.26403356481481483);
  t1556_tmp =
      t7 * ((((((((((t436 + t503) + t52_tmp * -3.2552083333333335) + t1745) +
                  t1753) +
                 t2230) +
                t2242) +
               t2248) +
              t2267) +
             t2716) -
            0.36168981481481483);
  sdvals[65] = (t3055_tmp + t5946_tmp) - t1556_tmp;
  t1557_tmp = t6 * t6111;
  sdvals[66] =
      (-t6152 +
       ((((((((((((((t6234_tmp - t146) + t486) + t548) + t730) + t1072) +
                t1153) +
               t1254) +
              t1434) +
             t1608) -
            t1430) -
           t1436) +
          t1992) +
         t2613) +
        t2793)) -
      t1557_tmp;
  t6032_tmp =
      ((((((((t162 + t486) + t1202) + t1434) + t1510) - t1430) - t1436) +
        t761_tmp * -1.220703125) +
       t2 * t1001) -
      t6077;
  t6033_tmp =
      xi * (((((((((((t25 + t33) + t51) + t389) + t505) - t541) - t643) +
                t398_tmp * -4.8828125) +
               t1658) +
              t1936) +
             t761_tmp * -6.103515625) +
            4.166666666666667);
  t6021_tmp =
      t7 * ((((((((t447 - t254) + t719) - t508) + t1160) + t1395 * zeta_1_inv) +
              t2260) +
             t2745) -
            1.6276041666666667);
  sdvals[67] = (t6032_tmp - t6033_tmp) - t6021_tmp;
  t6415_tmp =
      t6107 + (((((((((((((t429 + t523) + t546) + t1059) - t915) - t1040) +
                      t77_tmp * -14.81119791666667) +
                     t1511) +
                    t3 * t502) +
                   t1108_tmp * -73.2421875) +
                  eta * t1478) +
                 t2680) -
                t3631) -
               1.123046875);
  t6228_tmp = xi * ((((((((((((t52_tmp * -4.166666666666667 + t437) +
                              t77_tmp * -43.9453125) +
                             t876) +
                            t942) +
                           t1035) -
                          t936) +
                         t1659) +
                        t1728) -
                       t1478) +
                      t14 * t548) +
                     t2412) -
                    0.79752604166666674);
  t6627_tmp =
      t7 * ((((((((t439 + t502) + t1535) + t2157) + t2263) + t2557) + t2682) +
             t2707) -
            0.40690104166666669);
  sdvals[68] = (t6415_tmp - t6228_tmp) + t6627_tmp;
  sdvals[69] = t5948 + t6089;
  t6661_tmp =
      t5909 +
      t6 * (((((((t73 + t118) + t134) + t182) + t192) + t202) + t613) + 15.625);
  t6365_tmp =
      xi *
      ((((((((t24 + t33) + t51) + t65) + t166) + t322) - t310) + t775) + 6.25);
  sdvals[70] = t6661_tmp + t6365_tmp;
  t6543_tmp =
      t6 * ((((t5938_tmp + t561) + t729) + t895_tmp * -31.25) - t2264) +
      ((((((((-t31 + t176) - t138) + t326) - t327) + t768) + t1044) + t1156) +
       1.5625);
  t6548_tmp =
      xi * ((((((((((t57 + t137) + t193) + t295) + t318) + t329) - t311) +
               eta * t315) +
              t776) +
             t1728) -
            1.5625);
  sdvals[71] = t6543_tmp + t6548_tmp;
  t6323_tmp = ((t6095_tmp + t77_tmp * -7.8125) + t10 * t211) +
              t1108_tmp * -32.552083333333329;
  sdvals[72] = t6323_tmp + t5908;
  sdvals[73] = t5908 - t5910;
  b_t6021_tmp =
      xi *
      (((((((-t58 + t168) - t137) + t311) - t318) - t770) + t52_tmp * 6.25) +
       1.5625);
  sdvals[74] = t5959 + b_t6021_tmp;
  sdvals[75] =
      ((t6045 +
        (((((((((((((((t6271_tmp + t521) + t543) - t550) + t937) + t1149) +
                  t1204) +
                 t1487) +
                t1543) +
               t1562) +
              t1588) +
             t1620) -
            t1466) -
           t1485) +
          t2369) +
         t2829)) +
       t6316) -
      sdvals_tmp;
  sdvals[76] = (b_sdvals_tmp - c_sdvals_tmp) - t2461_tmp;
  sdvals[77] = (t3055_tmp - t5946_tmp) + t1556_tmp;
  sdvals[78] = (-t6152 + t6233) + t1557_tmp;
  sdvals[79] = (t6032_tmp + t6033_tmp) + t6021_tmp;
  sdvals[80] = (t6415_tmp + t6228_tmp) - t6627_tmp;
  sdvals[81] =
      t5948 +
      ((((((((t6095_tmp + t152) - t146) + t730) + t737) + t1113) + t1176) +
        t2455) +
       t5908);
  sdvals[82] = t6661_tmp - t6365_tmp;
  sdvals[83] = t6543_tmp - t6548_tmp;
  sdvals[84] = t5955;
  sdvals[85] = t5908 + t5910;
  sdvals[86] = t5959 - b_t6021_tmp;
  sdvals_tmp =
      t6 *
      ((((((((((((t210 + t210 * zeta_1_inv) + t366) + t471) + t1227) + t1266) +
             t1387) -
            t1005) -
           t1336) -
          t1751) +
         t2239) +
        t2241) +
       t2714);
  sdvals[87] =
      ((t6044 +
        (((((((((((((((t6270_tmp + t521) - t543) - t550) + t937) + t1194) +
                  t1487) +
                 t1534) +
                t1543) +
               t1571) +
              t1620) -
             t1466) -
            t1485) +
           t1973) +
          t2369) +
         t2829)) +
       t6323) -
      sdvals_tmp;
  b_sdvals_tmp =
      (t8 * (((((((t513 - t693) - t1610) + t2231) + t16 * t567) - t2237) -
              t2238) +
             1.356336805555556) +
       ((((((((t521 + t1077) + t1487) - t1466) - t1485) +
           t761_tmp * -1.0850694444444444) +
          t2044) +
         t2482) +
        t2758)) +
      -t6 * ((((((((t6279_tmp + t3 * t504) - t2082) + t14 * t932) + t2714) -
                t3159) -
               t3267) -
              t3421) +
             7.161458333333333);
  c_sdvals_tmp =
      xi * (((((((((((((-t39 - t68) + t217) + t351) + t539) + t627) - t621) +
                  t1094) +
                 t539 * zeta_1_inv) +
                t1197) -
               t932) +
              t1980) +
             t2076) -
            1.5625);
  t2461_tmp =
      t7 *
      ((((((((((t251 + t391) + t499) + t831) + t398_tmp * -65.104166666666671) -
            t1334) +
           t2041) -
          t1749) +
         t2230) +
        t2231) +
       3.2552083333333335);
  sdvals[88] = (b_sdvals_tmp - c_sdvals_tmp) - t2461_tmp;
  t3055_tmp =
      (t8 * ((((((t1987 + t2240) + t2246) - t2236) - t2242) + t2510) + t2517) +
       t6 * ((((((((((((t883 + t1157) - t833) - t1100) + t2268) - t1944) +
                   t2512) +
                  t2518) +
                 t2718) -
                t2737) +
               t3755) -
              t4775) -
             0.560619212962963)) +
      (((((((((((((t446 - t891) - t916) - t945) +
                t77_tmp * -4.7381365740740744) +
               t3 * t503) +
              t2045) +
             eta * t1484) +
            t1108_tmp * -23.509837962962958) +
           t2944) +
          t3330) +
         t3734) -
        t3405) +
       0.46296296296296297);
  t5946_tmp =
      xi *
      (((((((((((((-t61 + t14 * t31) + t365) + t881) + t932) + t1174) + t1393) +
             t1482) -
            t1484) +
           t2077) +
          t1332_tmp * -3.2552083333333335) +
         t2446) +
        t2518) -
       0.26403356481481483);
  t1556_tmp =
      t7 *
      ((((((((((t503 - t436) + t14 * t214) - t1745) - t1753) + t2242) + t2248) +
          t2267) +
         t2479) +
        t2716) -
       0.36168981481481483);
  sdvals[89] = (t3055_tmp - t5946_tmp) + t1556_tmp;
  t1557_tmp = t6 * t6110;
  sdvals[90] = (t6172 + t6234) + t1557_tmp;
  t6032_tmp =
      ((((((((t162 - t486) + t1202) + t1430) + t1436) + t1510) + t2 * t468) -
        t1434) +
       t2113_tmp * -6.103515625) +
      t6085;
  t6033_tmp =
      xi * (((((((((((t33 - t25) + t51) + t389) + t541) + t643) - t505) +
                t2 * t250) +
               t2 * t498) +
              t1658) -
             t1936) -
            4.166666666666667);
  t6021_tmp = t7 * ((((((((t254 + t447) + t508) + t719) + t1160) +
                       t398_tmp * -54.931640625) -
                      t2260) -
                     t2745) +
                    1.6276041666666667);
  sdvals[91] = (t6032_tmp + t6033_tmp) + t6021_tmp;
  t6415_tmp =
      t6108 + (((((((((((((t523 + t546) - t429) + t915) + t1059) + eta * t876) -
                      t1040) +
                     t1511) +
                    eta * t1035) +
                   t1169_tmp * -4.069010416666667) +
                  t770_tmp * -62.255859375) +
                 t2680) -
                t3631) -
               1.123046875);
  t6228_tmp =
      xi *
      ((((((((((((t14 * t22 + t231 * zeta) - t437) + t876) + t936) + t942) +
             t1035) +
            t1659) +
           t1728) -
          t1478) +
         t1332_tmp * -1.6276041666666667) -
        t2412) -
       0.79752604166666674);
  t6627_tmp =
      t7 * ((((((((t439 - t502) + t1535) + t2263) - t2157) + t2557) + t2682) -
             t2707) +
            0.40690104166666669);
  sdvals[92] = (t6415_tmp + t6228_tmp) + t6627_tmp;
  sdvals[93] =
      t5952 +
      (((((((t6089_tmp - t146) + t730) + t777) + t1109) + t1113) + t2455) +
       t5908);
  t6661_tmp =
      t5908 + -t6 * (((((((t73 - t118) + t134) - t182) - t192) - t202) + t613) +
                     15.625);
  t6365_tmp =
      xi *
      ((((((((t33 - t24) + t51) - t65) + t166) + t310) - t322) + t775) - 6.25);
  sdvals[94] = t6661_tmp - t6365_tmp;
  t6543_tmp =
      -t6 * ((((t5938_tmp - t561) + t729) + t15 * t76) + t2264) +
      ((((((((t31 - t138) + t326) + t349) - t327) + t758) + t1044) + t1168) +
       1.5625);
  t6548_tmp =
      xi * ((((((((((t14 * t21 - t57) + t137) + t163) + t295) + t318) - t311) +
               t776) +
              t770_tmp * -195.3125) +
             t1728) -
            1.5625);
  sdvals[95] = t6543_tmp - t6548_tmp;
  sdvals[96] = t6323_tmp + t5909;
  sdvals[97] = t5909 - t5910;
  t6323_tmp =
      xi * (((((((t58 + t193) - t137) + t311) + t333) - t318) + t770) + 1.5625);
  sdvals[98] = t5960 - t6323_tmp;
  sdvals[99] = ((t6044 + t6271) + t6323) + sdvals_tmp;
  sdvals[100] = (b_sdvals_tmp + c_sdvals_tmp) + t2461_tmp;
  sdvals[101] = (t3055_tmp + t5946_tmp) - t1556_tmp;
  sdvals[102] =
      (t6172 + ((((((((((((((t6233_tmp - t146) + t486) + t688) + t730) - t548) +
                        t1434) +
                       t1536) +
                      t1621) -
                     t1430) -
                    t1436) +
                   t1982) +
                  t1992) +
                 t2413) +
                t2793)) -
      t1557_tmp;
  sdvals[103] = (t6032_tmp - t6033_tmp) - t6021_tmp;
  sdvals[104] = (t6415_tmp - t6228_tmp) - t6627_tmp;
  sdvals[105] = t5952 + t6095;
  sdvals[106] = t6661_tmp + t6365_tmp;
  sdvals[107] = t6543_tmp + t6548_tmp;
  sdvals[108] = t5956;
  sdvals[109] = t5909 + t5910;
  sdvals[110] = t5960 + t6323_tmp;
  sdvals_tmp =
      t7 * ((((((((((-t1719 + t2337) + t2782) + t2871) - t2878) - t3029) -
                t3049) +
               t3135) +
              t5398) -
             t4977) +
            0.95367431640625) +
      ((((((((((((((((t1302 + t1319) + t1409) + t2784) - t2727) + t2874) -
                 t2833) +
                t3461) +
               t4002) -
              t3747) +
             t4283) +
            t4424) -
           t3931) -
          t4000) -
         t4479) +
        t5087) -
       0.49591064453125) *
          xi;
  b_sdvals_tmp =
      t6 * ((((((((((((((t2781 - t2828) + t3028) - t3093) + t3150) + t3157) +
                    t3201) -
                   t3208) +
                  t3999) -
                 t3771) -
                t3779) -
               t4358) +
              t4969) -
             t4937) +
            1.239776611328125);
  t6059_tmp = t26_tmp * 3.3113691541883679 + t4462_tmp * 82.7842288547092;
  c_sdvals_tmp =
      t8 * ((((t6059_tmp + t4817) - t4894) - t4925) + 1.986821492513021);
  sdvals[111] = ((sdvals_tmp + t6639) + b_sdvals_tmp) - c_sdvals_tmp;
  t2461_tmp =
      (t8 *
           ((((((((t2338 + t2427) + t2434) - t2877) + t3026) - t3048) - t3091) -
             t4817) +
            7.947285970052083) +
       t6 * ((((((((((((t840 - t2059) + t2781) + t2783) + t2872) - t2828) -
                   t3158) +
                  t3367) -
                 t3433) -
                t3668) -
               t3779) +
              t4947) +
             0.41325887044270831)) +
      ((((((((((((t6486_tmp + t1886) + t2756) + t3884) + t4162) - t4014) -
             t4030) -
            t4121) +
           t4674) +
          t5186) +
         t761_tmp * -2.4106767442491321) +
        t2 * t3999) -
       0.015894571940104171);
  t5952_tmp = t52_tmp * 2.4866174768518521 + t3029;
  t3055_tmp =
      t7 * ((((((((((t5952_tmp - t3155) + t3411) - t3321) + t3769) - t3775) +
                t4357) +
               t4926) -
              t4896) -
             t5398) -
            6.0193332625024114);
  b_t5955_tmp = t1302 + t748_tmp * 33.37860107421875;
  t5946_tmp =
      xi * (((((((((((b_t5955_tmp - t3184) - t3189) + t3461) + t3606) + t3693) +
                 t3738) +
                t3981) +
               t4089) +
              t4283) -
             t4485) +
            0.026490953233506941);
  t1556_tmp = t9 * ((((t3211 - t3915) + t4459) + t4952) - t4933);
  sdvals[112] = ((t2461_tmp - t3055_tmp) + t5946_tmp) - t1556_tmp;
  t1557_tmp =
      (-t8 * (((((((t6264_tmp + t2886) + t3038) - t3102) - t3092) + t5404) -
               t4981) +
              1.1920928955078121) +
       -t6 * ((((((((((((-t2728 + t2875) - t2834) + t3039) + t3209) + t3286) +
                    t3349) -
                   t3339) -
                  t4049) +
                 t5089) +
                t5545) -
               t5581) -
              1.811981201171875)) +
      ((((((((((((t6524_tmp + t3801) + t77_tmp * -2.5395993833188659) + t4138) +
               eta * t3587) -
              t3803) +
             t3 * t3394) -
            t4145) -
           t4216) +
          t5187) +
         t1108_tmp * -4.9449779369212967) +
        t5370) -
       0.1621246337890625);
  t2383_tmp = t4465_tmp * 82.7842288547092 + t52_tmp * 0.66227383083767366;
  t6032_tmp = t9 * (((t2383_tmp + t4972) - t4953) - t5078);
  t6033_tmp =
      xi *
      ((((((((((((t3067 + t3179) + t3278) - t3352) + t3726) + t3819) - t3587) +
            t4029) -
           t3692) -
          t4265) +
         t5530) -
        t5331) -
       0.040619461624710647);
  t6021_tmp =
      t7 *
      (((((((((((t2832 + t3094) + t3149) + t3394) + t4314) + t4359) - t4406) +
           t5136) -
          t4978) +
         t1344_tmp * -3.973642985026042) -
        t5538) -
       0.80355891474971064);
  sdvals[113] = ((t1557_tmp + t6032_tmp) - t6033_tmp) + t6021_tmp;
  t6415_tmp =
      -t7 * ((((((((((-t1720 + t3195) + t3331) + t3922) + t4850) + t4927) -
                 t4962) -
                t4967) -
               t4939) -
              t5162) +
             0.63578287760416674) +
      -xi * ((((((((((((((((t1704 + t2844) + t3344) + t3481) + t3691) + t3781) -
                       t3834) -
                      t3836) -
                     t4064) +
                    t4202) +
                   t4255) +
                  t4586) -
                 t4126) +
                t5085) +
               t5149) +
              t5529) -
             0.43233235677083331);
  sfvals_tmp_tmp = ((t2533 - t2658) + t1344_tmp * 26.226043701171879) +
                   t1797_tmp * 107.2883605957031;
  t6228_tmp =
      t6 *
      (((((((((((sfvals_tmp_tmp - t3163) - t3237) - t3345) - t3350) - t3400) +
            t3799) -
           t3840) +
          t4663) +
         t4936) +
        t5059) +
       3.24249267578125);
  x_sfvals_tmp = t26_tmp * 6.6227383083767357 + t4463;
  t6627_tmp =
      t8 * ((((x_sfvals_tmp + t4818) - t4393) - t4928) + 3.973642985026042);
  sdvals[114] = ((t6415_tmp + t6599) - t6228_tmp) + t6627_tmp;
  t6661_tmp =
      (-t8 * (((((((t6371_tmp + t3410) + t4246) - t4943) + t5380) - t5104) -
               b_t6328_tmp) +
              5.2981906467013893) +
       (((((((((((((t6455_tmp + t2315) - t2308) + t2647) + t3162) + t3385) +
               t3429) +
              t2 * t3145) +
             t4103) +
            t4367) -
           t3939) -
          t4025) +
         t2 * t3502) +
        0.095367431640625)) +
      -t6 * ((((((((((((t2401 + t3161) - t3254) + t3377) + t3538) + t3921) +
                   t4141) +
                  t4253) -
                 t3933) +
                t4864) +
               t5057) +
              t5082) +
             0.36027696397569442);
  t6365_tmp =
      t7 *
      (((((((((((t1955 - t1643) - t3040) + t3123) + t3294) + t3414) + t3839) -
           t4277) -
          t4924) -
         t4941) -
        t5058) +
       7.0348198031201772);
  t6543_tmp = t9 * ((((t3213 - t3916) + t4460) + t4955) - t4934);
  t6548_tmp =
      xi *
      ((((((((((((-t1706 + t2788) + t3166) - t3276) + t3607) + t3712) + t3896) +
            t4147) +
           t4252) -
          t3816) -
         t4212) -
        t4582) -
       0.476837158203125);
  sdvals[115] = ((t6661_tmp + t6365_tmp) + t6543_tmp) + t6548_tmp;
  t6323_tmp =
      (t8 * ((((((((-t3031 - t3050) + t4743) + t4932) + t5074) + t5313) -
               t4973) -
              t5166) +
             0.79472859700520826) +
       t6 * ((((((((((((t2845 + t3280) + t3366) + t3466) - t3359) + t3997) +
                   t4945) +
                  t5086) +
                 t5154) +
                t5258) +
               t5307) +
              t5532) -
             1.2927585177951391)) +
      ((((((((((((((t2313 + t3362) + t77_tmp * -21.025575237509649) + t3560) +
                 eta * t3259) +
                t3701) +
               t3898) -
              t3589) +
             t4105) -
            t3778) -
           t3909) +
          t1108_tmp * -22.13466314621914) +
         t3 * t3226) +
        t5278) +
       0.29457939995659721);
  b_t6021_tmp =
      xi *
      ((((((((((((-t2327 + t2982) + t3256) + t3428) - t3301) - t3386) + t3822) +
            t3850) +
           t4018) -
          t3628) +
         t5420) +
        t5511) +
       1.4375757288049771);
  t5962_tmp =
      t7 *
      (((((((((((t2534 - t2955) + t3037) + t3044) + t3401) - t3324) + t4665) -
           t4354) +
          t4857) +
         t5060) -
        t4811) +
       2.454828332971644);
  w_sfvals_tmp = t4466 + t52_tmp * 1.3245476616753471;
  t6192_tmp = t9 * (((w_sfvals_tmp + t4974) - t4956) - t5079);
  sdvals[116] = ((t6323_tmp - b_t6021_tmp) + t5962_tmp) - t6192_tmp;
  sdvals[117] =
      ((t6415_tmp +
        (((((((((((((((((t1293 + t2308) + t2777) + t3263) + t3700) + t3962) -
                    t3622) +
                   t4291) +
                  t4401) -
                 t4017) -
                t4168) +
               t4767) +
              t4807) +
             t4821) +
            t5014) -
           t4601) +
          t5232) -
         0.286102294921875)) +
       t6228_tmp) -
      t6627_tmp;
  sdvals[118] = ((t6661_tmp - t6365_tmp) - t6543_tmp) - t6548_tmp;
  sdvals[119] = ((t6323_tmp + b_t6021_tmp) - t5962_tmp) + t6192_tmp;
  sdvals[120] =
      ((sdvals_tmp +
        ((((((((((((((((t6643_tmp + t3268) + t3281) + t4030) + t4121) + t4342) -
                   t3884) -
                  t3902) -
                 t4016) -
                t4041) -
               t4162) +
              t4706) +
             t4780) +
            t4909) +
           t5013) +
          t5027) +
         0.015894571940104171)) -
       b_sdvals_tmp) +
      c_sdvals_tmp;
  sdvals[121] = ((t2461_tmp + t3055_tmp) - t5946_tmp) + t1556_tmp;
  sdvals[122] = ((t1557_tmp - t6032_tmp) + t6033_tmp) - t6021_tmp;
  sdvals_tmp =
      (t26_tmp * 59.604644775390618 + t4463) - t1335_tmp * 225.173102484809;
  b_sdvals_tmp =
      t7 * ((((((((((t1724 - t3040) + t3136) + t3332) - t4250) + t4962) +
                t4967) +
               t4979) -
              t4941) -
             t5077) -
            5.7220458984375) +
      -xi * ((((((((((((((((t1706 + t2535) - t2638) + t2844) + t3165) - t3166) -
                       t3531) -
                      t3314) +
                     t3735) +
                    t3781) +
                   t3816) +
                  t3926) -
                 t4064) +
                t4586) +
               t4946) +
              t5088) -
             2.9754638671875);
  c_sdvals_tmp = t8 * (((sdvals_tmp + t5104) - t4846) + 11.92092895507812);
  t2461_tmp =
      t6 * ((((((((((((((-t3032 - t3145) - t3153) + t3537) - t3400) - t3502) +
                    t3921) +
                   t4141) -
                  t3840) +
                 t4936) +
                t4970) +
               t5057) +
              t5059) +
             t5417) +
            7.43865966796875);
  sdvals[123] = ((b_sdvals_tmp + t6632) - c_sdvals_tmp) + t2461_tmp;
  t3055_tmp =
      (t8 * ((((((t6328_tmp - t3333) - t3917) + t4818) + t4943) + t4954) +
             15.89457194010417) +
       -t6 * ((((((((((((t2401 + t2533) - t2658) + t3161) - t3254) - t3146) -
                    t3237) +
                   t3538) +
                  t3669) +
                 t3924) +
                t4938) +
               t4948) +
              7.43865966796875)) +
      ((((((((((((((t1288 - t1867) - t1885) + t2629) - t3263) + t3805) +
               t4015) +
              t4168) -
             t3962) +
            t2 * t3345) +
           t4502) +
          t4505) +
         t4601) +
        t2113_tmp * -3.4438239203559031) +
       0.286102294921875);
  t5946_tmp = t9 * ((((t1727 + t4460) - t3968) + t5143) - t4659);
  t1556_tmp =
      t7 *
      (((((((((((t3148 + t3251) + t3310) - t3294) - t3839) + t4394) + t4405) +
           t4850) +
          t4924) +
         t5058) -
        t4939) -
       17.63120109652295);
  t1557_tmp =
      xi *
      ((((((((((((t1704 + t3276) + t3481) + t3556) + t4212) + t4251) - t3794) -
            t3820) -
           t3896) -
          t3975) -
         t4126) -
        t4147) +
       0.476837158203125);
  sdvals[124] = ((t3055_tmp - t5946_tmp) + t1556_tmp) + t1557_tmp;
  t6032_tmp = t52_tmp * 11.92092895507812 + t4466;
  t6033_tmp =
      (t8 *
           ((((((((t3035 + t3042) - t3050) + t4922) + t5080) - t4744) - t4973) -
             t4982) +
            7.152557373046875) +
       t6 * ((((((((((((t2536 + t2845) - t2956) + t3140) + t3187) + t3466) -
                   t3353) -
                  t3590) +
                 t4960) +
                t5083) +
               t5090) +
              t5258) -
             10.19371880425347)) +
      ((((((((((((((t2584 + eta * t2327) - t3241) + t3560) + t3701) +
                eta * t3301) +
               t3878) -
              t3589) -
             t3909) +
            t770_tmp * -4.7153896755642357) +
           t4503) -
          t4235) +
         t1169_tmp * -2.2958826135706021) +
        t5280) +
       0.29457939995659721);
  t6021_tmp =
      t7 *
      (((((((((((-t3033 + t3226) - t3221) - t4354) + t4857) + t4980) + t5060) -
           t4811) +
          t5292) +
         t5329) +
        t5525) +
       2.2311269501109181);
  t6415_tmp = t9 * (((t6032_tmp + t5158) - t4661) - t5124);
  t6228_tmp =
      xi *
      ((((((((((((t3190 + t3256) - t3259) + t3618) - t3386) + t3826) + t3850) -
            t3899) -
           t4127) +
          t5332) +
         t5511) -
        t5418) -
       2.3465097686390819);
  sdvals[125] = ((t6033_tmp - t6021_tmp) + t6415_tmp) + t6228_tmp;
  t6627_tmp =
      -t7 * ((((((((((-t1724 - t3040) + t3136) + t3332) + t4250) - t4962) -
                 t4967) +
                t4979) +
               t5077) -
              t4941) +
             5.7220458984375) +
      -xi *
          ((((((((((((((((-t1706 + t2638) - t2535) + t2844) + t3165) + t3166) +
                     t3314) -
                    t3531) +
                   t3735) +
                  t3781) +
                 t3926) -
                t4064) -
               t3816) +
              t4586) +
             t4946) -
            t5088) -
           2.9754638671875);
  sdvals_tmp = t8 * (((sdvals_tmp + t4846) - t5104) - 11.92092895507812);
  t6661_tmp =
      t6 * ((((((((((((((-t3032 + t3153) - t3145) + t3400) + t3840) - t3502) -
                    t3537) +
                   t3921) +
                  t4141) +
                 t5057) -
                t4936) +
               t5417) -
              t4970) -
             t5059) +
            7.43865966796875);
  sdvals[126] = ((t6627_tmp + t6630) + sdvals_tmp) + t6661_tmp;
  t6365_tmp =
      (-t8 *
           ((((((t6328_tmp + t3333) + t3917) + t4818) - t4943) - b_t6328_tmp) +
            15.89457194010417) +
       -t6 * ((((((((((((t2401 + t2658) - t2533) + t3146) + t3161) + t3237) -
                    t3254) +
                   t3538) +
                  t3924) -
                 t3669) +
                t4938) -
               t4948) -
              7.43865966796875)) +
      ((((((((((((((t1288 + t1885) - t1867) + t2629) + t3263) + t3805) +
               t3962) +
              t4502) +
             t4505) -
            t4015) -
           t4168) +
          t761_tmp * -7.36448499891493) -
         t4601) +
        t2 * t3799) -
       0.286102294921875);
  t6543_tmp = t9 * ((((t1727 + t3968) + t4460) - t4659) - t5143);
  t6548_tmp =
      t7 *
      (((((((((((t3148 + t3294) + t3310) - t3251) + t3839) + t4405) + t4850) -
           t4394) -
          t4924) -
         t4939) -
        t5058) +
       17.63120109652295);
  t6323_tmp =
      xi *
      ((((((((((((t1704 + t3481) - t3276) + t3556) + t3794) + t3820) + t3896) +
            t3975) +
           t4147) +
          t4251) -
         t4126) -
        t4212) -
       0.476837158203125);
  sdvals[127] = ((t6365_tmp + t6543_tmp) + t6548_tmp) + t6323_tmp;
  b_t6021_tmp =
      (t8 * ((((((((-t3035 - t3042) - t3050) + t4744) + t4922) + t4982) +
               t5080) -
              t4973) +
             7.152557373046875) +
       t6 * ((((((((((((-t2536 + t2845) + t2956) + t3187) - t3140) + t3353) +
                   t3466) -
                  t3590) +
                 t4960) +
                t5083) +
               t5258) -
              t5090) -
             10.19371880425347)) +
      ((((((((((((((t2584 + t1108_tmp * -1.41285083912037) + t3241) + t3560) +
                 t3701) +
                eta * t3428) -
               t3589) +
              t77_tmp * -4.7401145652488426) -
             t3878) -
            t3909) +
           t3 * t3324) +
          t4503) -
         t4235) +
        t5280) +
       0.29457939995659721);
  t5962_tmp =
      t7 *
      (((((((((((-t3033 + t3221) + t3226) + t4354) + t4811) + t5292) - t4857) +
           t5329) -
          t4980) -
         t5060) +
        t5525) +
       2.2311269501109181);
  t6032_tmp = t9 * (((t6032_tmp + t5124) - t4661) - t5158);
  t6192_tmp =
      xi *
      ((((((((((((t3256 + t3259) - t3190) - t3386) + t3850) - t3618) + t4127) -
            t3826) -
           t3899) +
          t5332) +
         t5418) +
        t5511) +
       2.3465097686390819);
  sdvals[128] = ((b_t6021_tmp - t5962_tmp) - t6032_tmp) - t6192_tmp;
  t6266_tmp =
      -t7 * ((((((((((t1719 + t2337) - t2782) - t2871) + t2878) + t3049) -
                 t3029) +
                t3135) +
               t5398) -
              t4977) -
             0.95367431640625) +
      -xi * ((((((((((((((((t1302 - t1319) - t1409) + t2727) - t2784) - t2874) -
                       t2833) +
                      t3461) +
                     t3747) +
                    t4000) -
                   t4002) +
                  t4283) +
                 t4424) -
                t3931) +
               t4479) +
              t5087) +
             0.49591064453125);
  t6219_tmp =
      t6 * ((((((((((((((t2828 - t2781) - t3028) + t3093) + t3150) + t3157) +
                    t3201) +
                   t3208) +
                  t3779) -
                 t3771) -
                t3999) -
               t4358) +
              t4969) -
             t4937) -
            1.239776611328125);
  b_t6219_tmp =
      t8 * ((((t6059_tmp + t4925) - t4817) - t4894) - 1.986821492513021);
  sdvals[129] = ((t6266_tmp + t6643) + t6219_tmp) - b_t6219_tmp;
  t6560_tmp =
      (-t8 * ((((((((-t2338 - t2427) + t2434) + t2877) + t3026) + t3048) -
                t3091) -
               t4817) +
              7.947285970052083) +
       -t6 * ((((((((((((-t840 + t2059) + t2781) - t2783) - t2872) - t2828) +
                    t3158) +
                   t3367) +
                  t3433) -
                 t3668) -
                t3779) +
               t4947) +
              0.41325887044270831)) +
      ((((((((((((t6486_tmp - t1886) + t2756) + t4014) + t4030) + t4121) -
             t3884) -
            t4162) +
           t2 * t3208) +
          t4674) +
         t5186) +
        t2113_tmp * -4.9008263481987848) +
       0.015894571940104171);
  t6317_tmp =
      t7 * ((((((((((t5952_tmp + t3155) + t3321) + t3411) - t3769) - t3775) -
                t4357) +
               t4896) -
              t4926) -
             t5398) +
            6.0193332625024114);
  t6037_tmp =
      xi * (((((((((((b_t5955_tmp + t3184) + t3189) + t3461) + t3606) - t3693) -
                 t3738) +
                t4283) +
               t4485) -
              t3981) -
             t4089) -
            0.026490953233506941);
  t6124_tmp = t9 * ((((t3211 + t3915) + t4459) - t4933) - t4952);
  sdvals[130] = ((t6560_tmp + t6317_tmp) - t6037_tmp) - t6124_tmp;
  t6005_tmp =
      (-t8 * (((((((t6264_tmp - t2886) + t3038) + t3092) - t3102) + t4981) -
               t5404) +
              1.1920928955078121) +
       t6 * ((((((((((((t2728 - t2834) - t2875) - t3039) + t3349) - t3209) -
                   t3286) -
                  t3339) +
                 t4049) +
                t5089) +
               t5545) +
              t5581) +
             1.811981201171875)) +
      ((((((((((((t6524_tmp + eta * t3278) + t3801) + t4145) - t3803) - t4138) +
             t770_tmp * -7.4439578586154518) -
            t4216) +
           eta * t4029) +
          t1169_tmp * -3.267217565465856) +
         t5187) +
        t5370) -
       0.1621246337890625);
  t6001_tmp = t9 * (((t2383_tmp + t5078) - t4953) - t4972);
  t5955_tmp =
      xi *
      ((((((((((((t3067 + t3278) + t3352) - t3179) + t3692) + t3819) - t3587) +
            t4029) -
           t3726) -
          t4265) +
         t5331) -
        t5530) -
       0.040619461624710647);
  t6187_tmp =
      t7 *
      (((((((((((-t2832 - t3094) + t3149) - t3394) + t4314) + t4359) - t4406) +
           t5136) +
          t5434) -
         t4978) +
        t5538) +
       0.80355891474971064);
  sdvals[131] = ((t6005_tmp + t6001_tmp) + t5955_tmp) + t6187_tmp;
  t6203_tmp =
      t7 * ((((((((((t1720 + t3195) + t3331) - t3922) + t4850) + t4962) +
                t4967) -
               t4927) -
              t4939) -
             t5162) -
            0.63578287760416674) +
      ((((((((((((((((t1704 - t2844) + t3481) - t3344) + t3691) + t3834) +
                 t3836) +
                t4064) +
               t4202) -
              t3781) -
             t4126) -
            t4255) -
           t4586) +
          t5149) +
         t5529) -
        t5085) +
       0.43233235677083331) *
          xi;
  d_sfvals_tmp =
      t6 *
      (((((((((((sfvals_tmp_tmp + t3163) + t3350) + t3400) - t3237) - t3345) +
            t3799) +
           t3840) -
          t4663) -
         t4936) -
        t5059) +
       3.24249267578125);
  c_sfvals_tmp =
      t8 * ((((x_sfvals_tmp - t4393) + t4928) - t4818) - 3.973642985026042);
  sdvals[132] =
      ((t6203_tmp +
        (((((((((((((((((-t1293 + t2308) + t2657) + t3263) + t3622) + t3962) +
                    t4120) +
                   t4291) +
                  t4337) +
                 t4355) -
                t4017) -
               t4168) +
              t4903) +
             t5014) -
            t4601) +
           t5232) +
          t5246) -
         0.286102294921875)) +
       d_sfvals_tmp) +
      c_sfvals_tmp;
  b_sfvals_tmp =
      (t8 * (((((((t6371_tmp - t3410) - t4246) + t4943) + t4954) + t5380) -
              t5104) +
             5.2981906467013893) +
       (((((((((((((t6455_tmp + t2308) - t2315) + t2647) - t3162) + t3429) -
               t3385) +
              t3939) +
             t4025) +
            t4103) +
           t761_tmp * -6.6933808503327548) +
          t4367) +
         t2113_tmp * -9.4484399866174762) -
        0.095367431640625)) +
      t6 * ((((((((((((-t2401 + t3254) - t3161) + t3377) - t3538) + t3921) +
                  t4141) -
                 t3933) -
                t4253) +
               t4864) +
              t5057) -
             t5082) +
            0.36027696397569442);
  sfvals_tmp =
      t7 *
      (((((((((((t1643 - t1955) + t3040) - t3123) + t3294) + t3414) + t3839) -
           t4277) +
          t4941) -
         t4924) -
        t5058) +
       7.0348198031201772);
  t6616_tmp = t9 * ((((t3213 + t3916) + t4460) - t4934) - t4955);
  t6596_tmp =
      xi *
      ((((((((((((-t1706 - t2788) + t3166) + t3276) + t3607) - t3712) + t4212) +
            t4252) -
           t3816) -
          t3896) +
         t4582) -
        t4147) +
       0.476837158203125);
  sdvals[133] = ((b_sfvals_tmp + sfvals_tmp) + t6616_tmp) - t6596_tmp;
  h_sfvals_tmp =
      (t8 *
           ((((((((t3031 - t3050) + t4932) + t5074) + t5166) - t4743) - t4973) -
             t5313) +
            0.79472859700520826) +
       t6 * ((((((((((((t2845 + t3359) + t3366) + t3466) - t3280) + t3997) +
                   t4945) +
                  t5086) +
                 t5258) -
                t5154) -
               t5307) -
              t5532) -
             1.2927585177951391)) +
      ((((((((((((((t2313 + eta * t3190) + t3560) - t3362) + t3701) - t3589) +
               t770_tmp * -40.8137286150897) +
              t4105) +
             eta * t3618) -
            t3778) -
           t3898) -
          t3909) +
         t1169_tmp * -6.2989599910783181) +
        t5278) +
       0.29457939995659721);
  g_sfvals_tmp =
      xi *
      ((((((((((((t2327 + t2982) + t3256) + t3301) + t3628) - t3386) - t3428) +
            t3850) +
           t4018) -
          t3822) +
         t5511) -
        t5420) -
       1.4375757288049771);
  f_sfvals_tmp =
      t7 *
      (((((((((((-t2534 + t2955) - t3037) - t3044) + t3324) + t3401) + t4665) -
           t4354) +
          t4857) +
         t5060) -
        t4811) -
       2.454828332971644);
  e_sfvals_tmp = t9 * (((w_sfvals_tmp + t5079) - t4956) - t4974);
  sdvals[134] = ((h_sfvals_tmp - g_sfvals_tmp) + f_sfvals_tmp) - e_sfvals_tmp;
  sdvals[135] = ((t6203_tmp + t6598) - d_sfvals_tmp) - c_sfvals_tmp;
  sdvals[136] = ((b_sfvals_tmp - sfvals_tmp) - t6616_tmp) + t6596_tmp;
  sdvals[137] = ((h_sfvals_tmp + g_sfvals_tmp) - f_sfvals_tmp) + e_sfvals_tmp;
  sdvals[138] =
      ((t6266_tmp +
        ((((((((((((((((t6639_tmp + t3268) + t3281) + t3884) + t4016) + t4162) +
                   t4342) -
                  t3902) +
                 t4504) -
                t4030) -
               t4041) -
              t4121) +
             t4706) +
            t4780) +
           t4909) +
          t5483) -
         0.015894571940104171)) -
       t6219_tmp) +
      b_t6219_tmp;
  sdvals[139] = ((t6560_tmp - t6317_tmp) + t6037_tmp) + t6124_tmp;
  sdvals[140] = ((t6005_tmp - t6001_tmp) - t5955_tmp) - t6187_tmp;
  sdvals[141] =
      ((t6627_tmp +
        (((((((((((((((((t1293 + t3162) + t3385) + t3700) - t3557) - t3828) +
                    t4401) -
                   t3939) -
                  t4025) -
                 t4234) +
                t4807) +
               t4821) +
              t5034) +
             t5100) +
            t5206) +
           t5234) +
          t5260) +
         0.095367431640625)) -
       sdvals_tmp) -
      t6661_tmp;
  sdvals[142] = ((t6365_tmp - t6543_tmp) - t6548_tmp) - t6323_tmp;
  sdvals[143] = ((b_t6021_tmp + t5962_tmp) + t6032_tmp) + t6192_tmp;
  sdvals[144] =
      ((b_sdvals_tmp +
        (((((((((((((((((-t1293 + t3162) + t3385) + t3828) - t3557) + t4120) +
                    t4337) +
                   t4355) -
                  t3939) -
                 t4025) +
                t4607) +
               t4707) -
              t4234) +
             t4903) +
            t5034) +
           t5234) +
          t5260) +
         0.095367431640625)) +
       c_sdvals_tmp) -
      t2461_tmp;
  sdvals[145] = ((t3055_tmp + t5946_tmp) - t1556_tmp) - t1557_tmp;
  sdvals[146] = ((t6033_tmp + t6021_tmp) - t6415_tmp) - t6228_tmp;
  sdvals_tmp =
      -t7 * ((((((((((t1320 - t2876) + t3131) + t3199) - t3566) - t4373) +
                 t4379) +
                t4635) +
               t4637) -
              t5133) -
             3.814697265625) +
      -xi * (((((((((((((((t6534_tmp + t2738) + t2826) + t3175) - t3186) +
                       t3337) +
                      t3355) +
                     t3459) +
                    t3549) -
                   t3759) -
                  t3855) -
                 t3978) +
                t4200) -
               t4863) -
              t5150) +
             2.593994140625);
  b_sdvals_tmp =
      t8 * (((((t2339 + t4464) + t4611) - t4276) - t4374) + 23.84185791015625);
  c_sdvals_tmp =
      t6 * ((((((((((((((t2852 - t2818) + t3043) - t3124) + t3170) - t3180) +
                    t3670) -
                   t3417) -
                  t3629) -
                 t3772) -
                t3919) +
               t4664) +
              t4958) +
             t5094) +
            19.4549560546875);
  sdvals[147] =
      ((sdvals_tmp +
        (((((((((((((((((t1710 + t1877) + t2774) + t2857) + t3181) + t3478) -
                    t3365) +
                   t3725) -
                  t3476) -
                 t3558) -
                t3574) +
               t4102) +
              t4115) +
             t4302) +
            t4795) +
           t5009) +
          t5212) -
         1.71661376953125)) -
       b_sdvals_tmp) +
      c_sdvals_tmp;
  t2461_tmp =
      (-t8 * ((((((((-t3041 - t3200) + t3347) - t4188) + t16 * t3287) + t4611) +
                t4633) -
               t4930) +
              10.59638129340278) +
       -t6 * ((((((((((((t2083 - t1938) + t2818) + t3147) + t3171) + t3191) -
                    t3373) -
                   t3567) +
                  t3629) +
                 t3919) -
                t4375) -
               t4377) -
              6.4849853515625)) +
      (((((((((((((t6450_tmp + t2312) - t2314) + t2617) + t3181) + t3269) +
              t3484) -
             t3365) -
            t3476) +
           t3912) +
          t4115) +
         t761_tmp * -45.599760832609952) +
        t2 * t3670) -
       1.71661376953125);
  t3055_tmp = t9 * ((((t1726 + t4461) - t3969) + t4634) - t4660);
  t5946_tmp =
      t7 *
      (((((((((((t2388 - t2851) - t2876) + t3125) - t3122) + t3224) + t3308) +
           t3770) -
          t4278) -
         t5093) -
        t5133) +
       39.500954710407022);
  t1556_tmp =
      xi * (((((((((((t6534_tmp + t2787) + t3173) + t3287) + t3334) + t3355) -
                 t3452) -
                t3530) +
               t3942) +
              t3973) +
             t4118) -
            8.58306884765625);
  sdvals[148] = ((t2461_tmp - t3055_tmp) - t5946_tmp) - t1556_tmp;
  t1557_tmp =
      (-t8 *
           ((((((((t2969 - t4381) + t4849) + t4949) - t4966) - t4476) + t5123) -
             t4638) +
            4.76837158203125) +
       t6 * ((((((((((((t1507 + t2739) + t2827) - t3121) - t3141) + t3503) -
                   t3753) +
                  t4501) +
                 t4852) -
                t4871) -
               t5140) -
              t5155) +
             9.3389440465856488)) +
      (((((((((((((t6538_tmp + t3172) + t1108_tmp * -17.896110628858029) +
                 t3 * t3126) -
                t3225) +
               t3486) +
              t77_tmp * -35.033991307388121) +
             t3497) +
            t3787) -
           t3471) +
          eta * t3733) -
         t3936) +
        t5239) -
       3.3498693395543979);
  t6032_tmp =
      t7 *
      (((((((((((t2825 - t2853) - t2970) + t3126) + t3130) + t4315) + t4718) +
           t4843) -
          t4666) -
         t4963) -
        t5095) -
       15.19992027753665);
  t6059_tmp = t52_tmp * 23.84185791015625 + t4465_tmp * 331.13691541883679;
  t6033_tmp = t9 * (((t6059_tmp + t4636) - t4662) - t5125);
  t6021_tmp =
      xi *
      ((((((((((((t2415 + t2975) + t3270) + t3271) - t3167) - t3169) - t3176) +
            t3733) -
           t3633) -
          t4288) +
         t5363) +
        t5608) +
       9.096404652536652);
  sdvals[149] = ((t1557_tmp + t6032_tmp) + t6033_tmp) + t6021_tmp;
  sdvals[150] = ((sdvals_tmp + t6568) + b_sdvals_tmp) - c_sdvals_tmp;
  sdvals[151] = ((t2461_tmp + t3055_tmp) + t5946_tmp) + t1556_tmp;
  sdvals[152] = ((t1557_tmp - t6032_tmp) - t6033_tmp) - t6021_tmp;
  sdvals_tmp =
      t7 * ((((((((((-t1320 - t2876) + t3131) + t3199) + t3566) + t4373) +
                t4637) -
               t4379) -
              t4635) -
             t5133) +
            3.814697265625) +
      (((((((((((((((t6534_tmp + t2826) - t2738) + t3186) + t3337) + t3355) -
                t3175) +
               t3759) -
              t3459) +
             t3855) -
            t3549) +
           t3978) +
          t4200) +
         t4863) -
        t5150) -
       2.593994140625) *
          xi;
  b_sdvals_tmp =
      t8 * (((((t2339 + t4374) + t4464) - t4276) - t4611) - 23.84185791015625);
  c_sdvals_tmp =
      t6 * ((((((((((((((t2818 + t2852) - t3043) - t3124) + t3170) + t3180) +
                    t3629) -
                   t3417) +
                  t3919) -
                 t3670) -
                t3772) +
               t4664) +
              t5094) -
             t4958) -
            19.4549560546875);
  sdvals[153] =
      ((sdvals_tmp +
        (((((((((((((((((t1710 - t1877) + t2774) + t2922) + t3365) - t3181) +
                    t3476) +
                   t3478) +
                  t3558) +
                 t3725) +
                t3825) -
               t3574) +
              t4102) +
             t4486) -
            t4115) +
           t4795) +
          t5212) +
         1.71661376953125)) -
       b_sdvals_tmp) +
      c_sdvals_tmp;
  t2461_tmp =
      (t8 * ((((((((-t3041 + t3200) + t3347) + t4188) + t4611) +
                t1337_tmp * -42.385525173611107) -
               t4633) -
              t4930) +
             10.59638129340278) +
       t6 * ((((((((((((-t1938 - t2083) + t2818) + t3147) - t3171) + t3373) -
                   t3191) +
                  t3567) +
                 t3629) +
                t3919) +
               t4375) -
              t4377) -
             6.4849853515625)) +
      (((((((((((((t6450_tmp + t2314) - t2312) + t2617) + t3269) + t3365) -
              t3181) +
             t3476) +
            t3484) +
           t3912) +
          t2 * t3180) -
         t4115) +
        t2113_tmp * -27.727197717737269) +
       1.71661376953125);
  t3055_tmp = t9 * ((((t1726 + t3969) + t4461) - t4634) - t4660);
  t5946_tmp =
      t7 *
      (((((((((((t2388 + t2851) - t2876) + t3122) + t3125) + t3308) - t3224) -
           t3770) +
          t4278) +
         t5093) -
        t5133) -
       39.500954710407022);
  t1556_tmp =
      xi *
      ((((((((((((t842 + t2414) + t2787) + t3173) + t3334) - t3287) - t3355) -
            t3452) -
           t3530) +
          t3942) +
         t4118) -
        t3973) -
       8.58306884765625);
  sdvals[154] = ((t2461_tmp - t3055_tmp) + t5946_tmp) - t1556_tmp;
  t1557_tmp =
      (-t8 * ((((((((-t2969 - t4381) + t4476) + t4638) + t4849) - t4966) +
                t5123) -
               t4949) +
              4.76837158203125) +
       -t6 * ((((((((((((t1507 - t2739) + t2827) + t3121) - t3141) - t3503) +
                    t3753) -
                   t4501) +
                  t4852) +
                 t4871) +
                t5140) -
               t5155) -
              9.3389440465856488)) +
      (((((((((((((t6538_tmp + eta * t3169) + eta * t3176) - t3172) + t3471) -
               t3225) +
              t3486) +
             t3497) +
            t3787) +
           t1169_tmp * -18.484798478491509) +
          t770_tmp * -43.83369728370949) -
         t3936) +
        t5239) -
       3.3498693395543979);
  t6032_tmp =
      t7 *
      (((((((((((-t2825 - t2853) + t2970) + t3130) - t3126) + t4315) + t4718) +
           t4963) -
          t4666) -
         t4843) -
        t5095) +
       15.19992027753665);
  t6033_tmp = t9 * (((t6059_tmp + t5125) - t4636) - t4662);
  t6021_tmp =
      xi *
      ((((((((((((-t2415 + t2975) + t3169) + t3176) + t3270) + t3271) - t3167) +
            t3633) -
           t3733) -
          t4288) +
         t5363) -
        t5608) -
       9.096404652536652);
  sdvals[155] = ((t1557_tmp + t6032_tmp) + t6033_tmp) + t6021_tmp;
  sdvals[156] = ((sdvals_tmp + t6570) + b_sdvals_tmp) - c_sdvals_tmp;
  sdvals[157] = ((t2461_tmp + t3055_tmp) - t5946_tmp) + t1556_tmp;
  sdvals[158] = ((t1557_tmp - t6032_tmp) - t6033_tmp) - t6021_tmp;
  sdvals_tmp = t6 * ((((((((((((-t110 + t245) + t26_tmp * -19.53125) +
                              t77_tmp * -32.552083333333329) +
                             t794) +
                            t806) +
                           t961) -
                          t627) +
                         t1332) +
                        t1744) +
                       t2224) +
                      t2226) +
                     t2558);
  sdvals[159] = ((t6020 + t6186) + t6248) - sdvals_tmp;
  b_sdvals_tmp =
      (t8 * (((((((t375 + t504) + t14 * t227) + t2202) + t2204) + t2207) +
              t2208) +
             5.4253472222222223) +
       ((((((((t694 - t485) + t1431) + t1453) +
            t761_tmp * -4.3402777777777777) -
           t1470) +
          t10 * t566) +
         t2358) +
        t2424)) +
      -t6 * ((((((((((((t74 + t453) + t623) + t716) - t474) - t558) + t1133) +
                  t1224) +
                 t1249) +
                t1505) +
               t1759) +
              t2201) +
             5.208333333333333);
  c_sdvals_tmp =
      t7 * ((((((((((t390 + t454) - t249) - t268) + t793) + t1331) + t1674) +
               t1742) +
              t2216) +
             t2217) -
            6.510416666666667);
  t2461_tmp =
      xi * (((((((((t289 - t241) + t559) + t638) - t334) + t744_tmp) + t767) -
              t628) +
             t1230) +
            t1679);
  sdvals[160] = (b_sdvals_tmp - c_sdvals_tmp) + t2461_tmp;
  t3055_tmp =
      (t8 * ((((((t1828 + t1834) + t1836) + t1978) + t2217) - t2244) - t2501) +
       t6 * ((((((((((((t406 + t424) - t242) + t631) + t675) + t1765) - t1372) +
                  t2252) -
                 t2144) +
                t2467) -
               t2232) +
              t2850) +
             0.28935185185185186)) +
      (((((((((((((t258 + t634) - t428) - t549) + t938) - t600) + eta * t871) +
             t3 * t266) +
            eta * t1050) -
           t1451) +
          t2359) +
         t770_tmp * -40.147569444444443) +
        t2865) -
       0.28935185185185186);
  t5946_tmp =
      xi *
      (((((((((((t213 + t279) + t544) + t624) + t690) - t559) - t649) + t1182) +
          t14 * t292) -
         t1680) +
        t2247) -
       0.72337962962962965);
  t1556_tmp =
      t7 *
      ((((((((((t227 + t270) + t52_tmp * -6.510416666666667) + t1746) + t1771) +
            t2216) +
           t2227) +
          t2234) +
         t2265) +
        t2559) -
       0.72337962962962965);
  sdvals[161] = (t3055_tmp - t5946_tmp) + t1556_tmp;
  t1557_tmp = (t58 + t91) + t392;
  t6032_tmp = t224 + t224 * zeta_1_inv;
  sdvals[162] =
      -t7 * ((((((t6032_tmp + t561 * zeta_1_inv) - t1808) - t1809) - t1812) -
              t1813) +
             t2220) -
      xi * (((((((((((((t1557_tmp + t631) + t794) - t471) + t946) + t952) -
                   t1452) +
                  t1571) +
                 t1667) +
                t2052) +
               t2090) +
              t2230) +
             t2253) +
            t2548);
  sdvals[163] =
      ((((((((((t494 + t667) + t975) + t1009) + t1185) - t1030) +
           t761_tmp * -32.552083333333329) +
          t1775) +
         t2009) +
        t2408) -
       t8 * (((((((t274 + t374) + t1238) - t1815) - t1816) - t1809) - t1811) +
             8.1380208333333321)) -
      t6 * ((((((((((((t75 + t448) + t520) + t789) + t949) + t1093) + t1104) +
                 t1251) -
                t1005) +
               t1664) +
              t2220) +
             t2545) +
            3.90625);
  t6033_tmp = t52_tmp * 8.1380208333333321;
  sdvals[164] =
      (((((((((((((((t434 + t522) + t572) + t918) - t570) + t1055) +
                t10 * t216) +
               t1180) +
              t1206) -
             t1039) +
            t2010) -
           t1937) +
          t2848) +
         t6 * ((((((((((((t367 + t14 * t60) - t445) - t270) + t1450) + t1831) -
                     t1391) +
                    t2231) +
                   t2254) +
                  t2549) +
                 t2551) +
                t2747) +
               0.54253472222222221)) -
        t8 * ((((((t1814 + t1818) + t1821) + t1832) - t2238) - t2249) -
              t6033_tmp)) -
       t77_tmp * 10.633680555555561) -
      0.54253472222222221;
  sdvals[165] =
      ((t6020 +
        (((((((((((((t335 - t292) - t474) - t571) + t1008) + t1022) + t1121) +
               t1134) +
              t1206) -
             t1032) +
            t1552) +
           t1593) +
          t1609) +
         t2807)) +
       t6248) +
      sdvals_tmp;
  sdvals[166] = (b_sdvals_tmp + c_sdvals_tmp) - t2461_tmp;
  sdvals[167] = (t3055_tmp + t5946_tmp) - t1556_tmp;
  sdvals_tmp =
      t6 * ((((((((((-t219 + t483) + t26_tmp * -14.6484375) - t1081) + t1889) -
                 t1429) +
                t2422) +
               t2425) +
              t2552) +
             t2555) +
            t2870);
  sdvals[168] = (t6134 + t6152) - sdvals_tmp;
  b_sdvals_tmp =
      ((((((((t475 + t681) + t1252) + t1471) + t1623) - t1432) - t1447) +
        t2063) +
       t2813) +
      t6077;
  c_sdvals_tmp =
      t7 *
      ((((((((t455 - t250) + t726) - t498) + t1255) + t2421) + t2553) + t2869) -
       4.8828125);
  t2461_tmp =
      xi *
      (((((((t597 - t385) - t468) + t957) - t1002) + t1671) + t1682) + t2418);
  sdvals[169] = (b_sdvals_tmp - c_sdvals_tmp) + t2461_tmp;
  t3055_tmp = -t6107 + (((((((((((((t426 - t257) + t644) + t917) - t633) +
                                t77_tmp * -38.57421875) +
                               t1253) -
                              t934) +
                             t1447) +
                            t1169_tmp * -36.62109375) +
                           t1108_tmp * -122.0703125) +
                          eta * t1933) +
                         t2926) +
                        0.732421875);
  t5946_tmp =
      xi * ((((((((((t278 + t422) + t619) + t669) + t940) - t1396) - t1459) +
               t1998) +
              t2062) +
             t2261) -
            1.220703125);
  t1556_tmp =
      t7 * ((((((((t267 + t435) + t1529) + t2256) + t2556) + t2567) + t2732) +
             t2745) -
            1.220703125);
  sdvals[170] = (t3055_tmp - t5946_tmp) + t1556_tmp;
  t6021_tmp = (t32 + t50) + t163;
  sdvals[171] = -xi * (((((t6021_tmp + t304) + t765) + t767) + t804) + t894);
  sdvals[172] =
      ((((((t78 - t67) - t151) + t313) + t323) + t768) + t1106) -
      t6 * (((((((t42 + t117) + t132) + t180) + t190) + t200) + t321) + 31.25);
  t6415_tmp = t108 + t180;
  t6228_tmp = t52_tmp * 31.25;
  sdvals[173] =
      ((((((-t59 + t147) + eta * t139) + t11 * t112) + t1107) + t1773) -
       t770_tmp * 312.5) -
      t6 * ((((t6415_tmp + t301) - t895) - t1837) - t6228_tmp);
  sdvals[174] =
      ((((((((((((t658 - t468) - t578) + t1003) + t1019) - t1031) + t1544) +
            t1581) +
           t1623) +
          t1626) +
         t2375) +
        t2813) +
       t6152) +
      sdvals_tmp;
  sdvals[175] = (b_sdvals_tmp + c_sdvals_tmp) - t2461_tmp;
  sdvals[176] = (t3055_tmp + t5946_tmp) - t1556_tmp;
  sdvals_tmp =
      t7 * t6003 +
      -xi *
          (((((((((((((t334 - t509) + t960) + t962) + t1265) + t1457) + t1593) +
                 t1660) -
                t1942) +
               t2049) +
              t2251) +
             t2410) +
            t1797_tmp * -10.850694444444439) +
           t2560);
  b_sdvals_tmp =
      t6 *
      ((((((((((((-t105 + t241) + t26_tmp * -78.125) + t358) + t794) - t558) -
             t620) +
            t1133) +
           t1332) +
          t1744) +
         t1759) +
        t1833) +
       t1835);
  sdvals[177] =
      (sdvals_tmp +
       (((((((((((((((t147 + t335) + t407) + t485) - t540) + t1206) - t933) +
                t1470) +
               t1528) +
              t1573) +
             t1609) -
            t1431) -
           t1453) +
          t1963) +
         t1981) +
        t2172)) +
      b_sdvals_tmp;
  c_sdvals_tmp =
      (t8 * (((((((t273 + t370) + t1229) + t2202) + t2204) + t2471) + t2472) +
             10.850694444444439) +
       ((((((((t156 + t474) + t1032) - t1008) - t1022) + t1515) + t1520) +
         t1591) +
        t2 * t627)) +
      -t6 * ((((((((((t243 + t453) + t716) + t806) + t961) + t1249) + t1505) +
                t1586) -
               t1465) +
              t2479) +
             t2558);
  t2461_tmp =
      xi *
      (((((((((((-t57 + t26_tmp * -10.416666666666666) + t294) + t338) - t241) +
             t567) +
            t638) +
           t753) -
          t628) +
         t1183) +
        t1236) +
       t1558);
  t3055_tmp =
      t7 * ((((((((((-t136 - t175) - t225) - t262) + t756) + t793) + t1331) +
               t1742) +
              t1822) +
             t1823) -
            26.041666666666668);
  sdvals[178] = (c_sdvals_tmp - t2461_tmp) + t3055_tmp;
  t5946_tmp = t213 + t690;
  t1556_tmp =
      (t8 * ((((((t1592 + t1828) + t1836) + t2225) + t2231) +
              t895_tmp * -43.402777777777779) +
             t2478) +
       ((((((((((((t6161_tmp + t424) + t634) + t77_tmp * -10.12731481481481) -
                t600) +
               t3 * t270) +
              eta * t649) -
             t911) +
            t1516) +
           t1108_tmp * -14.46759259259259) -
          t1451) +
         t2177) -
        0.28935185185185186)) +
      t6 * ((((((((((t6167_tmp - t882) - t1372) + t1941) + t2252) + t2266) +
                t1344_tmp * -10.850694444444439) +
               t2561) +
              t2670) +
             t2850) +
            2.2424768518518521);
  t6627_tmp =
      xi *
      (((((((((((t5946_tmp - t570) + t1182) + t1190) - t871) - t910) - t1050) +
           t1468) +
          t892_tmp * -5.208333333333333) +
         t2145) +
        t2504) +
       0.5063657407407407);
  t6661_tmp =
      t7 * ((((((((((t223 + t266) + t1132) + t1746) + t1763) + t1771) + t1836) +
               t2216) +
              t2219) -
             t2143) -
            1.4467592592592593);
  sdvals[179] = (t1556_tmp + t6627_tmp) - t6661_tmp;
  t6365_tmp = t6 * ((((((t263 - t321) + t789) + t949) - t1797_tmp * 97.65625) -
                     t1344_tmp * 97.65625) +
                    t2220);
  sdvals[180] = ((t5931 + t6069) + t6078) + t6365_tmp;
  t6543_tmp =
      (((eta * t471 + t770_tmp * -7.2337962962962958) + eta * t1452) +
       -t8 * (((t26_tmp * 81.380208333333329 + t52_tmp * 81.380208333333329) -
               t1809) -
              t1811)) +
      -t6 * (((((t448 + t1093) + t1104) + t1233) + t1251) + t14 * t562);
  t6548_tmp =
      t7 *
      ((((t26_tmp * 130.20833333333329 + t450) + t14 * t226) - t1808) - t1809);
  t1557_tmp = xi * (((t1557_tmp + t562) + t1233) + t1571);
  sdvals[181] = (t6543_tmp + t6548_tmp) + t1557_tmp;
  t6323_tmp =
      (t8 * ((((-t1814 - t1821) + t895_tmp * 81.380208333333329) + t2550) +
             8.1380208333333321) +
       (((((((t522 + t2 * 0.54253472222222221) + t1055) - t1039) +
           t761_tmp * -7.2337962962962958) -
          t1937) +
         t2 * t1450) -
        0.54253472222222221)) +
      t6 * (((((((-(zeta * 33.275462962962962) - t1391) + t1931) + t2241) +
               t2250) +
              t2254) +
             t2747) +
            1.1935763888888891);
  b_t6021_tmp = xi * (((((((-t516 + t10 * 1.6276041666666667) + t628) -
                          t2 * 14.10590277777778) +
                         t2 * t268) +
                        t14 * t148) +
                       t2250) +
                      2.0616319444444442);
  t5962_tmp = t7 * (((((t262 + t1829) - t1821) + t2213) + t15 * t566) -
                    10.850694444444439);
  sdvals[182] = (t6323_tmp - b_t6021_tmp) - t5962_tmp;
  t6192_tmp =
      -t7 * t6005 +
      (((((((((((((t334 + t509) + t962) + t1241) + t1265) - t960) - t1457) +
             t1942) -
            t1660) +
           t2049) +
          t2247) -
         t2251) +
        t2560) -
       t2410) *
          xi;
  t6266_tmp =
      t6 *
      ((((((((((((t105 + t105 * zeta_1_inv) + t180) + t241) - t558) - t620) +
             t1133) -
            t794) -
           t1332) +
          t1759) +
         t1833) +
        t1835) -
       t1744);
  sdvals[183] = (t6192_tmp + t6253) + t6266_tmp;
  t6219_tmp =
      (-t8 * (((((((t273 + t26_tmp * -43.402777777777779) + t1577) + t1823) +
                 t1825) +
                t2471) +
               t2472) +
              10.850694444444439) +
       ((((((((t156 - t474) + t1008) + t1022) + t2 * t245) - t1032) + t1515) +
         t1591) +
        t2113_tmp * -10.850694444444439)) +
      t6 * ((((((((((t243 + t806) - t453) + t961) - t716) + t1236) - t1249) -
               t1465) -
              t1505) +
             t2230) +
            t2558);
  b_t6219_tmp =
      xi * ((((((((((t6248_tmp + t294) - t241) + t638) + t656) + t753) - t567) -
               t628) +
              t1183) +
             t1188) +
            t1586);
  t6560_tmp =
      t7 *
      ((((((((((t136 + t262) - t175) - t225) + t756) - t793) - t1331) + t1822) +
         t1823) +
        t2119) +
       26.041666666666668);
  sdvals[184] = (t6219_tmp + b_t6219_tmp) + t6560_tmp;
  t6317_tmp =
      (-t8 * ((((((t1592 - t1828) + t2214) + t2215) + t2225) + t2228) + t2231) +
       ((((((((((((t6161_tmp + eta * t279) + t634) - t424) + t911) - t600) +
              eta * t624) +
             t1516) +
            t1169_tmp * -7.2337962962962958) +
           t770_tmp * -23.871527777777779) -
          t1451) +
         t2177) -
        0.28935185185185186)) +
      -t6 * ((((((((((t6167_tmp + t882) + t1372) - t1941) + t2248) - t2252) +
                 t2266) +
                t2504) +
               t2561) -
              t2850) -
             2.2424768518518521);
  t5946_tmp =
      xi * (((((((((((t5946_tmp + t871) + t910) - t570) + t1050) + t1182) +
                 t14 * t147) +
                t761_tmp * -28.93518518518519) -
               t1468) +
              t2145) +
             t2670) -
            0.5063657407407407);
  t6037_tmp = t7 * ((((((((((t223 - t266) + t1132) + t1746) + t1771) +
                         t895_tmp * -11.574074074074074) +
                        t2143) +
                       t2214) +
                      t2216) +
                     t2467) +
                    1.4467592592592593);
  sdvals[185] = (t6317_tmp - t5946_tmp) + t6037_tmp;
  t6124_tmp = t6 * t6124;
  sdvals[186] =
      (t6136 +
       (((((((((((((-t146 + t658) + t730) - t475) - t542) + t1432) + t1447) +
              t1531) +
             t1544) +
            t1581) -
           t1471) +
          t1971) +
         t1992) +
        t2793)) -
      t6124_tmp;
  t6005_tmp = t5944_tmp + t389;
  t6001_tmp =
      ((((((((t328 + t468) + t1031) + t1114) - t1003) - t1019) + t1569) +
        t761_tmp * -3.662109375) +
       t2680) +
      t6061;
  t5955_tmp =
      xi *
      (((((((t6005_tmp + t551) + t597) - t468) + t551 * zeta_1_inv) - t1002) +
        t1658) +
       t1364 * zeta);
  t6187_tmp =
      t7 *
      ((((((((t281 + t447) + t719) + t887) + t1160) + t2622) + t2702) - t2869) +
       43.9453125);
  sdvals[187] = (t6001_tmp - t5955_tmp) - t6187_tmp;
  t6203_tmp =
      t6 * t6087 +
      (((((((((((((t422 - t257) + t644) + t77_tmp * -17.08984375) - t546) -
               t633) +
              t1115) +
             t3 * t267) -
            t909) +
           t1447) +
          t1108_tmp * -24.4140625) +
         eta * t1459) +
        t2789) +
       0.732421875);
  d_sfvals_tmp =
      xi * (((((((((((-t422 - t525) + t931) + t942) - t1328) - t1045) + t1659) +
                t1933) +
               t770_tmp * -18.310546875) +
              t1332_tmp * -4.8828125) +
             t77_tmp * 14.6484375) +
            2.197265625);
  c_sfvals_tmp =
      t7 * ((((((((t835 - t524) + t1625) - t2157) + t2556) + t2567) + t2732) -
             t2707) +
            3.662109375);
  sdvals[188] = (t6203_tmp - d_sfvals_tmp) - c_sfvals_tmp;
  sdvals[189] = t5946 + t5949;
  t6021_tmp = xi * (t6021_tmp + t765);
  sdvals[190] = t5912 + t6021_tmp;
  b_sfvals_tmp =
      xi * ((((((-t139 + t150) + t2 * 26.041666666666668) - t314) + t767) +
             t892_tmp * -31.25) +
            5.208333333333333);
  sdvals[191] = t5921 + b_sfvals_tmp;
  sfvals_tmp = t6 * t6125;
  sdvals[192] =
      (t6127 +
       (((((((((((((-t146 + t542) + t730) - t475) + t1064) + t1147) + t1159) +
              t1432) +
             t1447) +
            t1582) -
           t1471) +
          t1970) +
         t1992) +
        t2793)) -
      sfvals_tmp;
  t6616_tmp =
      ((((((((t328 - t468) + t1003) + t1019) + t1114) - t1031) + t2 * t483) +
        t1569) +
       t2789) +
      t6057;
  t6005_tmp = xi * (((((((t6005_tmp + t468) - t551) - t597) + t1002) +
                      t398_tmp * -14.6484375) +
                     t1658) +
                    t761_tmp * -18.310546875);
  t6596_tmp =
      t7 *
      ((((((((t447 - t281) + t719) + t1160) - t887) + t2421) + t2553) + t2869) -
       43.9453125);
  sdvals[193] = (t6616_tmp - t6005_tmp) - t6596_tmp;
  h_sfvals_tmp =
      -t6092 +
      (((((((((((((eta * t278 - t257) + t644) - t422) - t546) + t909) - t633) +
             t1115) +
            eta * t619) +
           t1447) +
          t1169_tmp * -12.20703125) +
         t770_tmp * -40.283203125) +
        t2789) +
       0.732421875);
  g_sfvals_tmp =
      xi * (((((((((((t422 + t669) - t525) + t942) - t931) - t1045) + t1659) +
                t1728) +
               t1933) +
              t1998) +
             t14 * t542) +
            2.197265625);
  f_sfvals_tmp =
      t7 * ((((((((t524 + t835) + t1625) + t2157) + t2556) + t2567) + t2707) +
             t2732) -
            3.662109375);
  sdvals[194] = (h_sfvals_tmp - g_sfvals_tmp) + f_sfvals_tmp;
  e_sfvals_tmp =
      t6 *
      ((((((((((((t110 + t110 * zeta_1_inv) + t245) + t224 * zeta) + t806) +
              t961) -
             t627) -
            t794) -
           t1332) -
          t1744) +
         t2224) +
        t2226) +
       t2558);
  sdvals[195] =
      ((t6021 +
        (((((((((((((t292 + t653) + t751) - t474) - t571) + t1008) + t1022) +
               t1121) +
              t1180) +
             t1250) -
            t1032) +
           t1572) +
          t1593) +
         t2807)) +
       t6247) +
      e_sfvals_tmp;
  j_sfvals_tmp =
      (-t8 * (((((((t504 + t26_tmp * -10.850694444444439) + t1592) + t1823) +
                 t1825) +
                t2207) +
               t2208) +
              5.4253472222222223) +
       ((((((((t485 + t694) + t2 * t241) + t1470) - t1431) - t1453) + t2358) +
         t2424) +
        t2113_tmp * -21.701388888888889)) +
      -t6 * ((((((((((((-t74 + t453) + t474) + t558) + t716) + t2 * t136) -
                   t623) +
                  t1224) +
                 t1249) +
                t1505) -
               t1759) +
              t2201) -
             5.208333333333333);
  i_sfvals_tmp =
      t7 * ((((((((((t249 + t268) + t390) + t454) - t793) + t1674) - t1331) +
               t2119) +
              t2216) +
             t2217) +
            6.510416666666667);
  l_sfvals_tmp =
      xi *
      (((((((((t241 - t289) + t559) + t628) - t334) - t767) - t638) + t1679) -
        t744_tmp) +
       t559 * zeta_1_inv);
  sdvals[196] = (j_sfvals_tmp + i_sfvals_tmp) - l_sfvals_tmp;
  k_sfvals_tmp =
      (-t8 *
           ((((((-t1828 + t1834) + t1978) + t2214) + t2217) + t2244) + t2501) +
       -t6 *
           ((((((((((((t242 + t406) + t424) + t675) - t631) + t1372) + t1765) +
                 t2219) +
                t2232) -
               t2252) -
              t2144) -
             t2850) -
            0.28935185185185186)) +
      (((((((((((((t258 + t428) + t549) + t634) + t938) - t600) +
              t77_tmp * -9.6932870370370363) +
             t1169_tmp * -14.46759259259259) -
            t1451) +
           t2017) +
          eta * t1468) +
         t2359) +
        t2865) -
       0.28935185185185186);
  m_sfvals_tmp =
      xi *
      (((((((((((t279 + eta * t277) - t213) + t544) + t559) + t624) - t649) +
           t1553) -
          t1680) +
         t1332_tmp * -26.041666666666668) +
        t2247) -
       0.72337962962962965);
  o_sfvals_tmp =
      t7 *
      ((((((((((t270 - t227) + t14 * t211) - t1746) - t1771) + t2227) + t2234) +
          t2265) +
         t2464) +
        t2559) -
       0.72337962962962965);
  sdvals[197] = (k_sfvals_tmp + m_sfvals_tmp) - o_sfvals_tmp;
  sdvals[198] =
      -xi *
          (((((((((((((((-t91 - t58) + t631) - t392) - t471) + t946) + t1204) -
                   t794) -
                  t952) -
                 t1452) +
                t1667) +
               t2052) +
              t2090) +
             t2253) +
            t2479) +
           t2548) +
      t7 * ((((((t6032_tmp + t398_tmp * -32.552083333333329) + t1812) + t1813) -
              t1808) -
             t1809) +
            t2471);
  sdvals[199] =
      ((((((((((t667 - t494) + t1030) + t1183) + t1185) - t975) - t1009) +
          t2009) +
         t2165) +
        t2408) +
       t8 * (((((((t274 - t374) - t1238) + t1809) + t1811) - t1815) - t1816) +
             8.1380208333333321)) -
      t6 * ((((((((((((-t75 + t448) - t520) + t1005) + t1093) + t1104) - t789) +
                 t1251) -
                t949) +
               t1664) +
              t2471) +
             t2545) -
            3.90625);
  sdvals[200] =
      (((((((((((((((-t434 + t522) + t570) + t572) + eta * t516) + t918) +
                t1055) -
               t1039) +
              t1552) +
             t1572) +
            t2010) -
           t1937) +
          t2848) +
         t8 * ((((((t1818 + t1832) - t1814) - t1821) + t2238) + t2249) -
               t6033_tmp)) -
        t770_tmp * 1.6276041666666667) +
       t6 * ((((((((((((t445 - t270) + t678) + t1450) - t1391) - t1831) +
                   t2254) +
                  t2480) +
                 t2549) +
                t2551) +
               t2747) -
              t52_tmp * 3.90625) +
             0.54253472222222221)) -
      0.54253472222222221;
  sdvals[201] =
      ((t6021 +
        (((((((((((((t335 + t474) - t292) + t571) + t1032) + t1134) + t1206) +
               t1241) -
              t1008) -
             t1022) +
            t1517) +
           t1552) +
          t1609) +
         t2724)) +
       t6247) -
      e_sfvals_tmp;
  sdvals[202] = (j_sfvals_tmp - i_sfvals_tmp) + l_sfvals_tmp;
  sdvals[203] = (k_sfvals_tmp - m_sfvals_tmp) + o_sfvals_tmp;
  t6032_tmp =
      t6 *
      ((((((((((t219 + t219 * zeta_1_inv) + t483) + t1081) + t1889) - t1429) +
           t2425) +
          t2552) +
         t2623) +
        t2704) -
       t2870);
  sdvals[204] = (t6135 - t6172) + t6032_tmp;
  t6033_tmp =
      ((((((((t681 - t475) + t1252) + t1432) + t1447) - t1471) + t1990) +
        t2063) +
       t2729) -
      t6085;
  e_sfvals_tmp =
      t7 *
      ((((((((t250 + t455) + t498) + t726) + t1255) + t2622) + t2702) - t2869) +
       4.8828125);
  j_sfvals_tmp =
      xi *
      (((((((t385 + t597) - t468) + t957) - t1002) + t1671) + t2061) + t2418);
  sdvals[205] = (t6033_tmp + e_sfvals_tmp) + j_sfvals_tmp;
  i_sfvals_tmp =
      -t6108 +
      (((((((((((((-t257 + t644) + eta * t525) - t426) - t633) + t1253) -
              t917) -
             t934) +
            t1447) +
           t3 * t524) +
          eta * t1045) +
         t770_tmp * -142.822265625) +
        t2926) +
       0.732421875);
  l_sfvals_tmp =
      xi * ((((((((((t422 - t278) + t669) - t619) - t940) + t1459) + t1683) -
               t1396) +
              t1998) +
             t2261) +
            1.220703125);
  k_sfvals_tmp =
      t7 * ((((((((t435 - t267) + t1529) - t2256) + t2556) + t2567) + t2732) -
             t2745) +
            1.220703125);
  sdvals[206] = (i_sfvals_tmp - l_sfvals_tmp) + k_sfvals_tmp;
  sdvals[207] =
      -xi * (((((((-t50 - t32) + t304) + t329) + t767) + t804) + t894) -
             t770_tmp * 130.20833333333329);
  sdvals[208] = ((((((t67 + t78) + t151) - t313) - t323) + t768) + t1106) +
                t6 * (((((((t42 + t132) - t200) - t117) + t321) + t358) +
                       t26_tmp * -244.79166666666671) +
                      31.25);
  sdvals[209] = ((((((t59 + t147) + eta * t150) + t1107) + t1773) -
                  t1108_tmp * 260.41666666666669) -
                 t77_tmp * 88.541666666666671) +
                t6 * ((((t6415_tmp - t301) + t895) + t1837) - t6228_tmp);
  sdvals[210] =
      ((((((((((((t468 + t658) - t578) + t1031) - t1003) - t1019) + t1544) +
            t1581) +
           t1626) +
          t1990) +
         t2375) +
        t2729) -
       t6172) -
      t6032_tmp;
  sdvals[211] = (t6033_tmp - e_sfvals_tmp) - j_sfvals_tmp;
  sdvals[212] = (i_sfvals_tmp + l_sfvals_tmp) - k_sfvals_tmp;
  sdvals[213] =
      (t6192_tmp +
       (((((((((((((((-t147 + t335) + t732) - t485) - t540) + t933) + t1206) +
                t1431) +
               t1453) +
              t1528) +
             t1538) +
            t1573) +
           t1603) +
          t1609) -
         t1470) +
        t2458)) -
      t6266_tmp;
  sdvals[214] = (t6219_tmp - b_t6219_tmp) - t6560_tmp;
  sdvals[215] = (t6317_tmp + t5946_tmp) - t6037_tmp;
  sdvals[216] =
      ((t5931 +
        (((((((((-t148 + t494) + t398_tmp * -3.90625) - t572) + t975) + t1009) -
            t1030) +
           t792_tmp * -8.1380208333333321) +
          t761_tmp * -14.10590277777778) +
         t2482)) +
       t6078) -
      t6365_tmp;
  sdvals[217] = (t6543_tmp - t6548_tmp) - t1557_tmp;
  sdvals[218] = (t6323_tmp + b_t6021_tmp) + t5962_tmp;
  sdvals[219] = (sdvals_tmp + t6254) - b_sdvals_tmp;
  sdvals[220] = (c_sdvals_tmp + t2461_tmp) - t3055_tmp;
  sdvals[221] = (t1556_tmp - t6627_tmp) + t6661_tmp;
  sdvals[222] = (t6127 + t6209) + sfvals_tmp;
  sdvals[223] = (t6616_tmp + t6005_tmp) + t6596_tmp;
  sdvals[224] = (h_sfvals_tmp + g_sfvals_tmp) - f_sfvals_tmp;
  sdvals[225] =
      t5946 + (((((((-t67 - t76) - t151) + t313) + t323) + t398_tmp * -31.25) +
                t761_tmp * -26.041666666666668) +
               t2165);
  sdvals[226] = t5912 - t6021_tmp;
  sdvals[227] = t5921 - b_sfvals_tmp;
  sdvals[228] = (t6136 + t6203) + t6124_tmp;
  sdvals[229] = (t6001_tmp + t5955_tmp) + t6187_tmp;
  sdvals[230] = (t6203_tmp + d_sfvals_tmp) + c_sfvals_tmp;
  sdvals_tmp = t6 * ((((((((((((-t62 + t26_tmp * -156.25) + t240) +
                              t77_tmp * -260.41666666666669) -
                             t299) +
                            t787) -
                           t611) +
                          t1129) +
                         t1335) +
                        t1339) +
                       t1750) +
                      t1810) +
                     t1812);
  sdvals[231] =
      ((t6001 +
        (((((((((((((t165 - t243) - t290) + t625) + t636) + t773) - t560) -
               t648) +
              t1130) +
             t1173) +
            t1245) +
           t1579) +
          t1605) +
         t2169)) +
       t6173) +
      sdvals_tmp;
  b_sdvals_tmp =
      (-t8 * (((((((t185 + t271) + t14 * t113) - t1783) - t1784) - t1806) -
               t1807) +
              43.402777777777779) +
       ((((((((t155 - t243) + t625) + t636) - t648) + t2 * t240) + t1150) +
         t1563) +
        t2113_tmp * -43.402777777777779)) +
      t6 * ((((((((((t109 + t355) - t276) - t299) + t617) + t714) + t742) +
               t1129) -
              t784) +
             t1750) -
            t1781);
  c_sdvals_tmp =
      t7 *
      ((((((((((-t116 - t135) - t142) + t341) + t752) + t786) + t15 * t149) +
          t1338) +
         t1799) +
        t1802) -
       52.083333333333336);
  t2461_tmp =
      xi * (((((((((t149 + t189) - t131) + t298) + t325) + t412_tmp) - t320) +
              t761) +
             t791) +
            t1177);
  sdvals[232] = (b_sdvals_tmp + c_sdvals_tmp) - t2461_tmp;
  t3055_tmp =
      (-t8 * ((((((t1577 + t1792) + t1795) - t1798) + t1811) + t1823) + t2199) +
       t6 * (((((((((((t252 - t230) + t953) - t617) + t1760) + t1805) + t1824) -
                 t1734) -
                t1758) -
               t2164) +
              t77_tmp * 57.870370370370367) -
             1.1574074074074074)) +
      (((((((((((((t312 + t380) - t215) - t256) - t286) + t545) + t11 * t116) +
             t1049) +
            t1151) -
           t1034) +
          t1169_tmp * -28.93518518518519) +
         t770_tmp * -95.486111111111114) +
        t2456) +
       1.1574074074074074);
  t5946_tmp =
      xi *
      (((((((((((t107 + t276) + t324) - t188) - t300) + t760) + t780) - t576) -
          t646) +
         t1747) +
        t2218) -
       2.8935185185185186);
  t1556_tmp =
      t7 *
      ((((((((((t114 + t264) + t1128) + t1337) + t15 * t293) + t1772) + t1813) +
          t1822) +
         t1826) -
        t1759) -
       2.8935185185185186);
  sdvals[233] = (t3055_tmp + t5946_tmp) - t1556_tmp;
  t1557_tmp = t112 + t184;
  sdvals[234] =
      xi * (((((((((((((t179 - t241) + t558) + t617) + t787) + t948) + t1276) -
                  t1050) +
                 t1645) -
                t1272) +
               t1762) +
              t2011) +
             t2216) +
            t2272) +
      t7 * ((((((t1557_tmp + t413) + t1340) - t1344) - t1345) + t2182) + t2183);
  sdvals[235] =
      ((((((((((t319 + t379) - t265) + t612) + t776) + t1169) + t1191) -
          t1047) +
         t2047) +
        t8 * (((((((t144 + t184) + t14 * t112) - t1342) - t1343) - t1794) -
               t1796) +
              65.104166666666671)) -
       t2113_tmp * 130.20833333333329) +
      t6 * ((((((((((t142 + t223) + t579) + t711) - t393) + t756) + t782) -
               t1046) +
              t1274) +
             t1829) +
            t2270);
  t6032_tmp = t52_tmp * 65.104166666666671;
  sdvals[236] =
      (((((((((((((((t179 - t226) - t282) + t567) + t577) + t11 * t113) -
                t563) +
               t1037) +
              t1173) -
             t1052) +
            t1935) +
           t2048) +
          t2166) +
         t8 * ((((((t1346 + t1786) + t1800) + t1809) - t1787) - t1806) -
               t6032_tmp)) -
        t6 * (((((((((((-t114 - t264) + t449 * zeta) + t950) + t1048) + t1763) +
                   t1808) +
                  t2217) +
                 t2273) +
                t2537) +
               t2546) +
              2.1701388888888888)) -
       t770_tmp * 325.52083333333331) +
      2.1701388888888888;
  sdvals[237] = ((t6001 + t6150) + t6173) - sdvals_tmp;
  sdvals[238] = (b_sdvals_tmp - c_sdvals_tmp) + t2461_tmp;
  sdvals[239] = (t3055_tmp - t5946_tmp) + t1556_tmp;
  sdvals_tmp =
      t6 * ((((((t143 - t317) + t579) + t782) - t1797_tmp * 195.3125) - t1801) +
            t1829);
  sdvals[240] = ((t5922 + (((((((t265 - t302) - t319) - t612) + t1047) +
                             t761_tmp * -86.805555555555557) +
                            t792_tmp * -65.104166666666671) +
                           t10 * t951)) +
                 t6039) -
                sdvals_tmp;
  b_sdvals_tmp =
      (((t653 + t1188) + t2017) +
       t8 * (((t26_tmp * 325.52083333333331 + t52_tmp * 325.52083333333331) -
              t1342) -
             t1343)) +
      t6 * (((((t223 + t748_tmp * 520.83333333333326) + t711) - t393) + t756) +
            t1332_tmp * 520.83333333333326);
  c_sdvals_tmp = xi * (((t179 + t297) + t787) + t2011);
  t2461_tmp = t7 * ((((t184 + t449) + t1229) + t2182) + t2183);
  sdvals[241] = (b_sdvals_tmp - c_sdvals_tmp) - t2461_tmp;
  t3055_tmp =
      (-t8 * (((t5930_tmp + t15 * t579) + t14 * t949) + 32.552083333333329) +
       (((((((-t282 - t2 * 2.1701388888888888) + t1037) + t1190) - t1052) +
          t1935) +
         t2113_tmp * -54.253472222222221) +
        2.1701388888888888)) +
      -t6 * (((((((zeta * 101.2731481481481 + t950) - t611) + t1763) +
                t1344_tmp * 260.41666666666669) +
               t1810) +
              t2537) -
             30.381944444444439);
  t5946_tmp =
      xi *
      ((((((-(zeta * 173.61111111111109) - t11 * 173.61111111111109) - t299) +
          t651) +
         t761_tmp * 217.01388888888891) +
        t1833) +
       21.701388888888889);
  t1556_tmp =
      t7 * (((((t142 - t1804) + t1806) - t1812) + t2215) - 21.701388888888889);
  sdvals[242] = (t3055_tmp + t5946_tmp) + t1556_tmp;
  t6033_tmp =
      t6 * ((((((((((((t62 + t62 * zeta_1_inv) + t178) + t240) - t299) - t611) +
                  t1129) +
                 t1216) -
                t1335) +
               t1750) -
              t1339) +
             t1810) +
            t1812);
  sdvals[243] =
      ((t6000 +
        (((((((((((((t165 + t243) - t290) + t560) + t648) + t773) - t625) -
               t636) +
              t1130) +
             t1173) +
            t1231) +
           t1245) +
          t1246) +
         t2456)) +
       t6168) -
      t6033_tmp;
  t6021_tmp =
      (t8 * (((((((t271 + t26_tmp * -173.61111111111109) +
                  t52_tmp * -173.61111111111109) +
                 t1783) +
                t1784) -
               t1806) -
              t1807) +
             43.402777777777779) +
       ((((((((t155 + t243) + t648) - t625) - t636) + t1150) +
          t761_tmp * -8.6805555555555554) +
         t1563) +
        t2166)) +
      t6 * ((((((((((t109 + t276) + t299) + t355) + t714) + t742) + t2 * t135) -
               t617) -
              t784) -
             t1750) -
            t1781);
  t6415_tmp =
      xi *
      (((((((((t131 + t189) - t149) + t298) + t320) - t325) + t791) - t761) +
        t10 * -t116) -
       t412_tmp);
  t6228_tmp = t7 * ((((((((((t135 + t142) - t116) + t341) + t752) - t786) +
                        t895_tmp * -156.25) -
                       t1338) +
                      t1799) +
                     t1802) +
                    52.083333333333336);
  sdvals[244] = (t6021_tmp + t6415_tmp) - t6228_tmp;
  t6627_tmp = t114 - t264;
  t6661_tmp =
      (t8 * ((((((t1577 + t1798) + t1811) + t1820) + t1823) - t1792) - t1795) +
       t6 * (((((((((((t230 + t252) + t77_tmp * -57.870370370370367) + t953) -
                    t617) +
                   t1758) +
                  t1805) +
                 t1824) -
                t1734) -
               t1760) -
              t2164) -
             1.1574074074074074)) +
      (((((((((((((t215 + t312) - t256) - t286) + t689) - t545) + t1049) +
             t1151) +
            t1108_tmp * -57.870370370370367) +
           t3 * t264) +
          eta * t646) -
         t1034) +
        t2456) +
       1.1574074074074074);
  t6365_tmp =
      xi *
      (((((((((((t107 - t188) - t276) - t300) + t576) - t324) + t646) + t760) -
          t780) +
         t1747) +
        t2466) +
       2.8935185185185186);
  t6543_tmp =
      t7 * (((((((((t6627_tmp + t1128) + t1337) + t1759) + t1772) + t1822) +
               t895_tmp * -23.148148148148149) -
              t1813) -
             t1826) +
            2.8935185185185186);
  sdvals[245] = (t6661_tmp + t6365_tmp) - t6543_tmp;
  sdvals[246] =
      -t7 *
          ((((((t1557_tmp - t413) - t1340) + t1344) + t1345) + t2182) + t2183) +
      xi * (((((((((((((t357 - t241) + t558) + t617) - t948) + t1216) + t1276) -
                  t1050) +
                 t1645) -
                t1272) +
               t10 * t449) +
              t1762) +
             t2272) +
            t2464);
  sdvals[247] =
      ((((((((((t265 + t379) - t319) - t612) + t1047) + t1169) +
           t761_tmp * -65.104166666666671) +
          t1191) +
         t2 * t317) +
        t2047) +
       t6 * ((((((((((t223 - t142) + t711) - t393) + t756) - t579) + t1046) -
                t782) +
               t1274) +
              t2207) +
             t2270)) -
      t8 * (((((((t144 + t26_tmp * -260.41666666666669) + t1342) + t1343) -
               t1794) -
              t1796) -
             t52_tmp * 260.41666666666669) +
            65.104166666666671);
  sdvals[248] =
      (((((((((((((((t226 + t357) - t282) + t577) + t774) - t563) - t567) +
               t1037) +
              eta * t651) -
             t1052) +
            t1935) +
           t2048) +
          t2166) -
         t1108_tmp * 173.61111111111109) -
        t8 * (((((t5930_tmp + t1787) + t1800) + t1806) + t1809) - t6032_tmp)) -
       t6 * ((((((((((t6627_tmp + t950) + t1048) + t1763) - t1808) + t2273) +
                 t2465) +
                t2537) +
               t2546) -
              t77_tmp * 217.01388888888891) +
             2.1701388888888888)) +
      2.1701388888888888;
  sdvals[249] =
      ((t6000 +
        (((((((((((((t290 + t330) - t243) + t625) + t636) + t747) + t774) +
               t803) -
              t560) -
             t648) +
            t1172) +
           t1579) +
          t1605) +
         t2169)) +
       t6168) +
      t6033_tmp;
  sdvals[250] = (t6021_tmp - t6415_tmp) + t6228_tmp;
  sdvals[251] = (t6661_tmp - t6365_tmp) + t6543_tmp;
  sdvals[252] = ((t5922 + t5968) + t6039) + sdvals_tmp;
  sdvals[253] = (b_sdvals_tmp + c_sdvals_tmp) + t2461_tmp;
  sdvals[254] = (t3055_tmp - t5946_tmp) - t1556_tmp;
  sdvals_tmp =
      t6 * ((((((((((-t457 + t878) + t26_tmp * -395.5078125) + t1889) - t1509) -
                 t1939) +
                t2425) +
               t2431) +
              t2552) +
             t2565) +
            t2881);
  sdvals[255] = (-t6127 + t6159) - sdvals_tmp;
  b_sdvals_tmp =
      ((((((((t371 + t514) + t1489) + t1616) + t1684) - t1476) - t1481) +
        t761_tmp * -32.958984375) +
       t2861) -
      t6057;
  c_sdvals_tmp =
      t7 *
      ((((((((t455 + t726) - t529) + t1255) - t1321) + t2430) + t15 * t967) +
        t2880) -
       131.8359375);
  t2461_tmp =
      xi *
      (((((((-t385 + t967) + t1062) - t878) + t1682) + t1687) - t1940) + t2429);
  sdvals[256] = (b_sdvals_tmp - c_sdvals_tmp) + t2461_tmp;
  t3055_tmp =
      t6092 +
      (((((((((((((t442 + t527) + t934) + t1060) + t77_tmp * -153.80859375) -
               t941) -
              t1063) +
             t1617) +
            t3 * t531) +
           t1108_tmp * -219.7265625) -
          t1945) +
         eta * t1946) +
        t2861) -
       6.591796875);
  t5946_tmp =
      xi * ((((((((((t532 + t828) + t940) + t1057) + t1101) + t2062) - t1890) -
               t1946) +
              t2428) +
             t2554) -
            10.986328125);
  t1556_tmp =
      t7 * ((((((((t531 + t1301) + t2031) + t2256) + t2566) + t2745) + t2748) +
             t2862) -
            10.986328125);
  sdvals[257] = (t3055_tmp - t5946_tmp) + t1556_tmp;
  sdvals[258] =
      (-t6127 +
       (((((((((((-t514 + t1087) - t958) + t1476) + t1481) + t1623) - t1489) +
            t2033) +
           t2084) +
          t2419) +
         t2621) +
        t2813)) +
      sdvals_tmp;
  sdvals[259] = (b_sdvals_tmp + c_sdvals_tmp) - t2461_tmp;
  sdvals[260] = (t3055_tmp + t5946_tmp) - t1556_tmp;
  sdvals_tmp =
      t6 *
      ((((((((((t457 + t457 * zeta_1_inv) + t878) + t1509) + t1889) - t1939) +
           t2425) +
          t2552) -
         t2431) -
        t2565) -
       t2881);
  sdvals[261] = (-t6136 + t6160) + sdvals_tmp;
  b_sdvals_tmp =
      -t6061 +
      ((((((((t371 - t514) + t1476) + t1481) + t1616) + t1684) - t1489) +
        t2 * t878) +
       t2926);
  c_sdvals_tmp = t7 * ((((((((t455 + t529) + t726) + t1255) + t1321) - t2430) +
                         t895_tmp * -395.5078125) -
                        t2880) +
                       131.8359375);
  t2461_tmp =
      xi *
      (((((((t385 + t967) + t1062) - t878) + t1687) + t2061) - t1940) + t2429);
  sdvals[262] = (b_sdvals_tmp + c_sdvals_tmp) + t2461_tmp;
  t3055_tmp = -t6 * t6087 +
              (((((((((((((t527 + eta * t532) - t442) + t934) + t941) + t1060) -
                      t1063) +
                     t1617) +
                    eta * t1057) +
                   t1169_tmp * -109.86328125) -
                  t1945) +
                 t770_tmp * -362.548828125) +
                t2861) -
               6.591796875);
  t5946_tmp =
      xi * ((((((((((t828 - t532) + t1101) - t940) - t1057) + t1683) + t1946) -
               t1890) +
              t2428) +
             t2554) +
            10.986328125);
  t1556_tmp =
      t7 * ((((((((-t531 + t1301) + t2031) - t2256) + t2566) + t2748) - t2745) +
             t2862) +
            10.986328125);
  sdvals[263] = (t3055_tmp - t5946_tmp) + t1556_tmp;
  sdvals[264] =
      (-t6136 +
       (((((((((((t514 + t1087) - t958) + t1489) - t1476) - t1481) + t1990) +
            t2033) +
           t2084) +
          t2419) +
         t2621) +
        t2729)) -
      sdvals_tmp;
  sdvals[265] = (b_sdvals_tmp - c_sdvals_tmp) - t2461_tmp;
  sdvals[266] = (t3055_tmp + t5946_tmp) - t1556_tmp;
  sdvals[267] =
      xi *
      ((((((t2 * 364.58333333333331 + t10 * 156.25) - t36) - t314) + t761) +
        t892_tmp * 125.0) +
       t398_tmp * 489.58333333333331);
  sdvals[268] = ((t1108_tmp * -260.41666666666669 + t10 * t62) +
                 t6 * (((eta * 364.58333333333331 + t178) + t52_tmp * 125.0) +
                       489.58333333333331 * eta * zeta_1_inv)) +
                -20.833333333333332 * eta * zeta;
  sdvals[269] =
      (((((((t2 * -10.416666666666666 + t10 * 890.625) -
            t11 * 1354.166666666667) +
           t12 * 651.04166666666674) -
          zeta * 197.91666666666671) -
         t6 * (((((t2 * -130.20833333333329 + t10 * 390.625) - zeta * 156.25) +
                 t892_tmp * 244.79166666666671) +
                t895_tmp * 125.0) +
               10.416666666666666)) -
        t2113_tmp * 390.625) +
       t149 * zeta) +
      10.416666666666666;
  sdvals[270] =
      t7 * ((((zeta * 195.3125 - t892_tmp * 976.5625) + t1344_tmp * 781.25) +
             t1345_tmp * 781.25) -
            t398_tmp * 976.5625) -
      xi *
          ((((((((t10 * -269.09722222222217 + t11 * 141.0590277777778) - t295) +
                zeta * 126.3020833333333) +
               t892_tmp * 1.7361111111111112) +
              t1797_tmp * 488.28125) -
             t761_tmp * 629.34027777777783) -
            t398_tmp * 11.28472222222222) +
           t792_tmp * 488.28125);
  sdvals[271] =
      ((((t770_tmp * 269.09722222222217 - t1108_tmp * 141.0590277777778) -
         t8 * (((t52_tmp * 488.28125 + t26_tmp * 488.28125) -
                t1335_tmp * 781.25) -
               t1337_tmp * 781.25)) -
        t77_tmp * 126.3020833333333) +
       t1169_tmp * 195.3125) +
      t6 * (((((t111 - t52_tmp * 1.7361111111111112) +
               t77_tmp * 629.34027777777783) +
              t26_tmp * 11.28472222222222) -
             t1332_tmp * 976.5625) -
            t748_tmp * 976.5625);
  sdvals[272] =
      ((((((((t2 * -63.151041666666671 + t4 * 48.828125) +
             t10 * 329.42708333333331) -
            t11 * 321.1805555555556) +
           t12 * 108.5069444444444) -
          zeta * 131.07638888888891) -
         t2113_tmp * 211.58854166666671) +
        t761_tmp * 269.09722222222217) +
       t8 * ((((t2542 + t895_tmp * 488.28125) - t1345_tmp * 585.9375) -
              t1346_tmp * 781.25) +
             48.828125)) +
      (t6 *
           (((((((t2 * 314.67013888888891 - t10 * 211.58854166666671) + t2543) +
                zeta * 269.09722222222217) -
               t892_tmp * 5.6423611111111107) +
              t895_tmp * 1.7361111111111112) +
             t1344_tmp * 488.28125) -
            63.151041666666671) +
       14.32291666666667);
}

void pyra_fek_55_ncoords(double natcoords[165])
{
  static const double dv[165]{-1.0,
                              -1.0,
                              0.0,
                              1.0,
                              -1.0,
                              0.0,
                              1.0,
                              1.0,
                              0.0,
                              -1.0,
                              1.0,
                              0.0,
                              0.0,
                              0.0,
                              1.0,
                              -0.6546536707079772,
                              -1.0,
                              0.0,
                              0.0,
                              -1.0,
                              0.0,
                              0.6546536707079772,
                              -1.0,
                              0.0,
                              1.0,
                              -0.6546536707079772,
                              0.0,
                              1.0,
                              0.0,
                              0.0,
                              1.0,
                              0.6546536707079772,
                              0.0,
                              0.6546536707079772,
                              1.0,
                              0.0,
                              0.0,
                              1.0,
                              0.0,
                              -0.6546536707079772,
                              1.0,
                              0.0,
                              -1.0,
                              0.6546536707079772,
                              0.0,
                              -1.0,
                              0.0,
                              0.0,
                              -1.0,
                              -0.6546536707079772,
                              0.0,
                              -0.82732683535398854,
                              -0.82732683535398854,
                              0.1726731646460114,
                              -0.5,
                              -0.5,
                              0.5,
                              -0.1726731646460114,
                              -0.1726731646460114,
                              0.82732683535398854,
                              0.82732683535398854,
                              -0.82732683535398854,
                              0.1726731646460114,
                              0.5,
                              -0.5,
                              0.5,
                              0.1726731646460114,
                              -0.1726731646460114,
                              0.82732683535398854,
                              0.82732683535398854,
                              0.82732683535398854,
                              0.1726731646460114,
                              0.5,
                              0.5,
                              0.5,
                              0.1726731646460114,
                              0.1726731646460114,
                              0.82732683535398854,
                              -0.82732683535398854,
                              0.82732683535398854,
                              0.1726731646460114,
                              -0.5,
                              0.5,
                              0.5,
                              -0.1726731646460114,
                              0.1726731646460114,
                              0.82732683535398854,
                              -0.6546536707079772,
                              -0.6546536707079772,
                              0.0,
                              0.0,
                              -0.6546536707079772,
                              0.0,
                              0.6546536707079772,
                              -0.6546536707079772,
                              0.0,
                              0.6546536707079772,
                              0.0,
                              0.0,
                              0.6546536707079772,
                              0.6546536707079772,
                              0.0,
                              -0.6546536707079772,
                              0.6546536707079772,
                              0.0,
                              0.0,
                              0.6546536707079772,
                              0.0,
                              0.0,
                              0.0,
                              0.0,
                              -0.6546536707079772,
                              0.0,
                              0.0,
                              -0.35037291049634223,
                              -0.78345763683211411,
                              0.21654236316788589,
                              0.35037291049634223,
                              -0.78345763683211411,
                              0.21654236316788589,
                              0.0,
                              -0.43308472633577189,
                              0.56691527366422811,
                              0.78345763683211411,
                              -0.35037291049634223,
                              0.21654236316788589,
                              0.78345763683211411,
                              0.35037291049634223,
                              0.21654236316788589,
                              0.43308472633577189,
                              0.0,
                              0.56691527366422811,
                              0.35037291049634223,
                              0.78345763683211411,
                              0.21654236316788589,
                              -0.35037291049634223,
                              0.78345763683211411,
                              0.21654236316788589,
                              0.0,
                              0.43308472633577189,
                              0.56691527366422811,
                              -0.78345763683211411,
                              0.35037291049634223,
                              0.21654236316788589,
                              -0.78345763683211411,
                              -0.35037291049634223,
                              0.21654236316788589,
                              -0.43308472633577189,
                              0.0,
                              0.56691527366422811,
                              -0.34353372214661287,
                              -0.34353372214661287,
                              0.23183358740807039,
                              0.34353372214661287,
                              -0.34353372214661287,
                              0.23183358740807039,
                              0.34353372214661287,
                              0.34353372214661287,
                              0.23183358740807039,
                              -0.34353372214661287,
                              0.34353372214661287,
                              0.23183358740807039,
                              0.0,
                              0.0,
                              0.57266760543509443};
  std::copy(&dv[0], &dv[165], &natcoords[0]);
}

// pyra_fek_55_sfunc - Compute shape functions and their derivatives of
void pyra_fek_55_sfunc(double xi, double eta, double zeta, double sfvals[55])
{
  double b_sfvals_tmp;
  double b_t2344_tmp;
  double b_t2592_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double h_sfvals_tmp;
  double sfvals_tmp;
  double t10;
  double t1000;
  double t1004;
  double t1006;
  double t1007;
  double t1008;
  double t1011;
  double t1014;
  double t1015;
  double t1016;
  double t1017;
  double t1018;
  double t1027;
  double t1031;
  double t1036;
  double t1037;
  double t1047;
  double t1050;
  double t1050_tmp;
  double t1052;
  double t1055;
  double t1060;
  double t1073;
  double t1075;
  double t1079;
  double t1081;
  double t1094;
  double t1099;
  double t11;
  double t110;
  double t1100;
  double t110_tmp;
  double t1111;
  double t1115;
  double t1117;
  double t1119;
  double t1125;
  double t1127;
  double t1139;
  double t1140;
  double t1145;
  double t1146;
  double t1154;
  double t1160;
  double t1164;
  double t1167;
  double t1169;
  double t1173;
  double t1174;
  double t1179;
  double t1187;
  double t1189;
  double t1191;
  double t1193;
  double t1195;
  double t1196;
  double t12;
  double t1202;
  double t1208;
  double t1218;
  double t1220;
  double t1224;
  double t123;
  double t1234;
  double t1237;
  double t123_tmp;
  double t1249;
  double t1252;
  double t1256;
  double t1261;
  double t1263;
  double t1268;
  double t1271;
  double t1276;
  double t1279;
  double t1280;
  double t1280_tmp;
  double t1286;
  double t1289;
  double t1291;
  double t1292;
  double t1296;
  double t13;
  double t1313;
  double t1318;
  double t1319;
  double t1340;
  double t1343;
  double t1370;
  double t1382;
  double t1384;
  double t139;
  double t139_tmp;
  double t1400;
  double t1403;
  double t141;
  double t1410_tmp;
  double t1425;
  double t1427;
  double t1436;
  double t1442;
  double t1444;
  double t1449;
  double t1455;
  double t1463;
  double t1467;
  double t1468;
  double t147;
  double t1470;
  double t1479;
  double t1485;
  double t1507;
  double t1508;
  double t1509;
  double t1511;
  double t1525;
  double t1532;
  double t1541;
  double t1544;
  double t1555;
  double t1567;
  double t1569;
  double t1579;
  double t1588;
  double t1599;
  double t160;
  double t1600;
  double t1605;
  double t161;
  double t1613;
  double t1616;
  double t162;
  double t1626;
  double t163;
  double t1630;
  double t1631;
  double t1633;
  double t1636;
  double t1637;
  double t164;
  double t165;
  double t165_tmp;
  double t166;
  double t166_tmp;
  double t173;
  double t1731;
  double t1733;
  double t1733_tmp;
  double t1745;
  double t1746;
  double t1752;
  double t1753;
  double t1756;
  double t1760;
  double t1778;
  double t1779;
  double t1779_tmp;
  double t1787;
  double t18;
  double t1804;
  double t1805;
  double t1814;
  double t1816;
  double t1821;
  double t1841;
  double t1859;
  double t1871;
  double t188;
  double t1889;
  double t1891;
  double t1897;
  double t1906;
  double t1909;
  double t1915;
  double t1921;
  double t1925;
  double t1938;
  double t1940;
  double t1943;
  double t1947;
  double t1960;
  double t1965;
  double t1966;
  double t1968;
  double t1981;
  double t1983;
  double t1984;
  double t1985;
  double t1989;
  double t1994;
  double t1997;
  double t2;
  double t2012;
  double t2017;
  double t2023;
  double t2025;
  double t2038;
  double t2040;
  double t2044;
  double t2049;
  double t2051;
  double t2054;
  double t2060;
  double t2063;
  double t2065;
  double t2067;
  double t2068;
  double t2084;
  double t2087;
  double t2107;
  double t2114;
  double t2128;
  double t2135;
  double t2139;
  double t2158;
  double t216;
  double t2160;
  double t2165;
  double t2165_tmp;
  double t2170;
  double t221;
  double t2215;
  double t222;
  double t223;
  double t2235;
  double t2236;
  double t224;
  double t2243;
  double t2244;
  double t2249;
  double t2254;
  double t2258;
  double t226;
  double t2264;
  double t2265;
  double t2267;
  double t2277;
  double t2343_tmp;
  double t2344_tmp;
  double t2360_tmp;
  double t2499_tmp;
  double t2570_tmp;
  double t258;
  double t2591_tmp;
  double t2592_tmp;
  double t2595_tmp;
  double t2609_tmp;
  double t262;
  double t2624_tmp;
  double t265;
  double t2650_tmp;
  double t266;
  double t27;
  double t291;
  double t3;
  double t30;
  double t304;
  double t304_tmp;
  double t306_tmp;
  double t307;
  double t309;
  double t330;
  double t338;
  double t34;
  double t359;
  double t36;
  double t361;
  double t37;
  double t373;
  double t374;
  double t377;
  double t379;
  double t38;
  double t380;
  double t383;
  double t388;
  double t399;
  double t4;
  double t401;
  double t407;
  double t415;
  double t419;
  double t422;
  double t424;
  double t434;
  double t435;
  double t439;
  double t444;
  double t445;
  double t447;
  double t449;
  double t451;
  double t452;
  double t455;
  double t46;
  double t464;
  double t470;
  double t472;
  double t48;
  double t481;
  double t486;
  double t5;
  double t518;
  double t521;
  double t523;
  double t53;
  double t539;
  double t545;
  double t548;
  double t550;
  double t555;
  double t558;
  double t56;
  double t563;
  double t567;
  double t569;
  double t57;
  double t572;
  double t574;
  double t577;
  double t581;
  double t592;
  double t599;
  double t6;
  double t600;
  double t603;
  double t605;
  double t615;
  double t620;
  double t622;
  double t634;
  double t647_tmp;
  double t65;
  double t671;
  double t680;
  double t688;
  double t694;
  double t7;
  double t700;
  double t712;
  double t725;
  double t729;
  double t740;
  double t765;
  double t773;
  double t777;
  double t779;
  double t782;
  double t784;
  double t786;
  double t792;
  double t798;
  double t8;
  double t805;
  double t809;
  double t811;
  double t814;
  double t816;
  double t819;
  double t821;
  double t824;
  double t831;
  double t832;
  double t835;
  double t839;
  double t841;
  double t843;
  double t852;
  double t878;
  double t880;
  double t898;
  double t9;
  double t920;
  double t925;
  double t940;
  double t940_tmp;
  double t943;
  double t944;
  double t951;
  double t954;
  double t96;
  double t963;
  double t964;
  double t96_tmp;
  double t976;
  double t978;
  double t983;
  double t985;
  double t986;
  double t992;
  double t997;
  double zeta_1_inv;
  zeta_1_inv = 1.0 / ((zeta - 1.0) + 1.0E-100);
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = xi * xi;
  t6 = std::pow(xi, 3.0);
  t8 = zeta * zeta;
  t9 = std::pow(zeta, 3.0);
  t11 = zeta_1_inv * zeta_1_inv;
  t12 = std::pow(zeta_1_inv, 3.0);
  t18 = eta * 1.3333333333333333;
  t27 = eta * 0.375;
  t30 = zeta_1_inv * 0.875;
  t46 = eta * 0.390625;
  t48 = zeta_1_inv * 0.765625;
  t65 = eta * 1.7864583333333333;
  t330 = zeta * 6.5042791448492;
  t338 = eta * 4.4541467840671274;
  t359 = eta * 18.58611748964497;
  t361 = eta * 7.705778758402392;
  t373 = zeta_1_inv * 2.728860179461551;
  t374 = zeta * 1.256193470692148;
  t377 = eta * 13.7546558347548;
  t379 = zeta_1_inv * 1.458644088230626;
  t380 = zeta * 2.4334987331161488;
  t383 = eta * 1.3126359404402561;
  t388 = zeta_1_inv * 1.711648597373769;
  t399 = zeta * 3.658899809351718;
  t401 = zeta * 4.7976857292352246;
  t415 = zeta * 0.30248004775335;
  t419 = zeta_1_inv * 5.919320425069059;
  t422 = eta * 10.514560122605159;
  t424 = eta * 8.3119464959786757;
  t434 = eta * 0.865770290649686;
  t435 = zeta * 4.7486854941861676;
  t439 = zeta * 2.5048784293841009;
  t444 = zeta * 8.3119464959786757;
  t445 = eta * 3.0514567104471388;
  t447 = zeta * 1.349245522141439;
  t449 = eta * 1.612566532931401;
  t451 = zeta * 0.542112815128889;
  t452 = zeta_1_inv * 4.1295528340973346;
  t455 = eta * 3.37825124436212;
  t464 = eta * 8.3879366013288159;
  t470 = zeta_1_inv * 1.284441532931401;
  t472 = zeta * 0.57680050147171746;
  t481 = zeta_1_inv * 8.3879366013288159;
  t486 = zeta_1_inv * 0.71534469226336528;
  t521 = eta * 5.2990643395808563;
  t523 = eta * 1.8144292154521251;
  t539 = zeta * 3.698562162580965;
  t545 = eta * 2.212867814009563;
  t548 = zeta * 0.955932563850912;
  t550 = eta * 1.80837445759334;
  t555 = eta * 3.5231725330068762;
  t558 = eta * 2.90615291699255;
  t563 = eta * 1.6775800815299591;
  t567 = zeta * 0.94448189137986227;
  t569 = zeta * 1.80837445759334;
  t572 = eta * 2.728860179461551;
  t574 = zeta * 1.238878418136707;
  t577 = eta * 1.318019088230626;
  t581 = zeta * 1.6775800815299591;
  t592 = zeta * 0.42072501077220908;
  t600 = zeta * 0.931337912946354;
  t622 = eta * 0.70508208897121338;
  t634 = zeta * 0.2459423843098352;
  t647_tmp = eta * zeta_1_inv;
  t680 = eta * 0.82590700304170184;
  t712 = zeta * 0.82590700304170184;
  t725 = zeta * 0.14530379345458869;
  t740 = zeta * 0.333942795157085;
  t765 = zeta * 0.06941263584527918;
  t784 = eta * 0.1067389072606586;
  t792 = zeta * 0.75387420847659026;
  t816 = zeta * 0.71304982059857813;
  t819 = zeta_1_inv * 0.56442921545212477;
  t821 = zeta * 0.31979510030879088;
  t824 = zeta * 0.62018817562619721;
  t835 = zeta * 0.139083732477686;
  t839 = zeta * 0.27895806214534152;
  t852 = zeta * 0.63460205269489356;
  t898 = zeta * 0.48101641751966318;
  t954 = eta * 0.03286035747913911;
  t1015 = zeta * 0.086201574029578162;
  t1047 = eta * 0.050280307736634743;
  t1050_tmp = eta * zeta;
  t1050 = t1050_tmp * -1.6775800815299591;
  t1146 = zeta * 0.07454972059684796;
  t1169 = t1050_tmp * -8.3119464959786757;
  t1218 = zeta * 0.034724949502450662;
  t4 = t2 * t2;
  t7 = t5 * t5;
  t10 = t8 * t8;
  t13 = t11 * t11;
  t34 = eta * t30;
  t36 = t2 * 0.375;
  t37 = t3 * 0.875;
  t56 = eta * (zeta_1_inv * 0.328125);
  t57 = eta * t48;
  t96_tmp = t2 * t11;
  t96 = t96_tmp * 0.875;
  t139_tmp = t3 * t12;
  t139 = t139_tmp * 2.0416666666666665;
  t160 = t96_tmp * 0.328125;
  t162 = t96_tmp * 0.765625;
  t163 = t139_tmp * 0.765625;
  t188 = eta * 4.58257569495584 * -0.109375;
  t221 = t139_tmp * 1.7864583333333333;
  t265 = 4.58257569495584 * zeta_1_inv * 0.68055555555555558;
  t266 = 4.58257569495584 * zeta_1_inv * 0.25520833333333331;
  t304_tmp = t139_tmp * 1.7320508075688772 * 2.6457513110645907;
  t304 = t304_tmp * 0.68055555555555558;
  t307 = t304_tmp * 0.25520833333333331;
  t407 = t359 * zeta;
  t518 = eta * 3.7430792544479812 * zeta;
  t599 = t8 * 9.8235104654403287;
  t603 = t2 * 5.4135401206816516;
  t605 = eta * 1.0204368243738029 * zeta;
  t615 = t3 * 18.58611748964497;
  t620 = t3 * 7.705778758402392;
  t671 = t8 * 16.994751546904439;
  t688 = t555 * zeta_1_inv;
  t694 = t558 * zeta_1_inv;
  t700 = t563 * zeta;
  t729 = eta * t379;
  t773 = t8 * 8.7337089028573835;
  t777 = eta * t419;
  t779 = t8 * 17.973155855040421;
  t782 = t2 * 8.3777843965699752;
  t786 = t2 * 4.4541467840671274;
  t798 = t8 * 16.623892991957351;
  t805 = t9 * 10.123466040277149;
  t809 = t424 * zeta;
  t811 = t8 * 8.3777843965699752;
  t831 = eta * t452;
  t832 = eta * 9.4922370917357259 * zeta;
  t841 = t8 * 8.0944603180564663;
  t843 = t445 * zeta;
  t878 = eta * 2.7140870306453579 * zeta;
  t880 = t2 * 13.2701866727988;
  t920 = t8 * 3.3661208855429741;
  t925 = t2 * 2.9757986378594068;
  t940_tmp = t2 * zeta_1_inv;
  t940 = t940_tmp * 13.34276471514049;
  t943 = t2 * (zeta * 3.7430792544479812);
  t944 = t3 * 5.2990643395808563;
  t951 = t8 * 1.5787007418484891;
  t963 = t2 * (zeta_1_inv * 4.4541467840671274);
  t964 = t8 * 2.2101736378594068;
  t976 = t9 * 4.12265371740459;
  t978 = t9 * 3.698562162580965;
  t983 = t8 * 1.699592411142139;
  t985 = t9 * 0.41286464451001531;
  t986 = t3 * 2.212867814009563;
  t992 = t8 * 1.198020775830267;
  t997 = t8 * 1.6492671881837551;
  t1004 = t2 * 3.5231725330068762;
  t1006 = t8 * 3.488990819280108;
  t1007 = t2 * 2.90615291699255;
  t1008 = t8 * 3.53823097094348;
  t1011 = t3 * 1.6775800815299591;
  t1014 = t9 * 4.1839678997211553;
  t1016 = t8 * 3.616748915186681;
  t1017 = t9 * 1.80837445759334;
  t1018 = t9 * 1.5442009514430119;
  t1027 = t2 * 2.728860179461551;
  t1031 = t2 * 1.318019088230626;
  t1036 = t8 * 3.3551601630599182;
  t1037 = t9 * 1.6775800815299591;
  t1052 = t8 * 1.245137342903875;
  t1060 = t940_tmp * 11.97056192177905;
  t1073 = t3 * 3.658899809351718;
  t1075 = t940_tmp * 23.720422002634631;
  t1079 = t2 * 1.3126359404402561;
  t1081 = t8 * 2.0449184305895232;
  t1094 = t9 * 4.2430162677473726;
  t1099 = t9 * 4.7557726367655713;
  t1100 = t9 * 1.436656250734162;
  t1111 = t3 * (zeta_1_inv * 18.58611748964497);
  t1115 = t9 * 3.2033245064063278;
  t1117 = t2 * 1.1699184305895221;
  t1119 = t940_tmp * 11.95788306390472;
  t1125 = t9 * 2.089680958112353;
  t1127 = t2 * 4.596067107460887;
  t1139 = t2 * 8.3119464959786757;
  t1140 = t3 * 8.3119464959786757;
  t1145 = t9 * 7.342332415498702;
  t1154 = t3 * 0.865770290649686;
  t1160 = t9 * 1.8900765395794159;
  t1164 = t9 * 8.3119464959786757;
  t1167 = t8 * 2.7468699001766739;
  t1173 = t8 * 3.8176687637760178;
  t1174 = t3 * 1.612566532931401;
  t1187 = t2 * 1.556963330936038;
  t1189 = t2 * 8.3596237079826121;
  t1191 = t2 * 9.075932334842383;
  t1193 = t8 * 1.6518140060834039;
  t1196 = t9 * 3.0514567104471388;
  t1202 = t3 * 8.3879366013288159;
  t1208 = t2 * 5.0853524663708258;
  t1220 = t8 * 3.1967605039017282;
  t1224 = t8 * 8.3596237079826121;
  t1234 = t8 * 1.11807692461714;
  t1237 = t8 * 1.310374871123974;
  t1249 = t8 * 1.1225522279138991;
  t1252 = t8 * 1.576125785948022;
  t1261 = t8 * 1.626314993387401;
  t1268 = t8 * 2.6712369841010308;
  t1271 = t2 * 5.1792405621681548;
  t1276 = t9 * 0.31963576319818221;
  t1279 = t940_tmp * 2.1249530551731848;
  t1280_tmp = t3 * zeta_1_inv;
  t1280 = t1280_tmp * 2.1249530551731848;
  t1286 = t940_tmp * 2.321292073828447;
  t1289 = t8 * 0.55843057521268535;
  t1292 = t2 * t435;
  t1296 = t940_tmp * 6.4020363709105181;
  t1318 = t940_tmp * 0.54401294926207688;
  t1319 = t1280_tmp * 0.54401294926207688;
  t1340 = t1280_tmp * 4.5465450960507683;
  t1343 = t2 * (zeta * 3.0514567104471388);
  t1370 = t2 * (zeta * 5.71996761568837);
  t1382 = t2 * t481;
  t1384 = t3 * t481;
  t1400 = t940_tmp * 1.777224865209172;
  t1403 = t940_tmp * 2.6833966817763848;
  t1410_tmp = eta * t8;
  t1425 = t940_tmp * 3.6332606692522642;
  t1427 = t1280_tmp * 3.6332606692522642;
  t1436 = t2 * (zeta * 1.0204368243738029);
  t1442 = t8 * 0.4153516732792662;
  t1444 = t2 * (zeta * 1.749989308814863);
  t1449 = t9 * 0.53729829607920909;
  t1455 = t1280_tmp * 6.8172595105370224;
  t1463 = t940_tmp * 3.1641538050266669;
  t1467 = t940_tmp * 9.5183096862277647;
  t1468 = t9 * 0.387254307627404;
  t1470 = t1410_tmp * -18.58611748964497;
  t1479 = t1410_tmp * -7.705778758402392;
  t1485 = t954 * zeta_1_inv;
  t1507 = t2 * (zeta * 2.7425920231294731);
  t1509 = t1280_tmp * 2.7425920231294731;
  t1511 = t2 * t567;
  t1525 = t2 * (zeta_1_inv * 3.5231725330068762);
  t1532 = t2 * (zeta_1_inv * 2.90615291699255);
  t1541 = t3 * 0.333942795157085;
  t1544 = t9 * 0.82590700304170184;
  t1555 = t8 * 0.32292951485806931;
  t1567 = t2 * t379;
  t1569 = t8 * 0.090602200055467264;
  t1579 = t3 * t388;
  t1588 = t1280_tmp * 0.92048572186821009;
  t1599 = t940_tmp * 3.658899809351718;
  t1605 = t940_tmp * 3.2982983996730422;
  t1613 = t8 * 0.1505263667989129;
  t1626 = t8 * 0.32528632207759522;
  t1630 = t3 * t419;
  t1631 = t8 * 0.73467576440360338;
  t1636 = t8 * 0.53324068038904426;
  t1637 = t3 * 0.1067389072606586;
  t1731 = t96_tmp * 3.2438112397652681;
  t1733_tmp = t3 * t11;
  t1733 = t1733_tmp * 3.2438112397652681;
  t1745 = t1733_tmp * 3.8829564124783889;
  t1746 = t139_tmp * 3.1173314124783889;
  t1752 = t8 * 0.1103845967566652;
  t1753 = t3 * 0.03286035747913911;
  t1760 = t2 * t816;
  t1778 = t2 * t852;
  t1779_tmp = t2 * zeta;
  t1779 = t1779_tmp * -0.955932563850912;
  t1787 = t1410_tmp * -2.212867814009563;
  t1804 = t940_tmp * 0.13226034419877081;
  t1805 = t1280_tmp * 0.13226034419877081;
  t1814 = t2 * 0.050280307736634743;
  t1816 = t1410_tmp * -1.6775800815299591;
  t1841 = t1779_tmp * -1.256193470692148;
  t1859 = t1779_tmp * -0.79153846150600349;
  t1871 = t1779_tmp * -4.7976857292352246;
  t1889 = t940_tmp * 0.54757991519662663;
  t1891 = t1280_tmp * 0.54757991519662663;
  t1897 = t1779_tmp * -2.8199513429629719;
  t1906 = t1779_tmp * -3.1519954203869789;
  t1909 = t96_tmp * 0.878379969083519;
  t1915 = t96_tmp * 1.80837445759334;
  t1921 = t96_tmp * 0.69497708044104645;
  t1925 = t96_tmp * 1.238878418136707;
  t1938 = t139_tmp * 2.728860179461551;
  t1947 = t96_tmp * 0.53208752230529677;
  t1960 = t96_tmp * 10.450235329835831;
  t1965 = t96_tmp * 4.2668323802981032;
  t1966 = t96_tmp * 3.658899809351718;
  t1981 = t1779_tmp * -0.06941263584527918;
  t1983 = t139_tmp * 5.919320425069059;
  t1984 = t1733_tmp * 3.74515675142536;
  t1985 = t139_tmp * 3.74515675142536;
  t1989 = t96_tmp * 3.58009866733475;
  t1994 = t96_tmp * 2.4530780551731848;
  t1997 = t1733_tmp * 2.4530780551731848;
  t2012 = t1733_tmp * 1.6298784293841011;
  t2023 = t96_tmp * 0.54401294926207688;
  t2025 = t1733_tmp * 0.54401294926207688;
  t2038 = t1779_tmp * -0.31979510030879088;
  t2040 = t139_tmp * 4.1295528340973346;
  t2044 = t1733_tmp * 2.361977584885512;
  t2049 = t1779_tmp * -0.139083732477686;
  t2051 = t96_tmp * 4.43295721985694;
  t2054 = t96_tmp * 3.6109382137964432;
  t2067 = t1733_tmp * 0.40254909249896759;
  t2068 = t139_tmp * 0.40254909249896759;
  t2084 = t96_tmp * 3.6332606692522642;
  t2087 = t1733_tmp * 3.6332606692522642;
  t2114 = t1733_tmp * -7.705778758402392;
  t2135 = t96_tmp * 1.126433350840347;
  t2139 = t96_tmp * 1.9465942634496309;
  t2158 = t96_tmp * 0.13226034419877081;
  t2160 = t1733_tmp * 0.13226034419877081;
  t2165_tmp = t2 * t8;
  t2165 = t2165_tmp * -1.245137342903875;
  t2215 = t96_tmp * 0.95398016716725975;
  t2236 = t2165_tmp * -8.3596237079826121;
  t2243 = t1733_tmp * -8.3879366013288159;
  t2244 = t139_tmp * -8.3879366013288159;
  t2249 = t2165_tmp * -1.1225522279138991;
  t2264 = t1733_tmp * 0.17394970731647971;
  t2265 = t139_tmp * 0.17394970731647971;
  t2267 = t1733_tmp * -5.2990643395808563;
  t2277 = t2165_tmp * -1.6492671881837551;
  t38 = t4 * 0.875;
  t53 = t4 * 2.0416666666666665;
  t110_tmp = t4 * zeta_1_inv;
  t110 = t110_tmp * -0.328125;
  t123_tmp = t4 * t11;
  t123 = t123_tmp * 2.9166666666666665;
  t147 = eta * 0.50121921663579494;
  t161 = t123_tmp * 0.328125;
  t164 = t123_tmp * 0.765625;
  t165_tmp = t4 * t12;
  t165 = t165_tmp * 0.765625;
  t166_tmp = t4 * t13;
  t166 = t166_tmp * 0.765625;
  t173 = t123_tmp * 6.8055555555555554;
  t216 = t166_tmp * 4.7638888888888893;
  t222 = t123_tmp * 1.7864583333333333;
  t223 = t165_tmp * 1.7864583333333333;
  t224 = t166_tmp * 1.7864583333333333;
  t226 = t2 * 0.50121921663579494;
  t258 = t123_tmp * 4.1684027777777777;
  t262 = eta * 4.4552819256515113;
  t291 = t4 * t266;
  t306_tmp = t165_tmp * 1.7320508075688772 * 2.6457513110645907;
  t309 = t306_tmp * 0.25520833333333331;
  t814 = t10 * 8.3777843965699752;
  t1000 = t10 * 1.6492671881837551;
  t1055 = t10 * 1.245137342903875;
  t1179 = t10 * 10.3742026417579;
  t1195 = t10 * 4.0667764668515733;
  t1256 = t10 * 2.489919154108561;
  t1263 = t10 * 1.626314993387401;
  t1291 = t10 * 0.55843057521268535;
  t1313 = t1139 * zeta_1_inv;
  t1508 = t2 * 2.7425920231294731 * zeta_1_inv;
  t1600 = t1073 * zeta_1_inv;
  t1616 = t10 * 0.1505263667989129;
  t1633 = t10 * 0.73467576440360338;
  t1756 = t8 * t782;
  t1821 = t8 * t880;
  t1940 = t165_tmp * 2.728860179461551;
  t1943 = t2 * t1081;
  t1968 = t11 * t1073;
  t2017 = t11 * t1139;
  t2060 = t11 * (t2 * 8.3879366013288159);
  t2063 = t11 * t1202;
  t2065 = t12 * t1202;
  t2107 = t2 * t964;
  t2128 = t2 * t983;
  t2170 = t2 * t1442;
  t2235 = t2 * t1569;
  t2254 = t2 * t1626;
  t2258 = t2 * t1289;
  t2499_tmp = t401 + t782;
  t2624_tmp = (t383 + eta * 1.749989308814863 * zeta) + t383 * zeta_1_inv;
  t141 = t13 * t53;
  t2360_tmp = t96_tmp * 4.1684027777777777 - t166_tmp * 4.1684027777777777;
  t2591_tmp = t3 * zeta;
  t2592_tmp = (-t567 + t1000) + t1008;
  b_t2592_tmp = eta * t9;
  t304_tmp = -(zeta * 0.26035626137853157) + t10 * 1.039662348366911;
  t2650_tmp = t455 * zeta_1_inv;
  t2570_tmp = t401 + t9 * 21.55325452237517;
  t2595_tmp = zeta * 1.413779534022277 + t9 * 18.78393357317595;
  t2609_tmp = t821 + t1100;
  t2343_tmp = t96_tmp * 1.7864583333333333 - t224;
  t2344_tmp = eta * 1.7320508075688772 * 2.6457513110645907;
  b_t2344_tmp = t2344_tmp * zeta_1_inv;
  sfvals_tmp =
      (-t7 * (((t56 + t160) - t166) - t163) +
       ((((((((t304_tmp + eta * 0.2459423843098352 * zeta) + t1237) - t1125) +
            t1778) +
           eta * t1449) +
          t1410_tmp * -0.53324068038904426) +
         t2591_tmp * -0.62018817562619721) +
        t2249)) +
      t5 * ((((((((((-t161 + t577) + t605) + t729) + t852) + t1127) + t1280) +
               t1296) -
              t1249) +
             t1997) +
            t2139);
  b_sfvals_tmp =
      ((((((((((((eta * (zeta_1_inv / 4.0) + t46) + t110) + t634) + t1031) +
              t1050_tmp * -0.982801653384413) +
             t1436) +
            t1449) -
           t1174) +
          eta * (t8 * 2.8421766533844131)) +
         t1567) +
        t1280_tmp * -1.284441532931401) -
       t1636) *
      xi;
  c_sfvals_tmp =
      t6 *
      (((((((t165 - t449) - t824) + t647_tmp * -1.284441532931401) + t1279) +
         t1745) +
        t1746) +
       t1994);
  sfvals[0] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[1] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp =
      (t7 * (((t56 + t166) - t160) - t163) +
       ((((((((t304_tmp + t1237) + t1050_tmp * -0.2459423843098352) - t1125) +
            eta * t1636) +
           t3 * t824) +
          t1778) +
         b_t2592_tmp * -0.53729829607920909) +
        t2249)) +
      -t5 * ((((((((((t161 + t577) + t605) + t729) - t852) - t1127) + t1249) +
                t1280) -
               t1296) +
              t1997) -
             t2139);
  b_sfvals_tmp = ((((((((((((t647_tmp * -0.25 - t46) + t110) + t634) +
                          eta * 0.982801653384413 * zeta) +
                         t1031) +
                        t1174) +
                       t3 * t470) +
                      t1436) +
                     t1449) +
                    t1567) +
                   t1410_tmp * -2.8421766533844131) -
                  t1636) *
                 xi;
  c_sfvals_tmp =
      t6 *
      (((((((t165 + t449) + eta * t470) - t824) + t1279) + t1994) - t1745) -
       t1746);
  sfvals[2] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[3] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[4] = (((((t8 * 13.060101962296971 - t9 * 26.662393924567581) +
                  t10 * 16.421561962279391) -
                 zeta * 1.8192700000087889) -
                t2165_tmp * 0.340002444091442) +
               t1779_tmp * 0.15198182354753659) +
              -t5 * ((((t2 * 1.7415570740965109 + t8 * 0.340002444091442) -
                       zeta * 0.15198182354753659) +
                      t96_tmp * 1.2262507211827951) +
                     t940_tmp * 2.967807795279306);
  sfvals_tmp = (t7 * (((t57 + t162) - t221) - t224) +
                ((((((((t2609_tmp + t1050_tmp * -0.30248004775335) - t992) +
                      eta * t985) +
                     t3 * t574) -
                    t1291) +
                   t1841) +
                  t2107) +
                 t1410_tmp * -0.1103845967566652)) +
               -t5 * ((((((((((-t222 + eta * 1.178489644510015 * zeta) + t821) +
                             eta * t486) +
                            t925) -
                           t1289) -
                          t1047) +
                         t1463) +
                        t11 * (t3 * 1.238878418136707)) -
                       t1891) +
                      t2215);
  b_sfvals_tmp =
      ((((((((((t188 + t226) + t291) + t878) + t944) - t712) + t1193) +
          t3 * t452) +
         t1507) +
        t1787) -
       t1544) *
      xi;
  c_sfvals_tmp =
      t6 *
      (((((((t309 - t545) - t712) + t647_tmp * -1.711648597373769) + t1508) +
         t1731) +
        t2040) +
       t11 * t944);
  sfvals[5] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[6] =
      ((((((((((((((t27 - t37) + t38) - t36) + t592) + t1160) + t3 * t439) +
              eta * t951) -
             t1252) +
            t1859) -
           t1633) +
          t1943) -
         t7 * (((t34 + t96) - t139) - t166_tmp * 2.0416666666666665)) -
        b_t2592_tmp * 0.31963576319818221) -
       t1050_tmp * 1.634064978650307) -
      t5 * ((((((((((t123 + t523) + t592) + eta * t819) + t1117) + t1340) +
                t1605) -
               t1631) +
              t1909) +
             t2012) -
            t1050_tmp * 1.1946357631981821);
  sfvals[7] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp = (t7 * ((t2343_tmp + eta * t266) - t307) +
                -t5 * (((((((((t188 - t164) + t374) + t925) - t964) +
                           t1050_tmp * -2.7425920231294731) +
                          t1463) +
                         t1509) +
                        t1733) +
                       t2215)) +
               ((((((((t2609_tmp + eta * t1193) - t992) +
                     t1050_tmp * -0.82590700304170184) -
                    t1291) +
                   t3 * t712) +
                  b_t2592_tmp * -0.82590700304170184) +
                 t2038) +
                t2258);
  b_sfvals_tmp =
      (((((((((((t4 * t48 + t188) - t415) + t878) + t985) + t986) + t1579) +
           t940_tmp * -0.71534469226336528) +
          t1779_tmp * -1.178489644510015) +
         t1787) +
        t1814) -
       t1752) *
      xi;
  c_sfvals_tmp =
      t6 *
      (((((((-t223 + t521) + t574) + t831) + t1889) - t1925) - t2040) + t2267);
  sfvals[8] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      (t7 * ((t141 - t96_tmp * 2.9166666666666665) + 0.875) +
       -t5 * ((((((t11 * t38 + zeta * 0.79153846150600349) - t1081) + t1117) +
                t1605) +
               t1909) +
              0.375)) +
      (((((t592 + t1160) - t1252) + t1779_tmp * -0.42072501077220908) - t1633) +
       t2 * t1631);
  e_sfvals_tmp = t6 * ((((-t439 + t940_tmp * 4.5465450960507683) +
                         t96_tmp * 1.6298784293841011) -
                        t165_tmp * 2.0416666666666665) +
                       0.875);
  f_sfvals_tmp =
      (((((((t4 * t30 + zeta * 1.634064978650307) + t2 * 1.8144292154521251) +
           t1276) -
          t951) +
         t2 * t819) +
        t1779_tmp * -1.1946357631981821) -
       0.375) *
      xi;
  sfvals[9] = (d_sfvals_tmp + e_sfvals_tmp) + f_sfvals_tmp;
  g_sfvals_tmp =
      (t7 * ((t2343_tmp + b_t2344_tmp * -0.25520833333333331) + t307) +
       -t5 * (((((((((t147 - t164) + t374) + eta * 2.7425920231294731 * zeta) +
                   t925) -
                  t964) +
                 t1463) -
                t1509) -
               t1733) +
              t2215)) +
      ((((((((t2609_tmp + t680 * zeta) - t992) - t1291) +
           t1410_tmp * -1.6518140060834039) +
          t9 * t680) +
         t2591_tmp * -0.82590700304170184) +
        t2038) +
       t2258);
  h_sfvals_tmp =
      (((((((((((t110_tmp * -0.765625 + t188) + t415) + t878) + t986) - t985) +
            t2 * t486) +
           t2 * (zeta * 1.178489644510015)) +
          t1579) +
         t1752) +
        t1787) -
       t1814) *
      xi;
  t165_tmp =
      t6 *
      (((((((t223 + t521) + t831) - t574) + t1925) - t1889) - t2040) + t2267);
  sfvals[10] = (g_sfvals_tmp + h_sfvals_tmp) + t165_tmp;
  t2343_tmp =
      (-t7 * (((t57 - t162) + t224) - t221) +
       (((((((((eta * 0.30248004775335 * zeta + t821) + t1100) - t992) -
             t1291) +
            b_t2592_tmp * -0.41286464451001531) +
           t2591_tmp * -1.238878418136707) +
          t1841) +
         eta * t1752) +
        t2107)) +
      -t5 * ((((((((((-t222 + t821) + t925) + t1050_tmp * -1.178489644510015) +
                   t1047) +
                  t647_tmp * -0.71534469226336528) -
                 t1289) +
                t1463) +
               t1891) +
              t1733_tmp * -1.238878418136707) +
             t2215);
  t2609_tmp = ((((((((((t147 + t226) + t291) - t712) + t1193) +
                    t1050_tmp * -2.7140870306453579) -
                   t944) +
                  t8 * t545) +
                 t1507) +
                t1280_tmp * -4.1295528340973346) -
               t1544) *
              xi;
  t304_tmp =
      t6 *
      (((((((t309 + t545) + eta * t388) - t712) + t1508) + t1731) - t2040) +
       t2267);
  sfvals[11] = (t2343_tmp - t2609_tmp) + t304_tmp;
  sfvals[12] =
      ((((((((((((((-t27 + t37) + t38) - t36) + t592) +
                eta * 1.634064978650307 * zeta) +
               t1160) -
              t1252) +
             eta * t1276) +
            t1859) -
           t1633) +
          t1943) -
         t1410_tmp * 1.5787007418484891) -
        t2591_tmp * 2.5048784293841009) -
       t5 *
           ((((((((((t123 - t523) + t592) + eta * (zeta * 1.1946357631981821)) +
                  t1117) -
                 t1340) +
                t1605) -
               t1631) +
              t1909) -
             t2012) -
            t647_tmp * 0.56442921545212477)) +
      t7 * (((t34 - t96) - t139) + t141);
  sfvals[13] = (t2343_tmp + t2609_tmp) - t304_tmp;
  sfvals[14] = (g_sfvals_tmp - h_sfvals_tmp) - t165_tmp;
  sfvals[15] = (d_sfvals_tmp - e_sfvals_tmp) - f_sfvals_tmp;
  sfvals[16] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      (((((((((t898 + t1099) + t1050_tmp * -0.27895806214534152) +
             eta * t1234) -
            t1167) -
           t1256) +
          t3 * t792) +
         t1779) +
        b_t2592_tmp * -1.5442009514430119) +
       t2128) +
      -t5 * (((((((((t518 + t548) + t555) + t688) + t940) - t983) + t1191) +
               t1427) +
              t1965) +
             t2087);
  b_sfvals_tmp =
      (((((((((((t622 + t839) + t943) + t1004) + t1018) + t622 * zeta_1_inv) +
            eta * (t8 * 6.1530504965406791)) +
           t1050_tmp * -0.65955298526491868) -
          t1154) +
         t1525) -
        t1234) +
       t1280_tmp * -0.865770290649686) *
      xi;
  c_sfvals_tmp =
      t6 *
      ((((((-t434 - t792) + t647_tmp * -0.865770290649686) + t1425) + t1984) +
        t1985) +
       t2084);
  sfvals[17] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      t5 * (((((((((t338 + t338 * zeta_1_inv) + eta * 5.71996761568837 * zeta) -
                  t765) +
                 t1208) +
                t1467) +
               t1569) -
              t1319) +
             t2051) -
            t2025) +
      (((((((((-t451 + eta * 0.57680050147171746 * zeta) + t1173) + t1195) +
            eta * t976) -
           t1145) +
          t1410_tmp * -3.3661208855429741) +
         t1981) +
        t3 * t1218) +
       t2235);
  e_sfvals_tmp =
      (((((((((((t18 + t18 * zeta_1_inv) + t472) + t786) + t963) + t976) +
            t1050_tmp * -0.61602690702028484) -
           t920) +
          eta * (t8 * 9.9493602403536183)) +
         t1370) -
        t1637) +
       t1280_tmp * -0.1067389072606586) *
      xi;
  t304_tmp = t784 + t784 * zeta_1_inv;
  f_sfvals_tmp =
      t6 * (((((t304_tmp + t1318) - t1218) + t2023) + t2067) + t2068);
  sfvals[18] = (d_sfvals_tmp + e_sfvals_tmp) - f_sfvals_tmp;
  g_sfvals_tmp =
      ((((((((t2595_tmp - t599) + eta * t841) +
            t1050_tmp * -1.349245522141439) +
           b_t2592_tmp * -10.123466040277149) -
          t1179) +
         t3 * t1146) +
        t2049) +
       t2254) +
      t5 * (((((((t2624_tmp + t1187) - t835) + t1403) + t1626) + t1805) +
             t2135) +
            t2160);
  h_sfvals_tmp = xi * (((((((((((-t447 - t455) + t841) + t1079) - t805) +
                             t1410_tmp * -8.4063370889414237) +
                            t1444) +
                           t1753) +
                          t3 * (zeta_1_inv * 0.03286035747913911)) +
                         eta * -t380) -
                        t2650_tmp) +
                       t1079 * zeta_1_inv);
  t165_tmp =
      t6 * ((((((t954 + t1146) + t1485) + t1804) + t2158) + t2264) + t2265);
  sfvals[19] = (g_sfvals_tmp + h_sfvals_tmp) + t165_tmp;
  sfvals[20] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[21] = (d_sfvals_tmp - e_sfvals_tmp) + f_sfvals_tmp;
  sfvals[22] = (g_sfvals_tmp - h_sfvals_tmp) - t165_tmp;
  sfvals_tmp =
      t5 * (((((((((t518 + t555) + t688) - t548) + t983) - t940) + t1427) -
              t1191) +
             t2087) -
            t1965) +
      (((((((((t898 + eta * 0.27895806214534152 * zeta) + t1099) +
             eta * t1018) -
            t1167) -
           t1256) +
          t1410_tmp * -1.11807692461714) +
         t1779) +
        t2591_tmp * -0.75387420847659026) +
       t2128);
  b_sfvals_tmp =
      (((((((((((t839 + eta * 0.65955298526491868 * zeta) + t943) - t622) +
              t1004) +
             t1018) +
            t1154) +
           t3 * (zeta_1_inv * 0.865770290649686)) +
          t647_tmp * -0.70508208897121338) +
         t1525) +
        t1410_tmp * -6.1530504965406791) -
       t1234) *
      xi;
  c_sfvals_tmp =
      t6 * ((((((t434 + t434 * zeta_1_inv) - t792) + t1425) + t2084) - t1984) -
            t1985);
  sfvals[23] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  d_sfvals_tmp =
      t5 * (((((((((-t338 + t647_tmp * -4.4541467840671274) - t765) + t1208) +
                 t1050_tmp * -5.71996761568837) +
                t1319) +
               t1467) +
              t1569) +
             t2025) +
            t2051) +
      (((((((((-t451 + t1173) + t1195) + t1050_tmp * -0.57680050147171746) +
            eta * t920) -
           t1145) +
          b_t2592_tmp * -4.12265371740459) +
         t1981) +
        t2591_tmp * -0.034724949502450662) +
       t2235);
  e_sfvals_tmp =
      (((((((((((-t18 + t647_tmp * -1.3333333333333333) + t472) + t786) +
              eta * 0.61602690702028484 * zeta) +
             t963) +
            t976) -
           t920) +
          t1370) +
         t1637) +
        t1410_tmp * -9.9493602403536183) +
       t3 * (zeta_1_inv * 0.1067389072606586)) *
      xi;
  f_sfvals_tmp =
      t6 * (((((t304_tmp + t1218) - t1318) + t2067) + t2068) - t2023);
  sfvals[24] = (d_sfvals_tmp - e_sfvals_tmp) - f_sfvals_tmp;
  g_sfvals_tmp =
      ((((((((t2595_tmp + eta * 1.349245522141439 * zeta) - t599) +
            eta * t805) +
           t1410_tmp * -8.0944603180564663) -
          t1179) +
         t2049) +
        t2591_tmp * -0.07454972059684796) +
       t2254) +
      -t5 * (((((((t2624_tmp + t835) - t1187) - t1403) - t1626) + t1805) -
              t2135) +
             t2160);
  h_sfvals_tmp = (((((((((((t455 - t447) + eta * t380) + t841) + t2650_tmp) +
                        eta * (t8 * 8.4063370889414237)) +
                       t1079) -
                      t805) +
                     t1444) +
                    t2 * (zeta_1_inv * 1.3126359404402561)) -
                   t1753) +
                  t1280_tmp * -0.03286035747913911) *
                 xi;
  t165_tmp =
      t6 * ((((((t954 + t1485) - t1146) - t1804) + t2264) + t2265) - t2158);
  sfvals[25] = (g_sfvals_tmp - h_sfvals_tmp) + t165_tmp;
  sfvals[26] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[27] = (d_sfvals_tmp + e_sfvals_tmp) + f_sfvals_tmp;
  sfvals[28] = (g_sfvals_tmp + h_sfvals_tmp) - t165_tmp;
  sfvals_tmp =
      (-t7 * ((t2360_tmp + eta * t373) - t1938) +
       t5 * (((((((((-t258 + t603) + eta * 0.92048572186821009 * zeta) + t816) -
                  t572) +
                 t1400) -
                t1052) -
               t1588) +
              t11 * (t3 * 1.80837445759334)) +
             t1947)) +
      (((((((((t550 * zeta + t1055) - t816) + t1268) - t1115) + t9 * t550) +
          t1760) +
         t1410_tmp * -3.616748915186681) +
        t2591_tmp * -1.80837445759334) +
       t2165);
  b_sfvals_tmp =
      ((((((((((-t65 + t620) + t832) - t569) + t1016) + t1027) - t1017) +
          t1479) +
         t4 * t373) +
        t1630) +
       t1779_tmp * -0.92048572186821009) *
      xi;
  c_sfvals_tmp =
      t6 *
      (((((((t361 + t569) + t777) + t2 * 0.92048572186821009 * zeta_1_inv) +
          t2114) -
         t1915) -
        t1940) -
       t1983);
  sfvals[29] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp = t2 * 2.0416666666666665 - t53;
  e_sfvals_tmp = t1050_tmp * 6.8172595105370224;
  f_sfvals_tmp = t96_tmp * 4.7638888888888893 - t216;
  sfvals[30] =
      (((((((((((((d_sfvals_tmp + t3 * 1.3365845776954535) +
                  eta * 6.3717313179718724 * zeta) -
                 t600) +
                t1006) +
               t1263) -
              t1014) +
             eta * t978) +
            t1906) +
           t2170) -
          t1410_tmp * 8.7337089028573835) -
         t2591_tmp * 3.698562162580965) +
        t5 * (((((((((t173 + t262) + t600) + t1286) + t1455) - t1261) - t1271) +
                t1921) +
               t2044) -
              e_sfvals_tmp)) +
       t7 * ((f_sfvals_tmp + eta * t265) - t304)) -
      t2344_tmp * 0.29166666666666669;
  sfvals[31] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      (-t7 * ((-(t96_tmp * 6.8055555555555554) + t216) + 2.0416666666666665) +
       t5 * ((((((t123_tmp * 4.7638888888888893 - zeta * 3.1519954203869789) +
                 t1286) +
                t1442) -
               t1271) +
              t1921) +
             2.0416666666666665)) +
      (((((-t600 + t1006) + t1263) - t1014) + t2 * t600) +
       t2165_tmp * -1.626314993387401);
  b_sfvals_tmp =
      t6 * ((((1.3365845776954535 - t306_tmp * 0.68055555555555558) - t539) +
             t2 * 6.8172595105370224 * zeta_1_inv) +
            t96_tmp * 2.361977584885512);
  c_sfvals_tmp =
      ((((((t2 * 4.4552819256515113 + -1.3365845776954535) + t4 * t265) +
          zeta * 6.3717313179718724) +
         t978) -
        t773) +
       t1779_tmp * -6.8172595105370224) *
      xi;
  sfvals[32] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  g_sfvals_tmp =
      (-t7 * ((t2360_tmp + t647_tmp * -2.728860179461551) + t1938) +
       t5 * (((((((((-t258 + t572) + t603) + t816) +
                  t1050_tmp * -0.92048572186821009) +
                 t1400) -
                t1052) +
               t1588) +
              t1947) +
             t1733_tmp * -1.80837445759334)) +
      (((((((((t1050_tmp * -1.80837445759334 + t1055) - t816) + t1268) -
            t1115) +
           eta * t1016) +
          t3 * t569) +
         t1760) +
        b_t2592_tmp * -1.80837445759334) +
       t2165);
  h_sfvals_tmp =
      ((((((((((-t65 + t569) + t620) + t832) + t1017) - t1016) - t1027) +
          t1479) +
         t2 * (zeta * 0.92048572186821009)) +
        t1630) +
       t110_tmp * -2.728860179461551) *
      xi;
  t165_tmp =
      t6 *
      (((((((t361 + t777) - t569) + t940_tmp * -0.92048572186821009) + t1915) +
         t1940) +
        t2114) -
       t1983);
  sfvals[33] = (g_sfvals_tmp - h_sfvals_tmp) - t165_tmp;
  sfvals[34] = (g_sfvals_tmp + h_sfvals_tmp) + t165_tmp;
  sfvals[35] =
      (((((((((((((d_sfvals_tmp + eta * 1.3365845776954535) - t600) + t1006) +
                t1263) +
               eta * t773) -
              t1014) +
             t3 * t539) +
            t1906) +
           t2170) -
          b_t2592_tmp * 3.698562162580965) -
         t1050_tmp * 6.3717313179718724) -
        t5 *
            (((((((((-t173 + t262) - t600) + t1261) + t1271) - t1286) + t1455) -
               t1921) +
              t2044) -
             e_sfvals_tmp)) +
       t7 * ((f_sfvals_tmp + t304) - b_t2344_tmp * 0.68055555555555558)) -
      t3 * 1.7320508075688772 * 2.6457513110645907 * 0.29166666666666669;
  sfvals[36] =
      ((((((((t2 * -3.3333333333333335 + t4 * 2.3333333333333335) +
             t8 * 9.1876921209786815) -
            t9 * 7.3767349726277214) +
           t10 * 2.1885926080922542) -
          zeta * 4.9995497564432139) -
         t2165_tmp * 4.5219259414255868) +
        t1779_tmp * 7.6662164231098808) +
       t5 * ((((((t2 * 12.299703719203359 - t8 * 4.5219259414255868) +
                 zeta * 7.6662164231098808) +
                t96_tmp * 0.18904285164904011) -
               t123_tmp * 7.7777777777777777) +
              t940_tmp * 1.3776354597412941) -
             3.3333333333333335)) +
      (t7 * ((t96_tmp * -7.7777777777777777 + t166_tmp * 5.4444444444444446) +
             2.3333333333333335) +
       1.0);
  sfvals[37] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      t5 * (((((((((t558 + t567) + t694) + t843) + t1060) + t1189) - t997) +
              t1600) +
             t1968) +
            t2054) +
      (((((((t2592_tmp + t1292) + eta * t1220) - t1094) +
          t1050_tmp * -0.14530379345458869) +
         b_t2592_tmp * -3.0514567104471388) +
        t2591_tmp * -3.658899809351718) +
       t2236);
  b_sfvals_tmp = (((((((t700 - t581) + t1036) + t1202) +
                     t2 * (zeta * 8.3879366013288159)) +
                    t1384) -
                   t1037) +
                  t1816) *
                 xi;
  c_sfvals_tmp =
      t6 *
      ((((((-t563 - t581) + t647_tmp * -1.6775800815299591) + t1382) + t2060) +
        t2063) +
       t2065);
  sfvals[38] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[39] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[40] =
      (((((((((eta * 3.240095712149635 * zeta - t1015) + t1555) + t9 * t377) +
            t1616) -
           t1468) +
          t1821) +
         t1897) -
        t5 *
            (((((((((t422 + t377 * zeta) + t422 * zeta_1_inv) + t880) + t1075) -
                 t1015) +
                t1613) +
               t1960) +
              t1733_tmp * -0.333942795157085) -
             t1280_tmp * 0.333942795157085)) -
       t1410_tmp * 16.994751546904439) -
      t2591_tmp * 0.333942795157085;
  sfvals_tmp =
      t5 * (((((((t435 + t1060) + t1189) + t1050_tmp * -8.3879366013288159) +
               t1384) -
              t1224) +
             t2054) +
            t2063) +
      (((((((((t700 - t567) + t1000) + t1008) - t1094) + t1511) + t9 * t563) +
         t1410_tmp * -3.3551601630599182) +
        t2591_tmp * -1.6775800815299591) +
       t2277);
  b_sfvals_tmp =
      t6 *
      ((((((-t399 - t464) + t647_tmp * -8.3879366013288159) + t1599) + t1966) +
        t2063) +
       t2065);
  c_sfvals_tmp =
      xi * (((((((((t1007 + t1050) - t725) + t1220) + t1343) - t1011) + t1532) +
              t8 * t563) -
             t1196) -
            t1011 * zeta_1_inv);
  sfvals[41] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      t5 * (((((((t435 + t464 * zeta) + t1060) + t1189) - t1224) +
              t1280_tmp * -8.3879366013288159) +
             t2054) +
            t2243) +
      (((((((t2592_tmp + t1050) - t1094) + t1511) + eta * t1036) + t3 * t581) +
        b_t2592_tmp * -1.6775800815299591) +
       t2277);
  e_sfvals_tmp =
      (((((((((t700 + t1007) + t1011) - t725) + t1220) + t1343) + t1532) +
         t3 * (zeta_1_inv * 1.6775800815299591)) -
        t1196) +
       t1816) *
      xi;
  f_sfvals_tmp =
      t6 * ((((((t464 - t399) + t464 * zeta_1_inv) + t1599) + t1966) + t2243) +
            t2244);
  sfvals[42] = (d_sfvals_tmp - e_sfvals_tmp) - f_sfvals_tmp;
  g_sfvals_tmp =
      -t5 * ((((zeta * 2.8199513429629719 + t880) - t8 * 13.2701866727988) +
              t1075) +
             t1960) +
      (((((-t1015 + t1555) + t1616) - t1468) + t2 * t1015) +
       t2165_tmp * -0.1505263667989129);
  h_sfvals_tmp =
      (((((-(zeta * 3.240095712149635) + t671) + t2 * 10.514560122605159) +
         t2 * (zeta_1_inv * 10.514560122605159)) -
        t9 * 13.7546558347548) +
       t2 * (zeta * 13.7546558347548)) *
      xi;
  t165_tmp = t6 * ((-t740 + t940_tmp * 0.333942795157085) +
                   t96_tmp * 0.333942795157085);
  sfvals[43] = (g_sfvals_tmp + h_sfvals_tmp) - t165_tmp;
  t2343_tmp =
      (((((((t2592_tmp + eta * 0.14530379345458869 * zeta) + t1292) +
           t9 * t445) -
          t1094) +
         t3 * t399) +
        t1410_tmp * -3.1967605039017282) +
       t2236) +
      -t5 * (((((((((t558 + t694) + t843) - t567) + t997) - t1060) - t1189) +
               t1600) +
              t1968) -
             t2054);
  t2609_tmp = (((((((t581 + t700) + t1037) + t1202) + t1384) - t1036) +
                t1779_tmp * -8.3879366013288159) +
               t1816) *
              xi;
  t304_tmp =
      t6 * ((((((t563 + t563 * zeta_1_inv) - t581) + t1382) + t2060) + t2243) +
            t2244);
  sfvals[44] = (t2343_tmp - t2609_tmp) - t304_tmp;
  sfvals[45] = (t2343_tmp + t2609_tmp) + t304_tmp;
  sfvals[46] =
      (((((((((eta * t671 - t1015) + t1555) + t1616) + t3 * t740) - t1468) +
          t1821) +
         t1897) -
        b_t2592_tmp * 13.7546558347548) -
       t1050_tmp * 3.240095712149635) -
      t5 * (((((((((-t422 + t880) + t1075) - t1015) + t1613) +
                t1541 * zeta_1_inv) +
               t1960) +
              t11 * t1541) -
             t1050_tmp * 13.7546558347548) -
            t647_tmp * 10.514560122605159);
  sfvals[47] = (d_sfvals_tmp + e_sfvals_tmp) + f_sfvals_tmp;
  sfvals[48] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[49] = (g_sfvals_tmp - h_sfvals_tmp) + t165_tmp;
  sfvals_tmp =
      -t5 * ((((((t2499_tmp - t811) + t1119) + t1169) + t1140 * zeta_1_inv) +
              t1989) +
             t11 * t1140) +
      ((((((((t2570_tmp + eta * t798) - t779) + t1169) - t814) + t3 * t444) +
         b_t2592_tmp * -8.3119464959786757) +
        t1756) +
       t1871);
  b_sfvals_tmp =
      (((((((t407 + t615) - t444) + t798) + t1111) + t2 * t444) + t1470) -
       t1164) *
      xi;
  c_sfvals_tmp =
      t6 * ((((((-t359 + t647_tmp * -18.58611748964497) - t444) + t1313) +
              t11 * t615) +
             t12 * t615) +
            t2017);
  sfvals[50] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[51] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp = -t5 * ((((((t2499_tmp + t809) - t811) + t1119) +
                        t1280_tmp * -8.3119464959786757) +
                       t1989) +
                      t1733_tmp * -8.3119464959786757) +
               ((((((((t2570_tmp + t809) - t779) - t814) +
                    t1410_tmp * -16.623892991957351) +
                   t9 * t424) +
                  t2591_tmp * -8.3119464959786757) +
                 t1756) +
                t1871);
  b_sfvals_tmp =
      (((((((t407 + t444) + t615) + t1111) - t798) + t1164) + t1470) +
       t1779_tmp * -8.3119464959786757) *
      xi;
  c_sfvals_tmp =
      t6 * ((((((t359 + t359 * zeta_1_inv) - t444) + t1313) + t2017) +
             t1733_tmp * -18.58611748964497) +
            t139_tmp * -18.58611748964497);
  sfvals[52] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[53] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[54] =
      (((((t8 * 41.064368569683637 - t9 * 62.615899704819682) +
          t10 * 28.055810279985241) -
         t330) -
        t2165_tmp * 28.055810279985241) +
       t2 * t330) +
      t5 * ((((t2 * 28.055810279985241 - t8 * 28.055810279985241) + t330) +
             t96_tmp * 21.551531135136042) +
            t940_tmp * 49.607341415121283);
}

// pyra_fek_55_sfunc - Compute shape functions and their derivatives of
void pyra_fek_55_sfunc(double xi, double eta, double zeta, double sfvals[55],
                       double sdvals[165])
{
  double b_sdvals_tmp;
  double b_sfvals_tmp;
  double b_sfvals_tmp_tmp;
  double b_t2592_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double h_sfvals_tmp;
  double i_sfvals_tmp;
  double j_sfvals_tmp;
  double k_sfvals_tmp;
  double sdvals_tmp;
  double sfvals_tmp;
  double sfvals_tmp_tmp;
  double t10;
  double t1000;
  double t1003;
  double t1004;
  double t1005;
  double t1006;
  double t1007;
  double t1008;
  double t1009;
  double t101;
  double t1010;
  double t1011;
  double t1013;
  double t1014;
  double t1015;
  double t1016;
  double t1017;
  double t1018;
  double t101_tmp;
  double t102;
  double t1027;
  double t1028;
  double t102_tmp;
  double t1031;
  double t1032;
  double t1035;
  double t1036;
  double t1037;
  double t1040;
  double t1041;
  double t1042;
  double t1043;
  double t1047;
  double t105;
  double t1050;
  double t1052;
  double t1053;
  double t1054;
  double t1055;
  double t1057;
  double t1058;
  double t1059;
  double t105_tmp;
  double t106;
  double t1060;
  double t1061;
  double t1062;
  double t1063;
  double t1065;
  double t1066;
  double t1068;
  double t1069;
  double t106_tmp;
  double t107;
  double t1073;
  double t1074;
  double t1075;
  double t1076;
  double t1078;
  double t1079;
  double t1081;
  double t1082;
  double t1086;
  double t1089;
  double t1090;
  double t1091;
  double t1093;
  double t1094;
  double t1095;
  double t1099;
  double t11;
  double t110;
  double t1100;
  double t1102;
  double t1103;
  double t1105;
  double t1108;
  double t1109;
  double t110_tmp;
  double t1111;
  double t1115;
  double t1116;
  double t1117;
  double t1118;
  double t1119;
  double t112;
  double t1120;
  double t1122;
  double t1125;
  double t1126;
  double t1127;
  double t1128;
  double t1129;
  double t1132;
  double t1133;
  double t1135;
  double t1136;
  double t1139;
  double t1140;
  double t1142;
  double t1144;
  double t1145;
  double t1146;
  double t1147;
  double t1151;
  double t1152;
  double t1154;
  double t1159;
  double t1160;
  double t1161;
  double t1164;
  double t1165;
  double t1167;
  double t1169;
  double t117;
  double t1173;
  double t1174;
  double t1179;
  double t1180;
  double t1186;
  double t1187;
  double t1188;
  double t1189;
  double t119;
  double t1191;
  double t1193;
  double t1194;
  double t1195;
  double t1196;
  double t1199;
  double t12;
  double t1201;
  double t1202;
  double t1203;
  double t1207;
  double t1208;
  double t1209;
  double t1211;
  double t1214;
  double t1215;
  double t1216;
  double t1217;
  double t1218;
  double t1219;
  double t1220;
  double t1224;
  double t1225;
  double t1229;
  double t123;
  double t1234;
  double t1237;
  double t1238;
  double t124;
  double t1242;
  double t1244;
  double t1246;
  double t1249;
  double t125;
  double t1250;
  double t1252;
  double t1253;
  double t1256;
  double t1257;
  double t126;
  double t1260;
  double t1261;
  double t1262;
  double t1263;
  double t1264;
  double t1266;
  double t1268;
  double t1269;
  double t127;
  double t1270;
  double t1271;
  double t1272;
  double t1273;
  double t1275;
  double t1276;
  double t1277;
  double t1278;
  double t1279;
  double t127_tmp;
  double t128;
  double t1280;
  double t1281;
  double t1282;
  double t1286;
  double t1287;
  double t1289;
  double t129;
  double t1291;
  double t1292;
  double t1295;
  double t1296;
  double t1297;
  double t129_tmp;
  double t13;
  double t1303;
  double t1304;
  double t1304_tmp;
  double t1309;
  double t1313;
  double t1317;
  double t1318;
  double t1319;
  double t1320;
  double t1324;
  double t1328;
  double t1329;
  double t133;
  double t1330;
  double t1332;
  double t1335;
  double t1336;
  double t1337;
  double t134;
  double t1340;
  double t1341;
  double t1343;
  double t1345;
  double t1349;
  double t135;
  double t1355;
  double t1356;
  double t1358;
  double t1359;
  double t136;
  double t1363;
  double t1364;
  double t1367;
  double t137;
  double t1370;
  double t1371;
  double t1371_tmp;
  double t1372;
  double t1377;
  double t1379;
  double t138;
  double t1382;
  double t1384;
  double t1387;
  double t1388;
  double t139;
  double t1400;
  double t1401;
  double t1403;
  double t1404;
  double t141;
  double t1410;
  double t1414;
  double t142;
  double t1425;
  double t1427;
  double t143;
  double t1436;
  double t144;
  double t1442;
  double t1443;
  double t1444;
  double t1446;
  double t1447;
  double t1448;
  double t1449;
  double t1455;
  double t1458;
  double t1463;
  double t1464;
  double t1467;
  double t1468;
  double t147;
  double t1470;
  double t1472;
  double t1479;
  double t1484;
  double t1485;
  double t1486;
  double t1488;
  double t1489;
  double t1490;
  double t1497;
  double t1505;
  double t1506;
  double t1507;
  double t1508;
  double t1509;
  double t1510;
  double t1511;
  double t1512;
  double t1518;
  double t1522;
  double t1523;
  double t1525;
  double t1528;
  double t1532;
  double t1533;
  double t1538;
  double t1539;
  double t1541;
  double t1544;
  double t1554;
  double t1555;
  double t1558;
  double t1563;
  double t1566;
  double t1567;
  double t1569;
  double t1572;
  double t1573;
  double t1576;
  double t1578;
  double t1579;
  double t1581;
  double t1582;
  double t1583;
  double t1586;
  double t1588;
  double t1589;
  double t1592;
  double t1598;
  double t1599;
  double t160;
  double t1600;
  double t1601;
  double t1605;
  double t1606;
  double t1608;
  double t161;
  double t1611;
  double t1613;
  double t1614;
  double t1615;
  double t1616;
  double t162;
  double t1620;
  double t1624;
  double t1626;
  double t1627;
  double t1628;
  double t1629;
  double t163;
  double t1630;
  double t1631;
  double t1633;
  double t1636;
  double t1637;
  double t1639;
  double t164;
  double t165;
  double t1655;
  double t166;
  double t1665;
  double t1667;
  double t1669;
  double t1671;
  double t1675;
  double t1677;
  double t1678;
  double t1679;
  double t168;
  double t1681;
  double t1685;
  double t1687;
  double t1692;
  double t1695;
  double t1697;
  double t1698;
  double t1699;
  double t170;
  double t1702;
  double t1703;
  double t1704;
  double t1707;
  double t171;
  double t1711;
  double t1712;
  double t1713;
  double t1714;
  double t1715;
  double t1716;
  double t1717;
  double t1724;
  double t1725;
  double t173;
  double t1730;
  double t1731;
  double t1732;
  double t1733;
  double t1734;
  double t1735;
  double t1737;
  double t1739;
  double t1740;
  double t1743;
  double t1745;
  double t1746;
  double t1747;
  double t1749;
  double t1750;
  double t1751;
  double t1752;
  double t1753;
  double t1756;
  double t1758;
  double t176;
  double t1760;
  double t1761;
  double t177;
  double t1771;
  double t1772;
  double t1776;
  double t1778;
  double t1779;
  double t178;
  double t1781;
  double t1782;
  double t1783;
  double t1784;
  double t1785;
  double t1787;
  double t1788;
  double t18;
  double t1800;
  double t1803;
  double t1804;
  double t1805;
  double t1806;
  double t1807;
  double t1808;
  double t1809;
  double t1810;
  double t1811;
  double t1813;
  double t1814;
  double t1816;
  double t1820;
  double t1821;
  double t1822;
  double t1823;
  double t1824;
  double t1825;
  double t1826;
  double t1828;
  double t1829;
  double t1830;
  double t1831;
  double t1833;
  double t1834;
  double t1835;
  double t1838;
  double t184;
  double t1840;
  double t1841;
  double t1844;
  double t1845;
  double t1846;
  double t185;
  double t1851;
  double t1855;
  double t1856;
  double t1857;
  double t1859;
  double t186;
  double t1860;
  double t187;
  double t1871;
  double t1872;
  double t1874;
  double t1878;
  double t188;
  double t1881;
  double t1882;
  double t1886;
  double t1889;
  double t1891;
  double t1892;
  double t1893;
  double t1894;
  double t1895;
  double t1896;
  double t1897;
  double t19;
  double t1900;
  double t1902;
  double t1906;
  double t1907;
  double t1908;
  double t1909;
  double t1910;
  double t1911;
  double t1912;
  double t1913;
  double t1915;
  double t1916;
  double t1918;
  double t1919;
  double t1920;
  double t1921;
  double t1922;
  double t1923;
  double t1925;
  double t1926;
  double t1928;
  double t1929;
  double t1932;
  double t1938;
  double t1939;
  double t1940;
  double t1942;
  double t1943;
  double t1945;
  double t1946;
  double t1947;
  double t1948;
  double t1949;
  double t1950;
  double t1951;
  double t1952;
  double t1953;
  double t1954;
  double t1957;
  double t1960;
  double t1961;
  double t1962;
  double t1963;
  double t1965;
  double t1966;
  double t1967;
  double t1968;
  double t1969;
  double t197;
  double t1970;
  double t1971;
  double t1973;
  double t198;
  double t1981;
  double t1982;
  double t1983;
  double t1984;
  double t1985;
  double t1986;
  double t1987;
  double t1988;
  double t1989;
  double t199;
  double t1990;
  double t1991;
  double t1993;
  double t1994;
  double t1995;
  double t1996;
  double t1997;
  double t1998;
  double t1999;
  double t2;
  double t20;
  double t200;
  double t2001;
  double t2007;
  double t2008;
  double t2009;
  double t2012;
  double t2017;
  double t2020;
  double t2023;
  double t2024;
  double t2025;
  double t2026;
  double t2027;
  double t2030;
  double t2031;
  double t2032;
  double t2033;
  double t2034;
  double t2035;
  double t2038;
  double t2039;
  double t2040;
  double t2044;
  double t2045;
  double t2046;
  double t2048;
  double t2049;
  double t2050;
  double t2051;
  double t2054;
  double t2055;
  double t2056;
  double t2060;
  double t2063;
  double t2065;
  double t2066;
  double t2067;
  double t2068;
  double t2069;
  double t2071;
  double t2072;
  double t2078;
  double t2079;
  double t2084;
  double t2087;
  double t2096;
  double t2099;
  double t210;
  double t2106;
  double t2107;
  double t2108;
  double t211;
  double t2114;
  double t2117;
  double t212;
  double t2122;
  double t2128;
  double t213;
  double t2130;
  double t2131;
  double t2132;
  double t2133;
  double t2134;
  double t2135;
  double t2136;
  double t2137;
  double t2139;
  double t2152;
  double t2158;
  double t2159;
  double t216;
  double t2160;
  double t2161;
  double t2162;
  double t2165;
  double t2165_tmp;
  double t2170;
  double t2180;
  double t2194;
  double t2195;
  double t221;
  double t2215;
  double t222;
  double t223;
  double t2235;
  double t2236;
  double t2237;
  double t2239;
  double t224;
  double t2240;
  double t2241;
  double t2243;
  double t2244;
  double t2249;
  double t2254;
  double t2258;
  double t226;
  double t2264;
  double t2265;
  double t2266;
  double t2267;
  double t2270;
  double t2277;
  double t2285;
  double t23;
  double t2315;
  double t2316;
  double t2331_tmp;
  double t2337_tmp;
  double t2340_tmp;
  double t2351_tmp;
  double t2353_tmp;
  double t2359_tmp;
  double t2360_tmp;
  double t2362_tmp;
  double t2375;
  double t2378;
  double t2385;
  double t2395;
  double t2395_tmp;
  double t23_tmp;
  double t2414_tmp;
  double t2424;
  double t2440_tmp;
  double t2461;
  double t2462;
  double t247;
  double t2473;
  double t2474;
  double t2475;
  double t2477;
  double t248;
  double t2483;
  double t2484;
  double t2499_tmp;
  double t2510_tmp;
  double t252;
  double t2520_tmp;
  double t2530;
  double t2531;
  double t2563;
  double t2564;
  double t2564_tmp;
  double t2569;
  double t2570_tmp;
  double t2573;
  double t2576;
  double t258;
  double t2580;
  double t2580_tmp;
  double t2581;
  double t2589;
  double t2591_tmp;
  double t2592_tmp;
  double t2595_tmp;
  double t260;
  double t2609_tmp;
  double t260_tmp;
  double t2611;
  double t2612;
  double t2614;
  double t2618_tmp;
  double t262;
  double t2622;
  double t2622_tmp;
  double t2623;
  double t2623_tmp;
  double t2624_tmp;
  double t2635;
  double t2636;
  double t2642;
  double t2642_tmp;
  double t2643;
  double t2643_tmp;
  double t2644;
  double t2646;
  double t265;
  double t2650;
  double t2651;
  double t2652;
  double t266;
  double t268;
  double t268_tmp;
  double t269;
  double t27;
  double t270;
  double t271;
  double t272;
  double t273;
  double t279_tmp;
  double t279_tmp_tmp;
  double t280;
  double t288;
  double t288_tmp;
  double t290;
  double t291;
  double t294;
  double t294_tmp;
  double t295;
  double t297;
  double t3;
  double t30;
  double t300;
  double t304;
  double t305_tmp;
  double t306_tmp;
  double t307;
  double t308;
  double t309;
  double t31;
  double t314_tmp;
  double t322;
  double t324;
  double t326;
  double t328;
  double t329;
  double t330;
  double t332;
  double t333;
  double t334;
  double t335;
  double t336;
  double t337;
  double t338;
  double t339;
  double t34;
  double t340;
  double t341;
  double t342;
  double t343;
  double t344;
  double t345;
  double t346;
  double t347;
  double t348;
  double t349;
  double t350;
  double t352;
  double t354;
  double t355;
  double t356;
  double t358;
  double t359;
  double t36;
  double t360;
  double t361;
  double t362;
  double t363;
  double t364;
  double t365;
  double t366;
  double t367;
  double t368;
  double t369;
  double t37;
  double t370;
  double t371;
  double t372;
  double t373;
  double t374;
  double t375;
  double t376;
  double t377;
  double t379;
  double t38;
  double t380;
  double t383;
  double t384;
  double t385;
  double t386;
  double t387;
  double t388;
  double t39;
  double t391;
  double t391_tmp;
  double t393;
  double t394;
  double t396;
  double t397;
  double t398;
  double t398_tmp;
  double t399;
  double t4;
  double t40;
  double t401;
  double t402;
  double t403;
  double t404;
  double t407;
  double t408;
  double t41;
  double t410;
  double t413;
  double t414;
  double t415;
  double t418;
  double t419;
  double t42;
  double t420;
  double t422;
  double t424;
  double t428;
  double t429;
  double t42_tmp;
  double t430;
  double t434;
  double t435;
  double t436;
  double t437;
  double t438;
  double t439;
  double t440;
  double t444;
  double t445;
  double t446;
  double t447;
  double t449;
  double t45;
  double t450;
  double t451;
  double t452;
  double t453;
  double t454;
  double t455;
  double t457;
  double t458;
  double t46;
  double t460;
  double t462;
  double t463;
  double t464;
  double t465;
  double t467;
  double t468;
  double t469;
  double t47;
  double t470;
  double t471;
  double t472;
  double t473;
  double t474;
  double t475;
  double t476;
  double t477;
  double t479;
  double t48;
  double t480;
  double t481;
  double t482;
  double t483;
  double t484;
  double t486;
  double t487;
  double t488;
  double t489;
  double t491;
  double t493;
  double t494;
  double t495;
  double t496;
  double t497;
  double t499;
  double t5;
  double t50;
  double t500;
  double t501;
  double t502;
  double t503;
  double t505;
  double t506;
  double t507;
  double t509;
  double t511;
  double t512;
  double t514;
  double t516;
  double t518;
  double t519;
  double t52;
  double t520;
  double t521;
  double t522;
  double t523;
  double t524;
  double t525;
  double t527;
  double t528;
  double t529;
  double t53;
  double t530;
  double t532;
  double t539;
  double t540;
  double t542;
  double t543;
  double t544;
  double t545;
  double t546;
  double t547;
  double t548;
  double t549;
  double t550;
  double t553;
  double t554;
  double t555;
  double t556;
  double t557;
  double t558;
  double t559;
  double t56;
  double t560;
  double t561;
  double t562;
  double t563;
  double t564;
  double t565;
  double t566;
  double t567;
  double t568;
  double t569;
  double t57;
  double t570;
  double t572;
  double t573;
  double t574;
  double t576;
  double t577;
  double t578;
  double t579;
  double t580;
  double t581;
  double t582;
  double t583;
  double t585;
  double t586;
  double t588;
  double t589;
  double t590;
  double t591;
  double t592;
  double t593;
  double t599;
  double t6;
  double t600;
  double t601;
  double t602;
  double t603;
  double t604;
  double t605;
  double t606;
  double t61;
  double t612;
  double t614;
  double t615;
  double t618;
  double t620;
  double t621;
  double t622;
  double t631;
  double t633;
  double t634;
  double t635;
  double t637;
  double t640;
  double t641;
  double t643;
  double t644;
  double t646;
  double t65;
  double t653;
  double t655;
  double t661;
  double t662;
  double t671;
  double t673;
  double t675;
  double t677;
  double t678;
  double t679;
  double t680;
  double t688;
  double t689;
  double t690;
  double t694;
  double t695;
  double t699;
  double t7;
  double t700;
  double t701;
  double t705;
  double t706;
  double t707;
  double t708;
  double t712;
  double t713;
  double t718;
  double t72;
  double t720;
  double t725;
  double t727;
  double t729;
  double t72_tmp;
  double t730;
  double t731;
  double t736;
  double t74;
  double t740;
  double t748;
  double t749;
  double t75;
  double t752;
  double t756;
  double t757;
  double t759;
  double t76;
  double t760;
  double t762;
  double t764;
  double t765;
  double t766;
  double t769;
  double t773;
  double t775;
  double t777;
  double t778;
  double t779;
  double t78;
  double t782;
  double t783;
  double t784;
  double t786;
  double t788;
  double t789;
  double t78_tmp;
  double t792;
  double t793;
  double t795;
  double t798;
  double t8;
  double t80;
  double t800;
  double t805;
  double t809;
  double t80_tmp;
  double t811;
  double t812;
  double t813;
  double t814;
  double t815;
  double t816;
  double t817;
  double t819;
  double t820;
  double t821;
  double t822;
  double t824;
  double t829;
  double t830;
  double t831;
  double t832;
  double t833;
  double t835;
  double t836;
  double t837;
  double t839;
  double t841;
  double t843;
  double t844;
  double t852;
  double t853;
  double t859;
  double t86;
  double t860_tmp;
  double t868;
  double t869;
  double t87;
  double t878;
  double t88;
  double t880;
  double t883;
  double t884;
  double t89;
  double t890;
  double t891;
  double t892;
  double t893;
  double t894;
  double t896;
  double t898;
  double t9;
  double t900;
  double t910;
  double t914;
  double t920;
  double t922;
  double t925;
  double t926;
  double t927;
  double t932;
  double t937;
  double t940;
  double t941;
  double t943;
  double t944;
  double t945;
  double t946;
  double t948;
  double t949;
  double t951;
  double t952;
  double t954;
  double t957;
  double t958;
  double t959;
  double t96;
  double t961;
  double t963;
  double t964;
  double t968;
  double t969;
  double t97;
  double t976;
  double t978;
  double t980;
  double t982;
  double t983;
  double t984;
  double t985;
  double t986;
  double t987;
  double t988;
  double t989;
  double t99;
  double t990;
  double t991;
  double t992;
  double t995;
  double t997;
  double t998;
  double t999;
  double t99_tmp;
  double zeta_1_inv;
  zeta_1_inv = 1.0 / ((zeta - 1.0) + 1.0E-100);
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = xi * xi;
  t6 = std::pow(xi, 3.0);
  t8 = zeta * zeta;
  t9 = std::pow(zeta, 3.0);
  t11 = zeta_1_inv * zeta_1_inv;
  t12 = std::pow(zeta_1_inv, 3.0);
  t18 = eta * 1.3333333333333333;
  t19 = zeta_1_inv / 4.0;
  t20 = zeta_1_inv * 1.3333333333333333;
  t23_tmp = eta * zeta_1_inv;
  t23 = t23_tmp * 3.5;
  t27 = eta * 0.375;
  t30 = zeta_1_inv * 0.875;
  t40 = t23_tmp * 1.3125;
  t41 = t23_tmp * 3.0625;
  t46 = eta * 0.390625;
  t47 = zeta_1_inv * 0.328125;
  t48 = zeta_1_inv * 0.765625;
  t65 = eta * 1.7864583333333333;
  t322 = eta * 15.89719301874257;
  t324 = zeta * 5.4251233727800212;
  t326 = eta * 26.5403733455976;
  t328 = zeta * 26.5403733455976;
  t329 = zeta * 24.935839487936029;
  t330 = zeta * 6.5042791448492;
  t332 = zeta * 9.59537145847045;
  t333 = eta * 21.029120245210329;
  t334 = zeta * 17.467417805714771;
  t335 = eta * 3.7430792544479812;
  t336 = zeta * 35.946311710080849;
  t337 = eta * 16.75556879313995;
  t338 = eta * 4.4541467840671274;
  t339 = eta * 8.9082935681342548;
  t340 = zeta * 3.7430792544479812;
  t341 = zeta * 33.2477859839147;
  t342 = zeta * 16.75556879313995;
  t343 = zeta * 7.6353375275520357;
  t344 = zeta_1_inv * 4.4541467840671274;
  t346 = eta * 16.719247415965221;
  t347 = eta * 18.15186466968477;
  t348 = zeta * 16.188920636112929;
  t349 = zeta * 16.719247415965221;
  t350 = eta * 25.16380980398645;
  t352 = eta * 23.11733627520718;
  t354 = eta * 55.758352468934923;
  t355 = zeta * 19.647020930880661;
  t356 = eta * 5.9515972757188136;
  t358 = eta * 6.3717313179718724;
  t359 = eta * 18.58611748964497;
  t360 = eta * 3.240095712149635;
  t361 = eta * 7.705778758402392;
  t362 = zeta * 4.4203472757188136;
  t363 = zeta * 6.3717313179718724;
  t364 = zeta * 18.58611748964497;
  t365 = zeta_1_inv * 18.58611748964497;
  t366 = zeta * 3.240095712149635;
  t367 = zeta * 10.97669942805515;
  t368 = zeta * 2.396041551660534;
  t369 = zeta * 33.989503093808871;
  t370 = eta * 5.4577203589231011;
  t372 = eta * 0.92048572186821009;
  t373 = zeta_1_inv * 2.728860179461551;
  t374 = zeta * 1.256193470692148;
  t375 = zeta * 2.5123869413842952;
  t376 = zeta * 1.8626758258927081;
  t377 = eta * 13.7546558347548;
  t379 = zeta_1_inv * 1.458644088230626;
  t380 = zeta * 2.4334987331161488;
  t383 = eta * 1.3126359404402561;
  t384 = eta * 2.6252718808805122;
  t385 = zeta * 4.0898368611790454;
  t386 = zeta * 1.1946357631981821;
  t387 = zeta * 1.0018283854712551;
  t388 = zeta_1_inv * 1.711648597373769;
  t391_tmp = eta * zeta;
  t391 = t391_tmp * 13.634519021074039;
  t393 = zeta * 0.92048572186821009;
  t394 = eta * 0.30248004775335;
  t396 = eta * 1.634064978650307;
  t397 = zeta * 13.7546558347548;
  t399 = zeta * 3.658899809351718;
  t401 = zeta * 4.7976857292352246;
  t402 = zeta_1_inv * 1.3126359404402561;
  t403 = zeta * 7.514635288152304;
  t404 = t23_tmp * 19.036619372455529;
  t408 = t391_tmp * 37.172234979289939;
  t410 = eta * 2.339836861179045;
  t413 = zeta * 1.860564526878592;
  t414 = t391_tmp * 15.41155751680478;
  t415 = zeta * 0.30248004775335;
  t418 = zeta * 1.634064978650307;
  t419 = zeta_1_inv * 5.919320425069059;
  t420 = eta * 9.192134214921774;
  t422 = eta * 10.514560122605159;
  t424 = eta * 8.3119464959786757;
  t428 = eta * 2.5973108719490581;
  t429 = eta * 1.349245522141439;
  t430 = zeta * 2.477721009125105;
  t434 = eta * 0.865770290649686;
  t435 = zeta * 4.7486854941861676;
  t436 = zeta * 9.497370988372337;
  t437 = eta * 9.4922370917357259;
  t438 = zeta_1_inv * 10.514560122605159;
  t439 = zeta * 2.5048784293841009;
  t440 = eta * 0.61602690702028484;
  t444 = zeta * 8.3119464959786757;
  t445 = eta * 3.0514567104471388;
  t446 = zeta * 5.4937398003533477;
  t447 = zeta * 1.349245522141439;
  t449 = eta * 1.612566532931401;
  t450 = zeta_1_inv * 0.865770290649686;
  t451 = zeta * 0.542112815128889;
  t452 = zeta_1_inv * 4.1295528340973346;
  t453 = eta * 0.57680050147171746;
  t454 = zeta * 9.4922370917357259;
  t455 = eta * 3.37825124436212;
  t457 = eta * 5.71996761568837;
  t458 = eta * 3.113926661872076;
  t460 = zeta * 0.61602690702028484;
  t462 = zeta * 3.3036280121668069;
  t463 = zeta * 3.0514567104471388;
  t464 = eta * 8.3879366013288159;
  t465 = eta * 2.7140870306453579;
  t467 = t391_tmp * 12.30610099308136;
  t468 = eta * 10.17070493274165;
  t469 = t23_tmp * 10.9154407178462;
  t470 = zeta_1_inv * 1.284441532931401;
  t471 = eta * 5.0327402445898768;
  t472 = zeta * 0.57680050147171746;
  t473 = zeta * 0.1812044001109345;
  t474 = zeta * 6.3935210078034546;
  t475 = zeta_1_inv * 3.37825124436212;
  t477 = zeta * 5.71996761568837;
  t479 = zeta * 2.2616226254297711;
  t480 = zeta * 8.3879366013288159;
  t481 = zeta_1_inv * 8.3879366013288159;
  t482 = zeta * 2.236153849234281;
  t483 = zeta * 2.7140870306453579;
  t484 = eta * 0.65955298526491868;
  t486 = zeta_1_inv * 0.71534469226336528;
  t487 = zeta * 2.6207497422479471;
  t488 = t391_tmp * 27.5093116695096;
  t489 = zeta * 5.0327402445898768;
  t491 = zeta * 2.2451044558277968;
  t493 = zeta * 3.152251571896044;
  t494 = eta * 1.0204368243738029;
  t495 = eta * 1.749989308814863;
  t496 = zeta * 0.65955298526491868;
  t497 = zeta * 3.2526299867748012;
  t499 = zeta * 5.3424739682020634;
  t500 = zeta * 1.469351528807207;
  t501 = eta * 10.35848112433631;
  t502 = eta * 6.8172595105370224;
  t503 = zeta * 1.066481360778089;
  t505 = zeta * 1.0204368243738029;
  t506 = zeta * 6.7322417710859481;
  t507 = zeta * 1.749989308814863;
  t509 = t23_tmp * 4.6425841476568941;
  t511 = zeta * 1.1168611504253709;
  t512 = zeta * 3.71663525441012;
  t514 = zeta * 11.09568648774289;
  t516 = t23_tmp * 26.685529430280969;
  t519 = t391_tmp * 7.4861585088959606;
  t520 = zeta * 6.8172595105370224;
  t521 = eta * 5.2990643395808563;
  t522 = eta * 4.8376995987942033;
  t523 = eta * 1.8144292154521251;
  t524 = eta * 3.62885843090425;
  t525 = t391_tmp * 16.623892991957351;
  t527 = t23_tmp * 16.623892991957351;
  t528 = zeta * 3.157401483696979;
  t529 = zeta * 1.426099641197156;
  t530 = eta * 1.178489644510015;
  t539 = zeta * 3.698562162580965;
  t540 = t391_tmp * 19.89872048070724;
  t542 = eta * 6.6386034420286908;
  t543 = zeta * 3.399184822284278;
  t544 = zeta * 1.178489644510015;
  t545 = eta * 2.212867814009563;
  t546 = eta * 2.7425920231294731;
  t547 = zeta * 1.2692041053897869;
  t548 = zeta * 0.955932563850912;
  t549 = zeta * 1.9118651277018239;
  t550 = eta * 1.80837445759334;
  t553 = zeta * 3.29853437636751;
  t554 = t391_tmp * 11.43993523137674;
  t555 = eta * 3.5231725330068762;
  t556 = eta * 7.0463450660137523;
  t557 = zeta * 6.9779816385602169;
  t558 = eta * 2.90615291699255;
  t559 = eta * 5.8123058339851008;
  t560 = zeta * 7.07646194188696;
  t561 = t391_tmp * 16.775873202657628;
  t562 = t23_tmp * 16.775873202657628;
  t563 = eta * 1.6775800815299591;
  t565 = eta * 0.982801653384413;
  t566 = zeta * 2.7425920231294731;
  t567 = zeta * 0.94448189137986227;
  t568 = zeta * 1.888963782759725;
  t569 = zeta * 1.80837445759334;
  t570 = zeta * 7.2334978303733619;
  t572 = eta * 2.728860179461551;
  t573 = zeta_1_inv * 3.5231725330068762;
  t574 = zeta * 1.238878418136707;
  t576 = zeta_1_inv * 2.90615291699255;
  t577 = eta * 1.318019088230626;
  t578 = eta * 2.6360381764612519;
  t579 = eta * 2.4334987331161488;
  t580 = t391_tmp * 16.812674177882851;
  t581 = zeta * 1.6775800815299591;
  t582 = zeta * 6.7103203261198363;
  t583 = zeta_1_inv * 1.6775800815299591;
  t585 = eta * 1.1946357631981821;
  t586 = zeta * 0.982801653384413;
  t588 = zeta * 2.49027468580775;
  t589 = t23_tmp * 7.2665213385045284;
  t590 = t23_tmp * 23.94112384355811;
  t591 = t23_tmp * 17.75796127520718;
  t592 = zeta * 0.42072501077220908;
  t593 = zeta * 0.84145002154441828;
  t600 = zeta * 0.931337912946354;
  t602 = eta * 0.2459423843098352;
  t606 = t391_tmp * 2.0408736487476049;
  t612 = zeta * 0.8307033465585324;
  t614 = t391_tmp * 3.4999786176297252;
  t618 = eta * 0.32021672178197591;
  t621 = zeta * 0.22076919351333041;
  t622 = eta * 0.70508208897121338;
  t631 = t23_tmp * 3.8533245987942042;
  t634 = zeta * 0.2459423843098352;
  t637 = t23_tmp * 1.12885843090425;
  t640 = t23_tmp * 6.3283076100533338;
  t646 = t391_tmp * -18.58611748964497;
  t653 = zeta_1_inv * 0.70508208897121338;
  t661 = t391_tmp * 2.356979289020031;
  t673 = zeta * 0.1724031480591563;
  t675 = t391_tmp * 4.4257356280191269;
  t677 = t391_tmp * 5.4851840462589454;
  t678 = t23_tmp * 5.4851840462589454;
  t680 = eta * 0.82590700304170184;
  t690 = eta * 0.14530379345458869;
  t699 = eta * 0.1005606154732695;
  t701 = t391_tmp * 3.3551601630599182;
  t708 = t391_tmp * 5.6843533067688261;
  t712 = zeta * 0.82590700304170184;
  t720 = zeta * 0.64585902971613851;
  t725 = zeta * 0.14530379345458869;
  t727 = zeta * 0.22364916179054389;
  t730 = t23_tmp * 2.9172881764612519;
  t736 = t391_tmp * 2.3892715263963651;
  t740 = zeta * 0.333942795157085;
  t748 = t391_tmp * 1.84097144373642;
  t749 = t23_tmp * 1.84097144373642;
  t752 = t23_tmp * 12.388658502292;
  t756 = t23_tmp * 7.3177996187034351;
  t757 = t391_tmp * -9.59537145847045;
  t760 = t23_tmp * 6.5965967993460826;
  t764 = zeta * 0.30105273359782592;
  t765 = zeta * 0.06941263584527918;
  t766 = zeta * 0.13882527169055839;
  t769 = t23_tmp * 1.095159830393253;
  t775 = zeta * 0.65057264415519034;
  t784 = eta * 0.1067389072606586;
  t788 = t23_tmp * 4.24990611034637;
  t792 = zeta * 0.75387420847659026;
  t795 = t23_tmp * 12.80407274182104;
  t800 = eta * 0.27895806214534152;
  t815 = zeta_1_inv * 0.1067389072606586;
  t816 = zeta * 0.71304982059857813;
  t817 = t23_tmp * 1.088025898524154;
  t819 = zeta_1_inv * 0.56442921545212477;
  t821 = zeta * 0.31979510030879088;
  t822 = zeta * 0.63959020061758187;
  t824 = zeta * 0.62018817562619721;
  t835 = zeta * 0.139083732477686;
  t836 = zeta * 0.278167464955372;
  t839 = zeta * 0.27895806214534152;
  t852 = zeta * 0.63460205269489356;
  t859 = zeta * 0.104174848507352;
  t869 = t23_tmp * 5.1349457921213064;
  t883 = t23_tmp * 1.430689384526731;
  t892 = t23_tmp * 3.554449730418344;
  t894 = t23_tmp * 5.36679336355277;
  t898 = zeta * 0.48101641751966318;
  t954 = eta * 0.03286035747913911;
  t980 = zeta_1_inv * 0.03286035747913911;
  t1003 = t391_tmp * -1.9118651277018239;
  t1015 = zeta * 0.086201574029578162;
  t1041 = t23_tmp * 0.26452068839754161;
  t1047 = eta * 0.050280307736634743;
  t1050 = t391_tmp * -1.6775800815299591;
  t1057 = t391_tmp * -0.982801653384413;
  t1078 = t391_tmp * -2.5123869413842952;
  t1086 = t391_tmp * -2.4334987331161488;
  t1095 = t391_tmp * -1.583076923012007;
  t1135 = t391_tmp * -5.6399026859259447;
  t1146 = zeta * 0.07454972059684796;
  t1151 = t391_tmp * -6.3039908407739587;
  t1169 = t391_tmp * -8.3119464959786757;
  t1180 = eta * 0.09858107243741733;
  t1194 = t391_tmp * -9.4922370917357259;
  t1199 = t391_tmp * -0.61602690702028484;
  t1218 = zeta * 0.034724949502450662;
  t1229 = t23_tmp * -3.37825124436212;
  t1244 = t391_tmp * -2.7140870306453579;
  t1266 = t391_tmp * -0.65955298526491868;
  t1335 = t391_tmp * -0.63959020061758187;
  t1345 = t391_tmp * -0.278167464955372;
  t1484 = t23_tmp * -0.70508208897121338;
  t1624 = t391_tmp * -0.13882527169055839;
  t4 = t2 * t2;
  t7 = t5 * t5;
  t10 = t8 * t8;
  t13 = t11 * t11;
  t31 = t3 * 3.5;
  t34 = eta * t30;
  t36 = t2 * 0.375;
  t37 = t3 * 0.875;
  t39 = t3 * 8.1666666666666661;
  t42_tmp = eta * t11;
  t42 = t42_tmp / 4.0;
  t45 = t42_tmp * 1.75;
  t50 = t2 * 2.625;
  t52 = t2 * 2.0416666666666665;
  t56 = eta * t47;
  t57 = eta * t48;
  t61 = t42_tmp * 0.875;
  t72_tmp = t3 * zeta_1_inv;
  t72 = t72_tmp * 1.3125;
  t74 = t42_tmp * 0.65625;
  t75 = t72_tmp * 3.0625;
  t76 = t42_tmp * 1.53125;
  t78_tmp = t2 * t11;
  t78 = t78_tmp * 3.5;
  t80_tmp = t2 * t12;
  t80 = t80_tmp * 1.75;
  t86 = t42_tmp * 0.328125;
  t88 = t42_tmp * 0.765625;
  t96 = t78_tmp * 0.875;
  t99_tmp = t3 * t11;
  t99 = t99_tmp * 11.666666666666666;
  t107 = eta * 4.58257569495584 * 0.21875;
  t117 = t78_tmp * 1.3125;
  t119 = t99_tmp * 1.3125;
  t124 = t80_tmp * 0.65625;
  t127_tmp = t3 * t12;
  t127 = t127_tmp * -8.1666666666666661;
  t128 = t80_tmp * 6.125;
  t133 = t78_tmp * 3.0625;
  t134 = t99_tmp * 3.0625;
  t135 = t127_tmp * 3.0625;
  t139 = t127_tmp * 2.0416666666666665;
  t142 = t80_tmp * 1.53125;
  t160 = t78_tmp * 0.328125;
  t162 = t78_tmp * 0.765625;
  t163 = t127_tmp * 0.765625;
  t168 = t99_tmp * 27.222222222222221;
  t184 = t127_tmp * 7.145833333333333;
  t188 = eta * 4.58257569495584 * -0.109375;
  t197 = t80_tmp * 2.296875;
  t210 = t80_tmp * 5.359375;
  t221 = t127_tmp * 1.7864583333333333;
  t252 = t2 * 4.58257569495584 * -0.109375;
  t260_tmp = eta * 1.7320508075688772 * 2.6457513110645907;
  t260 = t260_tmp * 1.9444444444444444;
  t265 = 4.58257569495584 * zeta_1_inv * 0.68055555555555558;
  t266 = 4.58257569495584 * zeta_1_inv * 0.25520833333333331;
  t268_tmp = t260_tmp * zeta_1_inv;
  t268 = t268_tmp * 2.7222222222222223;
  t269 = t268_tmp * 1.0208333333333333;
  t270 = t80_tmp * 4.58257569495584 * 0.765625;
  t279_tmp_tmp = t3 * 1.7320508075688772 * 2.6457513110645907;
  t279_tmp = t279_tmp_tmp * zeta_1_inv;
  t280 = t279_tmp * 1.0208333333333333;
  t288_tmp = t42_tmp * 1.7320508075688772 * 2.6457513110645907;
  t288 = t288_tmp * 0.68055555555555558;
  t290 = t288_tmp * 0.25520833333333331;
  t288_tmp = t127_tmp * 1.7320508075688772 * 2.6457513110645907;
  t295 = t288_tmp * 2.7222222222222223;
  t300 = t288_tmp * 1.0208333333333333;
  t304 = t288_tmp * 0.68055555555555558;
  t307 = t288_tmp * 0.25520833333333331;
  t345 = t8 * 4.6326028543290363;
  t371 = t2 * 15.89719301874257;
  t398_tmp = t2 * zeta_1_inv;
  t398 = t398_tmp * 20.451778531611069;
  t407 = t359 * zeta;
  t476 = t8 * 5.4251233727800212;
  t518 = t335 * zeta;
  t532 = t339 * zeta_1_inv;
  t564 = t2 * 26.5403733455976;
  t599 = t8 * 9.8235104654403287;
  t601 = t2 * 5.9515972757188136;
  t603 = t2 * 5.4135401206816516;
  t604 = t2 * 10.8270802413633;
  t605 = t494 * zeta;
  t615 = t3 * 18.58611748964497;
  t620 = t3 * 7.705778758402392;
  t633 = t8 * 4.4203472757188136;
  t635 = eta * t529;
  t641 = t8 * 18.58611748964497;
  t643 = t8 * 56.351800719527837;
  t644 = t8 * 7.705778758402392;
  t655 = t8 * 14.267317910296709;
  t662 = eta * t547;
  t671 = t8 * 16.994751546904439;
  t679 = eta * t568;
  t688 = t555 * zeta_1_inv;
  t689 = t556 * zeta_1_inv;
  t694 = t558 * zeta_1_inv;
  t695 = t559 * zeta_1_inv;
  t700 = t563 * zeta;
  t705 = t8 * t326;
  t706 = t2 * t328;
  t707 = t565 * zeta;
  t713 = t8 * 6.1530504965406791;
  t718 = t8 * 24.935839487936029;
  t729 = eta * t379;
  t731 = eta * t380;
  t759 = t8 * 22.026997246496109;
  t762 = t384 * zeta_1_inv;
  t773 = t8 * 8.7337089028573835;
  t777 = eta * t419;
  t778 = t2 * 3.7430792544479812;
  t779 = t8 * 17.973155855040421;
  t782 = t2 * 8.3777843965699752;
  t783 = t2 * 16.75556879313995;
  t786 = t2 * 4.4541467840671274;
  t789 = t8 * 30.370398120831439;
  t793 = eta * t436;
  t798 = t8 * 16.623892991957351;
  t805 = t9 * 10.123466040277149;
  t809 = t424 * zeta;
  t811 = t8 * 8.3777843965699752;
  t812 = t8 * 16.75556879313995;
  t813 = t9 * 33.5111375862799;
  t820 = t9 * 41.496810567031581;
  t829 = t2 * 16.719247415965221;
  t830 = t2 * 18.15186466968477;
  t831 = eta * t452;
  t832 = t437 * zeta;
  t833 = t9 * 16.26710586740629;
  t837 = t440 * zeta;
  t841 = t8 * 8.0944603180564663;
  t843 = t445 * zeta;
  t844 = t8 * 64.659763567125523;
  t853 = t8 * 16.719247415965221;
  t860_tmp = t455 * zeta_1_inv;
  t868 = t2 * 25.16380980398645;
  t878 = t465 * zeta;
  t880 = t2 * 13.2701866727988;
  t884 = t2 * 23.11733627520718;
  t890 = t9 * 9.9596766164342441;
  t891 = t8 * 41.263967504264393;
  t893 = t8 * 12.36796115221377;
  t896 = t8 * 8.4063370889414237;
  t900 = t9 * 6.5052599735496024;
  t910 = t484 * zeta;
  t914 = t2 * 55.758352468934923;
  t920 = t8 * 3.3661208855429741;
  t922 = t398_tmp * 4.6425841476568941;
  t925 = t2 * 2.9757986378594068;
  t926 = t8 * 1.1168611504253709;
  t927 = t9 * 2.233722300850741;
  t932 = t42_tmp * 6.4876224795305362;
  t937 = t8 * 11.09568648774289;
  t940 = t398_tmp * 13.34276471514049;
  t941 = t398_tmp * 26.685529430280969;
  t943 = t2 * t340;
  t944 = t3 * 5.2990643395808563;
  t945 = t2 * 4.8376995987942033;
  t946 = t2 * 1.8144292154521251;
  t948 = t42_tmp * 16.623892991957351;
  t949 = t72_tmp * 16.623892991957351;
  t951 = t8 * 1.5787007418484891;
  t952 = t3 * 3.698562162580965;
  t957 = t8 * 1.238593933530046;
  t958 = t8 * t337;
  t959 = t2 * t342;
  t961 = t2 * 1.178489644510015;
  t963 = t2 * t344;
  t964 = t8 * 2.2101736378594068;
  t968 = t8 * 12.729048803242121;
  t969 = t2 * 0.955932563850912;
  t976 = t9 * 4.12265371740459;
  t978 = t9 * 3.698562162580965;
  t982 = t2 * 6.6386034420286908;
  t983 = t8 * 1.699592411142139;
  t984 = t8 * 3.399184822284278;
  t985 = t9 * 0.41286464451001531;
  t986 = t3 * 2.212867814009563;
  t987 = t2 * 2.7425920231294731;
  t988 = t2 * 0.94448189137986227;
  t989 = t42_tmp * 8.86591443971388;
  t990 = t3 * 1.80837445759334;
  t991 = t8 * 6.2690428743370576;
  t992 = t8 * 1.198020775830267;
  t995 = t9 * 4.1586493934676421;
  t997 = t8 * 1.6492671881837551;
  t998 = t8 * 3.29853437636751;
  t999 = t9 * 6.59706875273502;
  t1004 = t2 * 3.5231725330068762;
  t1005 = t3 * 1.238878418136707;
  t1006 = t8 * 3.488990819280108;
  t1007 = t2 * 2.90615291699255;
  t1008 = t8 * 3.53823097094348;
  t1009 = t42_tmp * 16.775873202657628;
  t1010 = t72_tmp * 16.775873202657628;
  t1011 = t3 * 1.6775800815299591;
  t1013 = t8 * 2.212867814009563;
  t1014 = t9 * 4.1839678997211553;
  t1016 = t8 * 3.616748915186681;
  t1017 = t9 * 1.80837445759334;
  t1018 = t9 * 1.5442009514430119;
  t1027 = t2 * 2.728860179461551;
  t1028 = t2 * 1.256193470692148;
  t1031 = t2 * 1.318019088230626;
  t1035 = t8 * 1.6775800815299591;
  t1036 = t8 * 3.3551601630599182;
  t1037 = t9 * 1.6775800815299591;
  t1040 = t8 * 2.8421766533844131;
  t1043 = t8 * 12.55190369916347;
  t1052 = t8 * 1.245137342903875;
  t1053 = t8 * 2.49027468580775;
  t1054 = t9 * 4.9805493716155;
  t1058 = t42_tmp * 7.2665213385045284;
  t1059 = t72_tmp * 7.2665213385045284;
  t1060 = t398_tmp * 11.97056192177905;
  t1061 = t398_tmp * 23.94112384355811;
  t1062 = t398_tmp * 17.75796127520718;
  t1063 = t8 * 1.6118948882376269;
  t1065 = t2 * 0.79153846150600349;
  t1066 = t2 * 0.92048572186821009;
  t1068 = t398_tmp * 8.227776069388419;
  t1069 = t398_tmp * 6.3748591655195561;
  t1073 = t3 * 3.658899809351718;
  t1074 = t2 * 4.7976857292352246;
  t1075 = t398_tmp * 23.720422002634631;
  t1076 = t398_tmp * 47.440844005269263;
  t1079 = t2 * 1.3126359404402561;
  t1081 = t8 * 2.0449184305895232;
  t1082 = t8 * 4.0898368611790454;
  t1089 = t72_tmp * 13.634519021074039;
  t1090 = t2 * 2.8199513429629719;
  t1093 = t9 * 13.7546558347548;
  t1094 = t9 * 4.2430162677473726;
  t1099 = t9 * 4.7557726367655713;
  t1100 = t9 * 1.436656250734162;
  t1103 = t2 * t362;
  t1105 = t398_tmp * 19.036619372455529;
  t1108 = t2 * 3.1519954203869789;
  t1109 = t8 * t359;
  t1111 = t3 * t365;
  t1115 = t9 * 3.2033245064063278;
  t1116 = t618 * zeta_1_inv;
  t1117 = t2 * 1.1699184305895221;
  t1118 = t2 * 2.339836861179045;
  t1119 = t398_tmp * 11.95788306390472;
  t1120 = t398_tmp * 23.915766127809452;
  t1122 = t8 * t361;
  t1125 = t9 * 2.089680958112353;
  t1126 = t2 * 4.7486854941861676;
  t1127 = t2 * 4.596067107460887;
  t1128 = t2 * 9.192134214921774;
  t1129 = t622 * zeta_1_inv;
  t1132 = t2 * 10.514560122605159;
  t1133 = t3 * 2.5048784293841009;
  t1139 = t2 * 8.3119464959786757;
  t1140 = t3 * 8.3119464959786757;
  t1142 = t398_tmp * 10.97669942805515;
  t1144 = t2 * 2.5973108719490581;
  t1145 = t9 * 7.342332415498702;
  t1147 = t8 * 2.477721009125105;
  t1152 = t42_tmp * 3.8931885268992619;
  t1154 = t3 * 0.865770290649686;
  t1159 = t8 * 4.3099687522024857;
  t1160 = t9 * 1.8900765395794159;
  t1161 = t8 * 9.6099735192189844;
  t1164 = t9 * 8.3119464959786757;
  t1165 = t2 * 3.0514567104471388;
  t1167 = t8 * 2.7468699001766739;
  t1173 = t8 * 3.8176687637760178;
  t1174 = t3 * 1.612566532931401;
  t1186 = t2 * 5.71996761568837;
  t1187 = t2 * 1.556963330936038;
  t1188 = t2 * 3.113926661872076;
  t1189 = t2 * 8.3596237079826121;
  t1191 = t2 * 9.075932334842383;
  t1193 = t8 * 1.6518140060834039;
  t1196 = t9 * 3.0514567104471388;
  t1201 = t2 * 8.3879366013288159;
  t1202 = t3 * 8.3879366013288159;
  t1203 = t8 * 9.9493602403536183;
  t1208 = t2 * 5.0853524663708258;
  t1209 = t2 * 10.17070493274165;
  t1211 = t72_tmp * 10.9154407178462;
  t1214 = t398_tmp * 24.935839487936029;
  t1216 = t99_tmp * 15.89719301874257;
  t1217 = t2 * 5.0327402445898768;
  t1219 = t8 * 0.1812044001109345;
  t1220 = t8 * 3.1967605039017282;
  t1224 = t8 * 8.3596237079826121;
  t1225 = t8 * 9.1543701313414179;
  t1234 = t8 * 1.11807692461714;
  t1237 = t8 * 1.310374871123974;
  t1238 = t42_tmp * 20.900470659671662;
  t1242 = t42_tmp * 8.5336647605962064;
  t1246 = t8 * 5.0327402445898768;
  t1249 = t8 * 1.1225522279138991;
  t1250 = t8 * 2.2451044558277968;
  t1252 = t8 * 1.576125785948022;
  t1253 = t8 * 5.6702296187382482;
  t1257 = t2 * 1.0204368243738029;
  t1260 = t2 * 1.749989308814863;
  t1261 = t8 * 1.626314993387401;
  t1262 = t8 * 3.2526299867748012;
  t1264 = t8 * 1.1617629228822119;
  t1268 = t8 * 2.6712369841010308;
  t1269 = t8 * 1.469351528807207;
  t1270 = t9 * 2.938703057614414;
  t1271 = t2 * 5.1792405621681548;
  t1272 = t2 * 10.35848112433631;
  t1273 = t2 * 6.8172595105370224;
  t1275 = t398_tmp * 1.6320388477862311;
  t1276 = t9 * 0.31963576319818221;
  t1277 = t42_tmp * 7.1601973346694994;
  t1278 = t42_tmp * 4.90615611034637;
  t1279 = t398_tmp * 2.1249530551731848;
  t1280 = t72_tmp * 2.1249530551731848;
  t1281 = t72_tmp * 4.24990611034637;
  t1282 = t2 * 0.31979510030879088;
  t1286 = t398_tmp * 2.321292073828447;
  t1287 = t3 * 0.62018817562619721;
  t1289 = t8 * 0.55843057521268535;
  t1292 = t2 * t435;
  t1295 = t42_tmp * 1.90796033433452;
  t1296 = t398_tmp * 6.4020363709105181;
  t1297 = t398_tmp * 12.80407274182104;
  t1303 = t2 * 0.139083732477686;
  t1304_tmp = t2 * zeta;
  t1304 = t1304_tmp * -3.7430792544479812;
  t1309 = t2 * t444;
  t1317 = t42_tmp * 1.088025898524154;
  t1318 = t398_tmp * 0.54401294926207688;
  t1319 = t72_tmp * 0.54401294926207688;
  t1320 = t72_tmp * 1.088025898524154;
  t1324 = t398_tmp * 1.64273974558988;
  t1328 = t42_tmp * -4.4541467840671274;
  t1329 = t398_tmp * -4.4541467840671274;
  t1330 = t2 * 0.63460205269489356;
  t1332 = t3 * t450;
  t1336 = t42_tmp * 4.1295528340973346;
  t1337 = t3 * t452;
  t1340 = t72_tmp * 4.5465450960507683;
  t1341 = t72_tmp * 9.0930901921015366;
  t1343 = t2 * t463;
  t1355 = t42_tmp * 1.284441532931401;
  t1356 = t3 * t470;
  t1358 = t1180 * zeta_1_inv;
  t1359 = t42_tmp * 7.2218764275928864;
  t1364 = t2 * t473;
  t1367 = t78_tmp * 5.4251233727800212;
  t1370 = t2 * t477;
  t1371_tmp = eta * t8;
  t1371 = t1371_tmp * -16.719247415965221;
  t1372 = t1304_tmp * -16.719247415965221;
  t1377 = t398_tmp * 5.1349457921213064;
  t1379 = t2 * t480;
  t1382 = t2 * t481;
  t1384 = t3 * t481;
  t1387 = t42_tmp * 0.71534469226336528;
  t1388 = t2 * t486;
  t1400 = t398_tmp * 1.777224865209172;
  t1401 = t398_tmp * 3.554449730418344;
  t1403 = t398_tmp * 2.6833966817763848;
  t1404 = t398_tmp * 5.36679336355277;
  t1410 = t1371_tmp * -8.4063370889414237;
  t1414 = t398_tmp * 2.7614571656046309;
  t1425 = t398_tmp * 3.6332606692522642;
  t1427 = t72_tmp * 3.6332606692522642;
  t1436 = t2 * t505;
  t1442 = t8 * 0.4153516732792662;
  t1443 = t8 * 0.8307033465585324;
  t1444 = t2 * t507;
  t1447 = t2 * t511;
  t1448 = t2 * 0.32021672178197591;
  t1449 = t9 * 0.53729829607920909;
  t1455 = t72_tmp * 6.8172595105370224;
  t1458 = t398_tmp * 3.8533245987942042;
  t1463 = t398_tmp * 3.1641538050266669;
  t1464 = t398_tmp * 6.3283076100533338;
  t1467 = t398_tmp * 9.5183096862277647;
  t1468 = t9 * 0.387254307627404;
  t1470 = t1371_tmp * -18.58611748964497;
  t1472 = t72_tmp * -18.58611748964497;
  t1479 = t1371_tmp * -7.705778758402392;
  t1485 = t954 * zeta_1_inv;
  t1486 = t8 * 0.95890728959454663;
  t1489 = t2 * t543;
  t1490 = t2 * t544;
  t1497 = t42_tmp * 2.252866701680694;
  t1505 = t42_tmp * 1.756759938167038;
  t1506 = t8 * t545;
  t1507 = t2 * t566;
  t1509 = t72_tmp * 2.7425920231294731;
  t1510 = t72_tmp * 5.4851840462589454;
  t1511 = t2 * t567;
  t1512 = t3 * 0.82590700304170184;
  t1518 = t42_tmp * 3.616748915186681;
  t1522 = t398_tmp * 0.39678103259631242;
  t1523 = t42_tmp * 1.3899541608820929;
  t1525 = t2 * t573;
  t1528 = t42_tmp * 2.477756836273413;
  t1532 = t2 * t576;
  t1533 = t8 * t563;
  t1538 = t3 * t583;
  t1541 = t3 * 0.333942795157085;
  t1544 = t9 * 0.82590700304170184;
  t1554 = t1371_tmp * -6.1530504965406791;
  t1555 = t8 * 0.32292951485806931;
  t1563 = t78_tmp * -15.89719301874257;
  t1566 = t42_tmp * 1.458644088230626;
  t1567 = t2 * t379;
  t1569 = t8 * 0.090602200055467264;
  t1573 = t2 * t385;
  t1576 = t398_tmp * 1.0018283854712551;
  t1578 = t42_tmp * 1.711648597373769;
  t1579 = t3 * t388;
  t1581 = t42_tmp * 1.064175044610594;
  t1582 = t2 * 0.06941263584527918;
  t1583 = t398_tmp * 10.899782007756791;
  t1586 = t2 * t393;
  t1588 = t72_tmp * 0.92048572186821009;
  t1589 = t72_tmp * 1.84097144373642;
  t1592 = t398_tmp * 12.388658502292;
  t1598 = t42_tmp * 7.3177996187034351;
  t1599 = t398_tmp * 3.658899809351718;
  t1601 = t72_tmp * 7.3177996187034351;
  t1605 = t398_tmp * 3.2982983996730422;
  t1606 = t398_tmp * 6.5965967993460826;
  t1608 = t2 * t402;
  t1611 = t398_tmp * 13.6396352881523;
  t1613 = t8 * 0.1505263667989129;
  t1614 = t8 * 0.30105273359782592;
  t1615 = t9 * 0.60210546719565172;
  t1620 = t72_tmp * 1.095159830393253;
  t1626 = t8 * 0.32528632207759522;
  t1627 = t8 * 0.65057264415519034;
  t1628 = t3 * 0.75387420847659026;
  t1629 = t42_tmp * 5.919320425069059;
  t1630 = t3 * t419;
  t1631 = t8 * 0.73467576440360338;
  t1636 = t8 * 0.53324068038904426;
  t1637 = t3 * 0.1067389072606586;
  t1639 = t2 * 0.71304982059857813;
  t1655 = t1304_tmp * -8.3119464959786757;
  t1665 = t2 * 0.09858107243741733;
  t1667 = t3 * 0.034724949502450662;
  t1669 = t72_tmp * -0.865770290649686;
  t1671 = t72_tmp * -4.1295528340973346;
  t1675 = t1304_tmp * -3.0514567104471388;
  t1677 = t127_tmp * 10.9154407178462;
  t1678 = t1371_tmp * -9.9493602403536183;
  t1679 = t78_tmp * 24.935839487936029;
  t1681 = t72_tmp * -1.284441532931401;
  t1685 = t42_tmp * -3.37825124436212;
  t1687 = t1304_tmp * -5.71996761568837;
  t1692 = t72_tmp * 0.66788559031416994;
  t1695 = t78_tmp * 9.7314337192958043;
  t1697 = t78_tmp * 20.900470659671662;
  t1698 = t80_tmp * 20.900470659671662;
  t1699 = t1304_tmp * -8.3879366013288159;
  t1702 = t72_tmp * -8.3879366013288159;
  t1703 = t78_tmp * 8.5336647605962064;
  t1704 = t80_tmp * 8.5336647605962064;
  t1707 = t398_tmp * -0.71534469226336528;
  t1711 = t1371_tmp * -2.2451044558277968;
  t1712 = t1304_tmp * -2.2451044558277968;
  t1713 = t78_tmp * 11.64886923743517;
  t1714 = t80_tmp * 9.3519942374351679;
  t1715 = t99_tmp * 11.64886923743517;
  t1716 = t127_tmp * 9.3519942374351679;
  t1725 = t2 * t775;
  t1730 = t1304_tmp * -1.0204368243738029;
  t1731 = t78_tmp * 3.2438112397652681;
  t1732 = t80_tmp * 6.4876224795305362;
  t1733 = t99_tmp * 3.2438112397652681;
  t1734 = t99_tmp * 6.4876224795305362;
  t1735 = t127_tmp * 6.4876224795305362;
  t1737 = t1304_tmp * -1.749989308814863;
  t1739 = t99_tmp * 3.2597568587682031;
  t1740 = t127_tmp * 3.2597568587682031;
  t1743 = t78_tmp * 13.34276471514049;
  t1745 = t99_tmp * 3.8829564124783889;
  t1746 = t127_tmp * 3.1173314124783889;
  t1747 = t127_tmp * 7.7659128249567786;
  t1749 = t80_tmp * 16.623892991957351;
  t1750 = t99_tmp * 16.623892991957351;
  t1751 = t127_tmp * 16.623892991957351;
  t1752 = t8 * 0.1103845967566652;
  t1753 = t3 * 0.03286035747913911;
  t1758 = t3 * t815;
  t1760 = t2 * t816;
  t1761 = t42_tmp * 0.56442921545212477;
  t1771 = t78_tmp * 8.86591443971388;
  t1772 = t80_tmp * 8.86591443971388;
  t1776 = t1304_tmp * -1.178489644510015;
  t1778 = t2 * t852;
  t1779 = t1304_tmp * -0.955932563850912;
  t1781 = t1371_tmp * -3.29853437636751;
  t1782 = t1304_tmp * -3.29853437636751;
  t1783 = t80_tmp * 16.775873202657628;
  t1784 = t99_tmp * 16.775873202657628;
  t1785 = t127_tmp * 16.775873202657628;
  t1787 = t1371_tmp * -2.212867814009563;
  t1788 = t1304_tmp * -2.7425920231294731;
  t1800 = t398_tmp * -3.5231725330068762;
  t1803 = t42_tmp * 0.26452068839754161;
  t1804 = t398_tmp * 0.13226034419877081;
  t1805 = t72_tmp * 0.13226034419877081;
  t1806 = t72_tmp * 0.26452068839754161;
  t1809 = t99_tmp * 25.16380980398645;
  t1810 = t127_tmp * 25.16380980398645;
  t1813 = t398_tmp * -2.90615291699255;
  t1814 = t2 * 0.050280307736634743;
  t1816 = t1371_tmp * -1.6775800815299591;
  t1820 = t72_tmp * -1.6775800815299591;
  t1822 = t1371_tmp * -2.8421766533844131;
  t1823 = t80_tmp * 7.2665213385045284;
  t1824 = t99_tmp * 7.2665213385045284;
  t1825 = t127_tmp * 7.2665213385045284;
  t1826 = t78_tmp * 11.97056192177905;
  t1828 = t80_tmp * 17.75796127520718;
  t1829 = t99_tmp * 23.11733627520718;
  t1830 = t127_tmp * 17.75796127520718;
  t1833 = t1371_tmp * -2.49027468580775;
  t1834 = t1304_tmp * -2.49027468580775;
  t1835 = t78_tmp * 7.3592341655195561;
  t1838 = t78_tmp * 23.720422002634631;
  t1841 = t1304_tmp * -1.256193470692148;
  t1844 = t398_tmp * -1.458644088230626;
  t1846 = t2 * t612;
  t1851 = t72_tmp * -1.711648597373769;
  t1855 = t99_tmp * 55.758352468934923;
  t1856 = t127_tmp * 55.758352468934923;
  t1859 = t1304_tmp * -0.79153846150600349;
  t1860 = t1304_tmp * -0.92048572186821009;
  t1871 = t1304_tmp * -4.7976857292352246;
  t1874 = t127_tmp * 37.172234979289939;
  t1878 = t398_tmp * -1.3126359404402561;
  t1881 = t78_tmp * 11.95788306390472;
  t1882 = t3 * 0.07454972059684796;
  t1886 = t127_tmp * 15.41155751680478;
  t1889 = t398_tmp * 0.54757991519662663;
  t1891 = t72_tmp * 0.54757991519662663;
  t1892 = t78_tmp * 11.23547025427608;
  t1893 = t80_tmp * 11.23547025427608;
  t1894 = t99_tmp * 11.23547025427608;
  t1895 = t127_tmp * 11.23547025427608;
  t1897 = t1304_tmp * -2.8199513429629719;
  t1900 = t72_tmp * -5.919320425069059;
  t1902 = t78_tmp * 10.97669942805515;
  t1906 = t1304_tmp * -3.1519954203869789;
  t1907 = t78_tmp * 3.8931885268992619;
  t1908 = t80_tmp * 3.8931885268992619;
  t1909 = t78_tmp * 0.878379969083519;
  t1910 = t78_tmp * 1.756759938167038;
  t1911 = t80_tmp * 1.756759938167038;
  t1913 = t99_tmp * 2.7425920231294731;
  t1915 = t78_tmp * 1.80837445759334;
  t1916 = t80_tmp * 3.616748915186681;
  t1918 = t99_tmp * 3.616748915186681;
  t1919 = t127_tmp * 3.616748915186681;
  t1920 = t78_tmp * 0.39678103259631242;
  t1921 = t78_tmp * 0.69497708044104645;
  t1922 = t78_tmp * 1.3899541608820929;
  t1923 = t80_tmp * 1.3899541608820929;
  t1925 = t78_tmp * 1.238878418136707;
  t1926 = t80_tmp * 2.477756836273413;
  t1928 = t99_tmp * 2.477756836273413;
  t1929 = t127_tmp * 2.477756836273413;
  t1938 = t127_tmp * 2.728860179461551;
  t1942 = t78_tmp * 1.458644088230626;
  t1945 = t78_tmp * 1.0018283854712551;
  t1946 = t99_tmp * 1.711648597373769;
  t1947 = t78_tmp * 0.53208752230529677;
  t1948 = t78_tmp * 1.064175044610594;
  t1949 = t80_tmp * 1.064175044610594;
  t1950 = t78_tmp * 10.899782007756791;
  t1951 = t78_tmp * 0.521849121949439;
  t1952 = t80_tmp * 0.521849121949439;
  t1953 = t99_tmp * 0.521849121949439;
  t1954 = t127_tmp * 0.521849121949439;
  t1957 = t99_tmp * 0.92048572186821009;
  t1960 = t78_tmp * 10.450235329835831;
  t1961 = t80_tmp * 12.388658502292;
  t1962 = t127_tmp * 12.388658502292;
  t1965 = t78_tmp * 4.2668323802981032;
  t1966 = t78_tmp * 3.658899809351718;
  t1967 = t80_tmp * 7.3177996187034351;
  t1969 = t99_tmp * 7.3177996187034351;
  t1970 = t127_tmp * 7.3177996187034351;
  t1971 = t78_tmp * 3.2982983996730422;
  t1973 = t78_tmp * 4.889635288152304;
  t1981 = t1304_tmp * -0.06941263584527918;
  t1982 = t99_tmp * 5.919320425069059;
  t1983 = t127_tmp * 5.919320425069059;
  t1984 = t99_tmp * 3.74515675142536;
  t1985 = t127_tmp * 3.74515675142536;
  t1986 = t127_tmp * 7.49031350285072;
  t1987 = t78_tmp * 7.0859327546565343;
  t1988 = t78_tmp * 1.6320388477862311;
  t1989 = t78_tmp * 3.58009866733475;
  t1990 = t78_tmp * 7.1601973346694994;
  t1991 = t80_tmp * 7.1601973346694994;
  t1993 = t78_tmp * 2.1249530551731848;
  t1994 = t78_tmp * 2.4530780551731848;
  t1995 = t80_tmp * 4.90615611034637;
  t1996 = t99_tmp * 2.1249530551731848;
  t1997 = t99_tmp * 2.4530780551731848;
  t1998 = t99_tmp * 4.90615611034637;
  t1999 = t127_tmp * 4.90615611034637;
  t2001 = t78_tmp * 2.321292073828447;
  t2007 = t78_tmp * 1.90796033433452;
  t2008 = t80_tmp * 1.90796033433452;
  t2009 = t78_tmp * 6.4020363709105181;
  t2012 = t99_tmp * 1.6298784293841011;
  t2023 = t78_tmp * 0.54401294926207688;
  t2024 = t80_tmp * 1.088025898524154;
  t2025 = t99_tmp * 0.54401294926207688;
  t2026 = t99_tmp * 1.088025898524154;
  t2027 = t127_tmp * 1.088025898524154;
  t2030 = t72_tmp * -0.1067389072606586;
  t2031 = t78_tmp * -4.4541467840671274;
  t2032 = t80_tmp * 8.1865805383846517;
  t2038 = t1304_tmp * -0.31979510030879088;
  t2039 = t99_tmp * 4.1295528340973346;
  t2040 = t127_tmp * 4.1295528340973346;
  t2044 = t99_tmp * 2.361977584885512;
  t2045 = t99_tmp * 4.7239551697710231;
  t2046 = t127_tmp * 4.7239551697710231;
  t2048 = t99_tmp * 4.5465450960507683;
  t2049 = t1304_tmp * -0.139083732477686;
  t2050 = t99_tmp * 1.284441532931401;
  t2051 = t78_tmp * 4.43295721985694;
  t2054 = t78_tmp * 3.6109382137964432;
  t2055 = t78_tmp * 7.2218764275928864;
  t2056 = t80_tmp * 7.2218764275928864;
  t2066 = t78_tmp * 0.71534469226336528;
  t2067 = t99_tmp * 0.40254909249896759;
  t2068 = t127_tmp * 0.40254909249896759;
  t2069 = t127_tmp * 0.80509818499793528;
  t2071 = t78_tmp * 1.777224865209172;
  t2072 = t78_tmp * 2.6833966817763848;
  t2078 = t78_tmp * -25.16380980398645;
  t2079 = t80_tmp * -25.16380980398645;
  t2084 = t78_tmp * 3.6332606692522642;
  t2087 = t99_tmp * 3.6332606692522642;
  t2096 = t78_tmp * 3.71663525441012;
  t2099 = t99_tmp * 6.8172595105370224;
  t2106 = t78_tmp * 3.1641538050266669;
  t2108 = t78_tmp * 9.5183096862277647;
  t2114 = t99_tmp * -7.705778758402392;
  t2117 = t127_tmp * 10.598128679161711;
  t2122 = t3 * t980;
  t2130 = t78_tmp * 1.2076472774969029;
  t2131 = t80_tmp * 1.2076472774969029;
  t2132 = t99_tmp * 1.2076472774969029;
  t2133 = t127_tmp * 1.2076472774969029;
  t2135 = t78_tmp * 1.126433350840347;
  t2136 = t78_tmp * 2.252866701680694;
  t2137 = t80_tmp * 2.252866701680694;
  t2139 = t78_tmp * 1.9465942634496309;
  t2152 = t78_tmp * -3.5231725330068762;
  t2158 = t78_tmp * 0.13226034419877081;
  t2159 = t80_tmp * 0.26452068839754161;
  t2160 = t99_tmp * 0.13226034419877081;
  t2161 = t99_tmp * 0.26452068839754161;
  t2162 = t127_tmp * 0.26452068839754161;
  t2165_tmp = t2 * t8;
  t2165 = t2165_tmp * -1.245137342903875;
  t2180 = t78_tmp * -0.92048572186821009;
  t2194 = t78_tmp * 0.54757991519662663;
  t2195 = t99_tmp * 0.54757991519662663;
  t2215 = t78_tmp * 0.95398016716725975;
  t2236 = t2165_tmp * -8.3596237079826121;
  t2237 = t78_tmp * 0.333942795157085;
  t2240 = t99_tmp * 0.66788559031416994;
  t2241 = t127_tmp * 0.66788559031416994;
  t2243 = t99_tmp * -8.3879366013288159;
  t2244 = t127_tmp * -8.3879366013288159;
  t2249 = t2165_tmp * -1.1225522279138991;
  t2264 = t99_tmp * 0.17394970731647971;
  t2265 = t127_tmp * 0.17394970731647971;
  t2266 = t127_tmp * 0.34789941463295931;
  t2267 = t99_tmp * -5.2990643395808563;
  t2270 = t72_tmp * -0.03286035747913911;
  t2277 = t2165_tmp * -1.6492671881837551;
  t38 = t4 * 0.875;
  t53 = t4 * 2.0416666666666665;
  t87 = t4 * t47;
  t89 = t4 * t48;
  t101_tmp = t4 * t11;
  t101 = t101_tmp * 5.833333333333333;
  t102_tmp = t4 * t12;
  t102 = t102_tmp * 5.833333333333333;
  t105_tmp = t4 * t13;
  t105 = t105_tmp * 8.1666666666666661;
  t106_tmp = t4 * std::pow(zeta_1_inv, 5.0);
  t106 = t106_tmp * 8.1666666666666661;
  t110_tmp = t4 * zeta_1_inv;
  t110 = t110_tmp * -0.328125;
  t112 = t110_tmp * -0.765625;
  t123 = t101_tmp * 2.9166666666666665;
  t125 = t101_tmp * 0.65625;
  t126 = t102_tmp * 0.65625;
  t129_tmp = t3 * t13;
  t129 = t129_tmp * 6.125;
  t136 = t129_tmp * 3.0625;
  t137 = t105_tmp * 3.0625;
  t138 = t106_tmp * 3.0625;
  t143 = t101_tmp * 1.53125;
  t144 = t102_tmp * 1.53125;
  t147 = eta * 0.50121921663579494;
  t161 = t101_tmp * 0.328125;
  t164 = t101_tmp * 0.765625;
  t165 = t102_tmp * 0.765625;
  t166 = t105_tmp * 0.765625;
  t170 = t101_tmp * 13.611111111111111;
  t171 = t102_tmp * 13.611111111111111;
  t173 = t101_tmp * 6.8055555555555554;
  t176 = t129_tmp * 19.055555555555557;
  t177 = t105_tmp * 19.055555555555557;
  t178 = t106_tmp * 19.055555555555557;
  t185 = t129_tmp * 7.145833333333333;
  t186 = t105_tmp * 7.145833333333333;
  t187 = t106_tmp * 7.145833333333333;
  t198 = t129_tmp * 2.296875;
  t199 = t102_tmp * 2.296875;
  t200 = t105_tmp * 2.296875;
  t211 = t129_tmp * 5.359375;
  t212 = t102_tmp * 5.359375;
  t213 = t105_tmp * 5.359375;
  t216 = t105_tmp * 4.7638888888888893;
  t222 = t101_tmp * 1.7864583333333333;
  t223 = t102_tmp * 1.7864583333333333;
  t224 = t105_tmp * 1.7864583333333333;
  t226 = t2 * 0.50121921663579494;
  t247 = t101_tmp * 8.3368055555555554;
  t248 = t102_tmp * 8.3368055555555554;
  t258 = t101_tmp * 4.1684027777777777;
  t262 = eta * 4.4552819256515113;
  t271 = t129_tmp * 4.58257569495584 * 0.765625;
  t291 = t4 * t266;
  t294_tmp = t4 * 1.7320508075688772 * 2.6457513110645907 * zeta_1_inv;
  t294 = t294_tmp * -0.25520833333333331;
  t297 =
      t129_tmp * 1.7320508075688772 * 2.6457513110645907 * 2.0416666666666665;
  t305_tmp = t101_tmp * 1.7320508075688772 * 2.6457513110645907;
  t306_tmp = t102_tmp * 1.7320508075688772 * 2.6457513110645907;
  t308 = t305_tmp * 0.25520833333333331;
  t309 = t306_tmp * 0.25520833333333331;
  t314_tmp = t129_tmp * 8.1666666666666661;
  t814 = t10 * 8.3777843965699752;
  t1000 = t10 * 1.6492671881837551;
  t1032 = eta * t896;
  t1042 = t868 * zeta_1_inv;
  t1055 = t10 * 1.245137342903875;
  t1091 = t914 * zeta_1_inv;
  t1102 = eta * t633;
  t1179 = t10 * 10.3742026417579;
  t1195 = t10 * 4.0667764668515733;
  t1207 = eta * t713;
  t1215 = t11 * t371;
  t1256 = t10 * 2.489919154108561;
  t1263 = t10 * 1.626314993387401;
  t1291 = t10 * 0.55843057521268535;
  t1313 = t1139 * zeta_1_inv;
  t1349 = eta * t1203;
  t1363 = eta * t1219;
  t1446 = eta * t926;
  t1488 = eta * t984;
  t1508 = t987 * zeta_1_inv;
  t1539 = eta * t1040;
  t1558 = t4 * t373;
  t1572 = eta * t1082;
  t1600 = t1073 * zeta_1_inv;
  t1616 = t10 * 0.1505263667989129;
  t1633 = t10 * 0.73467576440360338;
  t1717 = t129_tmp * 9.3519942374351679;
  t1724 = eta * t1627;
  t1756 = t8 * t782;
  t1807 = t11 * t868;
  t1808 = t12 * t868;
  t1811 = t129_tmp * 25.16380980398645;
  t1821 = t8 * t880;
  t1831 = t129_tmp * 17.75796127520718;
  t1840 = t110_tmp * -2.728860179461551;
  t1845 = eta * t1443;
  t1857 = t129_tmp * 55.758352468934923;
  t1872 = t11 * t615;
  t1896 = t129_tmp * 11.23547025427608;
  t1912 = t11 * t987;
  t1932 = t11 * t1011;
  t1939 = t101_tmp * 2.728860179461551;
  t1940 = t102_tmp * 2.728860179461551;
  t1943 = t2 * t1081;
  t1963 = t129_tmp * 12.388658502292;
  t1968 = t11 * t1073;
  t2017 = t11 * t1139;
  t2020 = t11 * t1140;
  t2033 = t129_tmp * 8.1865805383846517;
  t2034 = t102_tmp * 8.1865805383846517;
  t2035 = t105_tmp * 8.1865805383846517;
  t2060 = t11 * t1201;
  t2063 = t11 * t1202;
  t2065 = t12 * t1202;
  t2107 = t2 * t964;
  t2128 = t2 * t983;
  t2134 = t129_tmp * 1.2076472774969029;
  t2170 = t2 * t1442;
  t2235 = t2 * t1569;
  t2239 = t11 * t1541;
  t2254 = t2 * t1626;
  t2258 = t2 * t1289;
  t2285 = t11 * t1753;
  t2375 =
      -xi *
      ((((zeta * 5.6399026859259447 + t564) - t8 * 26.5403733455976) + t1076) +
       t1697);
  t2414_tmp = t337 + t23_tmp * 23.915766127809452;
  t2484 = -xi * (((((((t332 + t783) - t525) - t812) + t949) + t1120) + t1750) +
                 t1990);
  t2499_tmp = t401 + t782;
  t2580_tmp = t391_tmp * 6.1029134208942786 + t559;
  t2580 = -xi *
          ((((((((t2580_tmp - t568) + t695) - t829) + t998) - t1061) + t1601) +
            t1969) -
           t2055);
  t2581 =
      -xi *
      (((((((((t519 + t549) + t556) + t689) + t830) + t941) - t984) + t1059) +
        t1703) +
       t1824);
  t288_tmp = (t384 + t614) + t762;
  t2614 = -xi *
          (((((((t288_tmp + t836) - t1188) - t1404) - t1627) + t1806) - t2136) +
           t2161);
  t2624_tmp = (t383 + t495 * zeta) + t383 * zeta_1_inv;
  t97 = t11 * t38;
  t141 = t13 * t53;
  t272 = 4.58257569495584 * t165;
  t273 = 4.58257569495584 * t166;
  t1136 = -t6 * ((-(t78_tmp * 27.222222222222221) + t177) + 8.1666666666666661);
  t2316 = -t6 * (((t41 - t133) + t186) - t184);
  t2351_tmp = t42_tmp * 8.3368055555555554 - t129_tmp * 16.673611111111111;
  t2353_tmp = t78_tmp * 16.673611111111111 - t105_tmp * 16.673611111111111;
  t2359_tmp = t326 + t23_tmp * 47.440844005269263;
  t2360_tmp = t78_tmp * 4.1684027777777777 - t105_tmp * 4.1684027777777777;
  t2362_tmp = t106_tmp * 16.673611111111111 - t80_tmp * 8.3368055555555554;
  t2378 =
      (((((t2 * 4.4552819256515113 + -1.3365845776954535) + t4 * t265) + t363) +
        t978) -
       t773) +
      t1304_tmp * -6.8172595105370224;
  t2395_tmp = -t366 + t671;
  t2395 = (((t2395_tmp + t1132) + t2 * t438) - t1093) + t2 * t397;
  t2424 = ((((((t4 * t30 + t418) + t946) + t1276) - t951) + t2 * t819) +
           t1304_tmp * -1.1946357631981821) -
          0.375;
  t2461 = ((((((t407 + t444) + t615) + t1111) - t798) + t1164) + t1470) + t1655;
  t2462 = ((((((t407 + t615) - t444) + t798) + t1111) + t1309) + t1470) - t1164;
  t2473 =
      ((((((t581 + t700) + t1037) + t1202) + t1384) - t1036) + t1699) + t1816;
  t2474 =
      ((((((t700 - t581) + t1036) + t1202) + t1379) + t1384) - t1037) + t1816;
  t2483 = -xi * (((((((t332 + t525) + t783) - t812) + t1120) - t949) + t1990) -
                 t1750);
  t2510_tmp = -(t99_tmp * 7.145833333333333) + t356;
  t2530 =
      (((((((((t188 + t226) + t291) + t878) + t944) - t712) + t1193) + t1337) +
        t1507) +
       t1787) -
      t1544;
  t2573 =
      (((((((((-t339 + t23_tmp * -8.9082935681342548) - t554) + t1105) - t766) +
           t1209) +
          t1219) +
         t1320) +
        t1771) +
       t2026) *
      xi;
  t2576 = ((((((((t700 + t1007) + t1011) - t725) + t1220) + t1343) + t1532) +
            t1538) -
           t1196) +
          t1816;
  t2589 = (((((((t288_tmp + t1188) - t836) + t1404) + t1627) + t1806) + t2136) +
           t2161) *
          xi;
  t2591_tmp = t3 * zeta;
  t2592_tmp = (-t567 + t1000) + t1008;
  b_t2592_tmp = eta * t9;
  t2611 = (((((((((-t65 + t569) + t620) + t832) + t1017) - t1016) - t1027) +
             t1479) +
            t1586) +
           t1630) +
          t1840;
  t2612 = (((((((((-t65 + t620) + t832) - t569) + t1016) + t1027) - t1017) +
             t1479) +
            t1558) +
           t1630) +
          t1860;
  t2618_tmp = -(zeta * 0.26035626137853157) + t10 * 1.039662348366911;
  t2622_tmp = -t18 + t23_tmp * -1.3333333333333333;
  t2622 = (((((((((t2622_tmp + t472) + t786) + t837) + t963) + t976) - t920) +
             t1370) +
            t1637) +
           t1678) +
          t1758;
  t2623_tmp = t18 + t18 * zeta_1_inv;
  t2623 = (((((((((t2623_tmp + t472) + t786) + t963) + t976) + t1199) - t920) +
             t1349) +
            t1370) -
           t1637) +
          t2030;
  t288_tmp = -(t101_tmp * 3.5729166666666665) + t601;
  t2635 =
      -xi * (((((((((t288_tmp + t699) + t822) - t926) - t661) - t883) + t1464) +
               t1620) +
              t2007) -
             t1928);
  t2636 =
      -xi * (((((((((t288_tmp + t661) + t822) + t883) - t926) - t699) + t1464) -
               t1620) +
              t1928) +
             t2007);
  t2642_tmp = t23_tmp * -0.25 - t46;
  t2642 =
      ((((((((((t2642_tmp + t110) + t634) + t707) + t1031) + t1174) + t1356) +
          t1436) +
         t1449) +
        t1567) +
       t1822) -
      t1636;
  t2643_tmp = eta * t19 + t46;
  t2643 =
      ((((((((((t2643_tmp + t110) + t634) + t1031) + t1057) + t1436) + t1449) -
          t1174) +
         t1539) +
        t1567) +
       t1681) -
      t1636;
  t2644 =
      ((((((((((t112 + t188) + t415) + t878) + t986) - t985) + t1388) + t1490) +
         t1579) +
        t1752) +
       t1787) -
      t1814;
  t2646 =
      ((((((((((t89 + t188) - t415) + t878) + t985) + t986) + t1579) + t1707) +
         t1776) +
        t1787) +
       t1814) -
      t1752;
  t2650 = ((((((((((t455 - t447) + t731) + t841) + t860_tmp) + t1032) + t1079) -
              t805) +
             t1444) +
            t1608) -
           t1753) +
          t2270;
  t2651 = ((((((((((t622 + t839) + t943) + t1004) + t1018) + t1129) + t1207) +
              t1266) -
             t1154) +
            t1525) -
           t1234) +
          t1669;
  t2652 = ((((((((((t839 + t910) + t943) - t622) + t1004) + t1018) + t1154) +
              t1332) +
             t1484) +
            t1525) +
           t1554) -
          t1234;
  t2340_tmp = t187 - t80_tmp * 3.5729166666666665;
  t2385 =
      ((((((t101_tmp * 9.5277777777777786 - zeta * 6.3039908407739587) + t922) +
          t1443) -
         t1272) +
        t1922) +
       4.083333333333333) *
      xi;
  t2440_tmp = -(t99_tmp * 16.673611111111111) + eta * 10.8270802413633;
  t2475 =
      (((((((t436 + t829) - t561) + t1010) + t1061) - t853) + t1784) + t2055) *
      xi;
  t2477 =
      (((((((t436 + t561) + t829) + t1061) - t853) - t1010) + t2055) - t1784) *
      xi;
  t2531 =
      (((((((((t147 + t226) + t291) - t712) + t1193) + t1244) - t944) + t1506) +
        t1507) +
       t1671) -
      t1544;
  t2563 = ((((((((t2580_tmp + t568) + t695) + t829) + t1061) - t998) + t1601) +
            t1969) +
           t2055) *
          xi;
  t2564_tmp = t519 + t556;
  t2564 = ((((((((t2564_tmp + t689) - t549) + t984) + t1059) - t830) - t941) +
            t1824) -
           t1703) *
          xi;
  t2569 = (((((((((t339 + t532) + t554) + t1105) - t766) + t1209) + t1219) -
             t1320) +
            t1771) -
           t2026) *
          xi;
  t2570_tmp = t401 + t9 * 21.55325452237517;
  t2595_tmp = zeta * 1.413779534022277 + t9 * 18.78393357317595;
  t2609_tmp = t821 + t1100;
  t2315 = t6 * (((t41 + t133) - t184) - t186);
  t2331_tmp = t42_tmp * 3.5729166666666665 - t185;
  t2337_tmp = t78_tmp * 7.145833333333333 - t186;
  t288_tmp = t78_tmp * 1.7864583333333333 - t224;
  t2520_tmp = -(t102_tmp * 3.5729166666666665) + t511;
  sfvals_tmp =
      (-t7 * (((t56 + t160) - t166) - t163) +
       ((((((((t2618_tmp + t602 * zeta) + t1237) - t1125) + t1778) +
           eta * t1449) +
          t1371_tmp * -0.53324068038904426) +
         t2591_tmp * -0.62018817562619721) +
        t2249)) +
      t5 * ((((((((((-t161 + t577) + t605) + t729) + t852) + t1127) + t1280) +
               t1296) -
              t1249) +
             t1997) +
            t2139);
  b_sfvals_tmp = t2643 * xi;
  c_sfvals_tmp =
      t6 *
      (((((((t165 - t449) - t824) + t23_tmp * -1.284441532931401) + t1279) +
         t1745) +
        t1746) +
       t1994);
  sfvals[0] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[1] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp =
      (t7 * (((t56 + t166) - t160) - t163) +
       ((((((((t2618_tmp + t1237) + t391_tmp * -0.2459423843098352) - t1125) +
            eta * t1636) +
           t3 * t824) +
          t1778) +
         b_t2592_tmp * -0.53729829607920909) +
        t2249)) +
      -t5 * ((((((((((t161 + t577) + t605) + t729) - t852) - t1127) + t1249) +
                t1280) -
               t1296) +
              t1997) -
             t2139);
  b_sfvals_tmp = t2642 * xi;
  c_sfvals_tmp =
      t6 *
      (((((((t165 + t449) + eta * t470) - t824) + t1279) + t1994) - t1745) -
       t1746);
  sfvals[2] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[3] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[4] = (((((t8 * 13.060101962296971 - t9 * 26.662393924567581) +
                  t10 * 16.421561962279391) -
                 zeta * 1.8192700000087889) -
                t2165_tmp * 0.340002444091442) +
               t1304_tmp * 0.15198182354753659) +
              -t5 * ((((t2 * 1.7415570740965109 + t8 * 0.340002444091442) -
                       zeta * 0.15198182354753659) +
                      t78_tmp * 1.2262507211827951) +
                     t398_tmp * 2.967807795279306);
  sfvals_tmp =
      (t7 * (((t57 + t162) - t221) - t224) +
       ((((((((t2609_tmp + t391_tmp * -0.30248004775335) - t992) + eta * t985) +
            t3 * t574) -
           t1291) +
          t1841) +
         t2107) +
        t1371_tmp * -0.1103845967566652)) +
      -t5 * ((((((((((-t222 + t530 * zeta) + t821) + eta * t486) + t925) -
                  t1289) -
                 t1047) +
                t1463) +
               t11 * t1005) -
              t1891) +
             t2215);
  b_sfvals_tmp = t2530 * xi;
  c_sfvals_tmp =
      t6 *
      (((((((t309 - t545) - t712) + t23_tmp * -1.711648597373769) + t1508) +
         t1731) +
        t2040) +
       t11 * t944);
  sfvals[5] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[6] =
      ((((((((((((((t27 - t37) + t38) - t36) + t592) + t1160) + t3 * t439) +
              eta * t951) -
             t1252) +
            t1859) -
           t1633) +
          t1943) -
         t7 * (((t34 + t96) - t139) - t105_tmp * 2.0416666666666665)) -
        b_t2592_tmp * 0.31963576319818221) -
       t391_tmp * 1.634064978650307) -
      t5 * ((((((((((t123 + t523) + t592) + eta * t819) + t1117) + t1340) +
                t1605) -
               t1631) +
              t1909) +
             t2012) -
            t391_tmp * 1.1946357631981821);
  sfvals[7] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp = (t7 * ((t288_tmp + eta * t266) - t307) +
                -t5 * (((((((((t188 - t164) + t374) + t925) - t964) +
                           t391_tmp * -2.7425920231294731) +
                          t1463) +
                         t1509) +
                        t1733) +
                       t2215)) +
               ((((((((t2609_tmp + eta * t1193) - t992) +
                     t391_tmp * -0.82590700304170184) -
                    t1291) +
                   t3 * t712) +
                  b_t2592_tmp * -0.82590700304170184) +
                 t2038) +
                t2258);
  b_sfvals_tmp = t2646 * xi;
  c_sfvals_tmp =
      t6 *
      (((((((-t223 + t521) + t574) + t831) + t1889) - t1925) - t2040) + t2267);
  sfvals[8] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      (t7 * ((t141 - t78_tmp * 2.9166666666666665) + 0.875) +
       -t5 *
           ((((((t97 + zeta * 0.79153846150600349) - t1081) + t1117) + t1605) +
             t1909) +
            0.375)) +
      (((((t592 + t1160) - t1252) + t1304_tmp * -0.42072501077220908) - t1633) +
       t2 * t1631);
  e_sfvals_tmp = t6 * ((((-t439 + t398_tmp * 4.5465450960507683) +
                         t78_tmp * 1.6298784293841011) -
                        t102_tmp * 2.0416666666666665) +
                       0.875);
  f_sfvals_tmp = t2424 * xi;
  sfvals[9] = (d_sfvals_tmp + e_sfvals_tmp) + f_sfvals_tmp;
  g_sfvals_tmp =
      (t7 * ((t288_tmp + t268_tmp * -0.25520833333333331) + t307) +
       -t5 * (((((((((t147 - t164) + t374) + t546 * zeta) + t925) - t964) +
                 t1463) -
                t1509) -
               t1733) +
              t2215)) +
      ((((((((t2609_tmp + t680 * zeta) - t992) - t1291) +
           t1371_tmp * -1.6518140060834039) +
          t9 * t680) +
         t2591_tmp * -0.82590700304170184) +
        t2038) +
       t2258);
  h_sfvals_tmp = t2644 * xi;
  i_sfvals_tmp =
      t6 *
      (((((((t223 + t521) + t831) - t574) + t1925) - t1889) - t2040) + t2267);
  sfvals[10] = (g_sfvals_tmp + h_sfvals_tmp) + i_sfvals_tmp;
  j_sfvals_tmp =
      (-t7 * (((t57 - t162) + t224) - t221) +
       (((((((((t394 * zeta + t821) + t1100) - t992) - t1291) +
            b_t2592_tmp * -0.41286464451001531) +
           t2591_tmp * -1.238878418136707) +
          t1841) +
         eta * t1752) +
        t2107)) +
      -t5 * ((((((((((-t222 + t821) + t925) + t391_tmp * -1.178489644510015) +
                   t1047) +
                  t23_tmp * -0.71534469226336528) -
                 t1289) +
                t1463) +
               t1891) +
              t99_tmp * -1.238878418136707) +
             t2215);
  k_sfvals_tmp = t2531 * xi;
  t288_tmp =
      t6 *
      (((((((t309 + t545) + eta * t388) - t712) + t1508) + t1731) - t2040) +
       t2267);
  sfvals[11] = (j_sfvals_tmp - k_sfvals_tmp) + t288_tmp;
  sfvals[12] =
      ((((((((((((((-t27 + t37) + t38) - t36) + t592) + t396 * zeta) + t1160) -
              t1252) +
             eta * t1276) +
            t1859) -
           t1633) +
          t1943) -
         t1371_tmp * 1.5787007418484891) -
        t2591_tmp * 2.5048784293841009) -
       t5 * ((((((((((t123 - t523) + t592) + eta * t386) + t1117) - t1340) +
                 t1605) -
                t1631) +
               t1909) -
              t2012) -
             t23_tmp * 0.56442921545212477)) +
      t7 * (((t34 - t96) - t139) + t141);
  sfvals[13] = (j_sfvals_tmp + k_sfvals_tmp) - t288_tmp;
  sfvals[14] = (g_sfvals_tmp - h_sfvals_tmp) - i_sfvals_tmp;
  sfvals[15] = (d_sfvals_tmp - e_sfvals_tmp) - f_sfvals_tmp;
  sfvals[16] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      (((((((((t898 + t1099) + t391_tmp * -0.27895806214534152) + eta * t1234) -
            t1167) -
           t1256) +
          t3 * t792) +
         t1779) +
        b_t2592_tmp * -1.5442009514430119) +
       t2128) +
      -t5 * (((((((((t518 + t548) + t555) + t688) + t940) - t983) + t1191) +
               t1427) +
              t1965) +
             t2087);
  b_sfvals_tmp = t2651 * xi;
  c_sfvals_tmp =
      t6 *
      ((((((-t434 - t792) + t23_tmp * -0.865770290649686) + t1425) + t1984) +
        t1985) +
       t2084);
  sfvals[17] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      t5 * (((((((((t338 + t338 * zeta_1_inv) + t457 * zeta) - t765) + t1208) +
                t1467) +
               t1569) -
              t1319) +
             t2051) -
            t2025) +
      (((((((((-t451 + t453 * zeta) + t1173) + t1195) + eta * t976) - t1145) +
          t1371_tmp * -3.3661208855429741) +
         t1981) +
        t3 * t1218) +
       t2235);
  e_sfvals_tmp = t2623 * xi;
  sfvals_tmp_tmp = t784 + t784 * zeta_1_inv;
  f_sfvals_tmp =
      t6 * (((((sfvals_tmp_tmp + t1318) - t1218) + t2023) + t2067) + t2068);
  sfvals[18] = (d_sfvals_tmp + e_sfvals_tmp) - f_sfvals_tmp;
  g_sfvals_tmp =
      ((((((((t2595_tmp - t599) + eta * t841) + t391_tmp * -1.349245522141439) +
           b_t2592_tmp * -10.123466040277149) -
          t1179) +
         t3 * t1146) +
        t2049) +
       t2254) +
      t5 * (((((((t2624_tmp + t1187) - t835) + t1403) + t1626) + t1805) +
             t2135) +
            t2160);
  b_sfvals_tmp_tmp = ((-t447 - t455) + t841) + t1079;
  h_sfvals_tmp =
      xi *
      ((((((((b_sfvals_tmp_tmp - t805) + t1410) + t1444) + t1753) + t2122) +
         eta * -t380) -
        t860_tmp) +
       t1079 * zeta_1_inv);
  i_sfvals_tmp =
      t6 * ((((((t954 + t1146) + t1485) + t1804) + t2158) + t2264) + t2265);
  sfvals[19] = (g_sfvals_tmp + h_sfvals_tmp) + i_sfvals_tmp;
  sfvals[20] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[21] = (d_sfvals_tmp - e_sfvals_tmp) + f_sfvals_tmp;
  sfvals[22] = (g_sfvals_tmp - h_sfvals_tmp) - i_sfvals_tmp;
  sfvals_tmp =
      t5 * (((((((((t518 + t555) + t688) - t548) + t983) - t940) + t1427) -
              t1191) +
             t2087) -
            t1965) +
      (((((((((t898 + t800 * zeta) + t1099) + eta * t1018) - t1167) - t1256) +
          t1371_tmp * -1.11807692461714) +
         t1779) +
        t2591_tmp * -0.75387420847659026) +
       t2128);
  b_sfvals_tmp = t2652 * xi;
  c_sfvals_tmp =
      t6 * ((((((t434 + t434 * zeta_1_inv) - t792) + t1425) + t2084) - t1984) -
            t1985);
  sfvals[23] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  d_sfvals_tmp =
      t5 * (((((((((-t338 + t23_tmp * -4.4541467840671274) - t765) + t1208) +
                 t391_tmp * -5.71996761568837) +
                t1319) +
               t1467) +
              t1569) +
             t2025) +
            t2051) +
      (((((((((-t451 + t1173) + t1195) + t391_tmp * -0.57680050147171746) +
            eta * t920) -
           t1145) +
          b_t2592_tmp * -4.12265371740459) +
         t1981) +
        t2591_tmp * -0.034724949502450662) +
       t2235);
  e_sfvals_tmp = t2622 * xi;
  f_sfvals_tmp =
      t6 * (((((sfvals_tmp_tmp + t1218) - t1318) + t2067) + t2068) - t2023);
  sfvals[24] = (d_sfvals_tmp - e_sfvals_tmp) - f_sfvals_tmp;
  g_sfvals_tmp =
      ((((((((t2595_tmp + t429 * zeta) - t599) + eta * t805) +
           t1371_tmp * -8.0944603180564663) -
          t1179) +
         t2049) +
        t2591_tmp * -0.07454972059684796) +
       t2254) +
      -t5 * (((((((t2624_tmp + t835) - t1187) - t1403) - t1626) + t1805) -
              t2135) +
             t2160);
  h_sfvals_tmp = t2650 * xi;
  i_sfvals_tmp =
      t6 * ((((((t954 + t1485) - t1146) - t1804) + t2264) + t2265) - t2158);
  sfvals[25] = (g_sfvals_tmp - h_sfvals_tmp) + i_sfvals_tmp;
  sfvals[26] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[27] = (d_sfvals_tmp + e_sfvals_tmp) + f_sfvals_tmp;
  sfvals[28] = (g_sfvals_tmp + h_sfvals_tmp) - i_sfvals_tmp;
  sfvals_tmp =
      (-t7 * ((t2360_tmp + eta * t373) - t1938) +
       t5 * (((((((((-t258 + t603) + t372 * zeta) + t816) - t572) + t1400) -
                t1052) -
               t1588) +
              t11 * t990) +
             t1947)) +
      (((((((((t550 * zeta + t1055) - t816) + t1268) - t1115) + t9 * t550) +
          t1760) +
         t1371_tmp * -3.616748915186681) +
        t2591_tmp * -1.80837445759334) +
       t2165);
  b_sfvals_tmp = t2612 * xi;
  c_sfvals_tmp =
      t6 * (((((((t361 + t569) + t777) + t1066 * zeta_1_inv) + t2114) - t1915) -
             t1940) -
            t1983);
  sfvals[29] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp = t52 - t53;
  e_sfvals_tmp = t391_tmp * 6.8172595105370224;
  f_sfvals_tmp = t78_tmp * 4.7638888888888893 - t216;
  sfvals[30] =
      (((((((((((((d_sfvals_tmp + t3 * 1.3365845776954535) + t358 * zeta) -
                 t600) +
                t1006) +
               t1263) -
              t1014) +
             eta * t978) +
            t1906) +
           t2170) -
          t1371_tmp * 8.7337089028573835) -
         t2591_tmp * 3.698562162580965) +
        t5 * (((((((((t173 + t262) + t600) + t1286) + t1455) - t1261) - t1271) +
                t1921) +
               t2044) -
              e_sfvals_tmp)) +
       t7 * ((f_sfvals_tmp + eta * t265) - t304)) -
      t260_tmp * 0.29166666666666669;
  sfvals[31] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      (-t7 * ((-(t78_tmp * 6.8055555555555554) + t216) + 2.0416666666666665) +
       t5 * ((((((t101_tmp * 4.7638888888888893 - zeta * 3.1519954203869789) +
                 t1286) +
                t1442) -
               t1271) +
              t1921) +
             2.0416666666666665)) +
      (((((-t600 + t1006) + t1263) - t1014) + t2 * t600) +
       t2165_tmp * -1.626314993387401);
  b_sfvals_tmp =
      t6 * ((((1.3365845776954535 - t306_tmp * 0.68055555555555558) - t539) +
             t1273 * zeta_1_inv) +
            t78_tmp * 2.361977584885512);
  c_sfvals_tmp = t2378 * xi;
  sfvals[32] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  g_sfvals_tmp =
      (-t7 * ((t2360_tmp + t23_tmp * -2.728860179461551) + t1938) +
       t5 * (((((((((-t258 + t572) + t603) + t816) +
                  t391_tmp * -0.92048572186821009) +
                 t1400) -
                t1052) +
               t1588) +
              t1947) +
             t99_tmp * -1.80837445759334)) +
      (((((((((t391_tmp * -1.80837445759334 + t1055) - t816) + t1268) - t1115) +
           eta * t1016) +
          t3 * t569) +
         t1760) +
        b_t2592_tmp * -1.80837445759334) +
       t2165);
  h_sfvals_tmp = t2611 * xi;
  i_sfvals_tmp =
      t6 *
      (((((((t361 + t777) - t569) + t398_tmp * -0.92048572186821009) + t1915) +
         t1940) +
        t2114) -
       t1983);
  sfvals[33] = (g_sfvals_tmp - h_sfvals_tmp) - i_sfvals_tmp;
  sfvals[34] = (g_sfvals_tmp + h_sfvals_tmp) + i_sfvals_tmp;
  sfvals[35] =
      (((((((((((((d_sfvals_tmp + eta * 1.3365845776954535) - t600) + t1006) +
                t1263) +
               eta * t773) -
              t1014) +
             t3 * t539) +
            t1906) +
           t2170) -
          b_t2592_tmp * 3.698562162580965) -
         t391_tmp * 6.3717313179718724) -
        t5 *
            (((((((((-t173 + t262) - t600) + t1261) + t1271) - t1286) + t1455) -
               t1921) +
              t2044) -
             e_sfvals_tmp)) +
       t7 * ((f_sfvals_tmp + t304) - t268_tmp * 0.68055555555555558)) -
      t279_tmp_tmp * 0.29166666666666669;
  sfvals[36] =
      ((((((((t2 * -3.3333333333333335 + t4 * 2.3333333333333335) +
             t8 * 9.1876921209786815) -
            t9 * 7.3767349726277214) +
           t10 * 2.1885926080922542) -
          zeta * 4.9995497564432139) -
         t2165_tmp * 4.5219259414255868) +
        t1304_tmp * 7.6662164231098808) +
       t5 * ((((((t2 * 12.299703719203359 - t8 * 4.5219259414255868) +
                 zeta * 7.6662164231098808) +
                t78_tmp * 0.18904285164904011) -
               t101_tmp * 7.7777777777777777) +
              t398_tmp * 1.3776354597412941) -
             3.3333333333333335)) +
      (t7 * ((t78_tmp * -7.7777777777777777 + t105_tmp * 5.4444444444444446) +
             2.3333333333333335) +
       1.0);
  sfvals[37] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      t5 * (((((((((t558 + t567) + t694) + t843) + t1060) + t1189) - t997) +
              t1600) +
             t1968) +
            t2054) +
      (((((((t2592_tmp + t1292) + eta * t1220) - t1094) +
          t391_tmp * -0.14530379345458869) +
         b_t2592_tmp * -3.0514567104471388) +
        t2591_tmp * -3.658899809351718) +
       t2236);
  b_sfvals_tmp = t2474 * xi;
  c_sfvals_tmp =
      t6 *
      ((((((-t563 - t581) + t23_tmp * -1.6775800815299591) + t1382) + t2060) +
        t2063) +
       t2065);
  sfvals[38] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[39] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[40] =
      (((((((((t360 * zeta - t1015) + t1555) + t9 * t377) + t1616) - t1468) +
          t1821) +
         t1897) -
        t5 *
            (((((((((t422 + t377 * zeta) + t422 * zeta_1_inv) + t880) + t1075) -
                 t1015) +
                t1613) +
               t1960) +
              t99_tmp * -0.333942795157085) -
             t72_tmp * 0.333942795157085)) -
       t1371_tmp * 16.994751546904439) -
      t2591_tmp * 0.333942795157085;
  sfvals_tmp =
      t5 * (((((((t435 + t1060) + t1189) + t391_tmp * -8.3879366013288159) +
               t1384) -
              t1224) +
             t2054) +
            t2063) +
      (((((((((t700 - t567) + t1000) + t1008) - t1094) + t1511) + t9 * t563) +
         t1371_tmp * -3.3551601630599182) +
        t2591_tmp * -1.6775800815299591) +
       t2277);
  b_sfvals_tmp =
      t6 *
      ((((((-t399 - t464) + t23_tmp * -8.3879366013288159) + t1599) + t1966) +
        t2063) +
       t2065);
  sfvals_tmp_tmp =
      (((((((t1007 + t1050) - t725) + t1220) + t1343) - t1011) + t1532) +
       t1533) -
      t1196;
  c_sfvals_tmp = xi * (sfvals_tmp_tmp - t1011 * zeta_1_inv);
  sfvals[41] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      t5 * (((((((t435 + t464 * zeta) + t1060) + t1189) - t1224) + t1702) +
             t2054) +
            t2243) +
      (((((((t2592_tmp + t1050) - t1094) + t1511) + eta * t1036) + t3 * t581) +
        b_t2592_tmp * -1.6775800815299591) +
       t2277);
  e_sfvals_tmp = t2576 * xi;
  f_sfvals_tmp =
      t6 * ((((((t464 - t399) + t464 * zeta_1_inv) + t1599) + t1966) + t2243) +
            t2244);
  sfvals[42] = (d_sfvals_tmp - e_sfvals_tmp) - f_sfvals_tmp;
  g_sfvals_tmp =
      -t5 * ((((zeta * 2.8199513429629719 + t880) - t8 * 13.2701866727988) +
              t1075) +
             t1960) +
      (((((-t1015 + t1555) + t1616) - t1468) + t2 * t1015) +
       t2165_tmp * -0.1505263667989129);
  h_sfvals_tmp = t2395 * xi;
  i_sfvals_tmp = t6 * ((-t740 + t398_tmp * 0.333942795157085) + t2237);
  sfvals[43] = (g_sfvals_tmp + h_sfvals_tmp) - i_sfvals_tmp;
  j_sfvals_tmp =
      (((((((t2592_tmp + t690 * zeta) + t1292) + t9 * t445) - t1094) +
         t3 * t399) +
        t1371_tmp * -3.1967605039017282) +
       t2236) +
      -t5 * (((((((((t558 + t694) + t843) - t567) + t997) - t1060) - t1189) +
               t1600) +
              t1968) -
             t2054);
  k_sfvals_tmp = t2473 * xi;
  t288_tmp =
      t6 * ((((((t563 + t563 * zeta_1_inv) - t581) + t1382) + t2060) + t2243) +
            t2244);
  sfvals[44] = (j_sfvals_tmp - k_sfvals_tmp) - t288_tmp;
  sfvals[45] = (j_sfvals_tmp + k_sfvals_tmp) + t288_tmp;
  sfvals[46] =
      (((((((((eta * t671 - t1015) + t1555) + t1616) + t3 * t740) - t1468) +
          t1821) +
         t1897) -
        b_t2592_tmp * 13.7546558347548) -
       t391_tmp * 3.240095712149635) -
      t5 * (((((((((-t422 + t880) + t1075) - t1015) + t1613) +
                t1541 * zeta_1_inv) +
               t1960) +
              t2239) -
             t391_tmp * 13.7546558347548) -
            t23_tmp * 10.514560122605159);
  sfvals[47] = (d_sfvals_tmp + e_sfvals_tmp) + f_sfvals_tmp;
  sfvals[48] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[49] = (g_sfvals_tmp - h_sfvals_tmp) + i_sfvals_tmp;
  sfvals_tmp =
      -t5 * ((((((t2499_tmp - t811) + t1119) + t1169) + t1140 * zeta_1_inv) +
              t1989) +
             t2020) +
      ((((((((t2570_tmp + eta * t798) - t779) + t1169) - t814) + t3 * t444) +
         b_t2592_tmp * -8.3119464959786757) +
        t1756) +
       t1871);
  b_sfvals_tmp = t2462 * xi;
  c_sfvals_tmp =
      t6 *
      ((((((-t359 + t23_tmp * -18.58611748964497) - t444) + t1313) + t1872) +
        t12 * t615) +
       t2017);
  sfvals[50] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[51] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp = -t5 * ((((((t2499_tmp + t809) - t811) + t1119) +
                        t72_tmp * -8.3119464959786757) +
                       t1989) +
                      t99_tmp * -8.3119464959786757) +
               ((((((((t2570_tmp + t809) - t779) - t814) +
                    t1371_tmp * -16.623892991957351) +
                   t9 * t424) +
                  t2591_tmp * -8.3119464959786757) +
                 t1756) +
                t1871);
  b_sfvals_tmp = t2461 * xi;
  c_sfvals_tmp =
      t6 * ((((((t359 + t359 * zeta_1_inv) - t444) + t1313) + t2017) +
             t99_tmp * -18.58611748964497) +
            t127_tmp * -18.58611748964497);
  sfvals[52] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[53] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[54] =
      (((((t8 * 41.064368569683637 - t9 * 62.615899704819682) +
          t10 * 28.055810279985241) -
         t330) -
        t2165_tmp * 28.055810279985241) +
       t2 * t330) +
      t5 * ((((t2 * 28.055810279985241 - t8 * 28.055810279985241) + t330) +
             t78_tmp * 21.551531135136042) +
            t398_tmp * 49.607341415121283);
  sdvals_tmp =
      -t6 * (((t40 + t117) - t137) - t135) +
      ((((((((((-t125 + t547) + t578) + t606) + t730) + t1128) + t1281) +
          t1297) -
         t1250) +
        t1907) +
       t1998) *
          xi;
  b_sdvals_tmp =
      t5 *
      (((((((t199 - t413) - t522) - t631) + t1069) + t1715) + t1716) + t1835);
  sdvals[0] = (sdvals_tmp + t2643) + b_sdvals_tmp;
  t2165_tmp =
      (-t7 * (((t47 + t74) - t136) - t197) +
       (((((t634 + t662) + t1449) + t1711) + t1304_tmp * -1.860564526878592) -
        t1636)) +
      t5 * ((((((((-t119 + t379) + t420) + t505) + t795) + t1069) + t1152) +
             t1835) +
            1.318019088230626);
  t72_tmp =
      xi *
      (((((((((t19 - t72) + t578) + t606) + t730) - t586) + t1040) - t945) -
        t1458) +
       0.390625);
  t127_tmp = t6 * ((((((t135 - t470) + t788) + t1278) + t1713) + t1714) -
                   1.612566532931401);
  sdvals[1] = (t2165_tmp + t72_tmp) + t127_tmp;
  t260_tmp =
      (t7 * (((t86 + t124) - t138) - t198) +
       -t5 * ((((((((-t126 + t491) - t494) + t1566) + t1908) + t1996) + t1999) +
               t2009) -
              0.63460205269489356)) +
      (((((((((t487 + t602) + t391_tmp * -1.066481360778089) + t995) + t1330) -
           t991) +
          eta * t1063) -
         t1287) +
        t1712) -
       0.26035626137853157);
  t268_tmp =
      xi *
      (((((((((-t42 + t161) + t708) - t503) - t565) + t1063) + t1257) + t2050) -
        t1942) +
       0.2459423843098352);
  t279_tmp_tmp = t6 * ((((((t200 - t1355) + t1717) + t1747) + t1993) + t1995) +
                       0.62018817562619721);
  sdvals[2] = (t260_tmp + t268_tmp) - t279_tmp_tmp;
  sdvals[3] =
      (sdvals_tmp +
       (((((((((((t2642_tmp + t87) + t707) - t634) + t1174) + t1356) - t1031) +
            t1636) +
           t1730) -
          t1449) +
         t1822) +
        t1844)) -
      b_sdvals_tmp;
  sdvals[4] = (t2165_tmp - t72_tmp) - t127_tmp;
  sdvals[5] = (t260_tmp - t268_tmp) + t279_tmp_tmp;
  sdvals_tmp =
      t6 * (((t40 + t137) - t117) - t135) +
      -xi * ((((((((((t125 - t547) + t578) + t606) + t730) - t1128) + t1250) +
                t1281) -
               t1297) -
              t1907) +
             t1998);
  b_sdvals_tmp =
      t5 *
      (((((((t199 + t522) + t631) - t413) + t1069) + t1835) - t1715) - t1716);
  sdvals[6] =
      (sdvals_tmp +
       (((((((((((t2643_tmp + t87) - t634) + t1057) - t1031) - t1174) + t1539) +
            t1636) +
           t1681) +
          t1730) -
         t1449) +
        t1844)) -
      b_sdvals_tmp;
  t2165_tmp =
      (t7 * (((t47 - t74) + t136) - t197) +
       (((((t662 - t634) + t2 * t413) + t1636) + t1711) - t1449)) +
      -t5 * ((((((((t119 + t379) - t420) + t505) - t795) + t1069) - t1152) +
              t1835) +
             1.318019088230626);
  t72_tmp =
      xi *
      (((((((((-t19 - t72) + t578) + t586) + t606) + t730) + t945) - t1040) +
        t1458) -
       0.390625);
  t127_tmp = t6 * ((((((t135 + t470) + t788) + t1278) - t1713) - t1714) +
                   1.612566532931401);
  sdvals[7] = (t2165_tmp - t72_tmp) - t127_tmp;
  t260_tmp =
      (-t7 * (((t86 - t124) + t138) - t198) +
       t5 * ((((((((t126 - t491) - t494) + t1566) + t1996) + t1999) - t1908) -
              t2009) +
             0.63460205269489356)) +
      (((((((((t487 + eta * t503) - t602) + t995) + t1287) + t1330) - t991) +
         t1712) +
        t1371_tmp * -1.6118948882376269) -
       0.26035626137853157);
  t268_tmp =
      xi *
      (((((((((t42 + t161) + t565) - t503) - t708) + t1063) + t1257) - t1942) -
        t2050) +
       0.2459423843098352);
  t279_tmp_tmp = t6 * ((((((t200 + t1355) - t1717) + t1993) + t1995) - t1747) +
                       0.62018817562619721);
  sdvals[8] = (t260_tmp - t268_tmp) + t279_tmp_tmp;
  sdvals[9] = (sdvals_tmp + t2642) + b_sdvals_tmp;
  sdvals[10] = (t2165_tmp + t72_tmp) + t127_tmp;
  sdvals[11] = (t260_tmp + t268_tmp) - t279_tmp_tmp;
  sdvals[12] = -xi * ((((t2 * 3.483114148193021 + t8 * 0.680004888182884) -
                        zeta * 0.30396364709507329) +
                       t78_tmp * 2.45250144236559) +
                      t398_tmp * 5.9356155905586112);
  sdvals[13] =
      (t1371_tmp * -0.680004888182884 + t391_tmp * 0.30396364709507329) -
      t5 * ((eta * 3.483114148193021 + t42_tmp * 2.45250144236559) +
            5.9356155905586112 * eta * zeta_1_inv);
  sdvals[14] =
      ((((t2 * 0.15198182354753659 - t8 * 79.98718177370273) +
         t9 * 65.686247849117578) +
        zeta * 26.120203924593941) +
       (t5 * (((zeta * -0.680004888182884 + t78_tmp * 2.967807795279306) +
               t80_tmp * 2.45250144236559) +
              0.15198182354753659) -
        t1304_tmp * 0.680004888182884)) -
      1.8192700000087889;
  sdvals_tmp =
      t5 *
      (((((((t272 - t430) - t542) + t1068) + t1216) - t869) + t1695) + t1962);
  sdvals[15] = ((t2315 + t2530) + t2636) - sdvals_tmp;
  b_sdvals_tmp =
      (t7 * (((t48 + t76) - t185) - t210) +
       (((((-t415 + t985) + t1078) + t1102) + t2 * t512) - t1752)) +
      -t5 *
          (((((((t2510_tmp + t486) + t544) + t640) + t1295) - t1324) + t2096) -
           0.050280307736634743);
  t2165_tmp =
      xi * (((((((t107 - 0.50121921663579494) + t280) + t371) + t483) + t677) -
             t1013) +
            t1592);
  t72_tmp = t6 * ((((((t300 - t388) + t678) + t932) + t1215) + t1961) -
                  2.212867814009563);
  sdvals[16] = (b_sdvals_tmp + t2165_tmp) - t72_tmp;
  t127_tmp =
      (-t7 * (((t88 + t142) - t187) - t211) +
       t5 * (((((((t2520_tmp - t530) + t1387) + t1929) + t2008) + t2106) -
              t2195) -
             0.31979510030879088)) +
      (((((((((-t368 - t394) + t1005) + t1103) + t1159) - t927) - t1028) +
         t391_tmp * -0.22076919351333041) +
        eta * t957) +
       0.31979510030879088);
  t260_tmp = t6 * ((((((t273 + t1732) - t1578) + t1912) + t1963) + t2117) +
                   0.82590700304170184);
  t268_tmp =
      xi * (((((((t308 + t675) - t462) - t465) + t1147) - t987) + t2039) +
            0.82590700304170184);
  sdvals[17] = (t127_tmp + t260_tmp) - t268_tmp;
  sdvals[18] =
      -t6 * (((t23 + t78) - t105) + t127) -
      xi * ((((((((((t101 + t524) + t593) + t637) - t736) + t1118) - t1269) +
               t1341) +
              t1606) +
             t1739) +
            t1910);
  t279_tmp_tmp = -(eta * 0.75) + t31;
  sdvals[19] =
      (((((((((t279_tmp_tmp - t50) - t418) + t951) + t1095) + t1572) +
          t2 * t403) -
         t1276) -
        t5 * ((((((((t99 - t386) + t410) + t760) + t819) + t1505) + t1611) +
               t1973) +
              1.8144292154521251)) -
       t7 * (((t30 + t45) - t128) - t314_tmp)) +
      0.375;
  sdvals[20] =
      ((((((((((-t396 + eta * t528) - t493) + t1133) + t1253) - t1065) +
           t1573) -
          t1270) -
         t1371_tmp * 0.95890728959454663) +
        t7 * (((t61 + t80) - t129) - t106)) +
       t5 * ((((((((t102 + t500) + t585) + t1740) + t1761) + t1911) + t1971) +
              t2048) -
             0.42072501077220908)) +
      0.42072501077220908;
  sdvals[21] =
      ((t2315 +
        ((((((((((t147 + t252) + t294) + t712) + t1244) - t944) + t1506) -
            t1193) +
           t1544) +
          t1671) +
         t1788)) +
       t2636) +
      sdvals_tmp;
  sdvals[22] = (b_sdvals_tmp - t2165_tmp) + t72_tmp;
  sdvals[23] = (t127_tmp - t260_tmp) + t268_tmp;
  sdvals_tmp =
      t6 * ((t2337_tmp + t269) - t300) +
      -xi * (((((((((-t143 - t107) + t375) + t601) - t633) - t677) + t1464) +
               t1510) +
              t1734) +
             t2007);
  b_sdvals_tmp =
      t5 *
      (((((((-t212 + t322) + t512) + t752) + t1324) - t1216) - t1962) - t2096);
  sdvals[24] =
      (sdvals_tmp +
       (((((((((((t112 + t147) + t415) + t1244) - t985) - t986) + t1388) +
            t1490) +
           t1506) +
          t1752) +
         t1851) -
        t1814)) -
      b_sdvals_tmp;
  t2165_tmp =
      (t7 * ((t2331_tmp + t266) - t270) +
       (((((-t712 + t1193) + t2 * t430) + t1335) + t1446) - t1544)) +
      -t5 *
          (((((((-t134 - 0.50121921663579494) + t356) + t640) - t566) + t1068) +
            t1295) +
           t1695);
  t72_tmp =
      xi * ((((((((t75 - 0.50121921663579494) + t483) + t699) + t982) - t661) -
              t883) +
             t1377) -
            t1013);
  t127_tmp = t6 * ((((((t184 - t452) - t769) + t1215) + t1528) + t1961) -
                   5.2990643395808563);
  sdvals[25] = (t2165_tmp - t72_tmp) + t127_tmp;
  t260_tmp =
      (t7 * ((t2340_tmp + t271) - t290) +
       t5 * (((((((-t144 + t362) + t546) + t1735) + t1913) + t2008) + t2106) -
             1.256193470692148)) +
      (((((((((-t368 + eta * t462) - t680) + t1159) - t927) + t1447) + t1512) -
         t1282) +
        t1371_tmp * -2.477721009125105) +
       0.31979510030879088);
  t268_tmp = t6 * ((((((t213 - t1336) + t1926) + t1963) + t2117) - t2194) +
                   1.238878418136707);
  t2499_tmp =
      xi *
      ((((((((t164 + t621) + t675) - t465) + t961) - t957) + t1946) - t2066) +
       0.30248004775335);
  sdvals[26] = (t260_tmp - t268_tmp) + t2499_tmp;
  t2624_tmp =
      t6 * ((t105 - t78_tmp * 11.666666666666666) + 3.5) +
      -xi *
          ((((((t101_tmp * 1.75 + zeta * 1.583076923012007) - t1082) + t1118) +
             t1606) +
            t1910) +
           0.75);
  t2360_tmp = t5 * ((((-(t102_tmp * 6.125) - t403) + t1611) + t1973) + 2.625);
  sdvals[27] = (t2624_tmp + t2424) + t2360_tmp;
  b_t2592_tmp = (-t7 * (t42_tmp * 5.833333333333333 - t314_tmp) +
                 (t391_tmp * -0.84145002154441828 + eta * t1269)) +
                -t5 * (((t11 * t31 + t410) + t760) + t1505);
  t2591_tmp = xi * (((t31 * zeta_1_inv + t524) + t637) - t736);
  t2592_tmp = t6 * ((t127 + t23_tmp * 9.0930901921015366) +
                    t42_tmp * 3.2597568587682031);
  sdvals[28] = (b_t2592_tmp + t2591_tmp) + t2592_tmp;
  t2642_tmp =
      (t7 * (t80_tmp * 5.833333333333333 - t106) +
       t5 * ((((t102_tmp * 1.75 + t385) + t1911) + t1971) -
             0.79153846150600349)) +
      (((((-t493 + t1253) - t2 * 0.42072501077220908) + t2 * t500) - t1270) +
       0.42072501077220908);
  t2618_tmp = xi * (((((t97 + t528) + t2 * 1.1946357631981821) - t1486) +
                     t78_tmp * 0.56442921545212477) -
                    1.634064978650307);
  t2643_tmp = t6 * (((-(t105_tmp * 6.125) + t80_tmp * 3.2597568587682031) +
                     t78_tmp * 4.5465450960507683) +
                    2.5048784293841009);
  sdvals[29] = (t2642_tmp - t2618_tmp) - t2643_tmp;
  t2595_tmp =
      t6 * ((t2337_tmp - t269) + t300) +
      -xi * (((((((((t107 - t143) + t375) + t601) - t633) + t677) + t1464) -
               t1510) -
              t1734) +
             t2007);
  t2570_tmp =
      t5 *
      (((((((t212 + t322) + t752) - t512) - t1216) - t1324) + t2096) - t1962);
  sdvals[30] = (t2595_tmp + t2644) + t2570_tmp;
  c_sfvals_tmp =
      (t7 * ((t2331_tmp + t270) - t266) +
       (((((t712 + t1335) + t1446) - t1193) + t1544) +
        t1304_tmp * -2.477721009125105)) +
      -t5 *
          (((((((0.50121921663579494 - t134) + t356) + t566) + t640) + t1295) -
            t1068) -
           t1695);
  b_sfvals_tmp =
      xi * ((((((((-t75 - 0.50121921663579494) + t483) + t661) + t883) + t982) -
              t699) +
             t1377) -
            t1013);
  sfvals_tmp = t6 * ((((((t184 + t452) - t769) + t1528) + t1563) - t1961) +
                     5.2990643395808563);
  sdvals[31] = (c_sfvals_tmp + b_sfvals_tmp) + sfvals_tmp;
  t2609_tmp =
      (t7 * ((t2340_tmp - t271) + t290) +
       -t5 * (((((((t144 - t362) + t546) + t1735) + t1913) - t2008) - t2106) +
              1.256193470692148)) +
      (((((((((-t368 + t680) + t1159) + t391_tmp * -3.3036280121668069) +
            eta * t1147) -
           t927) +
          t1447) -
         t1282) -
        t1512) +
       0.31979510030879088);
  d_sfvals_tmp = t6 * ((((((t213 + t1336) + t1926) - t1963) - t2117) - t2194) +
                       1.238878418136707);
  f_sfvals_tmp =
      xi *
      ((((((((t164 + t465) + t621) + t961) - t675) - t957) - t1946) - t2066) +
       0.30248004775335);
  sdvals[32] = (t2609_tmp - d_sfvals_tmp) + f_sfvals_tmp;
  e_sfvals_tmp =
      t5 *
      (((((((t272 + t542) - t430) + t869) + t1068) - t1216) + t1695) - t1962);
  sdvals[33] =
      ((t2316 +
        ((((((((((t188 + t252) + t294) + t712) + t878) + t944) + t1337) -
            t1193) +
           t1544) +
          t1787) +
         t1788)) +
       t2635) +
      e_sfvals_tmp;
  h_sfvals_tmp =
      (-t7 * (((t48 - t76) + t185) - t210) +
       (((((t415 + t1078) + t1102) - t985) + t1304_tmp * -3.71663525441012) +
        t1752)) +
      -t5 *
          (((((((t2510_tmp + t640) - t486) - t544) + t1295) + t1324) - t2096) +
           0.050280307736634743);
  g_sfvals_tmp =
      xi * (((((((t107 + 0.50121921663579494) + t280) - t371) + t677) - t483) +
             t1013) -
            t1592);
  i_sfvals_tmp = t6 * ((((((t300 + t388) + t678) + t932) + t1563) - t1961) +
                       2.212867814009563);
  sdvals[34] = (h_sfvals_tmp - g_sfvals_tmp) + i_sfvals_tmp;
  k_sfvals_tmp =
      (t7 * (((t88 - t142) + t187) - t211) +
       t5 * (((((((t2520_tmp + t530) - t1387) + t2008) + t2106) - t1929) +
              t2195) -
             0.31979510030879088)) +
      (((((((((t394 - t368) + eta * t621) + t1103) + t1159) - t927) - t1005) -
         t1028) +
        t1371_tmp * -1.238593933530046) +
       0.31979510030879088);
  j_sfvals_tmp =
      xi * (((((((-t308 + t462) + t675) - t465) + t987) - t1147) + t2039) -
            0.82590700304170184);
  t288_tmp = t6 * ((((((t273 + t1578) + t1732) + t1912) - t1963) - t2117) +
                   0.82590700304170184);
  sdvals[35] = (k_sfvals_tmp - j_sfvals_tmp) - t288_tmp;
  sdvals[36] =
      t6 * (((t23 - t78) + t105) + t127) -
      xi * ((((((((((t101 + t593) + t736) - t524) - t637) + t1118) - t1269) -
               t1341) +
              t1606) -
             t1739) +
            t1910);
  sdvals[37] =
      (((((((((t279_tmp_tmp + t50) + t418) + t1095) + t1276) - t951) + t1572) -
         t5 * ((((((((t99 + t386) + t410) + t760) - t819) + t1505) - t1611) -
                t1973) -
               1.8144292154521251)) -
        t1304_tmp * 7.514635288152304) +
       t7 * (((t30 - t45) + t13 * t39) - t128)) -
      0.375;
  sdvals[38] =
      ((((((((((t396 - t493) - t1133) + t1253) - t1065) + t1573) - t1270) +
          eta * t1486) -
         t391_tmp * 3.157401483696979) -
        t5 * ((((((((-t102 - t500) + t585) + t1740) + t1761) - t1911) - t1971) +
               t2048) +
              0.42072501077220908)) -
       t7 * (((t61 - t80) + t106) - t129)) +
      0.42072501077220908;
  sdvals[39] = ((t2316 + t2531) + t2635) - e_sfvals_tmp;
  sdvals[40] = (h_sfvals_tmp + g_sfvals_tmp) - i_sfvals_tmp;
  sdvals[41] = (k_sfvals_tmp + j_sfvals_tmp) + t288_tmp;
  sdvals[42] =
      (t2595_tmp +
       (((((((((((t89 + t147) - t415) + t985) + t1244) - t986) + t1506) +
            t1707) +
           t1776) +
          t1814) +
         t1851) -
        t1752)) -
      t2570_tmp;
  sdvals[43] = (c_sfvals_tmp - b_sfvals_tmp) - sfvals_tmp;
  sdvals[44] = (t2609_tmp + d_sfvals_tmp) - f_sfvals_tmp;
  sdvals[45] =
      (t2624_tmp +
       (((((((t110_tmp * -0.875 - t418) + t951) - t946) + t2 * t386) - t1276) +
         t398_tmp * -0.56442921545212477) +
        0.375)) -
      t2360_tmp;
  sdvals[46] = (b_t2592_tmp - t2591_tmp) - t2592_tmp;
  sdvals[47] = (t2642_tmp + t2618_tmp) + t2643_tmp;
  sdvals[48] = (sdvals_tmp + t2646) + b_sdvals_tmp;
  sdvals[49] = (t2165_tmp + t72_tmp) - t127_tmp;
  sdvals[50] = (t260_tmp + t268_tmp) - t2499_tmp;
  sdvals_tmp =
      t5 *
      ((((((-t428 - t479) + t23_tmp * -2.5973108719490581) + t1583) + t1894) +
        t1895) +
       t1950);
  sdvals[51] =
      (t2581 +
       (((((((((((t910 - t622) + t1154) - t839) + t1234) + t1304) + t1332) -
            t1004) -
           t1018) +
          t1484) +
         t1554) +
        t1800)) -
      sdvals_tmp;
  b_sdvals_tmp =
      (((((t1003 - t839) + t1234) + t2 * t479) - t1018) + t1488) +
      -t5 * (((((((t340 + t347) + t516) + t573) + t1242) + t1583) + t1950) +
             3.5231725330068762);
  t2165_tmp = xi * (((((((t2564_tmp + t653) + t689) + t713) - t496) - t1144) +
                     t398_tmp * -2.5973108719490581) +
                    0.70508208897121338);
  t72_tmp =
      t6 * (((((t589 - t450) + t1058) + t1892) + t1893) - 0.865770290649686);
  sdvals[52] = (b_sdvals_tmp - t2165_tmp) - t72_tmp;
  t127_tmp =
      t5 * (((((((-t335 + t543) + t11 * t555) + t1704) + t1743) + t1825) +
             t2087) -
            0.955932563850912) +
      (((((((((t655 - t446) + t1371_tmp * -4.6326028543290363) + eta * t482) -
            t800) -
           t890) -
          t969) +
         t1489) +
        t1628) +
       0.48101641751966318);
  t260_tmp =
      t6 *
      (((((t42_tmp * -0.865770290649686 + t1823) + t1896) + t1986) + t2084) +
       0.75387420847659026);
  t268_tmp = xi * ((((((((t345 + t467) - t482) - t484) + t778) + t11 * t1154) +
                     t42_tmp * -0.70508208897121338) +
                    t2152) +
                   0.27895806214534152);
  sdvals[53] = (t127_tmp + t260_tmp) - t268_tmp;
  t279_tmp_tmp =
      t5 * ((((((t618 + t1116) - t859) + t1275) + t1988) + t2132) + t2133);
  sdvals[54] = (t2569 + t2623) - t279_tmp_tmp;
  t2499_tmp =
      (((((t472 + t976) - t920) + t1363) + t1624) + t2 * t859) +
      t5 * (((((((t344 + t404) + t468) + t477) + t989) - t1275) - t1988) +
            4.4541467840671274);
  t2624_tmp =
      t6 * (((((t815 + t817) + t1317) + t2130) + t2131) + 0.1067389072606586);
  t2360_tmp =
      xi * ((((((((t20 + t339) + t532) + t554) - t460) + t1203) - t1448) +
             t398_tmp * -0.32021672178197591) +
            1.3333333333333333);
  sdvals[55] = (t2499_tmp - t2624_tmp) + t2360_tmp;
  b_t2592_tmp =
      t5 * (((((((t457 + t473) + t1328) + t2025) + t2027) - t1772) - t2108) -
            0.06941263584527918) +
      (((((((((t343 + t453) + t833) + t391_tmp * -6.7322417710859481) +
            eta * t893) -
           t759) +
          t1364) +
         t1667) -
        t1582) -
       0.542112815128889);
  t2591_tmp = t6 * (((((t11 * t784 + t2023) + t2024) + t2069) + t2134) +
                    0.034724949502450662);
  t2592_tmp =
      xi *
      ((((((((t42_tmp * -1.3333333333333333 + t540) - t440) - t506) + t893) +
          t1186) +
         t2031) +
        t11 * t1637) +
       0.57680050147171746);
  sdvals[56] = (b_t2592_tmp + t2591_tmp) + t2592_tmp;
  t2642_tmp =
      t5 * ((((((t727 + t1180) + t1358) + t1522) + t1920) + t1953) + t1954);
  sdvals[57] =
      (t2589 +
       ((((((((b_sfvals_tmp_tmp + t1086) - t805) + t1229) + t1410) + t1444) +
          t1608) +
         t1753) +
        t2122)) +
      t2642_tmp;
  t2618_tmp =
      (((((-t447 + t841) - t805) + t1345) + t2 * t727) + t1724) +
      t5 * (((((((t402 + t458) + t507) + t894) + t1497) + t1522) + t1920) +
            1.3126359404402561);
  t2643_tmp =
      xi * ((((((((t384 - t380) + t614) - t475) + t762) - t896) + t1665) +
             t1665 * zeta_1_inv) -
            3.37825124436212);
  t2595_tmp =
      t6 * (((((t980 + t1041) + t1803) + t1951) + t1952) + 0.03286035747913911);
  sdvals[58] = (t2618_tmp + t2643_tmp) + t2595_tmp;
  t2570_tmp =
      -t5 * (((((((-t495 - t775) + t11 * t383) + t2072) + t2137) + t2160) +
              t2162) +
             0.139083732477686) +
      (((((((((-t355 + eta * t348) + t643) - t429) - t820) +
           t1371_tmp * -30.370398120831439) -
          t1303) +
         t1725) +
        t1882) +
       1.413779534022277);
  t288_tmp = t129_tmp * 0.521849121949439 + t11 * t954;
  c_sfvals_tmp =
      t6 * ((((t288_tmp + t2158) + t2159) + t2266) - 0.07454972059684796);
  b_sfvals_tmp =
      xi *
      ((((((((-t348 + t579) + t580) + t789) - t1260) + t1685) + t11 * t1079) +
        t2285) +
       1.349245522141439);
  sdvals[59] = (t2570_tmp - c_sfvals_tmp) - b_sfvals_tmp;
  sdvals[60] = (t2581 + t2651) + sdvals_tmp;
  sdvals[61] = (b_sdvals_tmp + t2165_tmp) + t72_tmp;
  sdvals[62] = (t127_tmp - t260_tmp) + t268_tmp;
  sdvals[63] =
      (t2569 +
       ((((((((((t2622_tmp - t472) + t837) + t920) - t786) + t1329) - t976) +
           t1637) +
          t1678) +
         t1687) +
        t1758)) +
      t279_tmp_tmp;
  sdvals[64] = (t2499_tmp + t2624_tmp) - t2360_tmp;
  sdvals[65] = (b_t2592_tmp - t2591_tmp) - t2592_tmp;
  sdvals[66] =
      (t2589 +
       (((((((((((t447 + t455) + t731) + t805) + t860_tmp) + t1032) - t841) -
            t1079) +
           t1737) +
          t1878) -
         t1753) +
        t2270)) -
      t2642_tmp;
  sdvals[67] = (t2618_tmp - t2643_tmp) - t2595_tmp;
  sdvals[68] = (t2570_tmp + c_sfvals_tmp) + b_sfvals_tmp;
  sdvals_tmp =
      t5 * ((((((t428 - t479) + t428 * zeta_1_inv) + t1583) + t1950) - t1894) -
            t1895);
  sdvals[69] = (t2564 + t2652) + sdvals_tmp;
  b_sdvals_tmp =
      (((((t839 + t1003) + t1018) + t1488) - t1234) +
       t1304_tmp * -2.2616226254297711) +
      t5 * (((((((t340 - t347) + t573) - t516) + t1583) - t1242) + t1950) +
            3.5231725330068762);
  t2165_tmp =
      xi * ((((((((t496 + t519) + t556) + t689) - t653) - t713) + t1144) +
             t1144 * zeta_1_inv) -
            0.70508208897121338);
  t72_tmp =
      t6 * (((((t450 + t589) + t1058) - t1892) - t1893) + 0.865770290649686);
  sdvals[70] = (b_sdvals_tmp + t2165_tmp) + t72_tmp;
  t127_tmp = t5 * (((((((t335 + t543) + t1704) + t1743) +
                      t42_tmp * -3.5231725330068762) -
                     t1825) -
                    t2087) -
                   0.955932563850912) +
             (((((((((eta * t345 + t655) - t446) + t800) +
                   t391_tmp * -2.236153849234281) -
                  t890) -
                 t969) +
                t1489) -
               t1628) +
              0.48101641751966318);
  t260_tmp = t6 * (((((t11 * t434 + t1823) + t2084) - t1896) - t1986) +
                   0.75387420847659026);
  t268_tmp =
      xi * ((((((((t345 + t484) - t467) - t482) + t778) + t11 * t622) + t2152) +
             t99_tmp * -0.865770290649686) +
            0.27895806214534152);
  sdvals[71] = (t127_tmp - t260_tmp) + t268_tmp;
  t279_tmp_tmp =
      t5 * ((((((t618 + t859) + t1116) - t1275) + t2132) + t2133) - t1988);
  sdvals[72] =
      (t2573 +
       ((((((((((t2623_tmp - t472) + t920) - t786) + t1199) + t1329) - t976) +
           t1349) +
          t1687) -
         t1637) +
        t2030)) -
      t279_tmp_tmp;
  t2499_tmp =
      (((((-t472 + t920) - t976) + t1363) + t1624) +
       t1304_tmp * -0.104174848507352) +
      t5 * (((((((t404 - t344) + t468) - t477) + t989) + t1275) + t1988) -
            4.4541467840671274);
  t2624_tmp =
      t6 * (((((t815 - t817) - t1317) + t2130) + t2131) + 0.1067389072606586);
  t2360_tmp =
      xi * ((((((((-t20 + t339) + t460) + t532) + t554) + t1448) - t1203) +
             t1448 * zeta_1_inv) -
            1.3333333333333333);
  sdvals[73] = (t2499_tmp - t2624_tmp) - t2360_tmp;
  b_t2592_tmp =
      -t5 * (((((((t457 - t473) + t1328) + t1772) + t2025) + t2027) + t2108) +
             0.06941263584527918) +
      (((((((((t343 + eta * t506) - t453) + t833) - t759) + t1364) +
          t1371_tmp * -12.36796115221377) -
         t1582) -
        t1667) -
       0.542112815128889);
  t2591_tmp = t6 * (((((t2023 + t2024) - t2069) - t2134) + t11 * -t784) +
                    0.034724949502450662);
  t2592_tmp =
      xi * ((((((((t11 * t18 + t440) - t506) - t540) + t893) + t1186) + t2031) +
             t99_tmp * -0.1067389072606586) +
            0.57680050147171746);
  sdvals[74] = (b_t2592_tmp - t2591_tmp) - t2592_tmp;
  t2642_tmp =
      t5 * ((((((-t727 + t1180) + t1358) - t1522) + t1953) + t1954) - t1920);
  sdvals[75] =
      (t2614 +
       (((((((((((t447 - t455) + t805) + t1086) - t841) + t1229) + t1410) -
            t1079) +
           t1737) +
          t1753) +
         t1878) +
        t2122)) +
      t2642_tmp;
  t2618_tmp =
      (((((t447 + t805) - t841) + t1345) + t1724) +
       t1304_tmp * -0.22364916179054389) +
      -t5 * (((((((t402 - t458) + t507) - t894) - t1497) + t1522) + t1920) +
             1.3126359404402561);
  t2643_tmp =
      xi * ((((((((t380 + t384) + t475) + t614) + t762) + t896) - t1665) +
             t398_tmp * -0.09858107243741733) +
            3.37825124436212);
  t2595_tmp =
      t6 * (((((t980 - t1041) + t1951) + t1952) - t1803) + 0.03286035747913911);
  sdvals[76] = (t2618_tmp - t2643_tmp) + t2595_tmp;
  t2570_tmp =
      -t5 * (((((((t495 - t775) + t42_tmp * -1.3126359404402561) + t2072) +
                t2137) -
               t2160) -
              t2162) +
             0.139083732477686) +
      (((((((((t429 - t355) + t643) + t391_tmp * -16.188920636112929) +
            eta * t789) -
           t820) -
          t1303) +
         t1725) -
        t1882) +
       1.413779534022277);
  c_sfvals_tmp =
      t6 * ((((t288_tmp + t2266) - t2158) - t2159) + 0.07454972059684796);
  b_sfvals_tmp = xi * ((((((((t348 + t579) + t580) - t789) + t1260) + t1685) +
                         t78_tmp * -1.3126359404402561) +
                        t2285) -
                       1.349245522141439);
  sdvals[77] = (t2570_tmp - c_sfvals_tmp) - b_sfvals_tmp;
  sdvals[78] =
      (t2564 +
       (((((((((((t622 + t1129) - t839) + t1207) + t1234) + t1266) + t1304) -
            t1004) -
           t1018) -
          t1154) +
         t1669) +
        t1800)) -
      sdvals_tmp;
  sdvals[79] = (b_sdvals_tmp - t2165_tmp) - t72_tmp;
  sdvals[80] = (t127_tmp + t260_tmp) - t268_tmp;
  sdvals[81] = (t2573 + t2622) + t279_tmp_tmp;
  sdvals[82] = (t2499_tmp + t2624_tmp) + t2360_tmp;
  sdvals[83] = (b_t2592_tmp + t2591_tmp) + t2592_tmp;
  sdvals[84] = (t2614 + t2650) - t2642_tmp;
  sdvals[85] = (t2618_tmp + t2643_tmp) - t2595_tmp;
  sdvals[86] = (t2570_tmp + c_sfvals_tmp) + b_sfvals_tmp;
  sdvals_tmp =
      -t6 * ((t2353_tmp + t469) - t1677) +
      (((((((((-t247 + t529) - t370) + t604) + t748) + t1401) - t1053) -
         t1589) +
        t1918) +
       t1948) *
          xi;
  b_sdvals_tmp =
      t5 *
      (((((((t324 + t352) + t591) + t1414) - t1367) - t1829) - t1830) - t2034);
  sdvals[87] =
      (sdvals_tmp +
       ((((((((((t65 + t569) - t620) + t1017) + t1122) + t1194) - t1016) -
           t1027) +
          t1586) +
         t1840) +
        t1900)) -
      b_sdvals_tmp;
  t2165_tmp =
      (-t7 * ((t2351_tmp + t373) - t2032) +
       (((((t569 + t635) + t1017) + t1304_tmp * -5.4251233727800212) - t1016) +
        t1833)) +
      t5 * ((((((t2440_tmp + t393) + t892) + t1367) + t1581) - t1414) -
            2.728860179461551);
  t72_tmp = xi * (((((((t370 + t454) + t884) - t644) + t1062) - t748) + t1211) -
                  1.7864583333333333);
  t127_tmp = t6 * ((((((-t419 - t749) + t1518) + t1677) + t11 * t884) + t1828) -
                   7.705778758402392);
  sdvals[88] = (t2165_tmp - t72_tmp) + t127_tmp;
  t260_tmp =
      (-t7 * ((t2362_tmp + t42_tmp * -2.728860179461551) + t2033) +
       t5 * (((((((t248 + t372) - t588) + t1957) - t1919) - t1949) - t2071) +
             0.71304982059857813)) +
      (((((((((t499 + t550) + eta * t476) + t391_tmp * -7.2334978303733619) +
            t1054) -
           t990) -
          t1161) +
         t1639) +
        t1834) -
       0.71304982059857813);
  t268_tmp =
      xi * (((((((t414 + t476) - t437) - t570) + t1066) + t1939) + t1982) +
            1.80837445759334);
  t279_tmp_tmp = t6 * ((((((t1831 + t1886) - t1629) + t1916) + t2035) + t2180) +
                       1.80837445759334);
  sdvals[89] = (t260_tmp + t268_tmp) - t279_tmp_tmp;
  t2499_tmp = t78_tmp * 19.055555555555557 - t177;
  sdvals[90] =
      t6 * ((t2499_tmp + t268) - t295) +
      xi * (((((((((t170 + t260) + t376) - t391) + t922) + t1089) - t1262) -
              t1272) +
             t1922) +
            t2045);
  t2624_tmp = eta * 4.083333333333333 - t39;
  t2360_tmp = t42_tmp * 9.5277777777777786 - t176;
  sdvals[91] =
      (((((((((t2624_tmp + t2 * 4.0097537330863595) - 1.3365845776954535) +
             t363) +
            t978) -
           t773) +
          t1151) +
         t1845) +
        t5 * (((((((t168 + 4.4552819256515113) + t398) + t509) - t520) - t501) +
               t1523) +
              t1987)) -
       t1304_tmp * 11.09568648774289) +
      t7 * ((t2360_tmp + t265) - t80_tmp * 1.7320508075688772 *
                                     2.6457513110645907 * 2.0416666666666665);
  b_t2592_tmp = t178 - t80_tmp * 9.5277777777777786;
  sdvals[92] =
      ((((((((((t358 + t557) + t900) - t952) - t1043) + eta * t937) - t1108) +
          t1846) -
         t391_tmp * 17.467417805714771) +
        t7 * ((b_t2592_tmp - t288) + t297)) -
       t5 * (((((((t171 + t497) + t502) + t1923) + t2001) + t2046) + t2099) -
             0.931337912946354)) -
      0.931337912946354;
  sdvals[93] = (sdvals_tmp + t2612) + b_sdvals_tmp;
  sdvals[94] = (t2165_tmp + t72_tmp) - t127_tmp;
  sdvals[95] = (t260_tmp - t268_tmp) + t279_tmp_tmp;
  sdvals_tmp = t5 * ((((t398 + 4.0097537330863595) - t514) + t1987) -
                     t306_tmp * 2.0416666666666665);
  sdvals[96] = ((t1136 + ((((((t2 * 1.7320508075688772 * 2.6457513110645907 *
                                   -0.97222222222222221 +
                               1.3365845776954535) +
                              t294_tmp * -0.68055555555555558) -
                             t363) +
                            t773) -
                           t978) +
                          t2 * t520)) +
                t2385) -
               sdvals_tmp;
  b_sdvals_tmp = (t7 * (t42_tmp * 13.611111111111111 - t176) +
                  (eta * t376 + t1371_tmp * -3.2526299867748012)) +
                 t5 * (((t99_tmp * 19.055555555555557 + t509) - t501) + t1523);
  t2165_tmp = t6 * ((-t295 + t23_tmp * 13.634519021074039) +
                    t42_tmp * 4.7239551697710231);
  t72_tmp = xi * ((t260 + t279_tmp * 2.7222222222222223) - t391);
  sdvals[97] = (b_sdvals_tmp - t2165_tmp) - t72_tmp;
  t127_tmp =
      (-t7 * (t80_tmp * 13.611111111111111 - t178) +
       -t5 * ((((t102_tmp * 9.5277777777777786 - t612) + t1923) + t2001) +
              3.1519954203869789)) +
      (((((t557 + t900) + t2 * 0.931337912946354) - t1043) +
        t1304_tmp * -3.2526299867748012) -
       0.931337912946354);
  t260_tmp = t6 * (((t80_tmp * 4.7239551697710231 + t11 * t1273) -
                    t105_tmp * 1.7320508075688772 * 2.6457513110645907 *
                        2.0416666666666665) +
                   3.698562162580965);
  t268_tmp = xi * ((((t305_tmp * 0.68055555555555558 + t334) - t937) + t1273) -
                   6.3717313179718724);
  sdvals[98] = (t127_tmp + t260_tmp) + t268_tmp;
  t279_tmp_tmp =
      -t6 * ((t2353_tmp - t469) + t1677) +
      (((((((((-t247 + t370) + t529) + t604) - t748) + t1401) - t1053) +
         t1589) +
        t1948) -
       t1918) *
          xi;
  t2591_tmp =
      t5 *
      (((((((-t324 + t352) + t591) + t1367) - t1414) + t2034) - t1829) - t1830);
  sdvals[99] =
      (t279_tmp_tmp +
       ((((((((((t65 - t569) - t620) + t1016) + t1027) + t1122) + t1194) -
           t1017) +
          t1558) +
         t1860) +
        t1900)) -
      t2591_tmp;
  t2592_tmp = (-t7 * ((t2351_tmp - t373) + t2032) +
               (((((t635 + t2 * t324) - t569) + t1016) - t1017) + t1833)) +
              t5 * ((((((t2440_tmp - t393) + t892) + t1414) + t1581) - t1367) +
                    2.728860179461551);
  t2642_tmp =
      xi * (((((((t454 - t370) + t748) + t884) - t644) + t1062) - t1211) -
            1.7864583333333333);
  t2618_tmp =
      t6 *
      ((((((t419 - t749) + t1518) + t1677) + t78_tmp * -23.11733627520718) -
        t1828) +
       7.705778758402392);
  sdvals[100] = (t2592_tmp - t2642_tmp) - t2618_tmp;
  t2643_tmp =
      (-t7 * ((t2362_tmp + t11 * t572) - t2033) +
       -t5 * (((((((-t248 + t372) + t588) + t1949) + t1957) + t2071) - t1919) -
              0.71304982059857813)) +
      (((((((((t499 + eta * t570) - t550) + t990) + t1054) +
           t1371_tmp * -5.4251233727800212) -
          t1161) +
         t1639) +
        t1834) -
       0.71304982059857813);
  t2595_tmp =
      xi * (((((((t437 + t476) - t414) - t570) + t1066) + t1939) - t1982) +
            1.80837445759334);
  t2570_tmp = t6 * ((((((t1629 + t1916) + t2035) - t1831) - t1886) + t2180) +
                    1.80837445759334);
  sdvals[101] = (t2643_tmp - t2595_tmp) + t2570_tmp;
  sdvals[102] = (t279_tmp_tmp + t2611) + t2591_tmp;
  sdvals[103] = (t2592_tmp + t2642_tmp) + t2618_tmp;
  sdvals[104] = (t2643_tmp + t2595_tmp) - t2570_tmp;
  sdvals[105] =
      -xi * (((((((((-t170 + t260) - t376) - t391) - t922) + t1089) + t1262) +
               t1272) -
              t1922) +
             t2045) +
      t6 * ((t2499_tmp - t268) + t295);
  sdvals[106] =
      (((((((((t2624_tmp + 1.3365845776954535) - t363) + t773) + t1151) -
           t978) +
          t2 * t514) +
         t1845) +
        t5 * (((((((t168 - 4.4552819256515113) + t509) + t520) - t398) - t501) +
               t1523) -
              t1987)) -
       t2 * 4.58257569495584 * 0.875) +
      t7 * ((t2360_tmp - t265) +
            t12 * 1.7320508075688772 * 2.6457513110645907 * t52);
  sdvals[107] =
      ((((((((((-t358 + eta * t334) + t557) + t900) + t952) - t1043) - t1108) +
          t1846) -
         t1371_tmp * 11.09568648774289) +
        t7 * ((b_t2592_tmp + t288) - t297)) +
       t5 * (((((((-t171 + t502) - t497) + t2046) + t2099) - t1923) - t2001) +
             0.931337912946354)) -
      0.931337912946354;
  sdvals[108] =
      xi * ((((((t2 * 24.599407438406729 - t8 * 9.0438518828511736) +
                zeta * 15.33243284621976) +
               t78_tmp * 0.37808570329808028) -
              t101_tmp * 15.555555555555555) +
             t398_tmp * 2.7552709194825882) -
            6.666666666666667) +
      t6 * ((t78_tmp * -31.111111111111111 + t105_tmp * 21.777777777777779) +
            9.3333333333333339);
  sdvals[109] =
      (((eta * -6.666666666666667 + t3 * 9.3333333333333339) -
        t1371_tmp * 9.0438518828511736) +
       t391_tmp * 15.33243284621976) +
      (t5 * (((eta * 24.599407438406729 + t42_tmp * 0.37808570329808028) +
              t23_tmp * 2.7552709194825882) -
             t99_tmp * 31.111111111111111) -
       t7 * (t42_tmp * 15.555555555555555 - t129_tmp * 21.777777777777779));
  sdvals[110] =
      (((((t2 * 7.6662164231098808 - t8 * 22.130204917883169) +
          t9 * 8.754370432369015) +
         zeta * 18.375384241957359) -
        t1304_tmp * 9.0438518828511736) +
       (-t5 * ((((zeta * 9.0438518828511736 + t78_tmp * 1.3776354597412941) +
                 t80_tmp * 0.37808570329808028) -
                t102_tmp * 15.555555555555555) -
               7.6662164231098808) +
        t7 * (t80_tmp * 15.555555555555555 - t106_tmp * 21.777777777777779))) -
      4.9995497564432139;
  sdvals[111] = ((t1136 + t2378) + t2385) + sdvals_tmp;
  sdvals[112] = (b_sdvals_tmp + t2165_tmp) + t72_tmp;
  sdvals[113] = (t127_tmp - t260_tmp) - t268_tmp;
  sdvals_tmp =
      t5 *
      ((((((-t471 - t489) + t1042) + t23_tmp * -5.0327402445898768) + t1807) +
        t1809) +
       t1810);
  sdvals[114] =
      ((((((((t581 + t1037) + t1050) - t1036) + t1533) - t1202) + t1699) +
        t1702) +
       t2563) +
      sdvals_tmp;
  b_sdvals_tmp =
      (((((t793 - t725) + t1220) + t1371) + t1304_tmp * -10.97669942805515) -
       t1196) +
      t5 * (((((((t346 + t463) + t576) + t590) + t1142) + t1359) + t1902) +
            2.90615291699255);
  t2165_tmp = xi * ((((t561 + t581) + t868) + t1042) - t1035);
  t72_tmp =
      t6 * (((((t562 - t583) + t1009) + t1807) + t1808) - 1.6775800815299591);
  sdvals[115] = (b_sdvals_tmp - t2165_tmp) + t72_tmp;
  t127_tmp =
      -t5 * (((((((t553 - t445) + t11 * t558) + t1826) + t1968) + t1970) +
              t2056) -
             0.94448189137986227) +
      (((((((((t560 + eta * t474) + t999) - t690) + t1126) - t968) + t1372) -
         t1073) +
        t1371_tmp * -9.1543701313414179) -
       0.94448189137986227);
  t260_tmp = xi * ((((((t701 - t563) - t582) + t1246) - t1201) + t2063) +
                   1.6775800815299591);
  t268_tmp =
      t6 *
      (((((t1783 + t1785) + t1811) + t42_tmp * -1.6775800815299591) + t2060) +
       1.6775800815299591);
  sdvals[116] = (t127_tmp + t260_tmp) - t268_tmp;
  sdvals[117] = (t2474 + t2563) - sdvals_tmp;
  sdvals[118] = (b_sdvals_tmp + t2165_tmp) - t72_tmp;
  sdvals[119] = (t127_tmp - t260_tmp) + t268_tmp;
  t288_tmp = t333 + t488;
  sdvals_tmp = t288_tmp + t333 * zeta_1_inv;
  sdvals[120] =
      -xi *
      (((((((sdvals_tmp + t564) - t673) + t1076) + t1614) - t1692) + t1697) -
       t2240);
  sdvals[121] =
      (((((t366 + t705) - t671) + t1093) + t1135) -
       t1304_tmp * 1.0018283854712551) -
      t5 * ((((((t2359_tmp + t397) + t438) + t1238) - t1576) - t1945) +
            10.514560122605159);
  b_sdvals_tmp = t42_tmp * 10.514560122605159;
  sdvals[122] =
      (((((((((t360 + t706) + t720) + eta * t891) - t1090) - t1541) + t1615) -
         t1264) -
        t391_tmp * 33.989503093808871) -
       t5 * (((((((t377 + t764) - t1698) - t1838) + t2239) + t2241) -
              b_sdvals_tmp) -
             0.086201574029578162)) -
      0.086201574029578162;
  t2165_tmp =
      t5 *
      ((((((-t350 - t367) + t23_tmp * -25.16380980398645) + t1142) + t1809) +
        t1810) +
       t1902);
  sdvals[123] =
      (t2475 +
       (((((((((t700 + t725) + t1011) + t1196) - t1007) + t1538) - t1220) +
          t1675) +
         t1813) +
        t1816)) -
      t2165_tmp;
  t72_tmp =
      t5 * (((((t346 + t590) - t480) + t1042) + t1359) + t1807) +
      (((((t581 + t679) + t1037) - t1036) + t1304_tmp * -5.0327402445898768) +
       t1781);
  t127_tmp =
      t6 * (((((-t481 + t756) + t1598) + t1807) + t1808) - 8.3879366013288159);
  t260_tmp = xi * (((((t2580_tmp + t695) - t581) + t1035) - t1217) +
                   t398_tmp * -5.0327402445898768);
  sdvals[124] = (t72_tmp - t127_tmp) - t260_tmp;
  t268_tmp =
      -t5 * ((((((t349 + t464) + t1785) + t1826) + t2056) + t2063) -
             4.7486854941861676) +
      (((((((((t560 + t563) + t988) + t999) + t391_tmp * -6.7103203261198363) -
           t968) -
          t1011) +
         t8 * t471) +
        t1782) -
       0.94448189137986227);
  t279_tmp_tmp =
      t6 *
      (((((t42_tmp * -8.3879366013288159 + t1785) + t1811) + t1966) + t1967) +
       3.658899809351718);
  t2499_tmp = xi * (((((((t474 + t701) - t563) + t1165) - t1225) + t1932) +
                     t78_tmp * -2.90615291699255) -
                    0.14530379345458869);
  sdvals[125] = (t268_tmp + t279_tmp_tmp) - t2499_tmp;
  t2624_tmp =
      t5 * ((((((t350 - t367) + t350 * zeta_1_inv) + t1142) + t1902) - t1809) -
            t1810);
  sdvals[126] =
      (t2477 +
       (((((((((t725 + t1050) + t1196) - t1007) - t1011) + t1533) - t1220) +
          t1675) +
         t1813) +
        t1820)) -
      t2624_tmp;
  t2360_tmp =
      (((((t679 - t581) + t1036) + t2 * t489) - t1037) + t1781) +
      t5 * (((((t346 + t480) + t590) + t1359) + t398_tmp * -25.16380980398645) +
            t2078);
  b_t2592_tmp =
      t6 * (((((t481 + t756) + t1598) + t2078) + t2079) + 8.3879366013288159);
  t2591_tmp =
      xi *
      (((((t2580_tmp + t581) + t695) + t1217) + t1217 * zeta_1_inv) - t1035);
  sdvals[127] = (t2360_tmp - b_t2592_tmp) - t2591_tmp;
  t2592_tmp =
      t5 * ((((((t464 - t349) + t1785) + t2063) - t1826) - t2056) +
            4.7486854941861676) +
      (((((((((t560 + eta * t582) - t563) + t988) + t999) + t1011) - t968) +
         t1371_tmp * -5.0327402445898768) +
        t1782) -
       0.94448189137986227);
  t2642_tmp = t6 * (((((t11 * t464 + t1966) + t1967) - t1785) - t1811) +
                    3.658899809351718);
  t2618_tmp =
      xi *
      (((((((t701 - t474) - t563) + t1225) - t1165) + t11 * t1007) + t1932) +
       0.14530379345458869);
  sdvals[128] = (t2592_tmp + t2642_tmp) + t2618_tmp;
  t2643_tmp = t5 * ((-t387 + t1576) + t1945);
  sdvals[129] = (t2375 + t2395) - t2643_tmp;
  t2595_tmp = (eta * t673 + t1371_tmp * -0.30105273359782592) +
              -t5 * (t2359_tmp + t1238);
  t2570_tmp =
      t6 * (t23_tmp * 0.66788559031416994 + t42_tmp * 0.66788559031416994);
  sdvals[130] = (t2595_tmp - t2570_tmp) + xi * sdvals_tmp;
  sdvals_tmp = t5 * (((t328 + t1698) + t1838) - 2.8199513429629719) +
               (((((t720 + t1615) - t1264) + t2 * 0.086201574029578162) +
                 t1304_tmp * -0.30105273359782592) -
                0.086201574029578162);
  c_sfvals_tmp =
      xi * ((((-t369 + t891) - t2 * 13.7546558347548) + t11 * t1132) +
            3.240095712149635);
  b_sfvals_tmp =
      t6 * ((t2237 + t80_tmp * 0.66788559031416994) + 0.333942795157085);
  sdvals[131] = (sdvals_tmp - c_sfvals_tmp) + b_sfvals_tmp;
  sfvals_tmp =
      t5 * ((((((t471 - t489) + t471 * zeta_1_inv) + t1042) + t1807) - t1809) -
            t1810);
  sdvals[132] =
      ((((((((-t581 + t1036) + t1050) + t1379) - t1037) + t1533) - t1202) +
        t1702) +
       t2580) -
      sfvals_tmp;
  t2609_tmp =
      (((((t725 + t793) + t2 * t367) + t1196) + t1371) - t1220) +
      -t5 * (((((((-t346 + t463) + t576) - t590) + t1142) - t1359) + t1902) +
             2.90615291699255);
  d_sfvals_tmp = xi * ((((t581 + t868) - t561) + t1042) - t1035);
  f_sfvals_tmp =
      t6 * (((((t562 + t583) + t1009) + t2078) + t2079) + 1.6775800815299591);
  sdvals[133] = (t2609_tmp - d_sfvals_tmp) - f_sfvals_tmp;
  e_sfvals_tmp =
      -t5 *
          (((((((t445 + t553) + t42_tmp * -2.90615291699255) + t1826) + t2056) +
             t99_tmp * -3.658899809351718) -
            t1970) -
           0.94448189137986227) +
      (((((((((t560 + t690) + t999) + t1073) + t1126) +
           t391_tmp * -6.3935210078034546) -
          t968) +
         t1372) +
        eta * t1225) -
       0.94448189137986227);
  h_sfvals_tmp = xi * ((((((t582 + t701) - t563) + t1201) - t1246) + t2063) -
                       1.6775800815299591);
  g_sfvals_tmp = t6 * (((((t11 * t563 + t1783) + t2060) - t1785) - t1811) +
                       1.6775800815299591);
  sdvals[134] = (e_sfvals_tmp + h_sfvals_tmp) + g_sfvals_tmp;
  sdvals[135] = (t2473 + t2580) + sfvals_tmp;
  sdvals[136] = (t2609_tmp + d_sfvals_tmp) + f_sfvals_tmp;
  sdvals[137] = (e_sfvals_tmp - h_sfvals_tmp) - g_sfvals_tmp;
  sdvals[138] =
      -xi *
      (((((((((-t333 + t564) - t673) - t488) + t23_tmp * -21.029120245210329) +
           t1076) +
          t1614) +
         t1692) +
        t1697) +
       t2240);
  sdvals[139] =
      ((((t2395_tmp + t705) + t1135) - t1093) + t2 * t387) -
      t5 * ((((((t2359_tmp - t397) - t438) + t1238) + t1576) + t1945) -
            10.514560122605159);
  sdvals[140] =
      (((((((((-t360 + eta * t369) + t706) + t720) - t1090) + t1541) + t1615) -
         t1264) -
        t1371_tmp * 41.263967504264393) +
       t5 * (((((((t377 - t764) + t1698) + t1838) + t2239) + t2241) -
              b_sdvals_tmp) +
             0.086201574029578162)) -
      0.086201574029578162;
  sdvals[141] = (t2477 + t2576) + t2624_tmp;
  sdvals[142] = (t2360_tmp + b_t2592_tmp) + t2591_tmp;
  sdvals[143] = (t2592_tmp - t2642_tmp) - t2618_tmp;
  sdvals[144] = (t2475 + (sfvals_tmp_tmp + t1820)) + t2165_tmp;
  sdvals[145] = (t72_tmp + t127_tmp) + t260_tmp;
  sdvals[146] = (t268_tmp - t279_tmp_tmp) + t2499_tmp;
  sdvals[147] =
      (t2375 +
       (((((t366 - t671) + t1093) - t1132) + t398_tmp * -10.514560122605159) +
        t1304_tmp * -13.7546558347548)) +
      t2643_tmp;
  sdvals[148] =
      (t2595_tmp + t2570_tmp) - xi * (t288_tmp + t23_tmp * 21.029120245210329);
  sdvals[149] = (sdvals_tmp + c_sfvals_tmp) - b_sfvals_tmp;
  sdvals_tmp =
      t5 *
      ((((((-t329 - t354) + t23_tmp * -55.758352468934923) + t1214) + t1679) +
        t1855) +
       t1856);
  sdvals[150] = (t2462 + t2484) - sdvals_tmp;
  b_sdvals_tmp = (((((-t444 + t757) + t798) + t958) + t2 * t329) - t1164) +
                 -t5 * ((((t2414_tmp - t444) + t1214) + t1277) + t1679);
  t2165_tmp = t6 * (((((t527 - t365) + t948) + t11 * t914) + t12 * t914) -
                    18.58611748964497);
  t72_tmp = xi * ((((t364 + t525) + t914) - t641) + t1091);
  sdvals[151] = (b_sdvals_tmp - t2165_tmp) + t72_tmp;
  t127_tmp =
      t5 * ((((((t342 + t424) + t1751) + t1881) + t1991) + t2020) -
            4.7976857292352246) +
      (((((((((-t336 + eta * t341) - t424) + t844) + t959) + t1140) - t813) -
         t1074) +
        t1371_tmp * -24.935839487936029) +
       4.7976857292352246);
  t260_tmp = xi * ((((((t408 - t341) - t359) + t718) - t1139) + t1872) +
                   8.3119464959786757);
  t268_tmp =
      t6 *
      (((((t42_tmp * -18.58611748964497 + t1749) + t1857) + t1874) + t2017) +
       8.3119464959786757);
  sdvals[152] = (t127_tmp - t260_tmp) + t268_tmp;
  sdvals[153] =
      ((((((((t444 + t646) - t615) + t1109) - t798) + t1164) + t1472) + t1655) +
       t2484) +
      sdvals_tmp;
  sdvals[154] = (b_sdvals_tmp + t2165_tmp) - t72_tmp;
  sdvals[155] = (t127_tmp + t260_tmp) - t268_tmp;
  sdvals_tmp =
      t5 * ((((((t354 - t329) + t354 * zeta_1_inv) + t1214) + t1679) - t1855) -
            t1856);
  sdvals[156] = (t2461 + t2483) + sdvals_tmp;
  b_sdvals_tmp = (((((t444 + t757) + t958) - t798) + t1164) +
                  t1304_tmp * -24.935839487936029) +
                 -t5 * ((((t2414_tmp + t444) + t1277) - t1214) - t1679);
  t2165_tmp = t6 * (((((t365 + t527) + t948) + t78_tmp * -55.758352468934923) +
                     t80_tmp * -55.758352468934923) +
                    18.58611748964497);
  t72_tmp = xi * ((((t364 - t525) + t914) - t641) + t1091);
  sdvals[157] = (b_sdvals_tmp + t2165_tmp) + t72_tmp;
  t127_tmp =
      -t5 * ((((((-t342 + t424) + t1751) - t1881) - t1991) + t2020) +
             4.7976857292352246) +
      (((((((((t424 - t336) + t391_tmp * -33.2477859839147) + t844) + t959) -
           t813) +
          eta * t718) -
         t1074) -
        t1140) +
       4.7976857292352246);
  t260_tmp = xi * ((((((t341 + t408) - t359) - t718) + t1139) + t1872) -
                   8.3119464959786757);
  t268_tmp = t6 * (((((t11 * t359 + t1749) + t2017) - t1857) - t1874) +
                   8.3119464959786757);
  sdvals[158] = (t127_tmp - t260_tmp) - t268_tmp;
  sdvals[159] =
      ((((((((t646 - t444) + t798) - t615) + t1109) + t1309) + t1472) - t1164) +
       t2483) -
      sdvals_tmp;
  sdvals[160] = (b_sdvals_tmp - t2165_tmp) - t72_tmp;
  sdvals[161] = (t127_tmp + t260_tmp) + t268_tmp;
  sdvals[162] = xi * ((((t2 * 56.111620559970483 - t8 * 56.111620559970483) +
                        zeta * 13.0085582896984) +
                       t78_tmp * 43.103062270272083) +
                      t398_tmp * 99.214682830242566);
  sdvals[163] =
      (t1371_tmp * -56.111620559970483 + t391_tmp * 13.0085582896984) +
      t5 * ((eta * 56.111620559970483 + t42_tmp * 43.103062270272083) +
            99.214682830242566 * eta * zeta_1_inv);
  sdvals[164] =
      ((((t2 * 6.5042791448492 - t8 * 187.84769911445909) +
         t9 * 112.223241119941) +
        zeta * 82.128737139367288) -
       t1304_tmp * 56.111620559970483) +
      (-t5 * (((zeta * 56.111620559970483 + t78_tmp * 49.607341415121283) +
               t80_tmp * 43.103062270272083) -
              6.5042791448492) -
       6.5042791448492);
}

void pyra_gl_30_ncoords(double natcoords[90])
{
  static const double dv[90]{-1.0,
                             -1.0,
                             0.0,
                             1.0,
                             -1.0,
                             0.0,
                             1.0,
                             1.0,
                             0.0,
                             -1.0,
                             1.0,
                             0.0,
                             0.0,
                             0.0,
                             1.0,
                             -0.44721359549995793,
                             -1.0,
                             0.0,
                             0.44721359549995793,
                             -1.0,
                             0.0,
                             1.0,
                             -0.44721359549995793,
                             0.0,
                             1.0,
                             0.44721359549995793,
                             0.0,
                             0.44721359549995793,
                             1.0,
                             0.0,
                             -0.44721359549995793,
                             1.0,
                             0.0,
                             -1.0,
                             0.44721359549995793,
                             0.0,
                             -1.0,
                             -0.44721359549995793,
                             0.0,
                             -0.72360679774997894,
                             -0.72360679774997894,
                             0.276393202250021,
                             -0.276393202250021,
                             -0.276393202250021,
                             0.72360679774997894,
                             0.72360679774997894,
                             -0.72360679774997894,
                             0.276393202250021,
                             0.276393202250021,
                             -0.276393202250021,
                             0.72360679774997894,
                             0.72360679774997894,
                             0.72360679774997894,
                             0.276393202250021,
                             0.276393202250021,
                             0.276393202250021,
                             0.72360679774997894,
                             -0.72360679774997894,
                             0.72360679774997894,
                             0.276393202250021,
                             -0.276393202250021,
                             0.276393202250021,
                             0.72360679774997894,
                             -0.44721359549995793,
                             -0.44721359549995793,
                             0.0,
                             0.44721359549995793,
                             -0.44721359549995793,
                             0.0,
                             0.44721359549995793,
                             0.44721359549995793,
                             0.0,
                             -0.44721359549995793,
                             0.44721359549995793,
                             0.0,
                             0.0,
                             -0.66666666666666663,
                             0.33333333333333331,
                             0.66666666666666663,
                             0.0,
                             0.33333333333333331,
                             0.0,
                             0.66666666666666663,
                             0.33333333333333331,
                             -0.66666666666666663,
                             0.0,
                             0.33333333333333331,
                             0.0,
                             0.0,
                             0.39371980676328511};
  std::copy(&dv[0], &dv[90], &natcoords[0]);
}

// pyra_gl_30_sfunc - Compute shape functions and their derivatives of
void pyra_gl_30_sfunc(double xi, double eta, double zeta, double sfvals[30])
{
  double b_sfvals_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double sfvals_tmp;
  double t102;
  double t111;
  double t112;
  double t114;
  double t117;
  double t125;
  double t13;
  double t132;
  double t135;
  double t157_tmp;
  double t158_tmp;
  double t160;
  double t166;
  double t171;
  double t173;
  double t178;
  double t179;
  double t186;
  double t2;
  double t206;
  double t22;
  double t221;
  double t227;
  double t229;
  double t238;
  double t240;
  double t25;
  double t260;
  double t261;
  double t263;
  double t268;
  double t273;
  double t281;
  double t282;
  double t284;
  double t288;
  double t288_tmp;
  double t290;
  double t290_tmp;
  double t296;
  double t3;
  double t302;
  double t305;
  double t306;
  double t312;
  double t312_tmp;
  double t315;
  double t331;
  double t343;
  double t363;
  double t364;
  double t37;
  double t370;
  double t371;
  double t375;
  double t376;
  double t377;
  double t391;
  double t392;
  double t4;
  double t401;
  double t402;
  double t404;
  double t407;
  double t41;
  double t412;
  double t414;
  double t415;
  double t417;
  double t419;
  double t421;
  double t43;
  double t432;
  double t436;
  double t439;
  double t450;
  double t454;
  double t455;
  double t46;
  double t460;
  double t467;
  double t468;
  double t470;
  double t473;
  double t474;
  double t477;
  double t478;
  double t480;
  double t480_tmp;
  double t496;
  double t499;
  double t5;
  double t504;
  double t509;
  double t520;
  double t529;
  double t542;
  double t548;
  double t550;
  double t6;
  double t616_tmp;
  double t619_tmp;
  double t62;
  double t627_tmp;
  double t639_tmp;
  double t648_tmp;
  double t65;
  double t671_tmp;
  double t687_tmp;
  double t7;
  double t705_tmp;
  double t706_tmp;
  double t73;
  double t74;
  double t8;
  double t81;
  double t82;
  double t83;
  double t9;
  double zeta_1_inv;
  zeta_1_inv = 1.0 / ((zeta - 1.0) + 1.0E-100);
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t4 = xi * xi;
  t5 = std::pow(xi, 3.0);
  t6 = zeta * zeta;
  t7 = std::pow(zeta, 3.0);
  t8 = zeta_1_inv * zeta_1_inv;
  t9 = std::pow(zeta_1_inv, 3.0);
  t13 = zeta_1_inv * 0.75;
  t22 = zeta / 32.0;
  t25 = zeta_1_inv * 0.625;
  t37 = eta * 3.375;
  t41 = eta / 64.0;
  t43 = eta * 0.078125;
  t46 = zeta * 3.375;
  t73 = eta * 0.234375;
  t74 = eta * 0.546875;
  t102 = eta * 1.953125;
  t157_tmp = eta * zeta;
  t158_tmp = eta * zeta_1_inv;
  t171 = zeta * 0.35467791411042943;
  t173 = zeta * 0.1984279141104294;
  t178 = zeta * 0.99213957055214719;
  t179 = zeta * 1.135927914110429;
  t391 = zeta * 6.909807936635147;
  t392 = zeta * 1.313443925130642;
  t401 = eta * 1.6362712429686841;
  t402 = eta * 2.0225424859373691;
  t404 = zeta * 1.0112712429686841;
  t407 = zeta * 0.30217268216195747;
  t414 = zeta * 0.501690937082833;
  t417 = zeta * 0.23328618043164759;
  t421 = zeta * 0.26453618043164762;
  t432 = eta * 0.23872875703131571;
  t436 = eta * 0.77254248593736852;
  t439 = zeta * 0.38627124296868431;
  t477 = zeta * 0.11541969411414869;
  t62 = t43 * zeta_1_inv;
  t65 = t2 * t13;
  t81 = t2 * 3.375;
  t82 = t2 * 0.078125;
  t83 = t3 * 0.078125;
  t111 = t2 * 0.390625;
  t112 = t3 * 0.390625;
  t114 = t2 * 0.671875;
  t117 = t6 * 0.265625;
  t125 = t2 * t46;
  t132 = t2 * (zeta_1_inv * 3.375);
  t135 = t3 * (zeta_1_inv * 0.078125);
  t166 = t3 * zeta_1_inv * -0.078125;
  t186 = 2.23606797749979 * t43;
  t206 = t3 * (zeta_1_inv * 1.953125);
  t227 = eta * 2.23606797749979 * -0.078125;
  t238 = t7 * 0.1984279141104294;
  t240 = t7 * 0.99213957055214719;
  t263 = eta * 2.23606797749979 * -0.390625;
  t268 = t6 * 0.47498082822085891;
  t281 = t2 * t178;
  t288_tmp = t2 * t8;
  t288 = t288_tmp * -0.390625;
  t290_tmp = t3 * t9;
  t290 = t290_tmp * -0.390625;
  t296 = t290_tmp * 1.953125;
  t302 = t6 * 2.3749041411042939;
  t312_tmp = t2 * zeta;
  t312 = t312_tmp * -0.1984279141104294;
  t315 = t312_tmp * -1.135927914110429;
  t331 = t2 * 2.23606797749979 * -0.390625;
  t363 = t288_tmp * 0.60151457055214719;
  t364 = t288_tmp * 0.74530291411042937;
  t412 = t402 * zeta_1_inv;
  t419 = t6 * 4.6494303361986518;
  t450 = t432 * zeta_1_inv;
  t454 = t436 * zeta_1_inv;
  t455 = t6 * 3.0338137289060532;
  t460 = t6 * 1.1588137289060529;
  t467 = t6 * 0.66969736086329523;
  t468 = t7 * 1.274233423020201;
  t470 = t7 * 3.33598641106801;
  t473 = t6 * 1.775924360103035;
  t474 = t2 * 1.6362712429686841;
  t478 = t2 * 0.23872875703131571;
  t480_tmp = t2 * zeta_1_inv;
  t480 = t480_tmp * 1.7516909370828331;
  t496 = t2 * t407;
  t499 = t7 * 0.45203618043164762;
  t504 = t480_tmp * 1.3270361804316479;
  t509 = t2 * t421;
  t520 = t480_tmp * 0.063443925130641732;
  t529 = t288_tmp * 1.7516909370828331;
  t542 = t288_tmp * 0.063443925130641732;
  t548 = t288_tmp * 0.93641118043164762;
  t550 = t312_tmp * -0.11541969411414869;
  t160 = eta * 2.23606797749979 * 1.25 * zeta;
  t221 = t8 * t81;
  t229 = eta * 0.87346405371085534;
  t260 = t8 * t111;
  t261 = t8 * t112;
  t282 = t2 * 0.99213957055214719 * zeta_1_inv;
  t284 = t2 * 1.135927914110429 * zeta_1_inv;
  t305 = 2.23606797749979 * t111;
  t306 = 2.23606797749979 * t112;
  t375 = 2.23606797749979 * t288;
  t376 = 2.23606797749979 * (t3 * t8 * -0.390625);
  t377 = 2.23606797749979 * t290;
  t273 = t227 * zeta;
  t343 = t306 * zeta_1_inv;
  t370 = 2.23606797749979 * t261;
  t371 = 2.23606797749979 * (t9 * t112);
  t415 = -t4 * ((-t46 + t132) + t221);
  t616_tmp = eta * t25 + t74;
  t627_tmp = t102 + t157_tmp * -1.953125;
  t639_tmp = eta * t6;
  t648_tmp = -t111 - zeta * 1.773389570552147;
  t671_tmp = (eta * t13 + eta * 0.671875) + t261;
  t687_tmp = t401 + t401 * zeta_1_inv;
  t705_tmp = t160 + t402;
  t706_tmp = t160 + t436;
  t290_tmp = t82 + t171;
  t619_tmp = ((zeta * 0.46875 + t2 * t25) + t2 * 0.546875) - t6 * 0.546875;
  sfvals_tmp =
      -t4 * ((((t671_tmp - t421) + t504) + t548) + 0.078125) +
      (((((((((eta / 32.0 * zeta - t41) + t83) - t82) + t639_tmp * -0.265625) -
           t417) +
          t467) +
         t509) -
        t499) +
       0.015625);
  b_sfvals_tmp =
      ((((((((eta * (zeta_1_inv / 4.0) - t22) + t65) + t73) + t114) + t117) +
         eta * 1.015625 * zeta) +
        t166) +
       0.015625) *
      xi;
  c_sfvals_tmp = t5 * (((t62 + t288) + t290) + 0.078125);
  sfvals[0] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[1] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp =
      t4 * ((((t671_tmp + t421) - t504) - t548) - 0.078125) +
      (((((((((t41 + t157_tmp * -0.03125) - t82) - t83) + eta * t117) - t417) +
          t467) +
         t509) -
        t499) +
       0.015625);
  b_sfvals_tmp =
      ((((((((t158_tmp * -0.25 - t22) + t65) - t73) + t114) + t117) + t135) +
        t157_tmp * -1.015625) +
       0.015625) *
      xi;
  c_sfvals_tmp = t5 * (((t62 + t260) + t290) - 0.078125);
  sfvals[2] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[3] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[4] =
      (((t6 * -6.0529674132156632 + t7 * 5.5264837066078316) +
        zeta * 1.5264837066078321) +
       t4 * ((t288_tmp * 0.026483706607831621 - zeta * 0.27648370660783161) +
             t480_tmp * 0.026483706607831621)) -
      t312_tmp * 0.27648370660783161;
  sfvals_tmp = t4 * (((((t616_tmp - t173) + t261) + t284) + t364) + 0.078125) +
               (((((((((t43 + eta * 0.46875 * zeta) + t111) - t112) + t171) +
                    t639_tmp * -0.546875) +
                   t238) -
                  t268) +
                 t315) -
                0.078125);
  b_sfvals_tmp =
      t5 * (((2.23606797749979 * t62 + 0.17469281074217108) + t375) + t377);
  c_sfvals_tmp =
      ((((((0.34938562148434216 * zeta + t186) - 0.17469281074217108) + t273) +
         t305) +
        t6 * 2.23606797749979 * -0.078125) +
       t343) *
      xi;
  sfvals[5] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[6] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp = t4 * (((((-t179 + t263) + t284) + t364) + t370) + 0.390625) +
               ((((((((t290_tmp + t186) + t238) +
                     eta * 2.23606797749979 * -0.15625 * zeta) -
                    t268) +
                   t3 * 2.23606797749979 * -0.078125) +
                  t312) +
                 t6 * t186) -
                0.078125);
  b_sfvals_tmp =
      ((((t619_tmp + t227) + t186 * zeta) + 2.23606797749979 * t166) +
       0.078125) *
      xi;
  c_sfvals_tmp = t5 * (((t260 + t263 * zeta_1_inv) + t371) - 0.390625);
  sfvals[7] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      t4 * (((((-t179 + t229) + t284) + t364) + t376) + 0.390625) +
      ((((((((t290_tmp + 2.23606797749979 * (eta * 0.15625) * zeta) + t227) +
            t238) +
           2.23606797749979 * t83) -
          t268) +
         t312) +
        t6 * t227) -
       0.078125);
  e_sfvals_tmp =
      ((((t619_tmp + t186) + t273) + 2.23606797749979 * t135) + 0.078125) * xi;
  f_sfvals_tmp = t5 * (((t260 + t229 * zeta_1_inv) + t377) - 0.390625);
  sfvals[8] = (d_sfvals_tmp - e_sfvals_tmp) - f_sfvals_tmp;
  t671_tmp =
      -t4 * (((((t616_tmp + t173) + t261) - t364) -
              t480_tmp * 1.135927914110429) -
             0.078125) +
      (((((((((-t43 + t157_tmp * -0.46875) + t111) + t112) + t6 * t74) + t171) +
          t238) -
         t268) +
        t315) -
       0.078125);
  t619_tmp =
      t5 * (((2.23606797749979 * (t158_tmp * -0.078125) + 0.17469281074217108) +
             t371) +
            t375);
  t290_tmp =
      ((((((t186 + 0.17469281074217108) + 2.23606797749979 * zeta * -0.15625) +
          t6 * 0.17469281074217108) +
         t273) +
        t331) +
       t343) *
      xi;
  sfvals[9] = (t671_tmp + t619_tmp) - t290_tmp;
  sfvals[10] = (t671_tmp - t619_tmp) + t290_tmp;
  sfvals[11] = (d_sfvals_tmp + e_sfvals_tmp) + f_sfvals_tmp;
  sfvals[12] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      t4 * (((t687_tmp + t480) - t477) + t529) +
      (((((t414 + t468) + t157_tmp * -0.38627124296868431) + eta * t460) -
        t473) +
       t550);
  b_sfvals_tmp = (((((t706_tmp + t454) + t460) - t439) + t474) +
                  t2 * (zeta_1_inv * 1.6362712429686841)) *
                 xi;
  sfvals[13] = sfvals_tmp + b_sfvals_tmp;
  c_sfvals_tmp =
      t4 * ((((t407 + t432) + t450) - t520) - t542) +
      (((((-t392 + eta * 1.0112712429686841 * zeta) + t419) + t496) - t470) +
       t639_tmp * -3.0338137289060532);
  d_sfvals_tmp = (((((t705_tmp + t412) - t404) + t455) - t478) +
                  t480_tmp * -0.23872875703131571) *
                 xi;
  sfvals[14] = c_sfvals_tmp - d_sfvals_tmp;
  sfvals[15] = sfvals_tmp - b_sfvals_tmp;
  sfvals[16] = c_sfvals_tmp + d_sfvals_tmp;
  sfvals_tmp = -t4 * (((t687_tmp + t477) - t480) - t529) +
               (((((t414 + eta * 0.38627124296868431 * zeta) + t468) - t473) +
                 t639_tmp * -1.1588137289060529) +
                t550);
  b_sfvals_tmp = (((((t706_tmp + t439) + t454) - t460) - t474) +
                  t480_tmp * -1.6362712429686841) *
                 xi;
  sfvals[17] = sfvals_tmp + b_sfvals_tmp;
  c_sfvals_tmp = -t4 * ((((-t407 + t432) + t450) + t520) + t542) +
                 (((((-t392 + t419) + t157_tmp * -1.0112712429686841) + t496) +
                   eta * t455) -
                  t470);
  d_sfvals_tmp = (((((t705_tmp + t404) + t412) + t478) - t455) +
                  t2 * (zeta_1_inv * 0.23872875703131571)) *
                 xi;
  sfvals[18] = c_sfvals_tmp - d_sfvals_tmp;
  sfvals[19] = sfvals_tmp - b_sfvals_tmp;
  sfvals[20] = c_sfvals_tmp + d_sfvals_tmp;
  sfvals_tmp =
      -t4 * (((((-t178 + t263) + t282) + t363) + t370) + 0.390625) +
      ((((((((t648_tmp + 2.23606797749979 * (eta * 0.78125) * zeta) + t263) -
            t240) +
           t281) +
          t302) +
         t306) +
        t6 * t263) +
       0.390625);
  b_sfvals_tmp =
      t5 * (((t102 * zeta_1_inv + 0.87346405371085534) - t296) + t375);
  c_sfvals_tmp = (((((t627_tmp + 1.7469281074217107 * zeta) + t206) -
                    0.87346405371085534) +
                   t305) +
                  t6 * 2.23606797749979 * -0.390625) *
                 xi;
  sfvals[21] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[22] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp = -t4 * (((((-t178 + t229) + t282) + t363) + t376) + 0.390625) +
               ((((((((t648_tmp + t229) - t240) +
                     eta * 2.23606797749979 * -0.78125 * zeta) +
                    t281) +
                   t302) +
                  t3 * 2.23606797749979 * -0.390625) +
                 t6 * t229) +
                0.390625);
  b_sfvals_tmp =
      t5 * (((t158_tmp * -1.953125 + 0.87346405371085534) + t296) + t375);
  c_sfvals_tmp = (((((t627_tmp + t206) + 0.87346405371085534) +
                    2.23606797749979 * zeta * -0.78125) +
                   t6 * 0.87346405371085534) +
                  t331) *
                 xi;
  sfvals[23] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[24] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp = t37 + t37 * zeta_1_inv;
  sfvals[25] = ((t6 * t37 + t125) - t4 * ((sfvals_tmp + t132) + t221)) -
               t157_tmp * 3.375;
  b_sfvals_tmp = (((t46 + t81) - t6 * 3.375) + t132) * xi;
  sfvals[26] = t415 + b_sfvals_tmp;
  sfvals[27] = ((t37 * zeta + t125) +
                t4 * ((sfvals_tmp + t480_tmp * -3.375) + t288_tmp * -3.375)) -
               t639_tmp * 3.375;
  sfvals[28] = t415 - b_sfvals_tmp;
  sfvals[29] = (((t6 * -13.819615873270291 + t7 * 6.909807936635147) + t391) +
                t4 * ((-t391 + t288_tmp * 6.909807936635147) +
                      t480_tmp * 6.909807936635147)) -
               t312_tmp * 6.909807936635147;
}

// pyra_gl_30_sfunc - Compute shape functions and their derivatives of
void pyra_gl_30_sfunc(double xi, double eta, double zeta, double sfvals[30],
                      double sdvals[90])
{
  double b_sfvals_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double sdvals_tmp;
  double sfvals_tmp;
  double t101;
  double t102;
  double t103;
  double t104;
  double t105;
  double t106;
  double t110;
  double t111;
  double t112;
  double t113;
  double t114;
  double t115;
  double t117;
  double t118;
  double t119;
  double t12;
  double t123;
  double t125;
  double t13;
  double t132;
  double t133;
  double t134;
  double t135;
  double t14;
  double t142;
  double t142_tmp;
  double t144;
  double t15;
  double t150;
  double t152;
  double t156;
  double t156_tmp;
  double t15_tmp;
  double t160;
  double t163;
  double t165;
  double t166;
  double t166_tmp;
  double t167;
  double t171;
  double t172;
  double t173;
  double t175;
  double t176;
  double t177;
  double t178;
  double t179;
  double t18;
  double t181;
  double t182;
  double t183;
  double t183_tmp;
  double t184;
  double t185;
  double t186;
  double t189;
  double t19;
  double t191;
  double t196;
  double t197;
  double t199;
  double t2;
  double t20;
  double t200;
  double t201;
  double t204;
  double t206;
  double t207;
  double t21;
  double t218;
  double t22;
  double t221;
  double t222;
  double t223;
  double t223_tmp;
  double t224;
  double t224_tmp;
  double t225;
  double t226;
  double t227;
  double t229;
  double t230;
  double t231;
  double t232;
  double t233;
  double t235;
  double t238;
  double t239;
  double t240;
  double t241;
  double t243;
  double t244;
  double t245;
  double t246;
  double t25;
  double t250;
  double t26;
  double t260;
  double t261;
  double t263;
  double t266;
  double t268;
  double t269;
  double t271;
  double t272;
  double t273;
  double t279;
  double t280;
  double t281;
  double t282;
  double t284;
  double t285;
  double t286;
  double t288;
  double t29;
  double t290;
  double t291;
  double t292;
  double t293;
  double t294;
  double t295;
  double t296;
  double t297;
  double t298;
  double t299;
  double t3;
  double t302;
  double t305;
  double t306;
  double t307;
  double t308;
  double t312;
  double t312_tmp;
  double t315;
  double t318;
  double t320;
  double t321;
  double t322;
  double t33;
  double t331;
  double t333;
  double t334;
  double t340;
  double t343;
  double t345;
  double t346;
  double t348;
  double t349;
  double t350;
  double t351;
  double t352;
  double t353;
  double t358;
  double t359;
  double t363;
  double t364;
  double t366;
  double t367;
  double t367_tmp;
  double t37;
  double t370;
  double t371;
  double t375;
  double t376;
  double t377;
  double t378;
  double t379;
  double t380;
  double t381;
  double t382;
  double t383;
  double t384;
  double t385;
  double t386;
  double t389;
  double t39;
  double t391;
  double t392;
  double t393;
  double t393_tmp;
  double t395;
  double t396;
  double t397;
  double t398;
  double t399;
  double t4;
  double t40;
  double t400;
  double t401;
  double t402;
  double t403;
  double t404;
  double t405;
  double t407;
  double t408;
  double t409;
  double t41;
  double t412;
  double t413;
  double t414;
  double t415;
  double t417;
  double t418;
  double t419;
  double t42;
  double t421;
  double t428;
  double t43;
  double t432;
  double t433;
  double t434;
  double t435;
  double t436;
  double t437;
  double t438;
  double t439;
  double t44;
  double t440;
  double t442;
  double t445;
  double t447;
  double t448;
  double t450;
  double t451;
  double t452;
  double t454;
  double t455;
  double t456;
  double t459;
  double t46;
  double t460;
  double t467;
  double t468;
  double t47;
  double t470;
  double t473;
  double t474;
  double t475;
  double t477;
  double t478;
  double t479;
  double t48;
  double t480;
  double t481;
  double t482;
  double t486;
  double t487;
  double t49;
  double t492;
  double t493;
  double t496;
  double t497;
  double t499;
  double t5;
  double t504;
  double t505;
  double t509;
  double t51;
  double t512;
  double t515;
  double t517;
  double t519;
  double t52;
  double t520;
  double t521;
  double t528;
  double t529;
  double t530;
  double t531;
  double t532;
  double t533;
  double t535;
  double t540;
  double t542;
  double t543;
  double t544;
  double t548;
  double t550;
  double t551;
  double t555;
  double t573_tmp;
  double t579_tmp;
  double t590;
  double t592;
  double t597;
  double t599;
  double t6;
  double t605;
  double t606;
  double t612;
  double t613;
  double t616_tmp;
  double t619;
  double t62;
  double t620;
  double t627;
  double t627_tmp;
  double t628;
  double t63;
  double t631;
  double t632;
  double t639_tmp;
  double t63_tmp;
  double t64;
  double t645_tmp;
  double t648_tmp;
  double t65;
  double t657;
  double t661;
  double t661_tmp;
  double t671_tmp;
  double t681;
  double t686;
  double t687_tmp;
  double t690;
  double t693;
  double t7;
  double t705;
  double t706;
  double t707;
  double t709;
  double t73;
  double t74;
  double t8;
  double t81;
  double t82;
  double t83;
  double t84;
  double t89;
  double t9;
  double t92;
  double t92_tmp;
  double t93;
  double t95;
  double t97;
  double zeta_1_inv;
  zeta_1_inv = 1.0 / ((zeta - 1.0) + 1.0E-100);
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t4 = xi * xi;
  t5 = std::pow(xi, 3.0);
  t6 = zeta * zeta;
  t7 = std::pow(zeta, 3.0);
  t8 = zeta_1_inv * zeta_1_inv;
  t9 = std::pow(zeta_1_inv, 3.0);
  t12 = zeta_1_inv / 4.0;
  t13 = zeta_1_inv * 0.75;
  t15_tmp = eta * zeta_1_inv;
  t15 = t15_tmp * 1.5;
  t18 = eta * 6.75;
  t19 = eta / 32.0;
  t20 = eta * 0.15625;
  t21 = zeta * 6.75;
  t22 = zeta / 32.0;
  t25 = zeta_1_inv * 0.625;
  t29 = t15_tmp * -0.25;
  t37 = eta * 3.375;
  t39 = eta * 0.46875;
  t40 = eta * 0.78125;
  t41 = eta / 64.0;
  t42 = eta * 1.09375;
  t43 = eta * 0.078125;
  t44 = eta * 1.34375;
  t46 = zeta * 3.375;
  t47 = zeta * 0.46875;
  t48 = zeta * 0.53125;
  t49 = zeta * 1.09375;
  t51 = zeta_1_inv * 3.375;
  t52 = zeta_1_inv * 0.078125;
  t73 = eta * 0.234375;
  t74 = eta * 0.546875;
  t101 = eta * 1.015625;
  t102 = eta * 1.953125;
  t103 = zeta * 1.015625;
  t104 = zeta * 1.953125;
  t105 = zeta_1_inv * 1.953125;
  t123 = t15_tmp * 5.859375;
  t156_tmp = eta * zeta;
  t156 = t156_tmp * -1.015625;
  t171 = zeta * 0.35467791411042943;
  t172 = zeta * 0.39685582822085891;
  t173 = zeta * 0.1984279141104294;
  t175 = zeta * 1.9842791411042939;
  t176 = zeta * 2.271855828220859;
  t177 = zeta * 0.94996165644171782;
  t178 = zeta * 0.99213957055214719;
  t179 = zeta * 1.135927914110429;
  t197 = t15_tmp * 1.9842791411042939;
  t199 = t15_tmp * 2.271855828220859;
  t218 = zeta * 4.7498082822085887;
  t241 = t156_tmp * -0.39685582822085891;
  t243 = t156_tmp * -2.271855828220859;
  t391 = zeta * 6.909807936635147;
  t392 = zeta * 1.313443925130642;
  t395 = zeta * 9.2988606723973035;
  t396 = zeta * 2.3176274578121059;
  t397 = zeta * 0.52907236086329523;
  t398 = zeta * 1.33939472172659;
  t399 = zeta * 3.5518487202060691;
  t400 = eta * 1.0112712429686841;
  t401 = eta * 1.6362712429686841;
  t402 = eta * 2.0225424859373691;
  t403 = eta * 3.2725424859373691;
  t404 = zeta * 1.0112712429686841;
  t405 = zeta_1_inv * 1.6362712429686841;
  t407 = zeta * 0.30217268216195747;
  t408 = zeta * 0.604345364323915;
  t409 = zeta * 6.0676274578121054;
  t414 = zeta * 0.501690937082833;
  t417 = zeta * 0.23328618043164759;
  t421 = zeta * 0.26453618043164762;
  t428 = t15_tmp * 2.654072360863295;
  t432 = eta * 0.23872875703131571;
  t433 = eta * 0.47745751406263143;
  t434 = t15_tmp * 3.5033818741656662;
  t435 = eta * 0.38627124296868431;
  t436 = eta * 0.77254248593736852;
  t437 = zeta_1_inv * 0.23872875703131571;
  t439 = zeta * 0.38627124296868431;
  t440 = zeta_1_inv * 0.77254248593736852;
  t442 = zeta * 0.23083938822829739;
  t445 = t15_tmp * -2.0225424859373691;
  t456 = t15_tmp * 0.12688785026128349;
  t477 = zeta * 0.11541969411414869;
  t486 = t15_tmp * -0.77254248593736852;
  t493 = t156_tmp * -0.23083938822829739;
  t14 = eta * t12;
  t26 = t18 * zeta;
  t33 = t18 * zeta_1_inv;
  t62 = t43 * zeta_1_inv;
  t63_tmp = eta * t8;
  t63 = t63_tmp / 4.0;
  t64 = t63_tmp * 0.75;
  t65 = t2 * t13;
  t81 = t2 * 3.375;
  t82 = t2 * 0.078125;
  t83 = t3 * 0.078125;
  t84 = t6 * 3.375;
  t89 = t73 * zeta_1_inv;
  t92_tmp = t2 * zeta_1_inv;
  t92 = t92_tmp * -0.75;
  t93 = t63_tmp * 0.625;
  t95 = t8 * t18;
  t97 = t92_tmp * 6.75;
  t106 = eta * 2.23606797749979 * 1.25;
  t110 = t2 * 0.234375;
  t111 = t2 * 0.390625;
  t112 = t3 * 0.390625;
  t113 = t2 * 0.546875;
  t114 = t2 * 0.671875;
  t115 = 2.23606797749979 * zeta * 1.25;
  t117 = t6 * 0.265625;
  t118 = t6 * 0.546875;
  t119 = t101 * zeta;
  t125 = t2 * t46;
  t132 = t2 * t51;
  t133 = t8 * t40;
  t134 = t8 * t43;
  t135 = t3 * t52;
  t142_tmp = t2 * t8;
  t142 = t142_tmp * 0.75;
  t144 = 2.23606797749979 * t20;
  t150 = t2 * 1.171875;
  t163 = t92_tmp * -3.375;
  t165 = t63_tmp * -0.078125;
  t166_tmp = t3 * zeta_1_inv;
  t166 = t166_tmp * -0.078125;
  t181 = t142_tmp * 0.625;
  t182 = t142_tmp * 6.75;
  t183_tmp = t2 * t9;
  t183 = t183_tmp * 6.75;
  t184 = eta * 2.23606797749979 * -0.15625;
  t185 = 2.23606797749979 * t40;
  t186 = 2.23606797749979 * t43;
  t189 = 2.23606797749979 * zeta * -0.15625;
  t196 = eta * t175;
  t200 = eta * 2.23606797749979 * zeta * -1.25;
  t204 = t92_tmp * -0.234375;
  t206 = t3 * t105;
  t207 = t92_tmp * 5.859375;
  t222 = t183_tmp * 0.78125;
  t223_tmp = t3 * t8;
  t223 = t223_tmp * 0.78125;
  t224_tmp = t3 * t9;
  t224 = t224_tmp * 0.78125;
  t226 = eta * 2.23606797749979 * -0.78125;
  t227 = eta * 2.23606797749979 * -0.078125;
  t230 = t2 * 0.1984279141104294;
  t231 = t2 * 0.99213957055214719;
  t232 = t2 * 1.135927914110429;
  t233 = 2.23606797749979 * zeta * -0.78125;
  t235 = 2.23606797749979 * zeta * -0.078125;
  t238 = t7 * 0.1984279141104294;
  t239 = t6 * 0.59528374233128833;
  t240 = t7 * 0.99213957055214719;
  t250 = t166_tmp * -1.953125;
  t263 = eta * 2.23606797749979 * -0.390625;
  t266 = 2.23606797749979 * zeta_1_inv * -0.390625;
  t268 = t6 * 0.47498082822085891;
  t269 = t6 * 2.976418711656442;
  t279 = t92_tmp * 1.9842791411042939;
  t280 = t92_tmp * 2.271855828220859;
  t281 = t2 * t178;
  t285 = t63_tmp * 1.2030291411042939;
  t286 = t63_tmp * 1.490605828220859;
  t288 = t142_tmp * -0.390625;
  t290 = t224_tmp * -0.390625;
  t293 = t224_tmp * 1.171875;
  t295 = t223_tmp * 1.953125;
  t296 = t224_tmp * 1.953125;
  t297 = t183_tmp * 5.859375;
  t298 = t224_tmp * 5.859375;
  t302 = t6 * 2.3749041411042939;
  t307 = t6 * 2.23606797749979 * -0.078125;
  t312_tmp = t2 * zeta;
  t312 = t312_tmp * -0.1984279141104294;
  t315 = t312_tmp * -1.135927914110429;
  t321 = t142_tmp * -1.171875;
  t322 = t183_tmp * -1.171875;
  t331 = t2 * 2.23606797749979 * -0.390625;
  t334 = t6 * 2.23606797749979 * -0.390625;
  t346 = t142_tmp * 1.2030291411042939;
  t348 = t142_tmp * 1.490605828220859;
  t349 = t183_tmp * 1.490605828220859;
  t363 = t142_tmp * 0.60151457055214719;
  t364 = t142_tmp * 0.74530291411042937;
  t366 = t223_tmp * 2.23606797749979 * -0.78125;
  t367_tmp = t224_tmp * 2.23606797749979;
  t367 = t367_tmp * -0.78125;
  t384 = t367_tmp * -1.171875;
  t412 = t402 * zeta_1_inv;
  t413 = t403 * zeta_1_inv;
  t418 = eta * t408;
  t419 = t6 * 4.6494303361986518;
  t438 = eta * t397;
  t447 = t6 * 3.8227002690606051;
  t448 = t2 * 0.30217268216195747;
  t450 = t432 * zeta_1_inv;
  t451 = t433 * zeta_1_inv;
  t454 = t436 * zeta_1_inv;
  t455 = t6 * 3.0338137289060532;
  t459 = t6 * 10.00795923320403;
  t460 = t6 * 1.1588137289060529;
  t467 = t6 * 0.66969736086329523;
  t468 = t7 * 1.274233423020201;
  t470 = t7 * 3.33598641106801;
  t473 = t6 * 1.775924360103035;
  t474 = t2 * 1.6362712429686841;
  t475 = t6 * 1.356108541294943;
  t478 = t2 * 0.23872875703131571;
  t479 = t63_tmp * 3.5033818741656662;
  t480 = t92_tmp * 1.7516909370828331;
  t481 = t92_tmp * 3.5033818741656662;
  t482 = t63_tmp * 1.872822360863295;
  t487 = t142_tmp * 6.909807936635147;
  t492 = t2 * t405;
  t496 = t2 * t407;
  t497 = t2 * 0.26453618043164762;
  t499 = t7 * 0.45203618043164762;
  t504 = t92_tmp * 1.3270361804316479;
  t505 = t92_tmp * 2.654072360863295;
  t509 = t2 * t421;
  t512 = t2 * 0.11541969411414869;
  t515 = t92_tmp * -1.6362712429686841;
  t517 = t2 * t437;
  t519 = t63_tmp * 0.12688785026128349;
  t520 = t92_tmp * 0.063443925130641732;
  t521 = t92_tmp * 0.12688785026128349;
  t528 = t142_tmp * 1.3270361804316479;
  t529 = t142_tmp * 1.7516909370828331;
  t530 = t142_tmp * 3.5033818741656662;
  t531 = t183_tmp * 3.5033818741656662;
  t532 = t142_tmp * 1.872822360863295;
  t533 = t183_tmp * 1.872822360863295;
  t535 = t92_tmp * -0.23872875703131571;
  t542 = t142_tmp * 0.063443925130641732;
  t543 = t142_tmp * 0.12688785026128349;
  t544 = t183_tmp * 0.12688785026128349;
  t548 = t142_tmp * 0.93641118043164762;
  t550 = t312_tmp * -0.11541969411414869;
  t555 = t142_tmp * 0.026483706607831621;
  t152 = 0.34938562148434216 * zeta;
  t160 = t106 * zeta;
  t167 = t110 * zeta_1_inv;
  t191 = 1.7469281074217107 * zeta;
  t201 = t144 * zeta;
  t221 = t8 * t81;
  t225 = t8 * t83;
  t229 = eta * 0.87346405371085534;
  t244 = t184 * zeta;
  t245 = t185 * zeta;
  t260 = t8 * t111;
  t261 = t8 * t112;
  t271 = t6 * 0.17469281074217108;
  t272 = t226 * zeta;
  t282 = t231 * zeta_1_inv;
  t284 = t232 * zeta_1_inv;
  t291 = t8 * t150;
  t292 = t9 * t150;
  t166_tmp = t3 * (t8 * t8);
  t294 = t166_tmp * 1.171875;
  t299 = t166_tmp * 5.859375;
  t305 = 2.23606797749979 * t111;
  t306 = 2.23606797749979 * t112;
  t308 = t6 * 0.87346405371085534;
  t318 = 2.23606797749979 * t133;
  t320 = 2.23606797749979 * t135;
  t333 = 2.23606797749979 * t150;
  t340 = 2.23606797749979 * t166;
  t345 = t8 * t232;
  t350 = t183_tmp * 1.7469281074217107;
  t351 = t223_tmp * 1.7469281074217107;
  t352 = t224_tmp * 1.7469281074217107;
  t358 = t3 * t266;
  t375 = 2.23606797749979 * t288;
  t376 = 2.23606797749979 * (t223_tmp * -0.390625);
  t377 = 2.23606797749979 * t290;
  t380 = t224_tmp * 2.6203921611325662;
  t381 = t166_tmp * 2.6203921611325662;
  t382 = 2.23606797749979 * t321;
  t383 = 2.23606797749979 * t322;
  t385 = t166_tmp * 2.23606797749979 * -1.171875;
  t389 = -xi * ((-t21 + t97) + t182);
  t540 = t8 * t474;
  t551 = t8 * t478;
  t592 = (((((((t14 - t22) + t65) + t73) + t114) + t117) + t119) + t166) +
         0.015625;
  t224_tmp = t15_tmp * 1.25 + t42;
  t597 = -xi * (((((t224_tmp + t172) + t223) - t280) - t348) - 0.15625);
  t599 = (((((((t29 - t22) + t65) - t73) + t114) + t117) + t135) + t156) +
         0.015625;
  t613 = -xi * (((((-t175 + t185) + t279) + t346) + t366) + 0.78125);
  t661_tmp = (t15 + t44) + t223;
  t661 = -xi * ((((t661_tmp - t397) + t505) + t532) + 0.15625);
  t166_tmp = t403 + t413;
  t686 = -xi * (((t166_tmp + t442) - t481) - t530);
  t693 = -xi * ((((-t408 + t433) + t451) + t521) + t543);
  t246 = t186 * zeta;
  t273 = t227 * zeta;
  t343 = t306 * zeta_1_inv;
  t353 = 2.23606797749979 * t225;
  t359 = t333 * zeta_1_inv;
  t370 = 2.23606797749979 * t261;
  t371 = 2.23606797749979 * (t9 * t112);
  t378 = 2.23606797749979 * t291;
  t379 = 2.23606797749979 * t292;
  t386 = -t4 * (t33 + t95);
  t415 = -t4 * ((-t46 + t132) + t221);
  t452 = ((t46 + t81) - t84) + t132;
  t579_tmp = t345 + t349;
  t590 = (((((t224_tmp - t172) + t223) + t280) + t348) + 0.15625) * xi;
  t605 = (((((t185 - t176) + t280) + t348) + t366) + 0.78125) * xi;
  t612 = -xi * (((((-t175 + t226) + t279) + t346) + t351) + 0.78125);
  t616_tmp = eta * t25 + t74;
  t627_tmp = t102 + t156_tmp * -1.953125;
  t627 = ((((t627_tmp + t206) + 0.87346405371085534) + t233) + t308) + t331;
  t223_tmp = t13 + t291;
  t639_tmp = eta * t6;
  t648_tmp = -t111 - zeta * 1.773389570552147;
  t671_tmp = (eta * t13 + eta * 0.671875) + t261;
  t681 = (((t166_tmp - t442) + t481) + t530) * xi;
  t687_tmp = t401 + t401 * zeta_1_inv;
  t166_tmp = t160 + t402;
  t705 = ((((t166_tmp + t404) + t412) + t478) - t455) + t517;
  t367_tmp = t160 + t436;
  t706 = ((((t367_tmp + t454) + t460) - t439) + t474) + t492;
  t707 = ((((t166_tmp + t412) - t404) + t455) - t478) + t535;
  t709 = ((((t367_tmp + t439) + t454) - t460) - t474) + t515;
  t393_tmp = t183 + t221;
  t393 = t4 * (t393_tmp + 3.375);
  t573_tmp = t8 * t231 + t183_tmp * 1.2030291411042939;
  t606 = (((((-t176 + t226) + t280) + t348) + t351) + 0.78125) * xi;
  t628 = ((((t627_tmp + t191) + t206) - 0.87346405371085534) + t305) + t334;
  t645_tmp = t82 + t171;
  t657 = ((((t661_tmp + t397) - t505) - t532) - 0.15625) * xi;
  t690 = ((((t408 + t433) + t451) - t521) - t543) * xi;
  t166_tmp = ((t47 + t2 * t25) + t113) - t118;
  t619 = (((t166_tmp + t186) + t273) + t320) + 0.078125;
  t620 = (((t166_tmp + t227) + t246) + t340) + 0.078125;
  t631 =
      (((((t186 + 0.17469281074217108) + t189) + t271) + t273) + t331) + t343;
  t632 =
      (((((t152 + t186) - 0.17469281074217108) + t273) + t305) + t307) + t343;
  sfvals_tmp =
      -t4 * ((((t671_tmp - t421) + t504) + t548) + 0.078125) +
      (((((((((t19 * zeta - t41) + t83) - t82) + t639_tmp * -0.265625) - t417) +
          t467) +
         t509) -
        t499) +
       0.015625);
  b_sfvals_tmp = t592 * xi;
  t367_tmp = t5 * (((t62 + t288) + t290) + 0.078125);
  sfvals[0] = (sfvals_tmp - b_sfvals_tmp) + t367_tmp;
  sfvals[1] = (sfvals_tmp + b_sfvals_tmp) - t367_tmp;
  sfvals_tmp =
      t4 * ((((t671_tmp + t421) - t504) - t548) - 0.078125) +
      (((((((((t41 + t156_tmp * -0.03125) - t82) - t83) + eta * t117) - t417) +
          t467) +
         t509) -
        t499) +
       0.015625);
  b_sfvals_tmp = t599 * xi;
  t367_tmp = t5 * (((t62 + t260) + t290) - 0.078125);
  sfvals[2] = (sfvals_tmp + b_sfvals_tmp) + t367_tmp;
  sfvals[3] = (sfvals_tmp - b_sfvals_tmp) - t367_tmp;
  sfvals[4] = (((t6 * -6.0529674132156632 + t7 * 5.5264837066078316) +
                zeta * 1.5264837066078321) +
               t4 * ((t555 - zeta * 0.27648370660783161) +
                     t92_tmp * 0.026483706607831621)) -
              t312_tmp * 0.27648370660783161;
  sfvals_tmp = t4 * (((((t616_tmp - t173) + t261) + t284) + t364) + 0.078125) +
               (((((((((t43 + t39 * zeta) + t111) - t112) + t171) +
                    t639_tmp * -0.546875) +
                   t238) -
                  t268) +
                 t315) -
                0.078125);
  b_sfvals_tmp =
      t5 * (((2.23606797749979 * t62 + 0.17469281074217108) + t375) + t377);
  t367_tmp = t632 * xi;
  sfvals[5] = (sfvals_tmp - b_sfvals_tmp) - t367_tmp;
  sfvals[6] = (sfvals_tmp + b_sfvals_tmp) + t367_tmp;
  sfvals_tmp = t4 * (((((-t179 + t263) + t284) + t364) + t370) + 0.390625) +
               ((((((((t645_tmp + t186) + t238) + t244) - t268) +
                   t3 * 2.23606797749979 * -0.078125) +
                  t312) +
                 t6 * t186) -
                0.078125);
  b_sfvals_tmp = t620 * xi;
  t367_tmp = t5 * (((t260 + t263 * zeta_1_inv) + t371) - 0.390625);
  sfvals[7] = (sfvals_tmp - b_sfvals_tmp) - t367_tmp;
  c_sfvals_tmp =
      t4 * (((((-t179 + t229) + t284) + t364) + t376) + 0.390625) +
      ((((((((t645_tmp + t201) + t227) + t238) + 2.23606797749979 * t83) -
          t268) +
         t312) +
        t6 * t227) -
       0.078125);
  d_sfvals_tmp = t619 * xi;
  e_sfvals_tmp = t5 * (((t260 + t229 * zeta_1_inv) + t377) - 0.390625);
  sfvals[8] = (c_sfvals_tmp - d_sfvals_tmp) - e_sfvals_tmp;
  f_sfvals_tmp =
      -t4 *
          (((((t616_tmp + t173) + t261) - t364) - t92_tmp * 1.135927914110429) -
           0.078125) +
      (((((((((-t43 + t156_tmp * -0.46875) + t111) + t112) + t6 * t74) + t171) +
          t238) -
         t268) +
        t315) -
       0.078125);
  t166_tmp =
      t5 * (((2.23606797749979 * (t15_tmp * -0.078125) + 0.17469281074217108) +
             t371) +
            t375);
  g_sfvals_tmp = t631 * xi;
  sfvals[9] = (f_sfvals_tmp + t166_tmp) - g_sfvals_tmp;
  sfvals[10] = (f_sfvals_tmp - t166_tmp) + g_sfvals_tmp;
  sfvals[11] = (c_sfvals_tmp + d_sfvals_tmp) + e_sfvals_tmp;
  sfvals[12] = (sfvals_tmp + b_sfvals_tmp) + t367_tmp;
  sfvals_tmp =
      t4 * (((t687_tmp + t480) - t477) + t529) +
      (((((t414 + t468) + t156_tmp * -0.38627124296868431) + eta * t460) -
        t473) +
       t550);
  b_sfvals_tmp = t706 * xi;
  sfvals[13] = sfvals_tmp + b_sfvals_tmp;
  t367_tmp = t4 * ((((t407 + t432) + t450) - t520) - t542) +
             (((((-t392 + t400 * zeta) + t419) + t496) - t470) +
              t639_tmp * -3.0338137289060532);
  c_sfvals_tmp = t707 * xi;
  sfvals[14] = t367_tmp - c_sfvals_tmp;
  sfvals[15] = sfvals_tmp - b_sfvals_tmp;
  sfvals[16] = t367_tmp + c_sfvals_tmp;
  sfvals_tmp = -t4 * (((t687_tmp + t477) - t480) - t529) +
               (((((t414 + t435 * zeta) + t468) - t473) +
                 t639_tmp * -1.1588137289060529) +
                t550);
  b_sfvals_tmp = t709 * xi;
  sfvals[17] = sfvals_tmp + b_sfvals_tmp;
  t367_tmp = -t4 * ((((-t407 + t432) + t450) + t520) + t542) +
             (((((-t392 + t419) + t156_tmp * -1.0112712429686841) + t496) +
               eta * t455) -
              t470);
  c_sfvals_tmp = t705 * xi;
  sfvals[18] = t367_tmp - c_sfvals_tmp;
  sfvals[19] = sfvals_tmp - b_sfvals_tmp;
  sfvals[20] = t367_tmp + c_sfvals_tmp;
  sfvals_tmp =
      -t4 * (((((-t178 + t263) + t282) + t363) + t370) + 0.390625) +
      ((((((((t648_tmp + t245) + t263) - t240) + t281) + t302) + t306) +
        t6 * t263) +
       0.390625);
  b_sfvals_tmp =
      t5 * (((t102 * zeta_1_inv + 0.87346405371085534) - t296) + t375);
  t367_tmp = t628 * xi;
  sfvals[21] = (sfvals_tmp + b_sfvals_tmp) + t367_tmp;
  sfvals[22] = (sfvals_tmp - b_sfvals_tmp) - t367_tmp;
  sfvals_tmp = -t4 * (((((-t178 + t229) + t282) + t363) + t376) + 0.390625) +
               ((((((((t648_tmp + t229) - t240) + t272) + t281) + t302) +
                  t3 * 2.23606797749979 * -0.390625) +
                 t6 * t229) +
                0.390625);
  b_sfvals_tmp =
      t5 * (((t15_tmp * -1.953125 + 0.87346405371085534) + t296) + t375);
  t367_tmp = t627 * xi;
  sfvals[23] = (sfvals_tmp - b_sfvals_tmp) + t367_tmp;
  sfvals[24] = (sfvals_tmp + b_sfvals_tmp) - t367_tmp;
  sfvals_tmp = t37 + t37 * zeta_1_inv;
  sfvals[25] = ((t6 * t37 + t125) - t4 * ((sfvals_tmp + t132) + t221)) -
               t156_tmp * 3.375;
  b_sfvals_tmp = t452 * xi;
  sfvals[26] = t415 + b_sfvals_tmp;
  sfvals[27] =
      ((t37 * zeta + t125) + t4 * ((sfvals_tmp + t163) + t142_tmp * -3.375)) -
      t639_tmp * 3.375;
  sfvals[28] = t415 - b_sfvals_tmp;
  sfvals[29] = (((t6 * -13.819615873270291 + t7 * 6.909807936635147) + t391) +
                t4 * ((-t391 + t487) + t92_tmp * 6.909807936635147)) -
               t312_tmp * 6.909807936635147;
  sdvals_tmp = t4 * (((t89 + t321) - t293) + 0.234375);
  sdvals[0] =
      (((((((((t22 + t29) + t92) - t73) + t135) - t114) - t117) + t156) -
        0.015625) +
       t661) +
      sdvals_tmp;
  t648_tmp = (((((t22 - t20) + t110) - t117) + t438) - 0.015625) +
             -t4 * (((t223_tmp + t428) + t482) + 0.671875);
  t312_tmp = xi * (((((t12 + t15) + t44) + t103) + t204) + 0.234375);
  t671_tmp = t5 * ((-t52 + t133) + t292);
  sdvals[1] = (t648_tmp - t312_tmp) - t671_tmp;
  t687_tmp = t4 * ((((t64 + t224) + t528) + t533) + 0.26453618043164762) +
             (((((t19 + t156_tmp * -0.53125) + t398) + t497) - t475) -
              0.23328618043164759);
  t616_tmp = xi * (((((t48 - t63) + t101) - t142) + t225) - 0.03125);
  t639_tmp = t5 * ((t165 + t222) + t294);
  sdvals[2] = (t687_tmp - t616_tmp) + t639_tmp;
  sdvals[3] = (t592 + t661) - sdvals_tmp;
  sdvals[4] = (t648_tmp + t312_tmp) + t671_tmp;
  sdvals[5] = (t687_tmp + t616_tmp) - t639_tmp;
  sdvals_tmp = t4 * (((t89 + t291) - t293) - 0.234375);
  sdvals[6] = (t599 + t657) + sdvals_tmp;
  t648_tmp = (((((-t20 - t22) + t117) - t110) + t438) + 0.015625) +
             t4 * (((t223_tmp - t428) - t482) + 0.671875);
  t312_tmp = xi * (((((t15 - t12) + t44) - t103) + t167) - 0.234375);
  t671_tmp = t5 * ((t52 + t133) + t322);
  sdvals[7] = (t648_tmp + t312_tmp) + t671_tmp;
  t687_tmp =
      t4 * ((((-t64 - t224) + t528) + t533) + 0.26453618043164762) +
      (((((-t19 + eta * t48) + t398) + t497) - t475) - 0.23328618043164759);
  t616_tmp = xi * (((((-t48 - t63) + t101) + t142) + t225) + 0.03125);
  t639_tmp = t5 * ((t134 + t222) - t294);
  sdvals[8] = (t687_tmp - t616_tmp) - t639_tmp;
  sdvals[9] =
      (((((((((t14 + t22) + t73) + t92) + t119) - t114) - t117) + t166) -
        0.015625) +
       t657) -
      sdvals_tmp;
  sdvals[10] = (t648_tmp - t312_tmp) - t671_tmp;
  sdvals[11] = (t687_tmp + t616_tmp) + t639_tmp;
  sdvals[12] =
      xi * ((zeta * -0.55296741321566323 + t142_tmp * 0.052967413215663242) +
            t92_tmp * 0.052967413215663242);
  sdvals[13] = t156_tmp * -0.55296741321566323 +
               t4 * (t63_tmp * 0.052967413215663242 +
                     0.052967413215663242 * eta * zeta_1_inv);
  sdvals[14] =
      (((t2 * -0.27648370660783161 + t6 * 16.5794511198235) -
        zeta * 12.10593482643133) -
       t4 * ((t555 + t183_tmp * 0.052967413215663242) + 0.27648370660783161)) +
      1.5264837066078321;
  sdvals_tmp =
      t4 * (((2.23606797749979 * t89 + 0.52407843222651329) + t382) + t384);
  sdvals[15] =
      (t590 +
       ((((((t189 + 0.17469281074217108) + t227) + t246) + t271) + t331) +
        t358)) -
      sdvals_tmp;
  t648_tmp = (((((t40 + t47) - t118) - t150) + t243) + 0.078125) +
             t4 * ((((t25 + t199) + t286) + t291) + 0.546875);
  t312_tmp = xi * (((t185 + 0.17469281074217108) + t235) + t359);
  t671_tmp = t5 * ((2.23606797749979 * zeta_1_inv * -0.078125 + t318) + t379);
  sdvals[16] = (t648_tmp - t312_tmp) + t671_tmp;
  t687_tmp = (((((t39 + t156_tmp * -1.09375) - t177) + t239) - t232) +
              0.35467791411042943) +
             -t4 * ((((t93 + t224) + t345) + t349) + 0.1984279141104294);
  t616_tmp = xi * (((t152 - 0.34938562148434216) + t186) + t370);
  t639_tmp = t5 * ((2.23606797749979 * t165 + t350) + t381);
  sdvals[17] = (t687_tmp + t616_tmp) - t639_tmp;
  sdvals[18] = (t590 + t632) + sdvals_tmp;
  sdvals[19] = (t648_tmp + t312_tmp) - t671_tmp;
  sdvals[20] = (t687_tmp - t616_tmp) + t639_tmp;
  sdvals_tmp = ((-t47 + t118) + t92_tmp * -0.625) - t113;
  t648_tmp =
      t4 * (((t291 + eta * 2.23606797749979 * zeta_1_inv * -1.171875) + t380) -
            1.171875);
  sdvals[21] =
      (t606 + ((((sdvals_tmp + t186) + t273) + t320) - 0.078125)) - t648_tmp;
  t312_tmp = t4 * (((t199 - 0.87346405371085534) + t286) + t378) +
             (((((t20 + 0.17469281074217108) + t189) + t241) + t271) +
              t2 * 2.23606797749979 * -0.234375);
  t671_tmp =
      xi * (((t224_tmp + 0.17469281074217108 * zeta) - 0.17469281074217108) +
            2.23606797749979 * t204);
  t687_tmp = t5 * ((t133 + t266) + t379);
  sdvals[22] = (t312_tmp - t671_tmp) - t687_tmp;
  t616_tmp = -t4 * ((t579_tmp + t352) + 1.135927914110429) +
             (((((t184 + t201) - t177) + t239) - t230) + 0.35467791411042943);
  t639_tmp = xi * ((((-t49 + t186) - t181) + t353) + 0.46875);
  t661_tmp = t5 * ((t222 + t8 * t263) + t381);
  sdvals[23] = (t616_tmp - t639_tmp) + t661_tmp;
  t627_tmp =
      t4 * (((t291 + eta * 2.6203921611325662 * zeta_1_inv) + t384) - 1.171875);
  sdvals[24] =
      (t605 + ((((sdvals_tmp + t227) + t246) + t340) - 0.078125)) - t627_tmp;
  sdvals_tmp = t4 * (((t199 + 0.87346405371085534) + t286) + t382) +
               (((((t20 + t152) - 0.17469281074217108) + t241) +
                 2.23606797749979 * t110) +
                t307);
  t645_tmp = xi * (((t224_tmp + 0.17469281074217108) + t235) +
                   2.23606797749979 * t167);
  b_sfvals_tmp = t5 * ((t133 + 0.87346405371085534 * zeta_1_inv) + t383);
  sdvals[25] = (sdvals_tmp - t645_tmp) - b_sfvals_tmp;
  sfvals_tmp = -t4 * ((t579_tmp + t367) + 1.135927914110429) +
               (((((t144 - t177) + t239) + t244) - t230) + 0.35467791411042943);
  d_sfvals_tmp = xi * ((((t49 + t181) + t186) + t353) - 0.46875);
  c_sfvals_tmp = t5 * ((t222 + t8 * t229) + t385);
  sdvals[26] = (sfvals_tmp + d_sfvals_tmp) + c_sfvals_tmp;
  e_sfvals_tmp =
      t4 * (((2.23606797749979 * (t15_tmp * -0.234375) + 0.52407843222651329) +
             t380) +
            t382);
  sdvals[27] =
      (t597 +
       ((((((t152 - 0.17469281074217108) + t227) + t246) + t305) + t307) +
        t358)) +
      e_sfvals_tmp;
  f_sfvals_tmp = (((((t40 - t47) + t118) + t150) + t243) - 0.078125) +
                 -t4 * ((((t25 - t199) - t286) + t291) + 0.546875);
  g_sfvals_tmp = xi * (((t226 + 0.17469281074217108) + t235) + t359);
  t224_tmp = t5 * ((2.23606797749979 * t52 + t318) + t383);
  sdvals[28] = (f_sfvals_tmp - g_sfvals_tmp) - t224_tmp;
  t223_tmp =
      (((((t42 * zeta - t39) - t177) + t239) - t232) + 0.35467791411042943) +
      -t4 * ((((-t93 - t224) + t345) + t349) + 0.1984279141104294);
  t367_tmp = xi * (((t186 + 0.34938562148434216) + t189) + t370);
  t166_tmp = t5 * ((2.23606797749979 * t134 + t350) + t385);
  sdvals[29] = (t223_tmp + t367_tmp) + t166_tmp;
  sdvals[30] = (t597 + t631) - e_sfvals_tmp;
  sdvals[31] = (f_sfvals_tmp + g_sfvals_tmp) + t224_tmp;
  sdvals[32] = (t223_tmp - t367_tmp) - t166_tmp;
  sdvals[33] = (t605 + t619) + t627_tmp;
  sdvals[34] = (sdvals_tmp + t645_tmp) + b_sfvals_tmp;
  sdvals[35] = (sfvals_tmp - d_sfvals_tmp) - c_sfvals_tmp;
  sdvals[36] = (t606 + t620) + t648_tmp;
  sdvals[37] = (t312_tmp + t671_tmp) + t687_tmp;
  sdvals[38] = (t616_tmp + t639_tmp) - t661_tmp;
  sdvals[39] = t681 + t706;
  sdvals_tmp = ((t460 - t439) + t493) +
               t4 * (((t405 + t434) + t479) + 1.6362712429686841);
  t648_tmp = xi * ((((t115 + t403) + t413) + t440) + 0.77254248593736852);
  sdvals[40] = sdvals_tmp + t648_tmp;
  t312_tmp =
      -t4 * (((t8 * t401 + t529) + t531) + 0.11541969411414869) +
      (((((eta * t396 - t399) + t447) - t435) - t512) + 0.501690937082833);
  t671_tmp = xi * ((((-t106 - t396) + t8 * t436) + t540) + 0.38627124296868431);
  sdvals[41] = t312_tmp - t671_tmp;
  sdvals[42] =
      t690 + ((((((t200 + t404) - t402) + t445) + t478) - t455) + t517);
  t687_tmp = ((t404 + t418) - t455) +
             t4 * (((t437 - t456) - t519) + 0.23872875703131571);
  t166_tmp = t115 + zeta_1_inv * 2.0225424859373691;
  t616_tmp = xi * (((t166_tmp - t433) + t15_tmp * -0.47745751406263143) +
                   2.0225424859373691);
  sdvals[43] = t687_tmp - t616_tmp;
  t639_tmp =
      t4 * (((t63_tmp * -0.23872875703131571 + t542) + t544) +
            0.30217268216195747) +
      (((((t395 + t400) + t448) + t156_tmp * -6.0676274578121054) - t459) -
       1.313443925130642);
  t661_tmp = xi * ((((t106 + t409) + t63_tmp * -2.0225424859373691) + t551) -
                   1.0112712429686841);
  sdvals[44] = t639_tmp - t661_tmp;
  sdvals[45] =
      t681 + ((((((t200 + t439) - t436) + t486) - t460) - t474) + t515);
  sdvals[46] = sdvals_tmp - t648_tmp;
  sdvals[47] = t312_tmp + t671_tmp;
  sdvals[48] = t690 + t707;
  sdvals[49] = t687_tmp + t616_tmp;
  sdvals[50] = t639_tmp + t661_tmp;
  sdvals[51] = t686 + t709;
  sdvals_tmp = ((t439 + t493) - t460) +
               -t4 * (((t405 - t434) - t479) + 1.6362712429686841);
  t648_tmp = xi * ((((t115 - t403) + t440) + t15_tmp * -3.2725424859373691) +
                   0.77254248593736852);
  sdvals[52] = sdvals_tmp + t648_tmp;
  t312_tmp =
      -t4 * (((t63_tmp * -1.6362712429686841 + t529) + t531) +
             0.11541969411414869) +
      (((((-t399 + t435) + t447) + t156_tmp * -2.3176274578121059) - t512) +
       0.501690937082833);
  t671_tmp = xi * ((((t106 - t396) + t63_tmp * -0.77254248593736852) + t540) +
                   0.38627124296868431);
  sdvals[53] = t312_tmp + t671_tmp;
  sdvals[54] =
      t693 + ((((((t200 - t402) - t404) + t445) + t455) - t478) + t535);
  t687_tmp = ((t418 - t404) + t455) +
             -t4 * (((t437 + t456) + t519) + 0.23872875703131571);
  t616_tmp = xi * (((t166_tmp + t433) + t451) + 2.0225424859373691);
  sdvals[55] = t687_tmp - t616_tmp;
  t639_tmp =
      t4 * (((t8 * t432 + t542) + t544) + 0.30217268216195747) +
      (((((t395 + eta * t409) - t400) + t448) - t459) - 1.313443925130642);
  t661_tmp = xi * ((((-t106 + t409) + t8 * t402) + t551) - 1.0112712429686841);
  sdvals[56] = t639_tmp + t661_tmp;
  sdvals[57] =
      t686 + ((((((t200 + t460) - t436) - t439) + t474) + t486) + t492);
  sdvals[58] = sdvals_tmp - t648_tmp;
  sdvals[59] = t312_tmp - t671_tmp;
  sdvals[60] = t693 + t705;
  sdvals[61] = t687_tmp + t616_tmp;
  sdvals[62] = t639_tmp - t661_tmp;
  sdvals_tmp = t4 * (((t123 + 2.6203921611325662) - t298) + t382);
  sdvals[63] = (t612 + t628) + sdvals_tmp;
  t648_tmp = -t4 * (((t197 - 0.87346405371085534) + t285) + t378) +
             (((((-t40 + t191) + t196) - 0.87346405371085534) + t333) + t334);
  t312_tmp = t5 * ((-t105 + t297) + t318);
  t671_tmp = xi * (((-t104 + t185) + t207) + 1.953125);
  sdvals[64] = (t648_tmp - t312_tmp) + t671_tmp;
  t687_tmp = t4 * ((t573_tmp + t352) + 0.99213957055214719) +
             (((((t185 + t218) + t231) + t272) - t269) - 1.773389570552147);
  t616_tmp = xi * (((t102 + t191) - 1.7469281074217107) + t295);
  t639_tmp = t5 * ((t63_tmp * -1.953125 + t299) + t350);
  sdvals[65] = (t687_tmp - t616_tmp) + t639_tmp;
  t661_tmp = t102 * zeta - t102;
  sdvals[66] =
      (t612 +
       (((((t661_tmp + 0.87346405371085534) + t233) + t250) + t308) + t331)) -
      sdvals_tmp;
  sdvals[67] = (t648_tmp + t312_tmp) - t671_tmp;
  sdvals[68] = (t687_tmp + t616_tmp) - t639_tmp;
  sdvals_tmp = t4 * (((-t123 + 2.6203921611325662) + t298) + t382);
  sdvals[69] = (t613 + t627) - sdvals_tmp;
  t648_tmp = -t4 * (((t197 + 0.87346405371085534) + t285) + t382) +
             (((((-t40 + t196) + 0.87346405371085534) + t233) + t308) +
              t2 * 2.23606797749979 * -1.171875);
  t312_tmp = t5 * ((t105 + t318) - t297);
  t671_tmp = xi * (((t104 + t185) - t207) - 1.953125);
  sdvals[70] = (t648_tmp + t312_tmp) - t671_tmp;
  t687_tmp = t4 * ((t573_tmp + t367) + 0.99213957055214719) +
             (((((t218 + t226) + t231) + t245) - t269) - 1.773389570552147);
  t616_tmp = xi * (((t102 + 1.7469281074217107) + t233) + t295);
  t639_tmp = t5 * ((t8 * t102 - t299) + t350);
  sdvals[71] = (t687_tmp - t616_tmp) - t639_tmp;
  sdvals[72] =
      (t613 +
       (((((t661_tmp + t191) + t250) - 0.87346405371085534) + t305) + t334)) +
      sdvals_tmp;
  sdvals[73] = (t648_tmp - t312_tmp) + t671_tmp;
  sdvals[74] = (t687_tmp + t616_tmp) + t639_tmp;
  sdvals_tmp = t18 + t33;
  sdvals[75] = -xi * ((sdvals_tmp + t97) + t182);
  sdvals[76] = ((t26 - t46) + t84) - t4 * (((t33 + t51) + t95) + 3.375);
  sdvals[77] = ((t26 - t37) + t81) + t4 * ((t8 * t37 + t183) + t221);
  sdvals[78] = t389 + t452;
  sdvals[79] = t386 + xi * sdvals_tmp;
  t648_tmp = xi * ((t21 + t221) - 3.375);
  sdvals[80] = t393 - t648_tmp;
  sdvals[81] = xi * ((sdvals_tmp - t97) - t182);
  sdvals[82] = ((t26 + t46) - t84) +
               t4 * ((t51 + (t15_tmp * -6.75 + t63_tmp * -6.75)) + 3.375);
  sdvals[83] =
      ((t37 + t81) - t156_tmp * 6.75) + t4 * (t393_tmp - t63_tmp * 3.375);
  sdvals[84] = t389 + (((-t46 + t84) - t81) + t163);
  sdvals[85] = t386 - xi * (t18 + t15_tmp * 6.75);
  sdvals[86] = t393 + t648_tmp;
  sdvals[87] =
      xi * ((zeta * -13.819615873270291 + t142_tmp * 13.819615873270291) +
            t92_tmp * 13.819615873270291);
  sdvals[88] = t156_tmp * -13.819615873270291 +
               t4 * (t63_tmp * 13.819615873270291 +
                     13.819615873270291 * eta * zeta_1_inv);
  sdvals[89] =
      (((t2 * -6.909807936635147 + t6 * 20.729423809905441) -
        zeta * 27.639231746540592) -
       t4 * ((t487 + t183_tmp * 13.819615873270291) + 6.909807936635147)) +
      6.909807936635147;
}

void pyra_gl_55_ncoords(double natcoords[165])
{
  static const double dv[165]{-1.0,
                              -1.0,
                              0.0,
                              1.0,
                              -1.0,
                              0.0,
                              1.0,
                              1.0,
                              0.0,
                              -1.0,
                              1.0,
                              0.0,
                              0.0,
                              0.0,
                              1.0,
                              -0.6546536707079772,
                              -1.0,
                              0.0,
                              0.0,
                              -1.0,
                              0.0,
                              0.6546536707079772,
                              -1.0,
                              0.0,
                              1.0,
                              -0.6546536707079772,
                              0.0,
                              1.0,
                              0.0,
                              0.0,
                              1.0,
                              0.6546536707079772,
                              0.0,
                              0.6546536707079772,
                              1.0,
                              0.0,
                              0.0,
                              1.0,
                              0.0,
                              -0.6546536707079772,
                              1.0,
                              0.0,
                              -1.0,
                              0.6546536707079772,
                              0.0,
                              -1.0,
                              0.0,
                              0.0,
                              -1.0,
                              -0.6546536707079772,
                              0.0,
                              -0.82732683535398854,
                              -0.82732683535398854,
                              0.1726731646460114,
                              -0.5,
                              -0.5,
                              0.5,
                              -0.1726731646460114,
                              -0.1726731646460114,
                              0.82732683535398854,
                              0.82732683535398854,
                              -0.82732683535398854,
                              0.1726731646460114,
                              0.5,
                              -0.5,
                              0.5,
                              0.1726731646460114,
                              -0.1726731646460114,
                              0.82732683535398854,
                              0.82732683535398854,
                              0.82732683535398854,
                              0.1726731646460114,
                              0.5,
                              0.5,
                              0.5,
                              0.1726731646460114,
                              0.1726731646460114,
                              0.82732683535398854,
                              -0.82732683535398854,
                              0.82732683535398854,
                              0.1726731646460114,
                              -0.5,
                              0.5,
                              0.5,
                              -0.1726731646460114,
                              0.1726731646460114,
                              0.82732683535398854,
                              -0.6546536707079772,
                              -0.6546536707079772,
                              0.0,
                              0.0,
                              -0.6546536707079772,
                              0.0,
                              0.6546536707079772,
                              -0.6546536707079772,
                              0.0,
                              0.6546536707079772,
                              0.0,
                              0.0,
                              0.6546536707079772,
                              0.6546536707079772,
                              0.0,
                              0.0,
                              0.6546536707079772,
                              0.0,
                              -0.6546536707079772,
                              0.6546536707079772,
                              0.0,
                              -0.6546536707079772,
                              0.0,
                              0.0,
                              0.0,
                              0.0,
                              0.0,
                              -0.37796447300922731,
                              -0.7926548243364091,
                              0.2073451756635909,
                              0.37796447300922731,
                              -0.7926548243364091,
                              0.2073451756635909,
                              0.0,
                              -0.41469035132718179,
                              0.58530964867281821,
                              0.7926548243364091,
                              -0.37796447300922731,
                              0.2073451756635909,
                              0.7926548243364091,
                              0.37796447300922731,
                              0.2073451756635909,
                              0.41469035132718179,
                              0.0,
                              0.58530964867281821,
                              0.37796447300922731,
                              0.7926548243364091,
                              0.2073451756635909,
                              -0.37796447300922731,
                              0.7926548243364091,
                              0.2073451756635909,
                              0.0,
                              0.41469035132718179,
                              0.58530964867281821,
                              -0.7926548243364091,
                              0.37796447300922731,
                              0.2073451756635909,
                              -0.7926548243364091,
                              -0.37796447300922731,
                              0.2073451756635909,
                              -0.41469035132718179,
                              0.0,
                              0.58530964867281821,
                              -0.38473289347159478,
                              -0.38473289347159478,
                              0.18503488185862371,
                              0.38473289347159478,
                              -0.38473289347159478,
                              0.18503488185862371,
                              0.38473289347159478,
                              0.38473289347159478,
                              0.18503488185862371,
                              -0.38473289347159478,
                              0.38473289347159478,
                              0.18503488185862371,
                              0.0,
                              0.0,
                              0.52557206442931081};
  std::copy(&dv[0], &dv[165], &natcoords[0]);
}

// pyra_gl_55_sfunc - Compute shape functions and their derivatives of
void pyra_gl_55_sfunc(double xi, double eta, double zeta, double sfvals[55])
{
  double b_sfvals_tmp;
  double b_t2354_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double h_sfvals_tmp;
  double i_sfvals_tmp;
  double j_sfvals_tmp;
  double sfvals_tmp;
  double t10;
  double t1010;
  double t1011;
  double t1018;
  double t1018_tmp;
  double t1023;
  double t1024;
  double t1030;
  double t1032;
  double t1040;
  double t1041;
  double t1043;
  double t1045;
  double t1045_tmp;
  double t1046;
  double t1047;
  double t1059;
  double t1062;
  double t1068;
  double t1072;
  double t1075;
  double t1078;
  double t1085;
  double t1088;
  double t1090;
  double t1095;
  double t1096;
  double t11;
  double t1102;
  double t1119;
  double t1120;
  double t1123;
  double t1126;
  double t113;
  double t1136;
  double t1147;
  double t1149;
  double t1152;
  double t1156;
  double t1160;
  double t1161;
  double t1162;
  double t1165;
  double t1170;
  double t1173;
  double t1175;
  double t118;
  double t1185;
  double t1192;
  double t1196;
  double t12;
  double t120;
  double t1200;
  double t1203;
  double t1208;
  double t120_tmp;
  double t1213;
  double t1214;
  double t1216;
  double t1217;
  double t122;
  double t1221;
  double t1222;
  double t1225;
  double t1230;
  double t1231;
  double t1232;
  double t1237;
  double t1248;
  double t1256;
  double t1258;
  double t1263;
  double t1266;
  double t1267;
  double t1270;
  double t1275;
  double t1278;
  double t1283;
  double t1294;
  double t1295;
  double t1296;
  double t1299;
  double t13;
  double t1302;
  double t1305;
  double t1326;
  double t133;
  double t133_tmp;
  double t1352;
  double t1355;
  double t1359;
  double t1375;
  double t1389;
  double t1391;
  double t1398;
  double t1398_tmp;
  double t1403;
  double t1411;
  double t1413;
  double t1430;
  double t1433;
  double t1448;
  double t1454;
  double t1456;
  double t1464;
  double t1466;
  double t1472;
  double t1473;
  double t1475;
  double t1478;
  double t1479;
  double t1482;
  double t1485;
  double t149;
  double t1491;
  double t149_tmp;
  double t1504;
  double t1505;
  double t1508;
  double t151;
  double t1520;
  double t1524;
  double t1527;
  double t1530;
  double t1542;
  double t1545;
  double t1548;
  double t1554;
  double t1554_tmp;
  double t157;
  double t1570;
  double t1570_tmp;
  double t1576;
  double t1581;
  double t1582;
  double t1584;
  double t1591;
  double t1595;
  double t1598;
  double t1599;
  double t1613;
  double t1636;
  double t1642;
  double t1644;
  double t1645;
  double t1648;
  double t1661;
  double t1698;
  double t1704;
  double t1754;
  double t176;
  double t1767;
  double t177;
  double t178;
  double t179;
  double t1799;
  double t18;
  double t180;
  double t1801;
  double t181;
  double t1814;
  double t1816;
  double t181_tmp;
  double t182;
  double t182_tmp;
  double t1856;
  double t1862;
  double t189;
  double t1895;
  double t1896;
  double t1916;
  double t1925;
  double t1934;
  double t1935;
  double t1947;
  double t1956;
  double t1958;
  double t1961;
  double t1964;
  double t1966;
  double t1969;
  double t1971;
  double t1975;
  double t1977;
  double t1982;
  double t1993;
  double t1997;
  double t1998;
  double t2;
  double t2007;
  double t2010;
  double t2013;
  double t204;
  double t2040;
  double t2051;
  double t2052;
  double t2055;
  double t2056;
  double t2061;
  double t2063;
  double t2066;
  double t2067;
  double t2069;
  double t2072;
  double t2074;
  double t2075;
  double t2076;
  double t2090;
  double t2092;
  double t2094;
  double t2098;
  double t210;
  double t2101;
  double t2104;
  double t2107;
  double t2109;
  double t2113;
  double t2115;
  double t2120;
  double t2122;
  double t2137;
  double t2143;
  double t2163;
  double t2163_tmp;
  double t2165;
  double t2186;
  double t2196;
  double t2206;
  double t2211;
  double t2212;
  double t2215;
  double t2237;
  double t2238;
  double t2241;
  double t2272;
  double t2274;
  double t2281;
  double t2296;
  double t235;
  double t2353_tmp;
  double t2354_tmp;
  double t2370_tmp;
  double t240;
  double t241;
  double t242;
  double t243;
  double t2432_tmp;
  double t246;
  double t2518_tmp;
  double t2594_tmp;
  double t2595_tmp;
  double t2648_tmp;
  double t27;
  double t284;
  double t290;
  double t293;
  double t294;
  double t3;
  double t30;
  double t319;
  double t332;
  double t332_tmp;
  double t334_tmp;
  double t335;
  double t337;
  double t34;
  double t356;
  double t36;
  double t364;
  double t367;
  double t37;
  double t38;
  double t388;
  double t4;
  double t400;
  double t403;
  double t414;
  double t415;
  double t416;
  double t417;
  double t418;
  double t420;
  double t422;
  double t425;
  double t427;
  double t431;
  double t437;
  double t442;
  double t451;
  double t452;
  double t454;
  double t458;
  double t46;
  double t468;
  double t478;
  double t487;
  double t490;
  double t492;
  double t5;
  double t501;
  double t506;
  double t508;
  double t515;
  double t522;
  double t524;
  double t527;
  double t529;
  double t53;
  double t531;
  double t545;
  double t550;
  double t551;
  double t557;
  double t56;
  double t562;
  double t568;
  double t57;
  double t570;
  double t575;
  double t577;
  double t582;
  double t584;
  double t586;
  double t588;
  double t597;
  double t6;
  double t603;
  double t606;
  double t611;
  double t612_tmp;
  double t614;
  double t621;
  double t623;
  double t625;
  double t629;
  double t638;
  double t65;
  double t654;
  double t658;
  double t662;
  double t671;
  double t689;
  double t696;
  double t699_tmp;
  double t7;
  double t709;
  double t710;
  double t717;
  double t720;
  double t726;
  double t728;
  double t735;
  double t736;
  double t740;
  double t743;
  double t746;
  double t747;
  double t748;
  double t750;
  double t771;
  double t773;
  double t784;
  double t8;
  double t807;
  double t808;
  double t810;
  double t812;
  double t815;
  double t816;
  double t829;
  double t83;
  double t837;
  double t840;
  double t843;
  double t851;
  double t857;
  double t858;
  double t861;
  double t880;
  double t897;
  double t9;
  double t905;
  double t906;
  double t915;
  double t917;
  double t926;
  double t928;
  double t930;
  double t961;
  double t969;
  double t971;
  double t973;
  double t975;
  double t98;
  double t980;
  double t981;
  double t984;
  double t988;
  double t98_tmp;
  double t990;
  double t993;
  double t995;
  double t997;
  double t999;
  double zeta_1_inv;
  zeta_1_inv = 1.0 / ((zeta - 1.0) + 1.0E-100);
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = xi * xi;
  t6 = std::pow(xi, 3.0);
  t8 = zeta * zeta;
  t9 = std::pow(zeta, 3.0);
  t11 = zeta_1_inv * zeta_1_inv;
  t12 = std::pow(zeta_1_inv, 3.0);
  t18 = eta * 1.3333333333333333;
  t27 = eta * 0.375;
  t30 = zeta_1_inv * 0.875;
  t46 = eta * 0.390625;
  t65 = eta * 1.7864583333333333;
  t356 = zeta * 2.5403289638085842;
  t364 = zeta * 1.1641935638153169;
  t367 = zeta * 12.67975457952439;
  t388 = eta * 0.18933850388443879;
  t400 = eta * 18.5453517656476;
  t403 = eta * 9.65471113007914;
  t414 = eta * 1.5992720051940079;
  t415 = zeta_1_inv * 2.728860179461551;
  t416 = zeta_1_inv * 4.3542486889354093;
  t417 = zeta * 0.260546850299409;
  t418 = zeta_1_inv * 3.507290222520552;
  t420 = eta * 2.7250809929537918;
  t422 = zeta * 0.5510619903047087;
  t425 = zeta * 6.8353355572911854;
  t427 = eta * 8.7549843378798524;
  t431 = zeta_1_inv * 1.2711470051940079;
  t437 = zeta_1_inv * 7.8682527967458062;
  t451 = zeta * 8.7549843378798524;
  t452 = zeta * 0.71921408246717577;
  t454 = zeta * 5.1985524118022024;
  t458 = zeta_1_inv * 4.6509145340700044;
  t468 = zeta * 4.5932098587042214;
  t487 = eta * 1.0365230281772631;
  t490 = eta * 3.37825124436212;
  t492 = zeta * 1.209883718479863;
  t501 = zeta * 0.56879340083481766;
  t506 = zeta_1_inv * 2.0961162122540729;
  t508 = zeta * 1.0365230281772631;
  t515 = eta * 8.4558768606022756;
  t522 = eta * 5.8204260395535252;
  t524 = zeta * 1.0065237914456751;
  t527 = zeta_1_inv * 8.4558768606022756;
  t529 = eta * 1.722331585247213;
  t545 = zeta_1_inv * 0.47233158524721253;
  t550 = eta * 2.5973354288898678;
  t551 = eta * 1.8845134704669679;
  t557 = eta * 0.68432031687125283;
  t562 = eta * 1.315093913883074;
  t568 = zeta * 1.640236756266755;
  t570 = zeta * 1.8845134704669679;
  t575 = eta * 2.678596479268728;
  t577 = zeta * 4.153152157366276;
  t582 = zeta * 1.034374182733923;
  t584 = eta * 1.60230642111131;
  t586 = zeta * 4.1621664019002784;
  t588 = zeta_1_inv * 1.455718913883074;
  t597 = zeta * 2.678596479268728;
  t603 = zeta * 0.33554556643444161;
  t606 = eta * 2.4182112327690328;
  t611 = eta * 2.728860179461551;
  t614 = eta * 4.3542486889354093;
  t621 = eta * 3.507290222520552;
  t623 = zeta * 5.0104759609968337;
  t625 = zeta * 1.1469461761408171;
  t629 = zeta * 1.5489588052711221;
  t638 = zeta * 0.36989287388226072;
  t662 = eta * 0.70508208897121338;
  t699_tmp = eta * zeta_1_inv;
  t728 = eta * 0.46558748861335453;
  t743 = zeta * 0.41493879151080282;
  t748 = zeta * 0.70407078224106956;
  t810 = zeta * 0.84018834177117407;
  t840 = zeta * 0.28367489705487042;
  t843 = zeta * 0.27207965207632351;
  t851 = zeta * 0.46681777788046508;
  t857 = zeta * 0.23773234462850429;
  t861 = zeta * 0.12977835530975809;
  t905 = zeta * 0.2486033418363017;
  t915 = zeta * 0.72612763219851451;
  t917 = zeta * 0.45978403930907591;
  t926 = zeta * 0.30686976018475881;
  t928 = zeta * 0.46297220074622553;
  t1018_tmp = eta * zeta;
  t1018 = t1018_tmp * -1.8845134704669679;
  t1059 = t1018_tmp * -3.0985546455256632;
  t1160 = t1018_tmp * -8.7549843378798524;
  t1352 = eta * 0.0060524657271722546;
  t4 = t2 * t2;
  t7 = t5 * t5;
  t10 = t8 * t8;
  t13 = t11 * t11;
  t34 = eta * t30;
  t36 = t2 * 0.375;
  t37 = t3 * 0.875;
  t56 = eta * (zeta_1_inv * 0.328125);
  t57 = eta * (zeta_1_inv * 0.765625);
  t83 = 2.6457513110645907 * zeta_1_inv * 0.29166666666666669;
  t98_tmp = t2 * t11;
  t98 = t98_tmp * 0.875;
  t149_tmp = t3 * t12;
  t149 = t149_tmp * 2.0416666666666665;
  t176 = t98_tmp * 0.328125;
  t178 = t98_tmp * 0.765625;
  t179 = t149_tmp * 0.765625;
  t204 = eta * 4.58257569495584 * -0.109375;
  t240 = t149_tmp * 1.7864583333333333;
  t293 = 4.58257569495584 * zeta_1_inv * 0.68055555555555558;
  t294 = 4.58257569495584 * zeta_1_inv * 0.25520833333333331;
  t332_tmp = t149_tmp * 1.7320508075688772 * 2.6457513110645907;
  t332 = t332_tmp * 0.68055555555555558;
  t335 = t332_tmp * 0.25520833333333331;
  t442 = t9 * 5.4298647594926166;
  t478 = t400 * zeta;
  t531 = t2 * 4.7110236393431961;
  t612_tmp = t2 * zeta_1_inv;
  t654 = t3 * 0.18933850388443879;
  t658 = t2 * 4.5035235406051264;
  t671 = t8 * 9.66091738149601;
  t689 = t9 * 10.09826518154069;
  t696 = t551 * zeta;
  t709 = t612_tmp * 3.92239740114023;
  t710 = t8 * 14.94186337173196;
  t717 = eta * t588;
  t720 = eta * 11.44116946341247 * zeta;
  t726 = t3 * 18.5453517656476;
  t735 = eta * 3.0985546455256632 * zeta;
  t736 = eta * 0.98624047542246362 * zeta;
  t740 = t584 * zeta_1_inv;
  t746 = t3 * 9.65471113007914;
  t747 = t9 * 14.3524332933385;
  t750 = t8 * 20.28833147669339;
  t771 = t606 * zeta;
  t773 = eta * 2.6918051364547919 * zeta;
  t784 = eta * t418;
  t807 = eta * t437;
  t808 = t420 * zeta_1_inv;
  t812 = eta * 1.760895992053467 * zeta;
  t815 = t8 * 17.5099686757597;
  t816 = eta * 3.584550037203265 * zeta;
  t829 = t427 * zeta;
  t837 = eta * t458;
  t858 = t612_tmp * 23.924449818742151;
  t880 = t2 * t364;
  t897 = t9 * 24.981005717980171;
  t906 = t490 * zeta_1_inv;
  t930 = eta * 0.92141091753282423 * zeta;
  t961 = t2 * 9.891226653088987;
  t969 = t2 * 6.35068424546998;
  t973 = t8 * 13.38965458350285;
  t975 = t2 * 4.0486789442624707;
  t980 = t3 * 2.5973354288898678;
  t981 = t3 * 1.8845134704669679;
  t984 = t2 * 4.0893131482813443;
  t988 = t3 * 4.153152157366276;
  t990 = t3 * 0.68432031687125283;
  t993 = t8 * 9.891226653088987;
  t997 = t8 * 1.941495631165802;
  t999 = t2 * 1.315093913883074;
  t1010 = t8 * 3.769026940933935;
  t1011 = t9 * 1.8845134704669679;
  t1023 = t2 * 1.60230642111131;
  t1024 = t9 * 4.1621664019002784;
  t1030 = t2 * 8.786461266540611;
  t1032 = t8 * 1.0732497944853849;
  t1040 = t8 * 6.5762824727859632;
  t1041 = t8 * 2.182281467692202;
  t1045_tmp = t2 * zeta;
  t1045 = t1045_tmp * -2.87344961485347;
  t1046 = t8 * 5.3571929585374551;
  t1047 = t9 * 2.678596479268728;
  t1062 = t9 * 5.51150911152522;
  t1068 = t8 * 8.786461266540611;
  t1072 = t8 * 4.4761738199738357;
  t1075 = t2 * 2.728860179461551;
  t1078 = t2 * 4.3542486889354093;
  t1085 = t2 * 3.507290222520552;
  t1088 = t9 * 2.4182112327690328;
  t1090 = t8 * 2.4004680339378179;
  t1095 = t8 * 7.7543881199124893;
  t1096 = t3 * 1.5992720051940079;
  t1102 = t2 * 2.7250809929537918;
  t1119 = t2 * 8.7549843378798524;
  t1120 = t3 * 8.7549843378798524;
  t1123 = t8 * 2.2150978764053031;
  t1136 = t8 * 1.3249456344099659;
  t1147 = t3 * (zeta_1_inv * 0.18933850388443879);
  t1149 = t8 * 1.5861323400383041;
  t1152 = t9 * 8.7549843378798524;
  t1161 = t8 * 4.5434850040359374;
  t1162 = t9 * 2.2094357823419921;
  t1165 = t2 * 1.13145582688922;
  t1170 = t8 * 1.821844441800861;
  t1175 = t2 * 9.0632588068558473;
  t1185 = t8 * 1.79439395013461;
  t1192 = t8 * 2.4048642300223979;
  t1196 = t8 * 1.179140540047817;
  t1200 = t9 * 4.2612017823144406;
  t1203 = t3 * (zeta_1_inv * 18.5453517656476);
  t1208 = t8 * 2.1113414725842738;
  t1213 = t8 * 0.50648451385174664;
  t1214 = t8 * 2.98350911060014;
  t1216 = t9 * 5.8139477483807216;
  t1217 = t2 * 3.5013031032056761;
  t1221 = t9 * 0.547082022959295;
  t1222 = t9 * 3.981296877499032;
  t1225 = t8 * 1.8565335790890409;
  t1230 = t8 * 2.073046056354527;
  t1231 = t9 * 1.0365230281772631;
  t1232 = t9 * 5.5943893166259224;
  t1237 = t8 * 2.7356781032056761;
  t1248 = t3 * 8.4558768606022756;
  t1256 = t9 * 1.5297285416202959;
  t1263 = t3 * 5.8204260395535252;
  t1267 = t9 * 0.57795598317179664;
  t1270 = t8 * 4.7217994519101563;
  t1275 = t8 * 0.87482587151645808;
  t1283 = t8 * 2.00645582688922;
  t1294 = t2 * 13.38965458350285;
  t1295 = t8 * 0.611630880226667;
  t1299 = t9 * 2.2432355499603269;
  t1302 = t8 * 2.302032014950429;
  t1326 = t612_tmp * 13.150157577969029;
  t1355 = eta * 0.052297351522043518 * zeta;
  t1359 = t2 * t501;
  t1375 = t3 * 0.46297220074622553;
  t1389 = t8 * 0.8882088860399312;
  t1398_tmp = t3 * zeta_1_inv;
  t1398 = t1398_tmp * 4.5819956304752507;
  t1403 = t2 * (zeta * 0.92141091753282423);
  t1411 = t2 * t527;
  t1413 = t3 * t527;
  t1430 = t8 * 0.33044651488224508;
  t1433 = t1398_tmp * 7.2808637498563362;
  t1448 = t612_tmp * 3.2751785202958992;
  t1454 = t612_tmp * 2.2823471817625549;
  t1456 = t1398_tmp * 2.2823471817625549;
  t1464 = t612_tmp * 3.2176167592435871;
  t1466 = t98_tmp * 3.7759853055437769;
  t1472 = t2 * (zeta * 3.0901021333574);
  t1475 = t1398_tmp * 3.0901021333574;
  t1478 = t612_tmp * 0.43124937311996231;
  t1479 = t1398_tmp * 0.43124937311996231;
  t1482 = t8 * 0.2469278032322306;
  t1491 = t8 * t550;
  t1504 = t612_tmp * 4.153152157366276;
  t1508 = t8 * 0.990643655476633;
  t1520 = t2 * t588;
  t1524 = t9 * 0.2206154754224636;
  t1527 = t612_tmp * 7.822811055622382;
  t1530 = t3 * 0.46558748861335453;
  t1542 = t612_tmp * 12.56244657208439;
  t1545 = t612_tmp * 3.3941803114209961;
  t1548 = t2 * (zeta * 0.98624047542246362);
  t1554_tmp = t3 * t11;
  t1554 = t1554_tmp * 2.825581824204825;
  t1570_tmp = eta * t8;
  t1570 = t1570_tmp * -18.5453517656476;
  t1576 = t2 * t623;
  t1581 = t612_tmp * 3.8925764296142789;
  t1582 = t1398_tmp * 3.8925764296142789;
  t1584 = t2 * t625;
  t1591 = t2 * (zeta * 2.4182112327690328);
  t1595 = t1570_tmp * -9.65471113007914;
  t1598 = t612_tmp * 0.68536978916763447;
  t1599 = t1398_tmp * 0.68536978916763447;
  t1613 = t2 * t418;
  t1636 = t612_tmp * 6.5011873110330169;
  t1642 = t3 * t437;
  t1644 = t2 * (zeta_1_inv * 2.7250809929537918);
  t1645 = t612_tmp * 6.9387255436280038;
  t1648 = t2 * (zeta * 3.584550037203265);
  t1698 = t2 * t748;
  t1704 = t3 * (zeta_1_inv * 0.46558748861335453);
  t1754 = t1045_tmp * -1.0065237914456751;
  t1767 = t98_tmp * 10.5347952352393;
  t1799 = t612_tmp * 0.14622157706657879;
  t1801 = t1398_tmp * 0.14622157706657879;
  t1814 = t1570_tmp * -2.5973354288898678;
  t1816 = t1570_tmp * -1.8845134704669679;
  t1862 = t1045_tmp * -1.5489588052711221;
  t1895 = t1045_tmp * -2.85485934826355;
  t1896 = t1045_tmp * -0.73773313348254121;
  t1916 = t1045_tmp * -5.1985524118022024;
  t1925 = t98_tmp * 4.08689877111318;
  t1934 = t1554_tmp * 3.9280301044893871;
  t1935 = t149_tmp * 3.1624051044893871;
  t1947 = t98_tmp * 0.89372269340667865;
  t1956 = t98_tmp * 3.8925764296142789;
  t1958 = t1554_tmp * 3.8925764296142789;
  t1961 = t98_tmp * 1.092148296470566;
  t1964 = t1554_tmp * -9.65471113007914;
  t1966 = t98_tmp * 3.7334979073410368;
  t1969 = t98_tmp * 0.68536978916763447;
  t1971 = t1554_tmp * 0.68536978916763447;
  t1975 = t149_tmp * 2.728860179461551;
  t1982 = t98_tmp * 4.6926742412867863;
  t1993 = t149_tmp * 7.8682527967458062;
  t2007 = t149_tmp * 4.6509145340700044;
  t2010 = t98_tmp * 1.186719297934554;
  t2013 = t98_tmp * 2.890046599365534;
  t2040 = t2 * 0.0060524657271722546;
  t2051 = t1398_tmp * 0.050263700192823127;
  t2055 = t1045_tmp * -0.45978403930907591;
  t2056 = t98_tmp * 1.930788671689821;
  t2061 = t98_tmp * 3.5913213499931951;
  t2063 = t1554_tmp * 3.5913213499931951;
  t2066 = t1554_tmp * 3.7367084047143568;
  t2067 = t149_tmp * 3.7367084047143568;
  t2090 = t1045_tmp * -0.36989287388226072;
  t2094 = t98_tmp * 2.6104721817625549;
  t2098 = t1554_tmp * 2.6104721817625549;
  t2104 = t98_tmp * 1.0353352915513849;
  t2107 = t98_tmp * 0.43124937311996231;
  t2109 = t1554_tmp * 0.43124937311996231;
  t2113 = t98_tmp * 1.640236756266755;
  t2120 = t98_tmp * 4.153152157366276;
  t2137 = t1554_tmp * 1.665328963808584;
  t2143 = t98_tmp * 2.678596479268728;
  t2163_tmp = t2 * t8;
  t2163 = t2163_tmp * -8.786461266540611;
  t2186 = t2163_tmp * -2.2150978764053031;
  t2206 = t2163_tmp * -1.179140540047817;
  t2211 = t1554_tmp * 0.360041026704992;
  t2212 = t149_tmp * 0.360041026704992;
  t2215 = t2163_tmp * -1.8565335790890409;
  t2237 = t1554_tmp * -8.4558768606022756;
  t2238 = t149_tmp * -8.4558768606022756;
  t2241 = t1554_tmp * -5.8204260395535252;
  t2272 = t1554_tmp * 0.87887762570466543;
  t2274 = t149_tmp * 0.87887762570466543;
  t2281 = t2163_tmp * -2.182281467692202;
  t2296 = t2163_tmp * -0.26036534828376279;
  t38 = t4 * 0.875;
  t53 = t4 * 2.0416666666666665;
  t113 = eta * 10.417645787316825;
  t118 = eta * t83;
  t120_tmp = t4 * zeta_1_inv;
  t120 = t120_tmp * -0.328125;
  t122 = t120_tmp * -0.765625;
  t133_tmp = t4 * t11;
  t133 = t133_tmp * 2.9166666666666665;
  t157 = eta * 0.50121921663579494;
  t177 = t133_tmp * 0.328125;
  t180 = t133_tmp * 0.765625;
  t181_tmp = t4 * t12;
  t181 = t181_tmp * 0.765625;
  t182_tmp = t4 * t13;
  t182 = t182_tmp * 0.765625;
  t189 = t133_tmp * 6.8055555555555554;
  t210 = t2 * t83;
  t235 = t182_tmp * 4.7638888888888893;
  t241 = t133_tmp * 1.7864583333333333;
  t242 = t181_tmp * 1.7864583333333333;
  t243 = t182_tmp * 1.7864583333333333;
  t246 = t2 * 0.50121921663579494;
  t284 = t133_tmp * 4.1684027777777777;
  t290 = eta * 4.4552819256515113;
  t319 = t4 * t294;
  t334_tmp = t181_tmp * 1.7320508075688772 * 2.6457513110645907;
  t337 = t334_tmp * 0.25520833333333331;
  t971 = t10 * 2.275672539887426;
  t995 = t10 * 9.891226653088987;
  t1043 = t10 * 2.182281467692202;
  t1126 = t10 * 2.2150978764053031;
  t1156 = t10 * 1.037882440752437;
  t1173 = eta * (t8 * 9.28103598181129);
  t1258 = t10 * 8.5022784527510549;
  t1266 = t10 * 3.262732874098722;
  t1278 = t10 * 0.87482587151645808;
  t1296 = eta * (t8 * 8.14803068560278);
  t1305 = t10 * 2.302032014950429;
  t1391 = t10 * 0.8882088860399312;
  t1473 = t2 * 3.0901021333574 * zeta_1_inv;
  t1485 = t10 * 0.2469278032322306;
  t1505 = t988 * zeta_1_inv;
  t1661 = t1119 * zeta_1_inv;
  t1856 = t1375 * zeta_1_inv;
  t1977 = t181_tmp * 2.728860179461551;
  t1997 = t2 * t1149;
  t1998 = t11 * t1119;
  t2052 = t2 * t1237;
  t2069 = t11 * (t2 * 8.4558768606022756);
  t2072 = t11 * t1248;
  t2074 = t12 * t1248;
  t2075 = t2 * t1275;
  t2076 = t2 * t1283;
  t2092 = t2 * t973;
  t2101 = t8 * t961;
  t2115 = t11 * (t3 * 1.640236756266755);
  t2122 = t11 * t988;
  t2165 = t11 * t1375;
  t2196 = t2 * t1508;
  t2518_tmp = t454 + t612_tmp * 14.58390089437577;
  t151 = t13 * t53;
  t2370_tmp = t98_tmp * 4.1684027777777777 - t182_tmp * 4.1684027777777777;
  t2594_tmp = t3 * zeta;
  t2595_tmp = eta * t9;
  t332_tmp = -(t9 * 2.0942964783336389) - zeta * 0.26853159682876421;
  t2648_tmp = t18 + t18 * zeta_1_inv;
  t2432_tmp = t9 * 0.62363396177421926 + t861;
  t2353_tmp = t98_tmp * 1.7864583333333333 - t243;
  t2354_tmp = eta * 1.7320508075688772 * 2.6457513110645907;
  b_t2354_tmp = t2354_tmp * zeta_1_inv;
  sfvals_tmp =
      (-t7 * (((t56 + t176) - t182) - t179) +
       ((((((((t332_tmp + eta * 0.28367489705487042 * zeta) + t1136) + t1156) +
            eta * t1267) +
           t1698) +
          t1570_tmp * -0.611630880226667) +
         t2594_tmp * -0.71921408246717577) +
        t2206)) +
      t5 * ((((((((((-t177 + t531) + t562) + t717) + t748) + t930) + t1456) -
               t1196) +
              t1636) +
             t2056) +
            t2098);
  b_sfvals_tmp =
      ((((((((((((eta * (zeta_1_inv / 4.0) + t46) + t120) + t840) + t999) +
              t1267) +
             t1018_tmp * -0.91113890589862889) +
            t1403) -
           t1096) +
          t1520) +
         eta * (t8 * 2.7705139058986288)) -
        t1295) +
       t1398_tmp * -1.2711470051940079) *
      xi;
  c_sfvals_tmp =
      t6 *
      (((((((t181 - t414) - t452) + t699_tmp * -1.2711470051940079) + t1454) +
         t1934) +
        t1935) +
       t2094);
  sfvals[0] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[1] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp =
      (t7 * (((t56 + t182) - t176) - t179) +
       ((((((((t332_tmp + t1136) + t1156) + t1018_tmp * -0.28367489705487042) +
            eta * t1295) +
           t3 * t452) +
          t1698) +
         t2595_tmp * -0.57795598317179664) +
        t2206)) +
      -t5 * ((((((((((t177 - t531) + t562) + t717) - t748) + t930) + t1196) +
                t1456) -
               t1636) -
              t2056) +
             t2098);
  b_sfvals_tmp = ((((((((((((t699_tmp * -0.25 - t46) + t120) + t840) +
                          eta * 0.91113890589862889 * zeta) +
                         t999) +
                        t1096) +
                       t1267) +
                      t1403) +
                     t1520) +
                    t3 * t431) -
                   t1295) +
                  t1570_tmp * -2.7705139058986288) *
                 xi;
  c_sfvals_tmp =
      t6 *
      (((((((t181 + t414) - t452) + eta * t431) + t1454) + t2094) - t1934) -
       t1935);
  sfvals[2] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[3] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[4] = (((((t8 * 9.40198296012246 - t9 * 21.742693705143861) +
                  t10 * 14.36113481672175) -
                 zeta * 1.020424071700353) +
                t2163_tmp * 1.9538975804597629) +
               t1045_tmp * -0.6410137560657948) +
              -t5 * ((((t2 * 4.26892997764128 - t8 * 1.9538975804597629) +
                       zeta * 0.6410137560657948) +
                      t98_tmp * 2.9664783938093371) +
                     t612_tmp * 7.2354083714506174);
  sfvals_tmp =
      (t7 * (((t57 + t178) - t240) - t243) +
       -t5 * ((((((((((t118 - t241) + t709) + t736) + t917) + t1217) - t1275) +
                 t1352) +
                t2010) -
               t1801) +
              t2115)) +
      (((((((((t917 + t1018_tmp * -0.5510619903047087) + t1162) + t3 * t568) -
            t1185) -
           t1278) +
          t1862) +
         eta * t1430) +
        eta * t1524) +
       t2052);
  b_sfvals_tmp =
      ((((((((((t204 + t246) + t319) + t735) - t508) + t1230) + t1263) +
          t1472) -
         t1231) +
        t3 * t458) +
       t1814) *
      xi;
  c_sfvals_tmp =
      t6 *
      (((((((t337 - t508) - t550) + t699_tmp * -2.0961162122540729) + t1473) +
         t2007) +
        t2061) +
       t11 * t1263);
  sfvals[5] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[6] =
      ((((((((((((((t27 - t37) + t38) - t36) + t3 * t356) + t851) + t1299) +
              eta * t997) -
             t1170) -
            t1391) +
           t1896) +
          t2076) -
         t7 * (((t34 + t98) - t149) - t182_tmp * 2.0416666666666665)) -
        t2595_tmp * 0.547082022959295) -
       t1018_tmp * 1.7694136082065079) -
      t5 * ((((((((((t133 + t529) + eta * t545) + t851) + t1165) - t1389) +
                t1398) +
               t1448) +
              t1947) +
             t2137) -
            t1018_tmp * 1.422082022959295);
  sfvals[7] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      (t7 * ((t2353_tmp + eta * t294) - t335) +
       -t5 * (((((((((t204 - t180) + t629) + t709) +
                   t1018_tmp * -3.0901021333574) +
                  t1217) -
                 t1237) +
                t1475) +
               t2010) +
              t2063)) +
      (((((((((t917 + t1162) + t1018_tmp * -1.0365230281772631) + eta * t1230) +
            t3 * t508) -
           t1185) -
          t1278) +
         t2595_tmp * -1.0365230281772631) +
        t2055) +
       t2075);
  b_sfvals_tmp =
      (((((((((((t122 + t157) + t210) + t422) + t1059) - t980) + t1491) +
           t1548) +
          t1398_tmp * -2.0961162122540729) -
         t1430) -
        t1524) +
       t2040) *
      xi;
  c_sfvals_tmp =
      t6 *
      (((((((-t242 + t522) + t568) + t837) + t1799) - t2007) + t2241) - t2113);
  sfvals[8] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      (t7 * ((t151 - t98_tmp * 2.9166666666666665) + 0.875) +
       -t5 * ((((((t11 * t38 + zeta * 0.73773313348254121) + t1165) - t1283) +
                t1448) +
               t1947) +
              0.375)) +
      (((((t851 + t1299) - t1170) - t1391) + t1045_tmp * -0.46681777788046508) +
       t2 * t1389);
  e_sfvals_tmp = t6 * ((((-t356 + t612_tmp * 4.5819956304752507) +
                         t98_tmp * 1.665328963808584) -
                        t181_tmp * 2.0416666666666665) +
                       0.875);
  f_sfvals_tmp = (((((((t4 * t30 + zeta * 1.7694136082065079) + t1221) +
                      t2 * 1.722331585247213) -
                     t997) +
                    t2 * t545) +
                   t1045_tmp * -1.422082022959295) -
                  0.375) *
                 xi;
  sfvals[9] = (d_sfvals_tmp + e_sfvals_tmp) + f_sfvals_tmp;
  g_sfvals_tmp =
      (t7 * ((t2353_tmp + b_t2354_tmp * -0.25520833333333331) + t335) +
       -t5 * (((((((((t157 - t180) + t629) + eta * 3.0901021333574 * zeta) +
                   t709) +
                  t1217) -
                 t1237) -
                t1475) +
               t2010) -
              t2063)) +
      (((((((((t487 * zeta + t917) + t1162) + t9 * t487) - t1185) - t1278) +
          t1570_tmp * -2.073046056354527) +
         t2594_tmp * -1.0365230281772631) +
        t2055) +
       t2075);
  h_sfvals_tmp =
      (((((((((((t122 + t204) + t210) + t422) + t735) + t980) + t3 * t506) +
           t1548) -
          t1430) +
         t1814) -
        t1524) +
       t2040) *
      xi;
  i_sfvals_tmp =
      t6 *
      (((((((t242 + t522) + t837) - t568) - t1799) + t2113) - t2007) + t2241);
  sfvals[10] = (g_sfvals_tmp + h_sfvals_tmp) + i_sfvals_tmp;
  j_sfvals_tmp =
      (-t7 * (((t57 - t178) + t243) - t240) +
       t5 * ((((((((((t118 + t241) + t736) - t709) - t917) + t1275) + t1352) -
                t1217) -
               t1801) +
              t2115) -
             t2010)) +
      (((((((((eta * t422 + t917) + t1162) - t1185) - t1278) +
           t2594_tmp * -1.640236756266755) +
          t1862) +
         t2052) +
        t1570_tmp * -0.33044651488224508) +
       t2595_tmp * -0.2206154754224636);
  t181_tmp = ((((((((((t157 + t246) + t319) - t508) + t1059) + t1230) + t1472) +
                 t1491) -
                t1231) -
               t1263) +
              t1398_tmp * -4.6509145340700044) *
             xi;
  t2353_tmp =
      t6 *
      (((((((t337 + t550) - t508) + eta * t506) + t1473) + t2061) - t2007) +
       t2241);
  sfvals[11] = (j_sfvals_tmp - t181_tmp) + t2353_tmp;
  sfvals[12] =
      ((((((((((((((-t27 + t37) + t38) - t36) + t851) +
                eta * 1.7694136082065079 * zeta) +
               t1299) +
              eta * t1221) -
             t1170) -
            t1391) +
           t1896) +
          t2076) -
         t1570_tmp * 1.941495631165802) -
        t5 * ((((((((((t133 - t529) + t851) + eta * 1.422082022959295 * zeta) +
                    t1165) -
                   t1389) -
                  t1398) +
                 t1448) +
                t1947) -
               t2137) -
              t699_tmp * 0.47233158524721253)) -
       t2594_tmp * 2.5403289638085842) +
      t7 * (((t34 - t98) - t149) + t151);
  sfvals[13] = (j_sfvals_tmp + t181_tmp) - t2353_tmp;
  sfvals[14] = (g_sfvals_tmp - h_sfvals_tmp) - i_sfvals_tmp;
  sfvals[15] = (d_sfvals_tmp - e_sfvals_tmp) - f_sfvals_tmp;
  sfvals[16] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      (((((((((t743 + t1200) - t971) + t1018_tmp * -0.2486033418363017) -
            t1090) +
           eta * t1032) +
          t2595_tmp * -1.5297285416202959) +
         t3 * t810) +
        t1754) +
       t1997) +
      -t5 * (((((((((t524 + t621) + t784) + t816) - t1149) + t1175) + t1326) +
               t1582) +
              t1925) +
             t1958);
  b_sfvals_tmp =
      (((((((((((t662 + t905) + t1018_tmp * -0.30510138441905488) + t1085) +
              t662 * zeta_1_inv) +
             t1256) -
            t990) -
           t1032) +
          eta * (t8 * 5.7985988956948136)) +
         t1613) +
        t1648) +
       t1398_tmp * -0.68432031687125283) *
      xi;
  c_sfvals_tmp =
      t6 *
      ((((((-t557 + t699_tmp * -0.68432031687125283) - t810) + t1581) + t1956) +
        t2066) +
       t2067);
  sfvals[17] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      (((((((((-t442 + eta * 0.33554556643444161 * zeta) + t1192) - t857) +
            t1266) +
           eta * t1222) +
          t1570_tmp * -2.98350911060014) +
         t3 * t843) +
        t2090) +
       t2196) +
      t5 * (((((((((t614 + eta * 5.7653265929256126 * zeta) + eta * t416) -
                  t638) +
                 t984) +
                t1508) +
               t1527) -
              t1599) +
             t1966) -
            t1971);
  e_sfvals_tmp =
      ((((((((((t2648_tmp + t603) + t1078) + t1173) + t1222) + t1355) +
           t2 * (zeta * 5.7653265929256126)) +
          t1530) -
         t1214) +
        t2 * t416) +
       t1704) *
      xi;
  f_sfvals_tmp =
      t6 *
      ((((((-t728 - t843) + t699_tmp * -0.46558748861335453) + t1598) + t1969) +
        t2272) +
       t2274);
  sfvals[18] = (d_sfvals_tmp + e_sfvals_tmp) - f_sfvals_tmp;
  g_sfvals_tmp =
      t5 * (((((((((t501 + t584) + t740) + t812) + t975) + t1479) - t1225) +
              t1645) +
             t2013) +
            t2109) +
      (((((((((t747 + t915) + t1018_tmp * -1.034374182733923) + t1359) -
            t1040) +
           t2595_tmp * -10.09826518154069) +
          eta * t1095) -
         t1258) +
        t2594_tmp * -0.260546850299409) +
       t2215);
  h_sfvals_tmp =
      (((((((((((t490 + t582) + t654) + t689) + t773) + t906) + t1147) +
           t1296) -
          t1023) -
         t1095) +
        t612_tmp * -1.60230642111131) +
       t1045_tmp * -1.760895992053467) *
      xi;
  i_sfvals_tmp =
      t6 *
      ((((((-t388 - t417) + t699_tmp * -0.18933850388443879) + t1478) + t2107) +
        t2211) +
       t2212);
  sfvals[19] = (g_sfvals_tmp - h_sfvals_tmp) + i_sfvals_tmp;
  sfvals[20] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[21] = (d_sfvals_tmp - e_sfvals_tmp) + f_sfvals_tmp;
  sfvals[22] = (g_sfvals_tmp + h_sfvals_tmp) - i_sfvals_tmp;
  sfvals_tmp =
      t5 * (((((((((t621 + t784) + t816) - t524) + t1149) - t1175) + t1582) -
              t1326) +
             t1958) -
            t1925) +
      (((((((((t743 + eta * 0.2486033418363017 * zeta) + t1200) - t971) +
            eta * t1256) -
           t1090) +
          t1754) +
         t1570_tmp * -1.0732497944853849) +
        t2594_tmp * -0.84018834177117407) +
       t1997);
  b_sfvals_tmp =
      (((((((((((eta * 0.30510138441905488 * zeta + t905) + t990) - t662) +
              t1085) +
             t1256) -
            t1032) +
           t3 * (zeta_1_inv * 0.68432031687125283)) +
          t699_tmp * -0.70508208897121338) +
         t1613) +
        t1648) +
       t1570_tmp * -5.7985988956948136) *
      xi;
  c_sfvals_tmp =
      t6 * ((((((t557 + t557 * zeta_1_inv) - t810) + t1581) + t1956) - t2066) -
            t2067);
  sfvals[23] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  d_sfvals_tmp =
      t5 * (((((((((-t614 - t638) + t984) + t1018_tmp * -5.7653265929256126) +
                 t699_tmp * -4.3542486889354093) +
                t1508) +
               t1527) +
              t1599) +
             t1966) +
            t1971) +
      (((((((((-t442 + t1018_tmp * -0.33554556643444161) + t1192) - t857) +
            t1266) +
           eta * t1214) +
          t2595_tmp * -3.981296877499032) +
         t2594_tmp * -0.27207965207632351) +
        t2090) +
       t2196);
  e_sfvals_tmp =
      ((((((((((t2648_tmp - t603) + t1173) + t1214) + t1355) - t1078) + t1530) -
          t1222) +
         t1704) +
        t1045_tmp * -5.7653265929256126) +
       t612_tmp * -4.3542486889354093) *
      xi;
  f_sfvals_tmp =
      t6 * ((((((t728 - t843) + t728 * zeta_1_inv) + t1598) + t1969) - t2272) -
            t2274);
  sfvals[24] = (d_sfvals_tmp + e_sfvals_tmp) + f_sfvals_tmp;
  g_sfvals_tmp =
      (((((((((eta * 1.034374182733923 * zeta + t747) + t915) + eta * t689) +
            t1359) -
           t1040) +
          t3 * t417) -
         t1258) +
        t1570_tmp * -7.7543881199124893) +
       t2215) +
      -t5 * (((((((((-t501 + t584) + t740) + t812) - t975) + t1225) + t1479) -
               t1645) -
              t2013) +
             t2109);
  h_sfvals_tmp =
      (((((((((((t490 + t654) + t773) - t582) + t906) - t689) + t1023) +
           t1095) +
          t1147) +
         t1296) +
        t2 * (zeta_1_inv * 1.60230642111131)) +
       t2 * (zeta * 1.760895992053467)) *
      xi;
  i_sfvals_tmp =
      t6 * ((((((t388 + t388 * zeta_1_inv) - t417) + t1478) + t2107) - t2211) -
            t2212);
  sfvals[25] = (g_sfvals_tmp - h_sfvals_tmp) - i_sfvals_tmp;
  sfvals[26] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[27] = (d_sfvals_tmp - e_sfvals_tmp) - f_sfvals_tmp;
  sfvals[28] = (g_sfvals_tmp + h_sfvals_tmp) + i_sfvals_tmp;
  sfvals_tmp =
      (-t7 * ((t2370_tmp + eta * t415) - t1975) +
       t5 * (((((((((-t284 + t625) - t611) + t969) +
                  eta * 0.050263700192823127 * zeta) -
                 t1041) +
                t1464) +
               t2104) +
              t11 * (t3 * 2.678596479268728)) -
             t2051)) +
      (((((((((t575 * zeta - t625) + t1043) + t1072) - t1062) + t9 * t575) +
          t1584) +
         t1570_tmp * -5.3571929585374551) +
        t2594_tmp * -2.678596479268728) +
       t2281);
  b_sfvals_tmp =
      ((((((((((-t65 + t720) + t746) - t597) + t1046) + t1075) - t1047) +
          t1595) +
         t4 * t415) +
        t1642) +
       t1045_tmp * -0.050263700192823127) *
      xi;
  c_sfvals_tmp = t6 * (((((((t403 + t597) + t807) + t1964) +
                          t2 * 0.050263700192823127 * zeta_1_inv) -
                         t1977) -
                        t1993) -
                       t2143);
  sfvals[29] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp = t2 * 2.0416666666666665 - t53;
  e_sfvals_tmp = t1018_tmp * 7.2808637498563362;
  f_sfvals_tmp = t98_tmp * 4.7638888888888893 - t235;
  sfvals[30] =
      (((((((((((((d_sfvals_tmp + t3 * 1.3365845776954535) - t492) +
                 eta * t425) +
                t1045) +
               t1270) +
              t1305) +
             eta * t1024) -
            t1216) +
           t2296) -
          t1570_tmp * 9.66091738149601) +
         t5 * (((((((((t189 + t290) + t492) - t658) + t1433) + t1545) + t1554) -
                 t1302) +
                t1961) -
               e_sfvals_tmp)) -
        t2594_tmp * 4.1621664019002784) +
       t7 * ((f_sfvals_tmp + eta * t293) - t332)) -
      t2354_tmp * 0.29166666666666669;
  sfvals[31] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      (-t7 * ((-(t98_tmp * 6.8055555555555554) + t235) + 2.0416666666666665) +
       t5 * ((((((t133_tmp * 4.7638888888888893 - zeta * 2.87344961485347) -
                 t658) +
                t1545) -
               t8 * 0.26036534828376279) +
              t1961) +
             2.0416666666666665)) +
      (((((-t492 + t1270) + t1305) + t2 * t492) - t1216) +
       t2163_tmp * -2.302032014950429);
  b_sfvals_tmp =
      t6 * ((((1.3365845776954535 - t334_tmp * 0.68055555555555558) - t586) +
             t2 * 7.2808637498563362 * zeta_1_inv) +
            t98_tmp * 2.825581824204825);
  c_sfvals_tmp =
      ((((((t2 * 4.4552819256515113 + -1.3365845776954535) + t4 * t293) +
          t425) -
         t671) +
        t1024) +
       t1045_tmp * -7.2808637498563362) *
      xi;
  sfvals[32] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  g_sfvals_tmp =
      (-t7 * ((t2370_tmp + t699_tmp * -2.728860179461551) + t1975) +
       t5 * (((((((((-t284 + t611) + t625) + t969) - t1041) + t1464) +
                t1018_tmp * -0.050263700192823127) +
               t2051) +
              t2104) +
             t1554_tmp * -2.678596479268728)) +
      (((((((((-t625 + t1043) + t1018_tmp * -2.678596479268728) + t1072) -
            t1062) +
           eta * t1046) +
          t3 * t597) +
         t1584) +
        t2595_tmp * -2.678596479268728) +
       t2281);
  h_sfvals_tmp =
      ((((((((((-t65 + t597) + t720) + t746) + t1047) - t1046) - t1075) +
          t1595) +
         t1642) +
        t120_tmp * -2.728860179461551) +
       t2 * (zeta * 0.050263700192823127)) *
      xi;
  i_sfvals_tmp =
      t6 * (((((((t403 + t807) - t597) + t1964) + t1977) + t2143) - t1993) +
            t612_tmp * -0.050263700192823127);
  sfvals[33] = (g_sfvals_tmp - h_sfvals_tmp) - i_sfvals_tmp;
  sfvals[34] =
      (((((((((((((d_sfvals_tmp + eta * 1.3365845776954535) - t492) + t1045) +
                eta * t671) +
               t1270) +
              t1305) +
             t3 * t586) -
            t1216) +
           t2296) -
          t2595_tmp * 4.1621664019002784) -
         t1018_tmp * 6.8353355572911854) -
        t5 * (((((((((-t189 + t290) + t658) - t492) + t1302) + t1433) - t1545) +
                t1554) -
               t1961) -
              e_sfvals_tmp)) +
       t7 * ((f_sfvals_tmp + t332) - b_t2354_tmp * 0.68055555555555558)) -
      t3 * 1.7320508075688772 * 2.6457513110645907 * 0.29166666666666669;
  sfvals[35] = (g_sfvals_tmp + h_sfvals_tmp) + i_sfvals_tmp;
  sfvals[36] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[37] =
      ((((((t2 * -3.3333333333333335 + t4 * 2.3333333333333335) +
           t8 * 9.2578991857730273) -
          t9 * 7.3850751594240513) +
         t10 * 2.1707503776916921) -
        zeta * 5.0435744040406671) +
       t5 * ((((((t2 * 12.2818614888028 - t8 * 4.5040837110250251) +
                 zeta * 7.7102410707073341) +
                t98_tmp * 0.12717597365102451) -
               t133_tmp * 7.7777777777777777) +
              t612_tmp * 1.2979263513427159) -
             3.3333333333333335)) +
      (((t2163_tmp * -4.5040837110250251 + t1045_tmp * 7.7102410707073341) +
        t7 * ((t98_tmp * -7.7777777777777777 + t182_tmp * 5.4444444444444446) +
              2.3333333333333335)) +
       1.0);
  sfvals_tmp =
      t5 * (((((((((t364 + t420) + t771) + t808) + t1030) - t1123) + t1466) +
              t1505) +
             t1542) +
            t2122) +
      (((((((((-t364 + eta * 0.30686976018475881 * zeta) + t1126) + t1161) +
            eta * t1208) +
           t1576) -
          t1232) +
         t2594_tmp * -4.153152157366276) +
        t2595_tmp * -2.4182112327690328) +
       t2163);
  b_sfvals_tmp = (((((((t696 - t570) + t1010) + t1248) - t1011) +
                    t2 * (zeta * 8.4558768606022756)) +
                   t1413) +
                  t1816) *
                 xi;
  c_sfvals_tmp =
      t6 *
      ((((((-t551 - t570) + t699_tmp * -1.8845134704669679) + t1411) + t2069) +
        t2072) +
       t2074);
  sfvals[38] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[39] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp = (t113 + t113 * zeta_1_inv) + eta * t367;
  sfvals[40] =
      ((((((((t2432_tmp + eta * 2.2621087922075662 * zeta) +
             t9 * (eta * 12.67975457952439)) -
            t1213) -
           t1485) +
          t3 * t928) +
         t1895) +
        t2092) -
       t5 * (((((((sfvals_tmp + t858) + t861) + t1294) - t1482) + t1767) +
              t1856) +
             t2165)) -
      t1570_tmp * 14.94186337173196;
  b_sfvals_tmp =
      t5 * (((((((t623 + t1030) + t1018_tmp * -8.4558768606022756) - t1068) +
               t1413) +
              t1466) +
             t1542) +
            t2072) +
      (((((((((-t364 + t696) + t880) + t1126) + t1161) + t9 * t551) - t1232) +
         t1570_tmp * -3.769026940933935) +
        t2594_tmp * -1.8845134704669679) +
       t2186);
  c_sfvals_tmp =
      (((((((((t926 + t1018) + t1102) + t1208) - t981) - t1088) + t8 * t551) +
         t1591) +
        t1644) +
       t1398_tmp * -1.8845134704669679) *
      xi;
  d_sfvals_tmp =
      t6 *
      ((((((-t515 - t577) + t699_tmp * -8.4558768606022756) + t1504) + t2072) +
        t2074) +
       t2120);
  sfvals[41] = (b_sfvals_tmp - c_sfvals_tmp) - d_sfvals_tmp;
  e_sfvals_tmp =
      t5 * (((((((t623 + t515 * zeta) + t1030) - t1068) + t1466) + t1542) +
             t1398_tmp * -8.4558768606022756) +
            t2237) +
      (((((((((-t364 + t880) + t1018) + t1126) + t1161) + eta * t1010) +
          t3 * t570) -
         t1232) +
        t2595_tmp * -1.8845134704669679) +
       t2186);
  f_sfvals_tmp = (((((((((t696 + t926) + t981) + t1102) + t1208) - t1088) +
                     t3 * (zeta_1_inv * 1.8845134704669679)) +
                    t1591) +
                   t1644) +
                  t1816) *
                 xi;
  g_sfvals_tmp =
      t6 * ((((((t515 - t577) + t515 * zeta_1_inv) + t1504) + t2120) + t2237) +
            t2238);
  sfvals[42] = (e_sfvals_tmp - f_sfvals_tmp) - g_sfvals_tmp;
  h_sfvals_tmp =
      -t5 * ((((zeta * 2.85485934826355 + t858) - t973) + t1294) + t1767) +
      ((((t2432_tmp - t1213) - t1485) + t1045_tmp * -0.12977835530975809) +
       t2 * t1482);
  i_sfvals_tmp =
      (((((t2 * 10.417645787316825 + t2 * (10.417645787316825 * zeta_1_inv)) +
          t710) -
         zeta * 2.2621087922075662) -
        t9 * 12.67975457952439) +
       t2 * t367) *
      xi;
  j_sfvals_tmp = t6 * ((-t928 + t612_tmp * 0.46297220074622553) +
                       t98_tmp * 0.46297220074622553);
  sfvals[43] = (h_sfvals_tmp + i_sfvals_tmp) + j_sfvals_tmp;
  t181_tmp =
      (((((((((-t364 + t1126) + t1161) + t1018_tmp * -0.30686976018475881) +
            t3 * t577) +
           t1576) +
          t9 * t606) -
         t1232) +
        t1570_tmp * -2.1113414725842738) +
       t2163) +
      -t5 * (((((((((-t364 + t420) + t771) + t808) - t1030) + t1123) - t1466) +
               t1505) -
              t1542) +
             t2122);
  t2353_tmp = (((((((t570 + t696) + t1011) + t1248) - t1010) + t1413) +
                t1045_tmp * -8.4558768606022756) +
               t1816) *
              xi;
  t332_tmp =
      t6 * ((((((t551 + t551 * zeta_1_inv) - t570) + t1411) + t2069) + t2237) +
            t2238);
  sfvals[44] = (t181_tmp - t2353_tmp) - t332_tmp;
  sfvals[45] = (t181_tmp + t2353_tmp) + t332_tmp;
  sfvals[46] =
      ((((((((t2432_tmp + eta * t710) - t1213) - t1485) + t1895) + t2092) -
         t2595_tmp * 12.67975457952439) -
        t1018_tmp * 2.2621087922075662) -
       t2594_tmp * 0.46297220074622553) +
      t5 * (((((((sfvals_tmp - t858) - t861) + t1482) - t1294) + t1856) -
             t1767) +
            t2165);
  sfvals[47] = (e_sfvals_tmp + f_sfvals_tmp) + g_sfvals_tmp;
  sfvals[48] = (b_sfvals_tmp + c_sfvals_tmp) + d_sfvals_tmp;
  sfvals[49] = (h_sfvals_tmp - i_sfvals_tmp) - j_sfvals_tmp;
  sfvals_tmp =
      -t5 * ((((((t2518_tmp + t961) - t993) + t1160) + t1120 * zeta_1_inv) +
              t1982) +
             t11 * t1120) +
      (((((((((t454 + t897) - t750) + t1160) + eta * t815) - t995) +
          t3 * t451) +
         t2595_tmp * -8.7549843378798524) +
        t1916) +
       t2101);
  b_sfvals_tmp =
      (((((((t478 - t451) + t726) + t815) + t1203) - t1152) + t1570) +
       t2 * t451) *
      xi;
  c_sfvals_tmp =
      t6 * ((((((-t400 - t451) + t699_tmp * -18.5453517656476) + t1661) +
              t11 * t726) +
             t12 * t726) +
            t1998);
  sfvals[50] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[51] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp = -t5 * ((((((t2518_tmp + t829) + t961) - t993) +
                        t1398_tmp * -8.7549843378798524) +
                       t1982) +
                      t1554_tmp * -8.7549843378798524) +
               (((((((((t454 + t829) + t897) - t750) - t995) +
                    t1570_tmp * -17.5099686757597) +
                   t9 * t427) +
                  t2594_tmp * -8.7549843378798524) +
                 t1916) +
                t2101);
  b_sfvals_tmp =
      (((((((t451 + t478) + t726) - t815) + t1152) + t1203) + t1570) +
       t1045_tmp * -8.7549843378798524) *
      xi;
  c_sfvals_tmp = t6 * ((((((t400 + t400 * zeta_1_inv) - t451) + t1661) +
                         t1554_tmp * -18.5453517656476) +
                        t149_tmp * -18.5453517656476) +
                       t1998);
  sfvals[52] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[53] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[54] =
      (((((t8 * 34.009900633907591 - t9 * 54.240171691702521) +
          t10 * 24.82348091649915) -
         t468) -
        t2163_tmp * 24.82348091649915) +
       t2 * t468) +
      t5 * ((((t2 * 24.82348091649915 - t8 * 24.82348091649915) + t468) +
             t98_tmp * 20.23027105779493) +
            t612_tmp * 45.05375197429408);
}

// pyra_gl_55_sfunc - Compute shape functions and their derivatives of
void pyra_gl_55_sfunc(double xi, double eta, double zeta, double sfvals[55],
                      double sdvals[165])
{
  double b_sdvals_tmp;
  double b_sfvals_tmp;
  double c_sdvals_tmp;
  double c_sfvals_tmp;
  double d_sdvals_tmp;
  double d_sfvals_tmp;
  double e_sdvals_tmp;
  double e_sfvals_tmp;
  double f_sdvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double h_sfvals_tmp;
  double i_sfvals_tmp;
  double j_sfvals_tmp;
  double k_sfvals_tmp;
  double l_sfvals_tmp;
  double sdvals_tmp;
  double sfvals_tmp;
  double t10;
  double t1004;
  double t1008;
  double t1009;
  double t1010;
  double t1011;
  double t1014;
  double t1015;
  double t1018;
  double t101_tmp;
  double t1021;
  double t1023;
  double t1024;
  double t1026;
  double t103;
  double t1030;
  double t1032;
  double t1033;
  double t1034;
  double t1037;
  double t103_tmp;
  double t104;
  double t1040;
  double t1041;
  double t1042;
  double t1043;
  double t1044;
  double t1045;
  double t1045_tmp;
  double t1046;
  double t1047;
  double t1049;
  double t104_tmp;
  double t1053;
  double t1055;
  double t1057;
  double t1058;
  double t1059;
  double t1060;
  double t1061;
  double t1062;
  double t1065;
  double t1066;
  double t1068;
  double t107;
  double t1072;
  double t1075;
  double t1076;
  double t1078;
  double t107_tmp;
  double t108;
  double t1080;
  double t1081;
  double t1083;
  double t1085;
  double t1086;
  double t1088;
  double t108_tmp;
  double t109;
  double t1090;
  double t1094;
  double t1095;
  double t1096;
  double t1098;
  double t1099;
  double t11;
  double t1102;
  double t1105;
  double t1107;
  double t1108;
  double t111;
  double t1112;
  double t1113;
  double t1114;
  double t1115;
  double t1116;
  double t1119;
  double t1120;
  double t1121;
  double t1122;
  double t1123;
  double t1124;
  double t1125;
  double t1126;
  double t1128;
  double t1129;
  double t113;
  double t1130;
  double t1131;
  double t1132;
  double t1134;
  double t1135;
  double t1136;
  double t1138;
  double t1147;
  double t1149;
  double t115;
  double t1150;
  double t1152;
  double t1155;
  double t1156;
  double t1157;
  double t1158;
  double t116;
  double t1160;
  double t1161;
  double t1162;
  double t1163;
  double t1165;
  double t1166;
  double t1167;
  double t1168;
  double t1170;
  double t1173;
  double t1175;
  double t1179;
  double t118;
  double t1181;
  double t1182;
  double t1185;
  double t1188;
  double t1191;
  double t1192;
  double t1195;
  double t1196;
  double t1197;
  double t1198;
  double t1199;
  double t12;
  double t120;
  double t1200;
  double t1201;
  double t1203;
  double t1208;
  double t1209;
  double t120_tmp;
  double t1212;
  double t1213;
  double t1214;
  double t1215;
  double t1216;
  double t1217;
  double t1218;
  double t122;
  double t1221;
  double t1222;
  double t1223;
  double t1224;
  double t1225;
  double t1226;
  double t1227;
  double t1229;
  double t1230;
  double t1231;
  double t1232;
  double t1235;
  double t1237;
  double t1238;
  double t1239;
  double t1245;
  double t1247;
  double t1248;
  double t1249;
  double t1250;
  double t1251;
  double t1252;
  double t1254;
  double t1255;
  double t1256;
  double t1258;
  double t1260;
  double t1261;
  double t1263;
  double t1265;
  double t1266;
  double t1267;
  double t1269;
  double t127;
  double t1270;
  double t1271;
  double t1273;
  double t1274;
  double t1275;
  double t1276;
  double t1277;
  double t1278;
  double t1279;
  double t1283;
  double t1284;
  double t1286;
  double t1289;
  double t129;
  double t1294;
  double t1295;
  double t1296;
  double t1297;
  double t1299;
  double t13;
  double t1302;
  double t1303;
  double t1304;
  double t1305;
  double t1312;
  double t1319;
  double t1326;
  double t1329;
  double t133;
  double t1330;
  double t134;
  double t1347;
  double t135;
  double t1352;
  double t1353;
  double t1355;
  double t1359;
  double t136;
  double t1361;
  double t1362;
  double t137;
  double t1375;
  double t1378;
  double t1379;
  double t137_tmp;
  double t138;
  double t1380;
  double t1381;
  double t1383;
  double t1385;
  double t1389;
  double t139;
  double t1391;
  double t1396;
  double t1398;
  double t1399;
  double t139_tmp;
  double t1401;
  double t1403;
  double t1404;
  double t1408;
  double t1411;
  double t1413;
  double t1420;
  double t1421;
  double t1424;
  double t1425;
  double t1426;
  double t143;
  double t1430;
  double t1433;
  double t1434;
  double t144;
  double t1443;
  double t1446;
  double t1448;
  double t1449;
  double t145;
  double t1454;
  double t1456;
  double t146;
  double t1464;
  double t1465;
  double t1466;
  double t1467;
  double t1468;
  double t147;
  double t1471;
  double t1472;
  double t1473;
  double t1475;
  double t1476;
  double t1477;
  double t1478;
  double t1479;
  double t148;
  double t1480;
  double t1481;
  double t1482;
  double t1483;
  double t1485;
  double t1487;
  double t1488;
  double t149;
  double t1490;
  double t1491;
  double t1492;
  double t1497;
  double t1499;
  double t1503;
  double t1504;
  double t1505;
  double t1506;
  double t1508;
  double t151;
  double t1510;
  double t1511;
  double t1513;
  double t1518;
  double t1519;
  double t152;
  double t1520;
  double t1522;
  double t1523;
  double t1523_tmp;
  double t1524;
  double t1527;
  double t1528;
  double t153;
  double t1530;
  double t154;
  double t1541;
  double t1542;
  double t1545;
  double t1546;
  double t1547;
  double t1548;
  double t1550;
  double t1554;
  double t1555;
  double t1556;
  double t1560;
  double t1561;
  double t1567;
  double t1569;
  double t157;
  double t1570;
  double t1572;
  double t1576;
  double t1580;
  double t1581;
  double t1582;
  double t1583;
  double t1584;
  double t1589;
  double t1591;
  double t1595;
  double t1596;
  double t1597;
  double t1598;
  double t1599;
  double t1600;
  double t1605;
  double t1608;
  double t1610;
  double t1613;
  double t1614;
  double t1618;
  double t1633;
  double t1634;
  double t1636;
  double t1637;
  double t1641;
  double t1642;
  double t1644;
  double t1645;
  double t1646;
  double t1647;
  double t1648;
  double t1650;
  double t1654;
  double t1655;
  double t1657;
  double t1661;
  double t1671;
  double t1672;
  double t1675;
  double t1677;
  double t1678;
  double t1679;
  double t1682;
  double t1684;
  double t1687;
  double t1690;
  double t1693;
  double t1694;
  double t1695;
  double t1696;
  double t1697;
  double t1698;
  double t1700;
  double t1702;
  double t1704;
  double t1706;
  double t1707;
  double t1709;
  double t1713;
  double t1715;
  double t1721;
  double t1722;
  double t1723;
  double t1725;
  double t1726;
  double t1728;
  double t1738;
  double t1741;
  double t1742;
  double t1743;
  double t1748;
  double t1749;
  double t1750;
  double t1752;
  double t1754;
  double t1755;
  double t1758;
  double t176;
  double t1760;
  double t1761;
  double t1765;
  double t1766;
  double t1767;
  double t1768;
  double t1769;
  double t177;
  double t178;
  double t1784;
  double t1785;
  double t1786;
  double t1787;
  double t179;
  double t1791;
  double t1794;
  double t1799;
  double t18;
  double t180;
  double t1801;
  double t1806;
  double t1807;
  double t1808;
  double t1809;
  double t181;
  double t1810;
  double t1811;
  double t1814;
  double t1816;
  double t182;
  double t1820;
  double t1827;
  double t1830;
  double t1831;
  double t1833;
  double t1837;
  double t1838;
  double t184;
  double t1848;
  double t1850;
  double t1851;
  double t1852;
  double t1853;
  double t1856;
  double t186;
  double t1862;
  double t1863;
  double t1865;
  double t1866;
  double t1867;
  double t1868;
  double t1869;
  double t187;
  double t1880;
  double t1881;
  double t1882;
  double t1885;
  double t1886;
  double t1887;
  double t1888;
  double t189;
  double t1890;
  double t1891;
  double t1892;
  double t1894;
  double t1895;
  double t1896;
  double t1898;
  double t19;
  double t1900;
  double t1903;
  double t1905;
  double t1907;
  double t1916;
  double t1919;
  double t192;
  double t1922;
  double t1924;
  double t1925;
  double t1926;
  double t1927;
  double t1929;
  double t193;
  double t1930;
  double t1931;
  double t1932;
  double t1933;
  double t1934;
  double t1935;
  double t1936;
  double t194;
  double t1945;
  double t1946;
  double t1947;
  double t1948;
  double t1949;
  double t1954;
  double t1956;
  double t1957;
  double t1958;
  double t1959;
  double t1960;
  double t1961;
  double t1962;
  double t1963;
  double t1964;
  double t1966;
  double t1967;
  double t1968;
  double t1969;
  double t1970;
  double t1971;
  double t1972;
  double t1973;
  double t1975;
  double t1976;
  double t1977;
  double t1982;
  double t1984;
  double t1986;
  double t199;
  double t1992;
  double t1993;
  double t1995;
  double t1997;
  double t1998;
  double t2;
  double t20;
  double t200;
  double t2001;
  double t2003;
  double t2005;
  double t2006;
  double t2007;
  double t201;
  double t2010;
  double t2011;
  double t2012;
  double t2013;
  double t2014;
  double t2015;
  double t2017;
  double t202;
  double t2023;
  double t2025;
  double t2027;
  double t2028;
  double t2029;
  double t203;
  double t2030;
  double t2035;
  double t2036;
  double t204;
  double t2040;
  double t2042;
  double t2043;
  double t2044;
  double t2045;
  double t2046;
  double t2047;
  double t2048;
  double t2051;
  double t2052;
  double t2053;
  double t2054;
  double t2055;
  double t2056;
  double t2057;
  double t2058;
  double t2060;
  double t2061;
  double t2062;
  double t2063;
  double t2064;
  double t2065;
  double t2066;
  double t2067;
  double t2068;
  double t2069;
  double t207;
  double t2072;
  double t2074;
  double t2075;
  double t2076;
  double t2078;
  double t2081;
  double t209;
  double t2090;
  double t2091;
  double t2092;
  double t2093;
  double t2094;
  double t2097;
  double t2098;
  double t209_tmp;
  double t210;
  double t2100;
  double t2101;
  double t2102;
  double t2103;
  double t2104;
  double t2105;
  double t2106;
  double t2107;
  double t2108;
  double t2109;
  double t2110;
  double t2111;
  double t2112;
  double t2113;
  double t2114;
  double t2115;
  double t2116;
  double t2117;
  double t2120;
  double t2121;
  double t2122;
  double t2123;
  double t2124;
  double t2127;
  double t2128;
  double t2129;
  double t2130;
  double t2131;
  double t2132;
  double t2133;
  double t2134;
  double t2137;
  double t2138;
  double t2139;
  double t2142;
  double t2143;
  double t2144;
  double t2146;
  double t2147;
  double t2149;
  double t2153;
  double t216;
  double t2163;
  double t2163_tmp;
  double t2164;
  double t2165;
  double t217;
  double t218;
  double t2183;
  double t2184;
  double t2186;
  double t219;
  double t2191;
  double t2196;
  double t2206;
  double t2211;
  double t2212;
  double t2213;
  double t2215;
  double t2222;
  double t2237;
  double t2238;
  double t2241;
  double t2256;
  double t2257;
  double t2272;
  double t2274;
  double t2281;
  double t229;
  double t2296;
  double t23;
  double t230;
  double t2300;
  double t2303;
  double t231;
  double t232;
  double t2325;
  double t2326;
  double t2341_tmp;
  double t2347_tmp;
  double t235;
  double t2350_tmp;
  double t2361_tmp;
  double t2363_tmp;
  double t237;
  double t2370_tmp;
  double t2372_tmp;
  double t238;
  double t2384;
  double t2387;
  double t2390;
  double t2393;
  double t23_tmp;
  double t240;
  double t241;
  double t2412_tmp;
  double t2413_tmp;
  double t242;
  double t2423_tmp;
  double t243;
  double t2432_tmp;
  double t2434;
  double t245;
  double t2453_tmp;
  double t246;
  double t2471;
  double t2472;
  double t248;
  double t2484;
  double t2487;
  double t2490;
  double t2491;
  double t2492;
  double t2498;
  double t2518_tmp;
  double t2540;
  double t2541;
  double t2564;
  double t2569;
  double t2579;
  double t2581;
  double t2589;
  double t2591;
  double t2592;
  double t2594_tmp;
  double t2595_tmp;
  double t2597;
  double t2604;
  double t2613;
  double t2619;
  double t2620_tmp;
  double t2622;
  double t2627;
  double t2632;
  double t2642;
  double t2643;
  double t2648;
  double t2651;
  double t2656;
  double t2656_tmp;
  double t2657;
  double t2657_tmp;
  double t2660;
  double t2661;
  double t2664;
  double t2665;
  double t27;
  double t271;
  double t272;
  double t275;
  double t277;
  double t284;
  double t288;
  double t288_tmp;
  double t290;
  double t293;
  double t294;
  double t296;
  double t296_tmp;
  double t297;
  double t298;
  double t299;
  double t3;
  double t30;
  double t300;
  double t301;
  double t307_tmp;
  double t307_tmp_tmp;
  double t308;
  double t31;
  double t316;
  double t316_tmp;
  double t318;
  double t319;
  double t322;
  double t322_tmp;
  double t323;
  double t325;
  double t328;
  double t332;
  double t333_tmp;
  double t334_tmp;
  double t335;
  double t336;
  double t337;
  double t34;
  double t342_tmp;
  double t350;
  double t351;
  double t354;
  double t356;
  double t358;
  double t36;
  double t362;
  double t364;
  double t365;
  double t366;
  double t367;
  double t368;
  double t369;
  double t37;
  double t370;
  double t371;
  double t373;
  double t374;
  double t375;
  double t377;
  double t378;
  double t38;
  double t380;
  double t381;
  double t384;
  double t385;
  double t387;
  double t388;
  double t389;
  double t39;
  double t390;
  double t391;
  double t392;
  double t393;
  double t395;
  double t396;
  double t397;
  double t398;
  double t398_tmp;
  double t399;
  double t4;
  double t40;
  double t400;
  double t401;
  double t402;
  double t403;
  double t404;
  double t405;
  double t406;
  double t407;
  double t408;
  double t409;
  double t41;
  double t410;
  double t411;
  double t414;
  double t415;
  double t416;
  double t417;
  double t418;
  double t42;
  double t420;
  double t421;
  double t422;
  double t423;
  double t424;
  double t425;
  double t427;
  double t429;
  double t42_tmp;
  double t431;
  double t436;
  double t437;
  double t438;
  double t440;
  double t441;
  double t442;
  double t445;
  double t446;
  double t449;
  double t45;
  double t451;
  double t452;
  double t453;
  double t454;
  double t455;
  double t456;
  double t456_tmp;
  double t457;
  double t458;
  double t459;
  double t46;
  double t460;
  double t462;
  double t464;
  double t467;
  double t468;
  double t469;
  double t47;
  double t470;
  double t472;
  double t473;
  double t474;
  double t475;
  double t476;
  double t477;
  double t478;
  double t479;
  double t48;
  double t483;
  double t484;
  double t485;
  double t486;
  double t487;
  double t488;
  double t490;
  double t492;
  double t493;
  double t494;
  double t495;
  double t496;
  double t498;
  double t499;
  double t5;
  double t50;
  double t500;
  double t501;
  double t502;
  double t504;
  double t505;
  double t506;
  double t507;
  double t508;
  double t509;
  double t510;
  double t513;
  double t514;
  double t515;
  double t516;
  double t517;
  double t518;
  double t519;
  double t52;
  double t521;
  double t522;
  double t523;
  double t524;
  double t525;
  double t526;
  double t527;
  double t528;
  double t529;
  double t53;
  double t530;
  double t531;
  double t532;
  double t534;
  double t535;
  double t536;
  double t538;
  double t540;
  double t541;
  double t542;
  double t543;
  double t545;
  double t546;
  double t547;
  double t548;
  double t549;
  double t550;
  double t551;
  double t553;
  double t554;
  double t557;
  double t558;
  double t559;
  double t56;
  double t560;
  double t561;
  double t562;
  double t563;
  double t564;
  double t565;
  double t566;
  double t567;
  double t568;
  double t57;
  double t570;
  double t571;
  double t574;
  double t575;
  double t577;
  double t578;
  double t579;
  double t580;
  double t581;
  double t582;
  double t583;
  double t584;
  double t585;
  double t586;
  double t587;
  double t588;
  double t589;
  double t590;
  double t592;
  double t593;
  double t594;
  double t595;
  double t597;
  double t598;
  double t6;
  double t600;
  double t601;
  double t602;
  double t603;
  double t604;
  double t605;
  double t606;
  double t607;
  double t61;
  double t611;
  double t613;
  double t614;
  double t615;
  double t618;
  double t619;
  double t621;
  double t622;
  double t623;
  double t624;
  double t625;
  double t626;
  double t627;
  double t629;
  double t630;
  double t631;
  double t634;
  double t635;
  double t636;
  double t638;
  double t639;
  double t644;
  double t647;
  double t65;
  double t652;
  double t654;
  double t658;
  double t659;
  double t662;
  double t663;
  double t664;
  double t671;
  double t672;
  double t678;
  double t683;
  double t685;
  double t686;
  double t689;
  double t694;
  double t696;
  double t697;
  double t7;
  double t702;
  double t703;
  double t709;
  double t710;
  double t713;
  double t715;
  double t717;
  double t718;
  double t72;
  double t720;
  double t721;
  double t722;
  double t726;
  double t727;
  double t728;
  double t729;
  double t72_tmp;
  double t732;
  double t733;
  double t735;
  double t736;
  double t737;
  double t738;
  double t74;
  double t740;
  double t741;
  double t743;
  double t746;
  double t747;
  double t748;
  double t749;
  double t750;
  double t751;
  double t755;
  double t76;
  double t763;
  double t764;
  double t768;
  double t770;
  double t771;
  double t772;
  double t773;
  double t775;
  double t776;
  double t78;
  double t782;
  double t783;
  double t784;
  double t785;
  double t788;
  double t78_tmp;
  double t793;
  double t798;
  double t8;
  double t80;
  double t803;
  double t807;
  double t808;
  double t809;
  double t80_tmp;
  double t810;
  double t811;
  double t812;
  double t813;
  double t814;
  double t815;
  double t816;
  double t817;
  double t824;
  double t829;
  double t83;
  double t833;
  double t837;
  double t838;
  double t839;
  double t840;
  double t841;
  double t843;
  double t844;
  double t847;
  double t851;
  double t853;
  double t857;
  double t858;
  double t859;
  double t861;
  double t862;
  double t87;
  double t874;
  double t88;
  double t880;
  double t884;
  double t89;
  double t892;
  double t896;
  double t897;
  double t899;
  double t9;
  double t90;
  double t902;
  double t905;
  double t906;
  double t914;
  double t915;
  double t917;
  double t922;
  double t926;
  double t927;
  double t928;
  double t930;
  double t931;
  double t934;
  double t942;
  double t943;
  double t947;
  double t955;
  double t957;
  double t961;
  double t964;
  double t968;
  double t969;
  double t970;
  double t971;
  double t972;
  double t973;
  double t975;
  double t976;
  double t978;
  double t979;
  double t98;
  double t980;
  double t981;
  double t984;
  double t985;
  double t988;
  double t989;
  double t99;
  double t990;
  double t991;
  double t993;
  double t995;
  double t997;
  double t998;
  double t999;
  double zeta_1_inv;
  zeta_1_inv = 1.0 / ((zeta - 1.0) + 1.0E-100);
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = xi * xi;
  t6 = std::pow(xi, 3.0);
  t8 = zeta * zeta;
  t9 = std::pow(zeta, 3.0);
  t11 = zeta_1_inv * zeta_1_inv;
  t12 = std::pow(zeta_1_inv, 3.0);
  t18 = eta * 1.3333333333333333;
  t19 = zeta_1_inv / 4.0;
  t20 = zeta_1_inv * 1.3333333333333333;
  t23_tmp = eta * zeta_1_inv;
  t23 = t23_tmp * 3.5;
  t27 = eta * 0.375;
  t30 = zeta_1_inv * 0.875;
  t40 = t23_tmp * 1.3125;
  t41 = t23_tmp * 3.0625;
  t46 = eta * 0.390625;
  t47 = zeta_1_inv * 0.328125;
  t48 = zeta_1_inv * 0.765625;
  t65 = eta * 1.7864583333333333;
  t350 = eta * 9.4220472786863922;
  t351 = zeta * 4.9207102688002644;
  t354 = zeta * 2.3283871276306338;
  t356 = zeta * 2.5403289638085842;
  t362 = t23_tmp * 7.844794802280461;
  t364 = zeta * 1.1641935638153169;
  t365 = zeta * 15.50877623982498;
  t366 = eta * 55.636055296942807;
  t367 = zeta * 12.67975457952439;
  t368 = zeta * 12.486499205700831;
  t369 = eta * 17.46127811866058;
  t370 = zeta * 2.6498912688199319;
  t371 = zeta * 35.01993735151941;
  t373 = eta * 18.126517613711691;
  t374 = eta * 25.367630581806829;
  t375 = t23_tmp * 47.848899637484287;
  t377 = zeta * 7.6209868914257513;
  t378 = zeta * 5.9670182212002807;
  t380 = zeta * 9.4435989038203125;
  t384 = eta * 26.7793091670057;
  t385 = eta * 19.78245330617797;
  t387 = zeta * 26.7793091670057;
  t388 = eta * 0.18933850388443879;
  t389 = eta * 9.0070470812102528;
  t390 = zeta * 19.78245330617797;
  t391 = zeta * 19.321834762992019;
  t392 = zeta * 7.5380538818678708;
  t393 = zeta_1_inv * 0.18933850388443879;
  t395 = zeta * 29.883726743463921;
  t396 = eta * 17.572922533081218;
  t397 = zeta * 26.264953013639559;
  t398_tmp = eta * zeta;
  t398 = t398_tmp * -5.7468992297069406;
  t399 = zeta * 10.71438591707491;
  t400 = eta * 18.5453517656476;
  t401 = zeta * 17.572922533081218;
  t402 = zeta * 8.9523476399476714;
  t403 = eta * 9.65471113007914;
  t404 = eta * 5.4577203589231011;
  t405 = zeta * 18.5453517656476;
  t406 = zeta_1_inv * 18.5453517656476;
  t407 = zeta * 40.57666295338678;
  t408 = zeta * 10.020951921993669;
  t409 = eta * 12.67975457952439;
  t410 = zeta * 3.0979176105422428;
  t411 = zeta * 4.8009360678756359;
  t414 = eta * 1.5992720051940079;
  t415 = zeta_1_inv * 2.728860179461551;
  t416 = zeta_1_inv * 4.3542486889354093;
  t417 = zeta * 0.260546850299409;
  t418 = zeta_1_inv * 3.507290222520552;
  t420 = eta * 2.7250809929537918;
  t421 = eta * 5.4501619859075836;
  t422 = zeta * 0.5510619903047087;
  t423 = eta * 1.760895992053467;
  t424 = eta * 3.584550037203265;
  t425 = zeta * 6.8353355572911854;
  t427 = eta * 8.7549843378798524;
  t429 = zeta * 4.4301957528106053;
  t431 = zeta_1_inv * 1.2711470051940079;
  t436 = eta * 4.7978160155820238;
  t437 = zeta_1_inv * 7.8682527967458062;
  t438 = t398_tmp * 6.1802042667147994;
  t440 = zeta_1_inv * 2.7250809929537918;
  t441 = zeta * 1.760895992053467;
  t445 = t398_tmp * 11.53065318585123;
  t446 = zeta * 3.584550037203265;
  t449 = zeta * 3.1722646800766068;
  t451 = zeta * 8.7549843378798524;
  t452 = zeta * 0.71921408246717577;
  t453 = zeta * 1.981287310953266;
  t454 = zeta * 5.1985524118022024;
  t455 = zeta * 10.3971048236044;
  t457 = zeta * 9.0869700080718747;
  t458 = zeta_1_inv * 4.6509145340700044;
  t459 = eta * 2.26291165377844;
  t460 = t398_tmp * 11.597197791389631;
  t462 = zeta * 3.6436888836017229;
  t464 = t398_tmp * 18.562071963622579;
  t467 = t23_tmp * 25.12489314416878;
  t468 = zeta * 4.5932098587042214;
  t469 = eta * 2.2621087922075662;
  t470 = zeta * 3.58878790026922;
  t473 = zeta * 3.10956908453179;
  t474 = zeta * 1.4081415644821389;
  t475 = zeta * 4.8097284600447958;
  t476 = eta * 1.422082022959295;
  t477 = zeta * 2.358281080095634;
  t479 = t398_tmp * 37.0907035312952;
  t483 = zeta * 2.2621087922075662;
  t484 = eta * 1.7694136082065079;
  t485 = zeta * 4.2226829451685486;
  t487 = eta * 1.0365230281772631;
  t488 = zeta * 1.0129690277034931;
  t490 = eta * 3.37825124436212;
  t492 = zeta * 1.209883718479863;
  t493 = zeta * 2.419767436959726;
  t494 = eta * 1.396762465840063;
  t495 = eta * 7.0026062064113521;
  t496 = zeta * 0.78164055089822715;
  t498 = zeta * 1.422082022959295;
  t499 = t398_tmp * 19.309422260158279;
  t500 = zeta * 3.7130671581780819;
  t501 = zeta * 0.56879340083481766;
  t502 = zeta * 1.1375868016696351;
  t504 = t23_tmp * 10.9154407178462;
  t506 = zeta_1_inv * 2.0961162122540729;
  t507 = zeta * 1.7694136082065079;
  t508 = zeta * 1.0365230281772631;
  t509 = zeta * 4.146092112709054;
  t510 = zeta_1_inv * 3.37825124436212;
  t513 = zeta * 5.4713562064113521;
  t514 = eta * 0.92141091753282423;
  t515 = eta * 8.4558768606022756;
  t516 = eta * 7.7920062866696034;
  t517 = zeta * 1.388916602238677;
  t518 = eta * 5.6535404114009031;
  t519 = eta * 0.56801551165331654;
  t521 = eta * 7.2808637498563362;
  t522 = eta * 5.8204260395535252;
  t523 = zeta * 0.92141091753282423;
  t524 = zeta * 1.0065237914456751;
  t525 = zeta * 2.01304758289135;
  t526 = zeta * 8.4558768606022756;
  t527 = zeta_1_inv * 8.4558768606022756;
  t528 = zeta * 5.6535404114009031;
  t529 = eta * 1.722331585247213;
  t530 = eta * 3.4446631704944251;
  t532 = t398_tmp * 17.5099686757597;
  t534 = t23_tmp * 17.5099686757597;
  t535 = zeta * 1.7496517430329159;
  t536 = eta * 2.0529609506137581;
  t538 = zeta * 4.0129116537784393;
  t540 = zeta * 1.223261760453334;
  t541 = t398_tmp * 16.29606137120556;
  t542 = zeta * 7.2808637498563362;
  t543 = zeta * 4.6040640299008588;
  t545 = zeta_1_inv * 0.47233158524721253;
  t546 = eta * 3.0901021333574;
  t548 = eta * 5.7653265929256126;
  t549 = eta * 8.0973578885249413;
  t550 = eta * 2.5973354288898678;
  t551 = eta * 1.8845134704669679;
  t553 = eta * 8.1786262965626886;
  t554 = zeta * 0.93363555576093016;
  t557 = eta * 0.68432031687125283;
  t558 = t23_tmp * 26.300315155938051;
  t559 = eta * 1.034374182733923;
  t560 = zeta * 3.882991262331605;
  t561 = zeta * 3.0901021333574;
  t562 = eta * 1.315093913883074;
  t563 = eta * 2.630187827766147;
  t564 = zeta * 12.459456472098831;
  t565 = eta * 11.44116946341247;
  t566 = zeta * 5.7653265929256126;
  t568 = zeta * 1.640236756266755;
  t570 = zeta * 1.8845134704669679;
  t571 = zeta_1_inv * 1.8845134704669679;
  t574 = eta * 0.30510138441905488;
  t575 = eta * 2.678596479268728;
  t577 = zeta * 4.153152157366276;
  t578 = zeta_1_inv * 0.68432031687125283;
  t579 = eta * 3.0985546455256632;
  t580 = zeta * 2.1576422474015269;
  t581 = eta * 0.98624047542246362;
  t582 = zeta * 1.034374182733923;
  t583 = eta * 0.33554556643444161;
  t584 = eta * 1.60230642111131;
  t585 = eta * 3.204612842222621;
  t586 = zeta * 4.1621664019002784;
  t588 = zeta_1_inv * 1.455718913883074;
  t589 = zeta * 11.44116946341247;
  t590 = zeta * 2.14649958897077;
  t592 = zeta * 13.15256494557193;
  t593 = zeta * 4.364562935384404;
  t594 = zeta * 8.0357894378061818;
  t595 = zeta * 0.30510138441905488;
  t597 = zeta * 2.678596479268728;
  t598 = zeta * 2.5205650253135219;
  t600 = zeta * 0.91956807861815171;
  t601 = zeta * 3.0985546455256632;
  t602 = zeta * 0.98624047542246362;
  t603 = zeta * 0.33554556643444161;
  t604 = zeta_1_inv * 1.60230642111131;
  t605 = zeta * 1.776417772079862;
  t606 = eta * 2.4182112327690328;
  t607 = eta * 2.6918051364547919;
  t611 = eta * 2.728860179461551;
  t614 = eta * 4.3542486889354093;
  t615 = eta * 8.7084973778708186;
  t618 = t398_tmp * 16.911753721204551;
  t619 = t23_tmp * 16.911753721204551;
  t621 = eta * 3.507290222520552;
  t622 = eta * 7.014580445041104;
  t623 = zeta * 5.0104759609968337;
  t624 = eta * 0.5510619903047087;
  t625 = zeta * 1.1469461761408171;
  t626 = zeta * 2.2938923522816341;
  t627 = eta * 6.8353355572911854;
  t629 = zeta * 1.5489588052711221;
  t630 = zeta * 2.4182112327690328;
  t631 = zeta * 2.6918051364547919;
  t636 = zeta * 0.81623895622897058;
  t638 = zeta * 0.36989287388226072;
  t639 = zeta * 0.73978574776452144;
  t647 = t23_tmp * 0.944663170494425;
  t652 = t23_tmp * 6.5503570405917966;
  t662 = eta * 0.70508208897121338;
  t678 = t23_tmp * 6.2883486367622181;
  t683 = t23_tmp * 0.86249874623992451;
  t685 = t23_tmp * 0.29244315413315758;
  t686 = zeta * 0.49385560646446108;
  t694 = t398_tmp * 5.1946708577797356;
  t697 = t398_tmp * 3.769026940933935;
  t702 = zeta_1_inv * 0.70508208897121338;
  t703 = t23_tmp * 8.3063043147325519;
  t718 = t23_tmp * 2.911437827766147;
  t727 = t23_tmp * 15.64562211124476;
  t728 = eta * 0.46558748861335453;
  t732 = t23_tmp * 6.7883606228419913;
  t733 = t23_tmp * 13.95274360221001;
  t737 = t398_tmp * 1.972480950844927;
  t743 = zeta * 0.41493879151080282;
  t748 = zeta * 0.70407078224106956;
  t751 = zeta_1_inv * 0.46558748861335453;
  t755 = t398_tmp * -18.5453517656476;
  t763 = t23_tmp * 7.7851528592285577;
  t770 = t398_tmp * -3.0979176105422428;
  t772 = t398_tmp * 4.8364224655380674;
  t776 = t23_tmp * 1.3707395783352689;
  t793 = t398_tmp * 5.5410278117972576;
  t803 = t23_tmp * 13.00237462206603;
  t810 = zeta * 0.84018834177117407;
  t811 = t23_tmp * 13.877451087256009;
  t813 = t398_tmp * 3.5217919841069341;
  t814 = eta * 0.28367489705487042;
  t817 = t398_tmp * 7.169100074406531;
  t824 = eta * 0.91113890589862889;
  t840 = zeta * 0.28367489705487042;
  t841 = t23_tmp * 3.8134410155820242;
  t843 = zeta * 0.27207965207632351;
  t844 = zeta * 0.91113890589862889;
  t851 = zeta * 0.46681777788046508;
  t857 = zeta * 0.23773234462850429;
  t861 = zeta * 0.12977835530975809;
  t862 = zeta * 0.25955671061951607;
  t874 = eta * 0.2486033418363017;
  t884 = t398_tmp * 2.84416404591859;
  t902 = eta * 0.30686976018475881;
  t905 = zeta * 0.2486033418363017;
  t915 = zeta * 0.72612763219851451;
  t917 = zeta * 0.45978403930907591;
  t926 = zeta * 0.30686976018475881;
  t928 = zeta * 0.46297220074622553;
  t931 = t398_tmp * 1.842821835065648;
  t955 = zeta * 0.66089302976449027;
  t957 = t398_tmp * 14.561727499712671;
  t1018 = t398_tmp * -1.8845134704669679;
  t1033 = t398_tmp * 0.1005274003856463;
  t1034 = t23_tmp * 0.1005274003856463;
  t1037 = t398_tmp * -11.44116946341247;
  t1053 = t398_tmp * -0.30510138441905488;
  t1058 = t398_tmp * -0.91956807861815171;
  t1059 = t398_tmp * -3.0985546455256632;
  t1094 = t398_tmp * -2.6918051364547919;
  t1105 = t23_tmp * -8.7084973778708186;
  t1134 = t398_tmp * -5.7097186965271;
  t1138 = t398_tmp * -1.475466266965082;
  t1160 = t398_tmp * -8.7549843378798524;
  t1167 = t398_tmp * -10.3971048236044;
  t1195 = eta * 0.052297351522043518;
  t1209 = eta * 0.050263700192823127;
  t1224 = zeta * 0.052297351522043518;
  t1229 = zeta * 0.050263700192823127;
  t1249 = t23_tmp * -3.37825124436212;
  t1286 = t398_tmp * -2.01304758289135;
  t1312 = t398_tmp * -0.91113890589862889;
  t1352 = eta * 0.0060524657271722546;
  t1353 = eta * 0.012104931454344509;
  t1446 = t398_tmp * -0.73978574776452144;
  t1513 = t23_tmp * -0.70508208897121338;
  t1721 = t398_tmp * -0.052297351522043518;
  t4 = t2 * t2;
  t7 = t5 * t5;
  t10 = t8 * t8;
  t13 = t11 * t11;
  t31 = t3 * 3.5;
  t34 = eta * t30;
  t36 = t2 * 0.375;
  t37 = t3 * 0.875;
  t39 = t3 * 8.1666666666666661;
  t42_tmp = eta * t11;
  t42 = t42_tmp / 4.0;
  t45 = t42_tmp * 1.75;
  t50 = t2 * 2.625;
  t52 = t2 * 2.0416666666666665;
  t56 = eta * t47;
  t57 = eta * t48;
  t61 = t42_tmp * 0.875;
  t72_tmp = t3 * zeta_1_inv;
  t72 = t72_tmp * 1.3125;
  t74 = t42_tmp * 0.65625;
  t76 = t42_tmp * 1.53125;
  t78_tmp = t2 * t11;
  t78 = t78_tmp * 3.5;
  t80_tmp = t2 * t12;
  t80 = t80_tmp * 1.75;
  t83 = 2.6457513110645907 * zeta_1_inv * 0.29166666666666669;
  t87 = t42_tmp * 0.328125;
  t89 = t42_tmp * 0.765625;
  t98 = t78_tmp * 0.875;
  t101_tmp = t3 * t11;
  t109 = eta * 4.58257569495584 * 0.21875;
  t111 = eta * 2.6457513110645907 * 7.875;
  t116 = eta * 2.6457513110645907 * zeta_1_inv * 0.58333333333333337;
  t127 = t78_tmp * 1.3125;
  t129 = t101_tmp * 1.3125;
  t134 = t80_tmp * 0.65625;
  t137_tmp = t3 * t12;
  t137 = t137_tmp * -8.1666666666666661;
  t138 = t80_tmp * 6.125;
  t143 = t78_tmp * 3.0625;
  t144 = t101_tmp * 3.0625;
  t145 = t137_tmp * 3.0625;
  t149 = t137_tmp * 2.0416666666666665;
  t152 = t80_tmp * 1.53125;
  t176 = t78_tmp * 0.328125;
  t178 = t78_tmp * 0.765625;
  t179 = t137_tmp * 0.765625;
  t184 = t101_tmp * 27.222222222222221;
  t199 = t101_tmp * 7.145833333333333;
  t200 = t137_tmp * 7.145833333333333;
  t204 = eta * 4.58257569495584 * -0.109375;
  t209_tmp = t42_tmp * 2.6457513110645907;
  t209 = t209_tmp * 0.29166666666666669;
  t216 = t80_tmp * 2.296875;
  t229 = t80_tmp * 5.359375;
  t240 = t137_tmp * 1.7864583333333333;
  t245 = t2 * 2.6457513110645907 * -3.9375;
  t248 = t2 * 2.6457513110645907 * zeta_1_inv * -0.29166666666666669;
  t275 = t78_tmp * 2.6457513110645907 * 0.29166666666666669;
  t277 = t2 * 4.58257569495584 * -0.109375;
  t288_tmp = eta * 1.7320508075688772 * 2.6457513110645907;
  t288 = t288_tmp * 1.9444444444444444;
  t293 = 4.58257569495584 * zeta_1_inv * 0.68055555555555558;
  t294 = 4.58257569495584 * zeta_1_inv * 0.25520833333333331;
  t296_tmp = t288_tmp * zeta_1_inv;
  t296 = t296_tmp * 2.7222222222222223;
  t297 = t296_tmp * 1.0208333333333333;
  t298 = t80_tmp * 4.58257569495584 * 0.765625;
  t307_tmp_tmp = t3 * 1.7320508075688772 * 2.6457513110645907;
  t307_tmp = t307_tmp_tmp * zeta_1_inv;
  t308 = t307_tmp * 1.0208333333333333;
  t316_tmp = t42_tmp * 1.7320508075688772 * 2.6457513110645907;
  t316 = t316_tmp * 0.68055555555555558;
  t318 = t316_tmp * 0.25520833333333331;
  t316_tmp = t137_tmp * 1.7320508075688772 * 2.6457513110645907;
  t323 = t316_tmp * 2.7222222222222223;
  t328 = t316_tmp * 1.0208333333333333;
  t332 = t316_tmp * 0.68055555555555558;
  t335 = t316_tmp * 0.25520833333333331;
  t358 = eta * t354;
  t381 = t2 * 9.4220472786863922;
  t442 = t9 * 5.4298647594926166;
  t456_tmp = t2 * zeta_1_inv;
  t456 = t456_tmp * 7.844794802280461;
  t472 = t2 * 1.1641935638153169;
  t478 = t400 * zeta;
  t486 = eta * t408;
  t505 = t8 * 74.943017153940531;
  t531 = t2 * 4.7110236393431961;
  t547 = t3 * 2.5403289638085842;
  t567 = t2 * 2.87344961485347;
  t587 = t8 * 17.44184324514217;
  t613 = t456_tmp * 29.16780178875155;
  t634 = t2 * 19.78245330617797;
  t635 = t8 * 16.53452733457566;
  t644 = t2 * 12.701368490939959;
  t654 = t3 * 0.18933850388443879;
  t658 = t2 * 4.5035235406051264;
  t659 = t2 * 9.0070470812102528;
  t663 = t8 * 19.78245330617797;
  t664 = t9 * 39.564906612355948;
  t671 = t8 * 9.66091738149601;
  t672 = t42_tmp * 7.5519706110875546;
  t689 = t9 * 10.09826518154069;
  t696 = t551 * zeta;
  t709 = t456_tmp * 3.92239740114023;
  t710 = t8 * 14.94186337173196;
  t713 = t2 * 17.572922533081218;
  t715 = t8 * 9.28103598181129;
  t717 = eta * t588;
  t720 = t565 * zeta;
  t721 = t8 * 26.264953013639559;
  t722 = t9 * 8.729125870768808;
  t726 = t3 * 18.5453517656476;
  t729 = t574 * zeta;
  t735 = t579 * zeta;
  t736 = t581 * zeta;
  t738 = t8 * 17.572922533081218;
  t740 = t584 * zeta_1_inv;
  t741 = t585 * zeta_1_inv;
  t746 = t3 * 9.65471113007914;
  t747 = t9 * 14.3524332933385;
  t749 = t8 * 18.5453517656476;
  t750 = t8 * 20.28833147669339;
  t764 = eta * t626;
  t768 = t8 * 9.65471113007914;
  t771 = t606 * zeta;
  t773 = t607 * zeta;
  t775 = t2 * 55.636055296942807;
  t782 = t615 * zeta_1_inv;
  t783 = t9 * 12.67975457952439;
  t784 = eta * t418;
  t785 = t622 * zeta_1_inv;
  t788 = t8 * 12.486499205700831;
  t798 = t2 * 17.46127811866058;
  t807 = eta * t437;
  t808 = t420 * zeta_1_inv;
  t809 = t421 * zeta_1_inv;
  t812 = t423 * zeta;
  t815 = t8 * 17.5099686757597;
  t816 = t424 * zeta;
  t829 = t427 * zeta;
  t833 = t8 * 8.14803068560278;
  t837 = eta * t458;
  t838 = t2 * 28.964133390237421;
  t839 = t2 * 18.126517613711691;
  t847 = t2 * 25.367630581806829;
  t853 = eta * t474;
  t858 = t456_tmp * 23.924449818742151;
  t859 = t456_tmp * 47.848899637484287;
  t880 = t2 * t364;
  t892 = eta * t502;
  t896 = t8 * 38.039263738573183;
  t897 = t9 * 24.981005717980171;
  t899 = t8 * 43.057299880015513;
  t906 = t490 * zeta_1_inv;
  t914 = t9 * 34.009113811004219;
  t922 = t8 * 7.2546336983070994;
  t927 = t8 * 16.783167949877772;
  t930 = t514 * zeta;
  t934 = t8 * 16.28959427847785;
  t942 = t8 * 30.294795544622058;
  t943 = t8 * 6.2828894350009179;
  t947 = t2 * 26.7793091670057;
  t961 = t2 * 9.891226653088987;
  t964 = t2 * 3.0901021333574;
  t968 = t824 * zeta;
  t969 = t2 * 6.35068424546998;
  t970 = t9 * 9.1026901595497041;
  t972 = t2 * 5.7653265929256126;
  t973 = t8 * 13.38965458350285;
  t975 = t2 * 4.0486789442624707;
  t976 = t2 * 8.0973578885249413;
  t978 = t3 * 1.640236756266755;
  t979 = t8 * 1.870901885322658;
  t980 = t3 * 2.5973354288898678;
  t981 = t3 * 1.8845134704669679;
  t984 = t2 * 4.0893131482813443;
  t985 = t2 * 8.1786262965626886;
  t988 = t3 * 4.153152157366276;
  t989 = t456_tmp * 23.604758390237421;
  t990 = t3 * 0.68432031687125283;
  t991 = t456_tmp * 26.300315155938051;
  t993 = t8 * 9.891226653088987;
  t997 = t8 * 1.941495631165802;
  t998 = t3 * 4.1621664019002784;
  t999 = t2 * 1.315093913883074;
  t1004 = t456_tmp * 13.745986891425749;
  t1008 = t8 * 2.5973354288898678;
  t1009 = t8 * 1.8845134704669679;
  t1010 = t8 * 3.769026940933935;
  t1011 = t9 * 1.8845134704669679;
  t1014 = t3 * 2.678596479268728;
  t1021 = t2 * 0.98624047542246362;
  t1023 = t2 * 1.60230642111131;
  t1024 = t9 * 4.1621664019002784;
  t1026 = t8 * 5.7985988956948136;
  t1030 = t2 * 8.786461266540611;
  t1032 = t8 * 1.0732497944853849;
  t1040 = t8 * 6.5762824727859632;
  t1041 = t8 * 2.182281467692202;
  t1042 = t8 * 4.364562935384404;
  t1044 = t8 * 8.0357894378061818;
  t1045_tmp = t2 * zeta;
  t1045 = t1045_tmp * -2.87344961485347;
  t1046 = t8 * 5.3571929585374551;
  t1047 = t9 * 2.678596479268728;
  t1049 = t8 * 6.6283073470259763;
  t1055 = t2 * 5.0104759609968337;
  t1057 = t2 * 1.1469461761408171;
  t1060 = t8 * 1.776417772079862;
  t1061 = t9 * 3.5528355441597248;
  t1062 = t9 * 5.51150911152522;
  t1065 = t2 * 1.5489588052711221;
  t1066 = t2 * 2.4182112327690328;
  t1068 = t8 * 8.786461266540611;
  t1072 = t8 * 4.4761738199738357;
  t1075 = t2 * 2.728860179461551;
  t1076 = t78_tmp * 14.58390089437577;
  t1078 = t2 * 4.3542486889354093;
  t1080 = t42_tmp * 16.911753721204551;
  t1081 = t72_tmp * 16.911753721204551;
  t1083 = t3 * 0.260546850299409;
  t1085 = t2 * 3.507290222520552;
  t1086 = t8 * 6.729706649880983;
  t1088 = t9 * 2.4182112327690328;
  t1090 = t8 * 2.4004680339378179;
  t1095 = t8 * 7.7543881199124893;
  t1096 = t3 * 1.5992720051940079;
  t1098 = t2 * 2.85485934826355;
  t1099 = t2 * 0.73773313348254121;
  t1102 = t2 * 2.7250809929537918;
  t1107 = t2 * 1.760895992053467;
  t1108 = t8 * 2.7705139058986288;
  t1112 = t8 * t384;
  t1113 = t2 * t387;
  t1114 = t2 * 3.584550037203265;
  t1115 = t42_tmp * 5.22094436352511;
  t1116 = t72_tmp * 4.56469436352511;
  t1119 = t2 * 8.7549843378798524;
  t1120 = t3 * 8.7549843378798524;
  t1121 = t78_tmp * 4.9207102688002644;
  t1122 = t3 * 0.71921408246717577;
  t1123 = t8 * 2.2150978764053031;
  t1124 = t8 * 4.4301957528106053;
  t1125 = t9 * 8.86039150562121;
  t1128 = t2 * 5.1985524118022024;
  t1129 = t8 * t385;
  t1130 = t2 * t390;
  t1131 = t2 * 4.7978160155820238;
  t1132 = t72_tmp * 6.1802042667147994;
  t1135 = t9 * 0.98771121292892228;
  t1136 = t8 * 1.3249456344099659;
  t1147 = t3 * t393;
  t1149 = t8 * 1.5861323400383041;
  t1150 = t8 * 3.1722646800766068;
  t1152 = t9 * 8.7549843378798524;
  t1155 = t9 * 4.15152976300975;
  t1157 = t8 * 1.73386794951539;
  t1158 = t8 * 1.981287310953266;
  t1161 = t8 * 4.5434850040359374;
  t1162 = t9 * 2.2094357823419921;
  t1163 = t662 * zeta_1_inv;
  t1165 = t2 * 1.13145582688922;
  t1166 = t2 * 2.26291165377844;
  t1170 = t8 * 1.821844441800861;
  t1175 = t2 * 9.0632588068558473;
  t1179 = t456_tmp * 26.264953013639559;
  t1181 = t456_tmp * 25.12489314416878;
  t1182 = t42_tmp * 8.17379754222636;
  t1185 = t8 * 1.79439395013461;
  t1188 = t8 * 3.10956908453179;
  t1191 = t456_tmp * 21.842591249569011;
  t1192 = t8 * 2.4048642300223979;
  t1196 = t8 * 1.179140540047817;
  t1197 = t8 * 2.358281080095634;
  t1198 = t2 * 0.56879340083481766;
  t1199 = t8 * 4.58918562486089;
  t1200 = t9 * 4.2612017823144406;
  t1201 = t8 * t400;
  t1203 = t3 * t406;
  t1208 = t8 * 2.1113414725842738;
  t1212 = t3 * 1.0365230281772631;
  t1213 = t8 * 0.50648451385174664;
  t1214 = t8 * 2.98350911060014;
  t1215 = t2 * 1.396762465840063;
  t1216 = t9 * 5.8139477483807216;
  t1217 = t2 * 3.5013031032056761;
  t1218 = t2 * 7.0026062064113521;
  t1221 = t9 * 0.547082022959295;
  t1222 = t9 * 3.981296877499032;
  t1223 = t8 * t403;
  t1225 = t8 * 1.8565335790890409;
  t1226 = t8 * 3.7130671581780819;
  t1227 = t72_tmp * 10.9154407178462;
  t1230 = t8 * 2.073046056354527;
  t1231 = t9 * 1.0365230281772631;
  t1232 = t9 * 5.5943893166259224;
  t1235 = t42_tmp * 9.3853484825735727;
  t1237 = t8 * 2.7356781032056761;
  t1238 = t8 * 5.4713562064113521;
  t1239 = t2 * 0.92141091753282423;
  t1245 = t2 * 1.0065237914456751;
  t1247 = t2 * 8.4558768606022756;
  t1248 = t3 * 8.4558768606022756;
  t1250 = t2 * 7.7920062866696034;
  t1251 = t2 * 5.6535404114009031;
  t1252 = t8 * 1.6412460688778849;
  t1254 = t8 * 11.9438906324971;
  t1255 = t2 * 0.56801551165331654;
  t1256 = t9 * 1.5297285416202959;
  t1261 = t2 * 7.2808637498563362;
  t1263 = t3 * 5.8204260395535252;
  t1265 = t9 * 13.05093149639489;
  t1267 = t9 * 0.57795598317179664;
  t1269 = t8 * 5.6535404114009031;
  t1270 = t8 * 4.7217994519101563;
  t1271 = t2 * 1.722331585247213;
  t1273 = t42_tmp * 17.5099686757597;
  t1274 = t72_tmp * 17.5099686757597;
  t1275 = t8 * 0.87482587151645808;
  t1276 = t8 * 1.7496517430329159;
  t1277 = t9 * 3.4993034860658319;
  t1279 = t2 * 2.0529609506137581;
  t1283 = t8 * 2.00645582688922;
  t1284 = t8 * 4.0129116537784393;
  t1289 = t8 * 12.78360534694332;
  t1294 = t2 * 13.38965458350285;
  t1295 = t8 * 0.611630880226667;
  t1297 = t42_tmp * 21.069590470478591;
  t1299 = t9 * 2.2432355499603269;
  t1302 = t8 * 2.302032014950429;
  t1303 = t8 * 4.6040640299008588;
  t1304 = t9 * 9.2081280598017177;
  t1319 = t456_tmp * 6.8470415452876647;
  t1326 = t456_tmp * 13.150157577969029;
  t1329 = t78_tmp * 23.924449818742151;
  t1330 = t456_tmp * 2.056109367502903;
  t1347 = t2 * 0.45978403930907591;
  t1355 = t1195 * zeta;
  t1359 = t2 * t501;
  t1361 = t42_tmp * 2.0961162122540729;
  t1362 = t3 * t506;
  t1375 = t3 * 0.46297220074622553;
  t1379 = t456_tmp * 9.2703064000721991;
  t1381 = t2 * t513;
  t1383 = t456_tmp * 1.293748119359887;
  t1385 = t456_tmp * 1.388916602238677;
  t1389 = t8 * 0.8882088860399312;
  t1396 = t42_tmp * 3.8615773433796421;
  t1398 = t72_tmp * 4.5819956304752507;
  t1399 = t72_tmp * 9.1639912609505014;
  t1401 = t2 * 0.36989287388226072;
  t1403 = t2 * t523;
  t1404 = t42_tmp * 7.1826426999863893;
  t1408 = t2 * t526;
  t1411 = t2 * t527;
  t1413 = t3 * t527;
  t1421 = t2 * t535;
  t1425 = t2 * t538;
  t1430 = t8 * 0.33044651488224508;
  t1433 = t72_tmp * 7.2808637498563362;
  t1434 = t72_tmp * 14.561727499712671;
  t1443 = t42_tmp * 0.47233158524721253;
  t1448 = t456_tmp * 3.2751785202958992;
  t1449 = t456_tmp * 6.5503570405917966;
  t1454 = t456_tmp * 2.2823471817625549;
  t1456 = t72_tmp * 2.2823471817625549;
  t1464 = t456_tmp * 3.2176167592435871;
  t1465 = t456_tmp * 6.4352335184871743;
  t1466 = t78_tmp * 3.7759853055437769;
  t1467 = t78_tmp * 7.5519706110875546;
  t1468 = t80_tmp * 7.5519706110875546;
  t1471 = t456_tmp * 6.2883486367622181;
  t1472 = t2 * t561;
  t1475 = t72_tmp * 3.0901021333574;
  t1476 = t42_tmp * 2.07067058310277;
  t1477 = t42_tmp * 0.86249874623992451;
  t1478 = t456_tmp * 0.43124937311996231;
  t1479 = t72_tmp * 0.43124937311996231;
  t1480 = t72_tmp * 0.86249874623992451;
  t1481 = t72_tmp * 0.29244315413315758;
  t1482 = t8 * 0.2469278032322306;
  t1483 = t8 * 0.49385560646446108;
  t1487 = t456_tmp * 12.459456472098831;
  t1488 = t2 * t566;
  t1490 = t42_tmp * 3.2804735125335092;
  t1491 = t8 * t550;
  t1492 = t8 * t551;
  t1497 = t3 * t571;
  t1499 = t72_tmp * -0.18933850388443879;
  t1503 = t42_tmp * 8.3063043147325519;
  t1504 = t456_tmp * 4.153152157366276;
  t1506 = t72_tmp * 8.3063043147325519;
  t1508 = t8 * 0.990643655476633;
  t1510 = t3 * t578;
  t1511 = t78_tmp * 3.92239740114023;
  t1519 = t42_tmp * 1.455718913883074;
  t1520 = t2 * t588;
  t1522 = t2 * 0.70407078224106956;
  t1523_tmp = eta * t8;
  t1523 = t1523_tmp * -9.28103598181129;
  t1524 = t9 * 0.2206154754224636;
  t1527 = t456_tmp * 7.822811055622382;
  t1528 = t456_tmp * 15.64562211124476;
  t1530 = t3 * 0.46558748861335453;
  t1541 = t42_tmp * 5.3571929585374551;
  t1542 = t456_tmp * 12.56244657208439;
  t1545 = t456_tmp * 3.3941803114209961;
  t1546 = t456_tmp * 6.7883606228419913;
  t1547 = t456_tmp * 13.95274360221001;
  t1548 = t2 * t602;
  t1550 = t2 * t604;
  t1554 = t101_tmp * 2.825581824204825;
  t1555 = t101_tmp * 5.65116364840965;
  t1556 = t137_tmp * 5.65116364840965;
  t1560 = t1523_tmp * -17.572922533081218;
  t1561 = t1045_tmp * -17.572922533081218;
  t1567 = t72_tmp * 0.92594440149245094;
  t1569 = t42_tmp * 1.7874453868133571;
  t1570 = t1523_tmp * -18.5453517656476;
  t1572 = t72_tmp * -18.5453517656476;
  t1576 = t2 * t623;
  t1580 = t42_tmp * 7.7851528592285577;
  t1581 = t456_tmp * 3.8925764296142789;
  t1582 = t72_tmp * 3.8925764296142789;
  t1583 = t72_tmp * 7.7851528592285577;
  t1584 = t2 * t625;
  t1589 = t42_tmp * 2.184296592941132;
  t1591 = t2 * t630;
  t1595 = t1523_tmp * -9.65471113007914;
  t1596 = t42_tmp * 7.4669958146820754;
  t1597 = t42_tmp * 1.3707395783352689;
  t1598 = t456_tmp * 0.68536978916763447;
  t1599 = t72_tmp * 0.68536978916763447;
  t1600 = t72_tmp * 1.3707395783352689;
  t1605 = t8 * 0.66184642626739076;
  t1610 = t2 * t416;
  t1613 = t2 * t418;
  t1614 = t3 * 0.84018834177117407;
  t1633 = t42_tmp * 1.2711470051940079;
  t1634 = t3 * t431;
  t1636 = t456_tmp * 6.5011873110330169;
  t1637 = t456_tmp * 13.00237462206603;
  t1641 = t42_tmp * 7.8682527967458062;
  t1642 = t3 * t437;
  t1644 = t2 * t440;
  t1645 = t456_tmp * 6.9387255436280038;
  t1646 = t456_tmp * 13.877451087256009;
  t1647 = t2 * t441;
  t1648 = t2 * t446;
  t1650 = t3 * 0.27207965207632351;
  t1655 = t2 * t449;
  t1657 = t2 * t451;
  t1672 = t2 * t453;
  t1675 = t456_tmp * 11.677729288842841;
  t1677 = t1523_tmp * -8.14803068560278;
  t1678 = t42_tmp * 4.6509145340700044;
  t1679 = t3 * t458;
  t1682 = t42_tmp * 2.3734385958691089;
  t1684 = t456_tmp * 3.8134410155820242;
  t1687 = t42_tmp * 5.780093198731068;
  t1690 = t456_tmp * 0.15079110057846939;
  t1693 = t78_tmp * 11.784090313468161;
  t1694 = t80_tmp * 9.4872153134681625;
  t1695 = t101_tmp * 11.784090313468161;
  t1696 = t137_tmp * 9.4872153134681625;
  t1698 = t2 * t748;
  t1702 = t137_tmp * 37.0907035312952;
  t1704 = t3 * t751;
  t1706 = t1523_tmp * -2.358281080095634;
  t1707 = t1045_tmp * -2.358281080095634;
  t1709 = t2 * 0.050263700192823127;
  t1713 = t137_tmp * 19.309422260158279;
  t1715 = t137_tmp * 10.9154407178462;
  t1722 = t1523_tmp * -3.7130671581780819;
  t1723 = t1045_tmp * -3.7130671581780819;
  t1725 = t78_tmp * 9.3853484825735727;
  t1726 = t80_tmp * 9.3853484825735727;
  t1728 = t72_tmp * -2.0961162122540729;
  t1738 = t456_tmp * 0.43866473119973642;
  t1741 = t101_tmp * 55.636055296942807;
  t1742 = t137_tmp * 55.636055296942807;
  t1748 = t80_tmp * 17.5099686757597;
  t1749 = t101_tmp * 17.5099686757597;
  t1750 = t137_tmp * 17.5099686757597;
  t1752 = t1045_tmp * -0.92141091753282423;
  t1754 = t1045_tmp * -1.0065237914456751;
  t1755 = t1045_tmp * -8.4558768606022756;
  t1758 = t72_tmp * -8.4558768606022756;
  t1761 = t101_tmp * 17.46127811866058;
  t1765 = t1523_tmp * -0.52073069656752557;
  t1766 = t1045_tmp * -0.52073069656752557;
  t1767 = t78_tmp * 10.5347952352393;
  t1768 = t78_tmp * 21.069590470478591;
  t1769 = t80_tmp * 21.069590470478591;
  t1784 = t80_tmp * 23.604758390237421;
  t1785 = t101_tmp * 28.964133390237421;
  t1786 = t137_tmp * 23.604758390237421;
  t1791 = t1045_tmp * -3.0901021333574;
  t1794 = t78_tmp * 4.9959868914257513;
  t1799 = t456_tmp * 0.14622157706657879;
  t1801 = t72_tmp * 0.14622157706657879;
  t1806 = t1045_tmp * -5.7653265929256126;
  t1809 = t101_tmp * 25.367630581806829;
  t1810 = t137_tmp * 25.367630581806829;
  t1814 = t1523_tmp * -2.5973354288898678;
  t1816 = t1523_tmp * -1.8845134704669679;
  t1820 = t72_tmp * -1.8845134704669679;
  t1827 = t72_tmp * -0.68432031687125283;
  t1830 = t1523_tmp * -5.7985988956948136;
  t1831 = t72_tmp * 0.1005274003856463;
  t1833 = t456_tmp * -1.455718913883074;
  t1837 = t1523_tmp * -4.364562935384404;
  t1838 = t1045_tmp * -4.364562935384404;
  t1848 = t1045_tmp * -0.98624047542246362;
  t1850 = t456_tmp * -1.60230642111131;
  t1851 = t80_tmp * 16.911753721204551;
  t1852 = t101_tmp * 16.911753721204551;
  t1853 = t137_tmp * 16.911753721204551;
  t1862 = t1045_tmp * -1.5489588052711221;
  t1863 = t1045_tmp * -2.4182112327690328;
  t1865 = t78_tmp * 11.210125214143069;
  t1866 = t80_tmp * 11.210125214143069;
  t1867 = t101_tmp * 11.210125214143069;
  t1868 = t137_tmp * 11.210125214143069;
  t1881 = t42_tmp * -4.3542486889354093;
  t1882 = t456_tmp * -4.3542486889354093;
  t1885 = t456_tmp * -3.507290222520552;
  t1886 = t80_tmp * 5.22094436352511;
  t1887 = t101_tmp * 5.22094436352511;
  t1888 = t137_tmp * 5.22094436352511;
  t1890 = t1523_tmp * -2.7705139058986288;
  t1891 = t1523_tmp * -4.4301957528106053;
  t1892 = t1045_tmp * -4.4301957528106053;
  t1894 = t72_tmp * -1.2711470051940079;
  t1895 = t1045_tmp * -2.85485934826355;
  t1896 = t1045_tmp * -0.73773313348254121;
  t1898 = t72_tmp * -7.8682527967458062;
  t1900 = t456_tmp * -2.7250809929537918;
  t1903 = t1045_tmp * -1.760895992053467;
  t1905 = t1045_tmp * -3.584550037203265;
  t1907 = t1045_tmp * -8.7549843378798524;
  t1916 = t1045_tmp * -5.1985524118022024;
  t1919 = t72_tmp * -4.6509145340700044;
  t1922 = t78_tmp * 26.264953013639559;
  t1924 = t78_tmp * 8.4767454726144749;
  t1925 = t78_tmp * 4.08689877111318;
  t1926 = t78_tmp * 8.17379754222636;
  t1927 = t80_tmp * 8.17379754222636;
  t1929 = t80_tmp * 13.95274360221001;
  t1930 = t137_tmp * 13.95274360221001;
  t1932 = t78_tmp * 10.773964049979581;
  t1934 = t101_tmp * 3.9280301044893871;
  t1935 = t137_tmp * 3.1624051044893871;
  t1936 = t137_tmp * 7.8560602089787741;
  t1945 = t101_tmp * 0.92594440149245094;
  t1946 = t137_tmp * 0.92594440149245094;
  t1947 = t78_tmp * 0.89372269340667865;
  t1948 = t78_tmp * 1.7874453868133571;
  t1949 = t80_tmp * 1.7874453868133571;
  t1954 = t72_tmp * -0.46558748861335453;
  t1956 = t78_tmp * 3.8925764296142789;
  t1957 = t80_tmp * 7.7851528592285577;
  t1958 = t101_tmp * 3.8925764296142789;
  t1959 = t101_tmp * 7.7851528592285577;
  t1960 = t137_tmp * 7.7851528592285577;
  t1961 = t78_tmp * 1.092148296470566;
  t1962 = t78_tmp * 2.184296592941132;
  t1963 = t80_tmp * 2.184296592941132;
  t1964 = t101_tmp * -9.65471113007914;
  t1966 = t78_tmp * 3.7334979073410368;
  t1967 = t78_tmp * 7.4669958146820754;
  t1968 = t80_tmp * 7.4669958146820754;
  t1969 = t78_tmp * 0.68536978916763447;
  t1970 = t80_tmp * 1.3707395783352689;
  t1971 = t101_tmp * 0.68536978916763447;
  t1972 = t101_tmp * 1.3707395783352689;
  t1973 = t137_tmp * 1.3707395783352689;
  t1975 = t137_tmp * 2.728860179461551;
  t1982 = t78_tmp * 4.6926742412867863;
  t1984 = t101_tmp * 1.2711470051940079;
  t1986 = t78_tmp * 6.5011873110330169;
  t1992 = t101_tmp * 7.8682527967458062;
  t1993 = t137_tmp * 7.8682527967458062;
  t1995 = t78_tmp * 6.9387255436280038;
  t2003 = t78_tmp * -17.46127811866058;
  t2005 = t78_tmp * 11.677729288842841;
  t2006 = t101_tmp * 4.6509145340700044;
  t2007 = t137_tmp * 4.6509145340700044;
  t2010 = t78_tmp * 1.186719297934554;
  t2011 = t78_tmp * 2.3734385958691089;
  t2012 = t80_tmp * 2.3734385958691089;
  t2013 = t78_tmp * 2.890046599365534;
  t2014 = t78_tmp * 5.780093198731068;
  t2015 = t80_tmp * 5.780093198731068;
  t2017 = t78_tmp * 7.8314165452876647;
  t2023 = t78_tmp * 13.150157577969029;
  t2025 = t78_tmp * 2.056109367502903;
  t2027 = t80_tmp * 8.1865805383846517;
  t2035 = t78_tmp * -25.367630581806829;
  t2036 = t80_tmp * -25.367630581806829;
  t2040 = t2 * 0.0060524657271722546;
  t2042 = t78_tmp * 1.0801230801149759;
  t2043 = t80_tmp * 1.0801230801149759;
  t2044 = t101_tmp * 1.0801230801149759;
  t2045 = t137_tmp * 1.0801230801149759;
  t2047 = t101_tmp * 2.0961162122540729;
  t2048 = t2 * t1229;
  t2051 = t72_tmp * 0.050263700192823127;
  t2053 = t78_tmp * 1.293748119359887;
  t2054 = t78_tmp * 1.388916602238677;
  t2055 = t1045_tmp * -0.45978403930907591;
  t2056 = t78_tmp * 1.930788671689821;
  t2057 = t78_tmp * 3.8615773433796421;
  t2058 = t80_tmp * 3.8615773433796421;
  t2060 = t101_tmp * 4.5819956304752507;
  t2061 = t78_tmp * 3.5913213499931951;
  t2062 = t80_tmp * 7.1826426999863893;
  t2063 = t101_tmp * 3.5913213499931951;
  t2064 = t101_tmp * 7.1826426999863893;
  t2065 = t137_tmp * 7.1826426999863893;
  t2066 = t101_tmp * 3.7367084047143568;
  t2067 = t137_tmp * 3.7367084047143568;
  t2068 = t137_tmp * 7.4734168094287146;
  t2078 = t101_tmp * 7.2808637498563362;
  t2081 = t137_tmp * 11.64085207910705;
  t2090 = t1045_tmp * -0.36989287388226072;
  t2091 = t78_tmp * 3.2751785202958992;
  t2093 = t78_tmp * 2.2823471817625549;
  t2094 = t78_tmp * 2.6104721817625549;
  t2097 = t101_tmp * 2.2823471817625549;
  t2098 = t101_tmp * 2.6104721817625549;
  t2100 = t78_tmp * 3.2176167592435871;
  t2103 = t101_tmp * 3.0901021333574;
  t2104 = t78_tmp * 1.0353352915513849;
  t2105 = t78_tmp * 2.07067058310277;
  t2106 = t80_tmp * 2.07067058310277;
  t2107 = t78_tmp * 0.43124937311996231;
  t2108 = t80_tmp * 0.86249874623992451;
  t2109 = t101_tmp * 0.43124937311996231;
  t2110 = t101_tmp * 0.86249874623992451;
  t2111 = t137_tmp * 0.86249874623992451;
  t2112 = t78_tmp * 12.459456472098831;
  t2113 = t78_tmp * 1.640236756266755;
  t2114 = t80_tmp * 3.2804735125335092;
  t2116 = t101_tmp * 3.2804735125335092;
  t2117 = t137_tmp * 3.2804735125335092;
  t2120 = t78_tmp * 4.153152157366276;
  t2121 = t80_tmp * 8.3063043147325519;
  t2123 = t101_tmp * 8.3063043147325519;
  t2124 = t137_tmp * 8.3063043147325519;
  t2127 = t78_tmp * 1.455718913883074;
  t2128 = t137_tmp * 1.7577552514093311;
  t2129 = t78_tmp * 2.6366328771139971;
  t2130 = t80_tmp * 2.6366328771139971;
  t2131 = t101_tmp * 2.6366328771139971;
  t2132 = t137_tmp * 2.6366328771139971;
  t2134 = t78_tmp * 7.822811055622382;
  t2137 = t101_tmp * 1.665328963808584;
  t2138 = t101_tmp * 3.3306579276171671;
  t2139 = t137_tmp * 3.3306579276171671;
  t2142 = t78_tmp * 8.0357894378061818;
  t2143 = t78_tmp * 2.678596479268728;
  t2144 = t80_tmp * 5.3571929585374551;
  t2146 = t101_tmp * 5.3571929585374551;
  t2147 = t137_tmp * 5.3571929585374551;
  t2149 = t78_tmp * 12.56244657208439;
  t2153 = t78_tmp * 3.3941803114209961;
  t2163_tmp = t2 * t8;
  t2163 = t2163_tmp * -8.786461266540611;
  t2164 = t78_tmp * 0.46297220074622553;
  t2183 = t78_tmp * -4.3542486889354093;
  t2184 = t78_tmp * -3.507290222520552;
  t2186 = t2163_tmp * -2.2150978764053031;
  t2191 = t78_tmp * -2.7250809929537918;
  t2206 = t2163_tmp * -1.179140540047817;
  t2211 = t101_tmp * 0.360041026704992;
  t2212 = t137_tmp * 0.360041026704992;
  t2213 = t137_tmp * 0.720082053409984;
  t2215 = t2163_tmp * -1.8565335790890409;
  t2222 = t1045_tmp * -0.050263700192823127;
  t2237 = t101_tmp * -8.4558768606022756;
  t2238 = t137_tmp * -8.4558768606022756;
  t2241 = t101_tmp * -5.8204260395535252;
  t2256 = t78_tmp * 0.14622157706657879;
  t2257 = t101_tmp * 0.14622157706657879;
  t2272 = t101_tmp * 0.87887762570466543;
  t2274 = t137_tmp * 0.87887762570466543;
  t2281 = t2163_tmp * -2.182281467692202;
  t2296 = t2163_tmp * -0.26036534828376279;
  t2300 = t101_tmp * 0.050263700192823127;
  t2303 = t78_tmp * -0.050263700192823127;
  t38 = t4 * 0.875;
  t53 = t4 * 2.0416666666666665;
  t88 = t4 * t47;
  t90 = t4 * t48;
  t103_tmp = t4 * t11;
  t103 = t103_tmp * 5.833333333333333;
  t104_tmp = t4 * t12;
  t104 = t104_tmp * 5.833333333333333;
  t107_tmp = t4 * t13;
  t107 = t107_tmp * 8.1666666666666661;
  t108_tmp = t4 * std::pow(zeta_1_inv, 5.0);
  t108 = t108_tmp * 8.1666666666666661;
  t113 = eta * 10.417645787316825;
  t115 = 10.417645787316825 * zeta_1_inv;
  t118 = eta * t83;
  t120_tmp = t4 * zeta_1_inv;
  t120 = t120_tmp * -0.328125;
  t122 = t120_tmp * -0.765625;
  t133 = t103_tmp * 2.9166666666666665;
  t135 = t103_tmp * 0.65625;
  t136 = t104_tmp * 0.65625;
  t139_tmp = t3 * t13;
  t139 = t139_tmp * 6.125;
  t146 = t139_tmp * 3.0625;
  t147 = t107_tmp * 3.0625;
  t148 = t108_tmp * 3.0625;
  t153 = t103_tmp * 1.53125;
  t154 = t104_tmp * 1.53125;
  t157 = eta * 0.50121921663579494;
  t177 = t103_tmp * 0.328125;
  t180 = t103_tmp * 0.765625;
  t181 = t104_tmp * 0.765625;
  t182 = t107_tmp * 0.765625;
  t186 = t103_tmp * 13.611111111111111;
  t187 = t104_tmp * 13.611111111111111;
  t189 = t103_tmp * 6.8055555555555554;
  t192 = t139_tmp * 19.055555555555557;
  t193 = t107_tmp * 19.055555555555557;
  t194 = t108_tmp * 19.055555555555557;
  t201 = t139_tmp * 7.145833333333333;
  t202 = t107_tmp * 7.145833333333333;
  t203 = t108_tmp * 7.145833333333333;
  t207 = t2 * 10.417645787316825;
  t210 = t2 * t83;
  t217 = t139_tmp * 2.296875;
  t218 = t104_tmp * 2.296875;
  t219 = t107_tmp * 2.296875;
  t230 = t139_tmp * 5.359375;
  t231 = t104_tmp * 5.359375;
  t232 = t107_tmp * 5.359375;
  t235 = t107_tmp * 4.7638888888888893;
  t237 = t103_tmp * 3.5729166666666665;
  t238 = t104_tmp * 3.5729166666666665;
  t241 = t103_tmp * 1.7864583333333333;
  t242 = t104_tmp * 1.7864583333333333;
  t243 = t107_tmp * 1.7864583333333333;
  t246 = t2 * 0.50121921663579494;
  t271 = t103_tmp * 8.3368055555555554;
  t272 = t104_tmp * 8.3368055555555554;
  t284 = t103_tmp * 4.1684027777777777;
  t290 = eta * 4.4552819256515113;
  t299 = t139_tmp * 4.58257569495584 * 0.765625;
  t319 = t4 * t294;
  t322_tmp = t4 * 1.7320508075688772 * 2.6457513110645907 * zeta_1_inv;
  t322 = t322_tmp * -0.25520833333333331;
  t325 =
      t139_tmp * 1.7320508075688772 * 2.6457513110645907 * 2.0416666666666665;
  t333_tmp = t103_tmp * 1.7320508075688772 * 2.6457513110645907;
  t334_tmp = t104_tmp * 1.7320508075688772 * 2.6457513110645907;
  t336 = t333_tmp * 0.25520833333333331;
  t337 = t334_tmp * 0.25520833333333331;
  t342_tmp = t139_tmp * 8.1666666666666661;
  t971 = t10 * 2.275672539887426;
  t995 = t10 * 9.891226653088987;
  t1015 = t847 * zeta_1_inv;
  t1043 = t10 * 2.182281467692202;
  t1126 = t10 * 2.2150978764053031;
  t1156 = t10 * 1.037882440752437;
  t1173 = eta * t715;
  t1258 = t10 * 8.5022784527510549;
  t1260 = t775 * zeta_1_inv;
  t1266 = t10 * 3.262732874098722;
  t1278 = t10 * 0.87482587151645808;
  t1296 = eta * t833;
  t1305 = t10 * 2.302032014950429;
  t1378 = t1215 * zeta_1_inv;
  t1380 = eta * t1238;
  t1391 = t10 * 0.8882088860399312;
  t1420 = eta * t1276;
  t1424 = eta * t1284;
  t1426 = t1255 * zeta_1_inv;
  t1473 = t964 * zeta_1_inv;
  t1485 = t10 * 0.2469278032322306;
  t1505 = t988 * zeta_1_inv;
  t1518 = eta * t1026;
  t1608 = t4 * t415;
  t1618 = eta * t1108;
  t1654 = eta * t1150;
  t1661 = t1119 * zeta_1_inv;
  t1671 = eta * t1158;
  t1697 = t139_tmp * 9.4872153134681625;
  t1700 = t11 * t726;
  t1743 = t139_tmp * 55.636055296942807;
  t1760 = t11 * t798;
  t1787 = t139_tmp * 23.604758390237421;
  t1807 = t11 * t847;
  t1808 = t12 * t847;
  t1811 = t139_tmp * 25.367630581806829;
  t1856 = t1375 * zeta_1_inv;
  t1869 = t139_tmp * 11.210125214143069;
  t1880 = t120_tmp * -2.728860179461551;
  t1931 = t139_tmp * 13.95274360221001;
  t1933 = t11 * t1023;
  t1976 = t103_tmp * 2.728860179461551;
  t1977 = t104_tmp * 2.728860179461551;
  t1997 = t2 * t1149;
  t1998 = t11 * t1119;
  t2001 = t11 * t1120;
  t2028 = t139_tmp * 8.1865805383846517;
  t2029 = t104_tmp * 8.1865805383846517;
  t2030 = t107_tmp * 8.1865805383846517;
  t2046 = t139_tmp * 1.0801230801149759;
  t2052 = t2 * t1237;
  t2069 = t11 * t1247;
  t2072 = t11 * t1248;
  t2074 = t12 * t1248;
  t2075 = t2 * t1275;
  t2076 = t2 * t1283;
  t2092 = t2 * t973;
  t2101 = t8 * t961;
  t2102 = t11 * t964;
  t2115 = t11 * t978;
  t2122 = t11 * t988;
  t2133 = t139_tmp * 2.6366328771139971;
  t2165 = t11 * t1375;
  t2196 = t2 * t1508;
  t2387 = -xi *
          ((((zeta * 5.7097186965271 - t8 * 26.7793091670057) + t859) + t947) +
           t1768);
  t2423_tmp = t23_tmp * 29.16780178875155 + t385;
  t2498 = -xi * (((((((t455 + t613) + t634) - t663) - t532) + t1274) + t1725) +
                 t1749);
  t2518_tmp = t454 + t456_tmp * 14.58390089437577;
  t2581 =
      -xi * (((((((((-t354 + t421) - t713) + t772) + t809) + t1124) - t1181) -
               t1467) +
              t1506) +
             t2123);
  t2619 =
      -xi * (((((((((-t502 + t585) + t741) + t813) - t976) + t1226) + t1480) -
               t1646) -
              t2014) +
             t2110);
  t2622 =
      -xi *
      (((((((((t525 + t622) + t785) + t817) + t839) + t991) - t1150) + t1583) +
        t1926) +
       t1959);
  t99 = t11 * t38;
  t151 = t13 * t53;
  t300 = 4.58257569495584 * t181;
  t301 = 4.58257569495584 * t182;
  t1168 = -t6 * ((-(t78_tmp * 27.222222222222221) + t193) + 8.1666666666666661);
  t2326 = -t6 * (((t41 - t143) + t202) - t200);
  t2361_tmp = t42_tmp * 8.3368055555555554 - t139_tmp * 16.673611111111111;
  t2363_tmp = t78_tmp * 16.673611111111111 - t107_tmp * 16.673611111111111;
  t2370_tmp = t78_tmp * 4.1684027777777777 - t107_tmp * 4.1684027777777777;
  t2372_tmp = t108_tmp * 16.673611111111111 - t80_tmp * 8.3368055555555554;
  t2390 =
      (((((t2 * 4.4552819256515113 + -1.3365845776954535) + t4 * t293) + t425) -
        t671) +
       t1024) +
      t1045_tmp * -7.2808637498563362;
  t2412_tmp = t582 + t689;
  t2413_tmp = t396 + t467;
  t2434 = ((((((t4 * t30 + t507) + t1221) + t1271) - t997) + t2 * t545) +
           t1045_tmp * -1.422082022959295) -
          0.375;
  t2471 = ((((((t451 + t478) + t726) - t815) + t1152) + t1203) + t1570) + t1907;
  t2472 = ((((((t478 - t451) + t726) + t815) + t1203) - t1152) + t1570) + t1657;
  t2490 = -xi * (((((((t455 + t532) + t613) + t634) - t663) - t1274) + t1725) -
                 t1749);
  t2491 =
      ((((((t570 + t696) + t1011) + t1248) - t1010) + t1413) + t1755) + t1816;
  t2492 =
      ((((((t696 - t570) + t1010) + t1248) - t1011) + t1408) + t1413) + t1816;
  t2540 =
      (((((((((t204 + t246) + t319) + t735) - t508) + t1230) + t1263) + t1472) -
        t1231) +
       t1679) +
      t1814;
  t2579 =
      -xi * ((((((((((t116 - t237) + t456) + t600) + t737) + t1218) - t1276) +
                t1353) -
               t1481) +
              t2011) +
             t2116);
  t2589 = ((((((((t696 + t926) + t981) + t1102) + t1208) - t1088) + t1497) +
            t1591) +
           t1644) +
          t1816;
  t2594_tmp = t3 * zeta;
  t2595_tmp = eta * t9;
  t2597 = ((((((((t926 + t1018) + t1102) + t1208) - t981) - t1088) + t1492) +
            t1591) +
           t1644) +
          t1820;
  t2613 = (((((((((-t445 - t615) - t639) + t985) + t1105) + t1158) + t1528) +
             t1600) +
            t1967) +
           t1972) *
          xi;
  t2620_tmp = -(t9 * 2.0942964783336389) - zeta * 0.26853159682876421;
  t2627 =
      ((((((((((t122 + t204) + t210) + t422) + t735) + t980) + t1362) + t1548) -
         t1430) +
        t1814) -
       t1524) +
      t2040;
  t2642 = (((((((((-t65 + t597) + t720) + t746) + t1047) - t1046) - t1075) +
             t1595) +
            t1642) +
           t1880) +
          t2048;
  t2643 = (((((((((-t65 + t720) + t746) - t597) + t1046) + t1075) - t1047) +
             t1595) +
            t1608) +
           t1642) +
          t2222;
  t316_tmp = t18 + t18 * zeta_1_inv;
  t2648 =
      (((((((((t316_tmp + t603) + t1078) + t1173) + t1222) + t1355) + t1488) +
         t1530) -
        t1214) +
       t1610) +
      t1704;
  t2651 =
      (((((((((t316_tmp - t603) + t1173) + t1214) + t1355) - t1078) + t1530) -
         t1222) +
        t1704) +
       t1806) +
      t1882;
  t2656_tmp = t23_tmp * -0.25 - t46;
  t2656 =
      ((((((((((t2656_tmp + t120) + t840) + t968) + t999) + t1096) + t1267) +
          t1403) +
         t1520) +
        t1634) -
       t1295) +
      t1890;
  t2657_tmp = eta * t19 + t46;
  t2657 =
      ((((((((((t2657_tmp + t120) + t840) + t999) + t1267) + t1312) + t1403) -
          t1096) +
         t1520) +
        t1618) -
       t1295) +
      t1894;
  t2660 =
      ((((((((((t490 + t654) + t773) - t582) + t906) - t689) + t1023) + t1095) +
         t1147) +
        t1296) +
       t1550) +
      t1647;
  t2661 =
      ((((((((((t490 + t582) + t654) + t689) + t773) + t906) + t1147) + t1296) -
         t1023) -
        t1095) +
       t1850) +
      t1903;
  t2664 = ((((((((((t662 + t905) + t1053) + t1085) + t1163) + t1256) - t990) -
              t1032) +
             t1518) +
            t1613) +
           t1648) +
          t1827;
  t2665 = ((((((((((t729 + t905) + t990) - t662) + t1085) + t1256) - t1032) +
              t1510) +
             t1513) +
            t1613) +
           t1648) +
          t1830;
  t2350_tmp = t203 - t80_tmp * 3.5729166666666665;
  t2384 = ((((t207 + t2 * t115) + t710) - t483) - t783) + t2 * t367;
  t2393 =
      ((((((t103_tmp * 9.5277777777777786 - zeta * 5.7468992297069406) - t659) +
          t1546) -
         t8 * 0.52073069656752557) +
        t1962) +
       4.083333333333333) *
      xi;
  t2432_tmp = t9 * 0.62363396177421926 + t861;
  t2453_tmp = (-(t101_tmp * 16.673611111111111) + eta * 12.701368490939959) +
              t23_tmp * 6.4352335184871743;
  t2484 =
      (((((((t408 + t713) - t618) - t738) + t1081) + t1181) + t1467) + t1852) *
      xi;
  t2487 =
      (((((((t408 + t618) + t713) - t738) + t1181) - t1081) + t1467) - t1852) *
      xi;
  t2541 = (((((((((t157 + t246) + t319) - t508) + t1059) + t1230) + t1472) +
             t1491) -
            t1231) -
           t1263) +
          t1919;
  t2564 =
      (((((((((t354 + t421) + t713) + t772) + t809) + t1181) - t1124) + t1467) +
        t1506) +
       t2123) *
      xi;
  t2569 = ((((((((((t116 + t237) - t456) + t737) - t600) + t1276) + t1353) -
              t1218) -
             t1481) +
            t2116) -
           t2011) *
          xi;
  t2591 =
      (((((((((t502 + t585) + t741) + t813) + t976) + t1480) - t1226) + t1646) +
        t2014) +
       t2110) *
      xi;
  t2592 =
      (((((((((t622 + t785) + t817) - t525) + t1150) - t839) - t991) + t1583) +
        t1959) -
       t1926) *
      xi;
  t2604 =
      (((((((((t445 + t615) + t782) - t639) + t985) + t1158) + t1528) - t1600) +
        t1967) -
       t1972) *
      xi;
  t2632 = ((((((((((t122 + t157) + t210) + t422) + t1059) - t980) + t1491) +
              t1548) +
             t1728) -
            t1430) -
           t1524) +
          t2040;
  t2325 = t6 * (((t41 + t143) - t200) - t202);
  t2341_tmp = t42_tmp * 3.5729166666666665 - t201;
  t2347_tmp = t78_tmp * 7.145833333333333 - t202;
  t316_tmp = t78_tmp * 1.7864583333333333 - t243;
  sfvals_tmp =
      (-t7 * (((t56 + t176) - t182) - t179) +
       ((((((((t2620_tmp + t814 * zeta) + t1136) + t1156) + eta * t1267) +
           t1698) +
          t1523_tmp * -0.611630880226667) +
         t2594_tmp * -0.71921408246717577) +
        t2206)) +
      t5 * ((((((((((-t177 + t531) + t562) + t717) + t748) + t930) + t1456) -
               t1196) +
              t1636) +
             t2056) +
            t2098);
  b_sfvals_tmp = t2657 * xi;
  c_sfvals_tmp =
      t6 *
      (((((((t181 - t414) - t452) + t23_tmp * -1.2711470051940079) + t1454) +
         t1934) +
        t1935) +
       t2094);
  sfvals[0] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[1] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp =
      (t7 * (((t56 + t182) - t176) - t179) +
       ((((((((t2620_tmp + t1136) + t1156) + t398_tmp * -0.28367489705487042) +
            eta * t1295) +
           t3 * t452) +
          t1698) +
         t2595_tmp * -0.57795598317179664) +
        t2206)) +
      -t5 * ((((((((((t177 - t531) + t562) + t717) - t748) + t930) + t1196) +
                t1456) -
               t1636) -
              t2056) +
             t2098);
  b_sfvals_tmp = t2656 * xi;
  c_sfvals_tmp =
      t6 *
      (((((((t181 + t414) - t452) + eta * t431) + t1454) + t2094) - t1934) -
       t1935);
  sfvals[2] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[3] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[4] = (((((t8 * 9.40198296012246 - t9 * 21.742693705143861) +
                  t10 * 14.36113481672175) -
                 zeta * 1.020424071700353) +
                t2163_tmp * 1.9538975804597629) +
               t1045_tmp * -0.6410137560657948) +
              -t5 * ((((t2 * 4.26892997764128 - t8 * 1.9538975804597629) +
                       zeta * 0.6410137560657948) +
                      t78_tmp * 2.9664783938093371) +
                     t456_tmp * 7.2354083714506174);
  sfvals_tmp =
      (t7 * (((t57 + t178) - t240) - t243) +
       -t5 * ((((((((((t118 - t241) + t709) + t736) + t917) + t1217) - t1275) +
                 t1352) +
                t2010) -
               t1801) +
              t2115)) +
      (((((((((t917 + t398_tmp * -0.5510619903047087) + t1162) + t3 * t568) -
            t1185) -
           t1278) +
          t1862) +
         eta * t1430) +
        eta * t1524) +
       t2052);
  b_sfvals_tmp = t2540 * xi;
  c_sfvals_tmp =
      t6 *
      (((((((t337 - t508) - t550) + t23_tmp * -2.0961162122540729) + t1473) +
         t2007) +
        t2061) +
       t11 * t1263);
  sfvals[5] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[6] =
      ((((((((((((((t27 - t37) + t38) - t36) + t3 * t356) + t851) + t1299) +
              eta * t997) -
             t1170) -
            t1391) +
           t1896) +
          t2076) -
         t7 * (((t34 + t98) - t149) - t107_tmp * 2.0416666666666665)) -
        t2595_tmp * 0.547082022959295) -
       t398_tmp * 1.7694136082065079) -
      t5 * ((((((((((t133 + t529) + eta * t545) + t851) + t1165) - t1389) +
                t1398) +
               t1448) +
              t1947) +
             t2137) -
            t398_tmp * 1.422082022959295);
  sfvals[7] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      (t7 * ((t316_tmp + eta * t294) - t335) +
       -t5 * (((((((((t204 - t180) + t629) + t709) +
                   t398_tmp * -3.0901021333574) +
                  t1217) -
                 t1237) +
                t1475) +
               t2010) +
              t2063)) +
      (((((((((t917 + t1162) + t398_tmp * -1.0365230281772631) + eta * t1230) +
            t3 * t508) -
           t1185) -
          t1278) +
         t2595_tmp * -1.0365230281772631) +
        t2055) +
       t2075);
  b_sfvals_tmp = t2632 * xi;
  c_sfvals_tmp =
      t6 *
      (((((((-t242 + t522) + t568) + t837) + t1799) - t2007) + t2241) - t2113);
  sfvals[8] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      (t7 * ((t151 - t78_tmp * 2.9166666666666665) + 0.875) +
       -t5 *
           ((((((t99 + zeta * 0.73773313348254121) + t1165) - t1283) + t1448) +
             t1947) +
            0.375)) +
      (((((t851 + t1299) - t1170) - t1391) + t1045_tmp * -0.46681777788046508) +
       t2 * t1389);
  e_sfvals_tmp = t6 * ((((-t356 + t456_tmp * 4.5819956304752507) +
                         t78_tmp * 1.665328963808584) -
                        t104_tmp * 2.0416666666666665) +
                       0.875);
  f_sfvals_tmp = t2434 * xi;
  sfvals[9] = (d_sfvals_tmp + e_sfvals_tmp) + f_sfvals_tmp;
  g_sfvals_tmp =
      (t7 * ((t316_tmp + t296_tmp * -0.25520833333333331) + t335) +
       -t5 * (((((((((t157 - t180) + t629) + t546 * zeta) + t709) + t1217) -
                 t1237) -
                t1475) +
               t2010) -
              t2063)) +
      (((((((((t487 * zeta + t917) + t1162) + t9 * t487) - t1185) - t1278) +
          t1523_tmp * -2.073046056354527) +
         t2594_tmp * -1.0365230281772631) +
        t2055) +
       t2075);
  h_sfvals_tmp = t2627 * xi;
  i_sfvals_tmp =
      t6 *
      (((((((t242 + t522) + t837) - t568) - t1799) + t2113) - t2007) + t2241);
  sfvals[10] = (g_sfvals_tmp + h_sfvals_tmp) + i_sfvals_tmp;
  j_sfvals_tmp =
      (-t7 * (((t57 - t178) + t243) - t240) +
       t5 * ((((((((((t118 + t241) + t736) - t709) - t917) + t1275) + t1352) -
                t1217) -
               t1801) +
              t2115) -
             t2010)) +
      (((((((((eta * t422 + t917) + t1162) - t1185) - t1278) +
           t2594_tmp * -1.640236756266755) +
          t1862) +
         t2052) +
        t1523_tmp * -0.33044651488224508) +
       t2595_tmp * -0.2206154754224636);
  k_sfvals_tmp = t2541 * xi;
  l_sfvals_tmp =
      t6 *
      (((((((t337 + t550) - t508) + eta * t506) + t1473) + t2061) - t2007) +
       t2241);
  sfvals[11] = (j_sfvals_tmp - k_sfvals_tmp) + l_sfvals_tmp;
  sfvals[12] =
      ((((((((((((((-t27 + t37) + t38) - t36) + t851) + t484 * zeta) + t1299) +
              eta * t1221) -
             t1170) -
            t1391) +
           t1896) +
          t2076) -
         t1523_tmp * 1.941495631165802) -
        t5 * ((((((((((t133 - t529) + t851) + t476 * zeta) + t1165) - t1389) -
                  t1398) +
                 t1448) +
                t1947) -
               t2137) -
              t23_tmp * 0.47233158524721253)) -
       t2594_tmp * 2.5403289638085842) +
      t7 * (((t34 - t98) - t149) + t151);
  sfvals[13] = (j_sfvals_tmp + k_sfvals_tmp) - l_sfvals_tmp;
  sfvals[14] = (g_sfvals_tmp - h_sfvals_tmp) - i_sfvals_tmp;
  sfvals[15] = (d_sfvals_tmp - e_sfvals_tmp) - f_sfvals_tmp;
  sfvals[16] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      (((((((((t743 + t1200) - t971) + t398_tmp * -0.2486033418363017) -
            t1090) +
           eta * t1032) +
          t2595_tmp * -1.5297285416202959) +
         t3 * t810) +
        t1754) +
       t1997) +
      -t5 * (((((((((t524 + t621) + t784) + t816) - t1149) + t1175) + t1326) +
               t1582) +
              t1925) +
             t1958);
  b_sfvals_tmp = t2664 * xi;
  c_sfvals_tmp =
      t6 *
      ((((((-t557 + t23_tmp * -0.68432031687125283) - t810) + t1581) + t1956) +
        t2066) +
       t2067);
  sfvals[17] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp =
      (((((((((-t442 + t583 * zeta) + t1192) - t857) + t1266) + eta * t1222) +
          t1523_tmp * -2.98350911060014) +
         t3 * t843) +
        t2090) +
       t2196) +
      t5 * (((((((((t614 + t548 * zeta) + eta * t416) - t638) + t984) + t1508) +
               t1527) -
              t1599) +
             t1966) -
            t1971);
  e_sfvals_tmp = t2648 * xi;
  f_sfvals_tmp =
      t6 *
      ((((((-t728 - t843) + t23_tmp * -0.46558748861335453) + t1598) + t1969) +
        t2272) +
       t2274);
  sfvals[18] = (d_sfvals_tmp + e_sfvals_tmp) - f_sfvals_tmp;
  g_sfvals_tmp =
      t5 * (((((((((t501 + t584) + t740) + t812) + t975) + t1479) - t1225) +
              t1645) +
             t2013) +
            t2109) +
      (((((((((t747 + t915) + t398_tmp * -1.034374182733923) + t1359) - t1040) +
           t2595_tmp * -10.09826518154069) +
          eta * t1095) -
         t1258) +
        t2594_tmp * -0.260546850299409) +
       t2215);
  h_sfvals_tmp = t2661 * xi;
  i_sfvals_tmp =
      t6 *
      ((((((-t388 - t417) + t23_tmp * -0.18933850388443879) + t1478) + t2107) +
        t2211) +
       t2212);
  sfvals[19] = (g_sfvals_tmp - h_sfvals_tmp) + i_sfvals_tmp;
  sfvals[20] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[21] = (d_sfvals_tmp - e_sfvals_tmp) + f_sfvals_tmp;
  sfvals[22] = (g_sfvals_tmp + h_sfvals_tmp) - i_sfvals_tmp;
  sfvals_tmp =
      t5 * (((((((((t621 + t784) + t816) - t524) + t1149) - t1175) + t1582) -
              t1326) +
             t1958) -
            t1925) +
      (((((((((t743 + t874 * zeta) + t1200) - t971) + eta * t1256) - t1090) +
          t1754) +
         t1523_tmp * -1.0732497944853849) +
        t2594_tmp * -0.84018834177117407) +
       t1997);
  b_sfvals_tmp = t2665 * xi;
  c_sfvals_tmp =
      t6 * ((((((t557 + t557 * zeta_1_inv) - t810) + t1581) + t1956) - t2066) -
            t2067);
  sfvals[23] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  d_sfvals_tmp =
      t5 * (((((((((-t614 - t638) + t984) + t398_tmp * -5.7653265929256126) +
                 t23_tmp * -4.3542486889354093) +
                t1508) +
               t1527) +
              t1599) +
             t1966) +
            t1971) +
      (((((((((-t442 + t398_tmp * -0.33554556643444161) + t1192) - t857) +
            t1266) +
           eta * t1214) +
          t2595_tmp * -3.981296877499032) +
         t2594_tmp * -0.27207965207632351) +
        t2090) +
       t2196);
  e_sfvals_tmp = t2651 * xi;
  f_sfvals_tmp =
      t6 * ((((((t728 - t843) + t728 * zeta_1_inv) + t1598) + t1969) - t2272) -
            t2274);
  sfvals[24] = (d_sfvals_tmp + e_sfvals_tmp) + f_sfvals_tmp;
  g_sfvals_tmp =
      (((((((((t559 * zeta + t747) + t915) + eta * t689) + t1359) - t1040) +
          t3 * t417) -
         t1258) +
        t1523_tmp * -7.7543881199124893) +
       t2215) +
      -t5 * (((((((((-t501 + t584) + t740) + t812) - t975) + t1225) + t1479) -
               t1645) -
              t2013) +
             t2109);
  h_sfvals_tmp = t2660 * xi;
  i_sfvals_tmp =
      t6 * ((((((t388 + t388 * zeta_1_inv) - t417) + t1478) + t2107) - t2211) -
            t2212);
  sfvals[25] = (g_sfvals_tmp - h_sfvals_tmp) - i_sfvals_tmp;
  sfvals[26] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[27] = (d_sfvals_tmp - e_sfvals_tmp) - f_sfvals_tmp;
  sfvals[28] = (g_sfvals_tmp + h_sfvals_tmp) + i_sfvals_tmp;
  sfvals_tmp =
      (-t7 * ((t2370_tmp + eta * t415) - t1975) +
       t5 * (((((((((-t284 + t625) - t611) + t969) + t1209 * zeta) - t1041) +
                t1464) +
               t2104) +
              t11 * t1014) -
             t2051)) +
      (((((((((t575 * zeta - t625) + t1043) + t1072) - t1062) + t9 * t575) +
          t1584) +
         t1523_tmp * -5.3571929585374551) +
        t2594_tmp * -2.678596479268728) +
       t2281);
  b_sfvals_tmp = t2643 * xi;
  c_sfvals_tmp =
      t6 * (((((((t403 + t597) + t807) + t1964) + t1709 * zeta_1_inv) - t1977) -
             t1993) -
            t2143);
  sfvals[29] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  d_sfvals_tmp = t52 - t53;
  e_sfvals_tmp = t398_tmp * 7.2808637498563362;
  f_sfvals_tmp = t78_tmp * 4.7638888888888893 - t235;
  sfvals[30] =
      (((((((((((((d_sfvals_tmp + t3 * 1.3365845776954535) - t492) +
                 eta * t425) +
                t1045) +
               t1270) +
              t1305) +
             eta * t1024) -
            t1216) +
           t2296) -
          t1523_tmp * 9.66091738149601) +
         t5 * (((((((((t189 + t290) + t492) - t658) + t1433) + t1545) + t1554) -
                 t1302) +
                t1961) -
               e_sfvals_tmp)) -
        t2594_tmp * 4.1621664019002784) +
       t7 * ((f_sfvals_tmp + eta * t293) - t332)) -
      t288_tmp * 0.29166666666666669;
  sfvals[31] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp =
      (-t7 * ((-(t78_tmp * 6.8055555555555554) + t235) + 2.0416666666666665) +
       t5 * ((((((t103_tmp * 4.7638888888888893 - zeta * 2.87344961485347) -
                 t658) +
                t1545) -
               t8 * 0.26036534828376279) +
              t1961) +
             2.0416666666666665)) +
      (((((-t492 + t1270) + t1305) + t2 * t492) - t1216) +
       t2163_tmp * -2.302032014950429);
  b_sfvals_tmp =
      t6 * ((((1.3365845776954535 - t334_tmp * 0.68055555555555558) - t586) +
             t1261 * zeta_1_inv) +
            t78_tmp * 2.825581824204825);
  c_sfvals_tmp = t2390 * xi;
  sfvals[32] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  g_sfvals_tmp =
      (-t7 * ((t2370_tmp + t23_tmp * -2.728860179461551) + t1975) +
       t5 * (((((((((-t284 + t611) + t625) + t969) - t1041) + t1464) +
                t398_tmp * -0.050263700192823127) +
               t2051) +
              t2104) +
             t101_tmp * -2.678596479268728)) +
      (((((((((-t625 + t1043) + t398_tmp * -2.678596479268728) + t1072) -
            t1062) +
           eta * t1046) +
          t3 * t597) +
         t1584) +
        t2595_tmp * -2.678596479268728) +
       t2281);
  h_sfvals_tmp = t2642 * xi;
  i_sfvals_tmp =
      t6 * (((((((t403 + t807) - t597) + t1964) + t1977) + t2143) - t1993) +
            t456_tmp * -0.050263700192823127);
  sfvals[33] = (g_sfvals_tmp - h_sfvals_tmp) - i_sfvals_tmp;
  sfvals[34] =
      (((((((((((((d_sfvals_tmp + eta * 1.3365845776954535) - t492) + t1045) +
                eta * t671) +
               t1270) +
              t1305) +
             t3 * t586) -
            t1216) +
           t2296) -
          t2595_tmp * 4.1621664019002784) -
         t398_tmp * 6.8353355572911854) -
        t5 * (((((((((-t189 + t290) + t658) - t492) + t1302) + t1433) - t1545) +
                t1554) -
               t1961) -
              e_sfvals_tmp)) +
       t7 * ((f_sfvals_tmp + t332) - t296_tmp * 0.68055555555555558)) -
      t307_tmp_tmp * 0.29166666666666669;
  sfvals[35] = (g_sfvals_tmp + h_sfvals_tmp) + i_sfvals_tmp;
  sfvals[36] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[37] =
      ((((((t2 * -3.3333333333333335 + t4 * 2.3333333333333335) +
           t8 * 9.2578991857730273) -
          t9 * 7.3850751594240513) +
         t10 * 2.1707503776916921) -
        zeta * 5.0435744040406671) +
       t5 * ((((((t2 * 12.2818614888028 - t8 * 4.5040837110250251) +
                 zeta * 7.7102410707073341) +
                t78_tmp * 0.12717597365102451) -
               t103_tmp * 7.7777777777777777) +
              t456_tmp * 1.2979263513427159) -
             3.3333333333333335)) +
      (((t2163_tmp * -4.5040837110250251 + t1045_tmp * 7.7102410707073341) +
        t7 * ((t78_tmp * -7.7777777777777777 + t107_tmp * 5.4444444444444446) +
              2.3333333333333335)) +
       1.0);
  sfvals_tmp =
      t5 * (((((((((t364 + t420) + t771) + t808) + t1030) - t1123) + t1466) +
              t1505) +
             t1542) +
            t2122) +
      (((((((((-t364 + t902 * zeta) + t1126) + t1161) + eta * t1208) + t1576) -
          t1232) +
         t2594_tmp * -4.153152157366276) +
        t2595_tmp * -2.4182112327690328) +
       t2163);
  b_sfvals_tmp = t2492 * xi;
  c_sfvals_tmp =
      t6 *
      ((((((-t551 - t570) + t23_tmp * -1.8845134704669679) + t1411) + t2069) +
        t2072) +
       t2074);
  sfvals[38] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[39] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals_tmp = (t113 + t113 * zeta_1_inv) + eta * t367;
  sfvals[40] =
      ((((((((t2432_tmp + t469 * zeta) + t9 * t409) - t1213) - t1485) +
          t3 * t928) +
         t1895) +
        t2092) -
       t5 * (((((((sfvals_tmp + t858) + t861) + t1294) - t1482) + t1767) +
              t1856) +
             t2165)) -
      t1523_tmp * 14.94186337173196;
  b_sfvals_tmp =
      t5 * (((((((t623 + t1030) + t398_tmp * -8.4558768606022756) - t1068) +
               t1413) +
              t1466) +
             t1542) +
            t2072) +
      (((((((((-t364 + t696) + t880) + t1126) + t1161) + t9 * t551) - t1232) +
         t1523_tmp * -3.769026940933935) +
        t2594_tmp * -1.8845134704669679) +
       t2186);
  c_sfvals_tmp = t2597 * xi;
  d_sfvals_tmp =
      t6 *
      ((((((-t515 - t577) + t23_tmp * -8.4558768606022756) + t1504) + t2072) +
        t2074) +
       t2120);
  sfvals[41] = (b_sfvals_tmp - c_sfvals_tmp) - d_sfvals_tmp;
  e_sfvals_tmp =
      t5 * (((((((t623 + t515 * zeta) + t1030) - t1068) + t1466) + t1542) +
             t1758) +
            t2237) +
      (((((((((-t364 + t880) + t1018) + t1126) + t1161) + eta * t1010) +
          t3 * t570) -
         t1232) +
        t2595_tmp * -1.8845134704669679) +
       t2186);
  f_sfvals_tmp = t2589 * xi;
  g_sfvals_tmp =
      t6 * ((((((t515 - t577) + t515 * zeta_1_inv) + t1504) + t2120) + t2237) +
            t2238);
  sfvals[42] = (e_sfvals_tmp - f_sfvals_tmp) - g_sfvals_tmp;
  h_sfvals_tmp =
      -t5 * ((((zeta * 2.85485934826355 + t858) - t973) + t1294) + t1767) +
      ((((t2432_tmp - t1213) - t1485) + t1045_tmp * -0.12977835530975809) +
       t2 * t1482);
  i_sfvals_tmp = t2384 * xi;
  j_sfvals_tmp = t6 * ((-t928 + t456_tmp * 0.46297220074622553) + t2164);
  sfvals[43] = (h_sfvals_tmp + i_sfvals_tmp) + j_sfvals_tmp;
  k_sfvals_tmp =
      (((((((((-t364 + t1126) + t1161) + t398_tmp * -0.30686976018475881) +
            t3 * t577) +
           t1576) +
          t9 * t606) -
         t1232) +
        t1523_tmp * -2.1113414725842738) +
       t2163) +
      -t5 * (((((((((-t364 + t420) + t771) + t808) - t1030) + t1123) - t1466) +
               t1505) -
              t1542) +
             t2122);
  l_sfvals_tmp = t2491 * xi;
  t316_tmp =
      t6 * ((((((t551 + t551 * zeta_1_inv) - t570) + t1411) + t2069) + t2237) +
            t2238);
  sfvals[44] = (k_sfvals_tmp - l_sfvals_tmp) - t316_tmp;
  sfvals[45] = (k_sfvals_tmp + l_sfvals_tmp) + t316_tmp;
  sfvals[46] =
      ((((((((t2432_tmp + eta * t710) - t1213) - t1485) + t1895) + t2092) -
         t2595_tmp * 12.67975457952439) -
        t398_tmp * 2.2621087922075662) -
       t2594_tmp * 0.46297220074622553) +
      t5 * (((((((sfvals_tmp - t858) - t861) + t1482) - t1294) + t1856) -
             t1767) +
            t2165);
  sfvals[47] = (e_sfvals_tmp + f_sfvals_tmp) + g_sfvals_tmp;
  sfvals[48] = (b_sfvals_tmp + c_sfvals_tmp) + d_sfvals_tmp;
  sfvals[49] = (h_sfvals_tmp - i_sfvals_tmp) - j_sfvals_tmp;
  sfvals_tmp =
      -t5 * ((((((t2518_tmp + t961) - t993) + t1160) + t1120 * zeta_1_inv) +
              t1982) +
             t2001) +
      (((((((((t454 + t897) - t750) + t1160) + eta * t815) - t995) +
          t3 * t451) +
         t2595_tmp * -8.7549843378798524) +
        t1916) +
       t2101);
  b_sfvals_tmp = t2472 * xi;
  c_sfvals_tmp =
      t6 *
      ((((((-t400 - t451) + t23_tmp * -18.5453517656476) + t1661) + t1700) +
        t12 * t726) +
       t1998);
  sfvals[50] = (sfvals_tmp + b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[51] = (sfvals_tmp - b_sfvals_tmp) + c_sfvals_tmp;
  sfvals_tmp = -t5 * ((((((t2518_tmp + t829) + t961) - t993) +
                        t72_tmp * -8.7549843378798524) +
                       t1982) +
                      t101_tmp * -8.7549843378798524) +
               (((((((((t454 + t829) + t897) - t750) - t995) +
                    t1523_tmp * -17.5099686757597) +
                   t9 * t427) +
                  t2594_tmp * -8.7549843378798524) +
                 t1916) +
                t2101);
  b_sfvals_tmp = t2471 * xi;
  c_sfvals_tmp = t6 * ((((((t400 + t400 * zeta_1_inv) - t451) + t1661) +
                         t101_tmp * -18.5453517656476) +
                        t137_tmp * -18.5453517656476) +
                       t1998);
  sfvals[52] = (sfvals_tmp + b_sfvals_tmp) + c_sfvals_tmp;
  sfvals[53] = (sfvals_tmp - b_sfvals_tmp) - c_sfvals_tmp;
  sfvals[54] =
      (((((t8 * 34.009900633907591 - t9 * 54.240171691702521) +
          t10 * 24.82348091649915) -
         t468) -
        t2163_tmp * 24.82348091649915) +
       t2 * t468) +
      t5 * ((((t2 * 24.82348091649915 - t8 * 24.82348091649915) + t468) +
             t78_tmp * 20.23027105779493) +
            t456_tmp * 45.05375197429408);
  sdvals_tmp =
      -t6 * (((t40 + t127) - t147) - t145) +
      ((((((((((-t135 + t381) + t474) + t563) + t718) + t931) + t1116) -
          t1197) +
         t1637) +
        t1887) +
       t2057) *
          xi;
  b_sdvals_tmp =
      t5 *
      (((((((t218 - t436) - t580) - t841) + t1319) + t1695) + t1696) + t2017);
  sdvals[0] = (sdvals_tmp + t2657) + b_sdvals_tmp;
  t307_tmp_tmp =
      (-t7 * (((t47 + t74) - t146) - t216) +
       (((((t840 + t853) + t1267) - t1295) + t1706) +
        t1045_tmp * -2.1576422474015269)) +
      t5 * ((((((((-t129 + t350) + t523) + t588) + t803) + t1319) + t1396) +
             t2017) +
            1.315093913883074);
  t316_tmp = t145 + t23_tmp * 4.56469436352511;
  t137_tmp = t6 * (((((t316_tmp - t431) + t1115) + t1693) + t1694) -
                   1.5992720051940079);
  c_sdvals_tmp =
      xi *
      (((((((((t19 - t72) + t563) + t718) + t931) + t1108) - t844) - t1131) -
        t1684) +
       0.390625);
  sdvals[1] = (t307_tmp_tmp + t137_tmp) + c_sdvals_tmp;
  d_sdvals_tmp =
      (t7 * (((t87 + t134) - t148) - t217) +
       -t5 * ((((((((-t136 + t477) - t514) + t1519) + t1888) + t1986) + t2058) +
               t2097) -
              0.70407078224106956)) +
      (((((((((t370 + t814) + t1155) - t943) + t398_tmp * -1.223261760453334) -
           t1122) +
          t1522) +
         eta * t1157) +
        t1707) -
       0.26853159682876421);
  e_sdvals_tmp =
      xi *
      (((((((((-t42 + t177) + t793) - t540) + t1157) - t824) + t1239) + t1984) -
        t2127) +
       0.28367489705487042);
  f_sdvals_tmp = t6 * ((((((t219 + t1697) + t1886) - t1633) + t1936) + t2093) +
                       0.71921408246717577);
  sdvals[2] = (d_sdvals_tmp + e_sdvals_tmp) - f_sdvals_tmp;
  sdvals[3] =
      (sdvals_tmp +
       (((((((((((t2656_tmp + t88) + t968) + t1096) - t840) + t1295) - t999) +
            t1634) -
           t1267) +
          t1752) +
         t1833) +
        t1890)) -
      b_sdvals_tmp;
  sdvals[4] = (t307_tmp_tmp - t137_tmp) - c_sdvals_tmp;
  sdvals[5] = (d_sdvals_tmp - e_sdvals_tmp) + f_sdvals_tmp;
  sdvals_tmp =
      t6 * (((t40 + t147) - t127) - t145) +
      -xi * ((((((((((t135 - t381) - t474) + t563) + t718) + t931) + t1116) +
                t1197) -
               t1637) +
              t1887) -
             t2057);
  b_sdvals_tmp =
      t5 *
      (((((((t218 + t436) + t841) - t580) + t1319) - t1695) - t1696) + t2017);
  sdvals[6] =
      (sdvals_tmp +
       (((((((((((t2657_tmp + t88) - t840) + t1295) + t1312) - t999) - t1096) +
            t1618) -
           t1267) +
          t1752) +
         t1833) +
        t1894)) -
      b_sdvals_tmp;
  t307_tmp_tmp =
      (t7 * (((t47 - t74) + t146) - t216) +
       (((((t853 - t840) + t1295) + t2 * t580) - t1267) + t1706)) +
      -t5 * ((((((((t129 - t350) + t523) + t588) - t803) + t1319) - t1396) +
              t2017) +
             1.315093913883074);
  t137_tmp = t6 * (((((t316_tmp + t431) + t1115) - t1693) - t1694) +
                   1.5992720051940079);
  c_sdvals_tmp =
      xi *
      (((((((((-t19 - t72) + t563) + t718) + t844) + t931) + t1131) - t1108) +
        t1684) -
       0.390625);
  sdvals[7] = (t307_tmp_tmp - t137_tmp) - c_sdvals_tmp;
  d_sdvals_tmp =
      (-t7 * (((t87 - t134) + t148) - t217) +
       t5 * ((((((((t136 - t477) - t514) + t1519) + t1888) + t2097) - t1986) -
              t2058) +
             0.70407078224106956)) +
      (((((((((t370 + eta * t540) + t1122) - t814) + t1155) - t943) + t1522) +
         t1707) +
        t1523_tmp * -1.73386794951539) -
       0.26853159682876421);
  e_sdvals_tmp =
      xi *
      (((((((((t42 + t177) + t824) - t540) - t793) + t1157) + t1239) - t1984) -
        t2127) +
       0.28367489705487042);
  f_sdvals_tmp = t6 * ((((((t219 + t1633) + t1886) - t1697) + t2093) - t1936) +
                       0.71921408246717577);
  sdvals[8] = (d_sdvals_tmp - e_sdvals_tmp) + f_sdvals_tmp;
  sdvals[9] = (sdvals_tmp + t2656) + b_sdvals_tmp;
  sdvals[10] = (t307_tmp_tmp + t137_tmp) + c_sdvals_tmp;
  sdvals[11] = (d_sdvals_tmp + e_sdvals_tmp) - f_sdvals_tmp;
  sdvals[12] = -xi * ((((t2 * 8.53785995528256 - t8 * 3.9077951609195258) +
                        zeta * 1.28202751213159) +
                       t78_tmp * 5.9329567876186742) +
                      t456_tmp * 14.47081674290123);
  sdvals[13] = (t1523_tmp * 3.9077951609195258 - t398_tmp * 1.28202751213159) -
               t5 * ((eta * 8.53785995528256 + t42_tmp * 5.9329567876186742) +
                     14.47081674290123 * eta * zeta_1_inv);
  sdvals[14] =
      ((((t2 * -0.6410137560657948 - t8 * 65.228081115431578) +
         t9 * 57.444539266887013) +
        zeta * 18.80396592024492) +
       t1045_tmp * 3.9077951609195258) +
      (t5 * (((zeta * 3.9077951609195258 + t78_tmp * 7.2354083714506174) +
              t80_tmp * 5.9329567876186742) -
             0.6410137560657948) -
       1.020424071700353);
  sdvals_tmp =
      t5 *
      (((((((t300 - t473) - t516) - t678) + t1379) + t1761) + t1930) + t1932);
  sdvals[15] = ((t2325 + t2540) + t2579) - sdvals_tmp;
  b_sdvals_tmp =
      (t7 * (((t48 + t76) - t201) - t229) +
       (((((t2 * t351 - t422) + t770) + t1380) + t1430) + t1524)) +
      -t5 * ((((((((t83 - t199) + t362) + t495) + t602) + t1121) + t1682) -
              t1738) +
             0.0060524657271722546);
  t316_tmp = t328 + t23_tmp * 6.1802042667147994;
  t307_tmp_tmp = t6 * (((((t316_tmp - t506) + t1404) + t1760) + t1929) -
                       2.5973354288898678);
  t137_tmp =
      xi * (((((((t109 - 0.50121921663579494) + t308) + t438) + t601) + t798) -
             t1008) +
            t1547);
  sdvals[16] = (b_sdvals_tmp - t307_tmp_tmp) + t137_tmp;
  c_sdvals_tmp =
      (-t7 * (((t89 + t152) - t203) - t230) +
       t5 * ((((((((t209 - t238) + t535) - t581) + t1511) + t2012) + t2117) -
              t2257) -
             0.45978403930907591)) +
      (((((((((-t470 - t624) + t978) + t1049) + eta * t955) + t1381) - t1065) -
         t1277) +
        eta * t1605) +
       0.45978403930907591);
  d_sdvals_tmp = t6 * ((((((t301 - t1361) + t1931) + t2062) + t2081) + t2102) +
                       1.0365230281772631);
  e_sdvals_tmp =
      xi * (((((((t336 + t694) - t509) - t579) + t1188) - t964) + t2006) +
            1.0365230281772631);
  sdvals[17] = (c_sdvals_tmp + d_sdvals_tmp) - e_sdvals_tmp;
  sdvals[18] =
      -t6 * (((t23 + t78) - t107) + t137) -
      xi * ((((((((((t103 + t530) + t554) + t647) - t1060) + t1166) - t884) +
               t1399) +
              t1449) +
             t1948) +
            t2138);
  f_sdvals_tmp = -(eta * 0.75) + t31;
  t296_tmp = t101_tmp * 11.666666666666666 + t459;
  sdvals[19] =
      (((((((((f_sdvals_tmp - t50) - t507) + t997) + t2 * t377) + t1138) +
          t1424) -
         t1221) -
        t7 * (((t30 + t45) - t138) - t342_tmp)) -
       t5 * (((((((t296_tmp - t498) + t545) + t652) + t1004) + t1569) + t1794) +
             1.722331585247213)) +
      0.375;
  sdvals[20] =
      ((((((((((-t484 + t547) + eta * t560) - t462) + t1086) - t1061) + t1425) -
          t1099) -
         t1523_tmp * 1.6412460688778849) +
        t7 * (((t61 + t80) - t139) - t108)) +
       t5 * ((((((((t104 + t476) + t605) + t1443) + t1949) + t2060) + t2091) +
              t2139) -
             0.46681777788046508)) +
      0.46681777788046508;
  sdvals[21] =
      ((t2325 +
        ((((((((((t157 + t277) + t322) + t508) + t1059) + t1231) + t1491) -
            t1230) -
           t1263) +
          t1791) +
         t1919)) +
       t2579) +
      sdvals_tmp;
  sdvals[22] = (b_sdvals_tmp + t307_tmp_tmp) - t137_tmp;
  sdvals[23] = (c_sdvals_tmp - d_sdvals_tmp) + e_sdvals_tmp;
  sdvals_tmp =
      t6 * ((t2347_tmp + t297) - t328) +
      -xi * (((((((((-t153 - t109) + t410) + t456) - t438) + t1132) + t1218) -
               t1238) +
              t2011) +
             t2064);
  b_sdvals_tmp =
      t5 *
      (((((((-t231 + t351) + t369) + t733) - t1121) + t1738) - t1761) - t1930);
  sdvals[24] = (sdvals_tmp + t2632) - b_sdvals_tmp;
  t307_tmp_tmp = -(t72_tmp * 3.0625) + t116;
  t137_tmp =
      (t7 * ((t2341_tmp + t294) - t298) +
       (((((-t508 + t1058) + t1230) + t2 * t473) + t1420) - t1231)) +
      -t5 *
          (((((((-t144 - 0.50121921663579494) + t362) + t495) - t561) + t1379) +
            t1682) +
           t1932);
  c_sdvals_tmp =
      xi * (((((((t307_tmp_tmp + 0.50121921663579494) + t737) - t601) + t1008) +
              t1353) -
             t1250) -
            t1471);
  d_sdvals_tmp = t6 * ((((((t200 - t458) - t685) + t1490) + t1760) + t1929) -
                       5.8204260395535252);
  sdvals[25] = (t137_tmp + c_sdvals_tmp) + d_sdvals_tmp;
  e_sdvals_tmp =
      (t7 * ((t2350_tmp + t299) - t318) +
       t5 * (((((((-t154 + t513) + t546) + t1511) + t2012) + t2065) + t2103) -
             1.5489588052711221)) +
      (((((((((-t470 - t487) + eta * t509) + t1049) + t1212) + t1421) - t1277) +
         t1523_tmp * -3.10956908453179) -
        t1347) +
       0.45978403930907591);
  t2163_tmp =
      xi *
      ((((((((t180 - t275) + t694) - t579) + t1021) - t955) - t1605) + t2047) +
       0.5510619903047087);
  t288_tmp = t6 * ((((((t232 - t1678) + t1931) + t2081) + t2114) - t2256) +
                   1.640236756266755);
  sdvals[26] = (e_sdvals_tmp + t2163_tmp) - t288_tmp;
  t2518_tmp =
      t6 * ((t107 - t78_tmp * 11.666666666666666) + 3.5) +
      -xi *
          ((((((t103_tmp * 1.75 + zeta * 1.475466266965082) + t1166) - t1284) +
             t1449) +
            t1948) +
           0.75);
  t2370_tmp = t5 * ((((-(t104_tmp * 6.125) - t377) + t1004) + t1794) + 2.625);
  sdvals[27] = (t2518_tmp + t2434) + t2370_tmp;
  t2656_tmp = (-t7 * (t42_tmp * 5.833333333333333 - t342_tmp) +
               (t398_tmp * -0.93363555576093016 + eta * t1060)) +
              -t5 * (((t11 * t31 + t459) + t652) + t1569);
  t2594_tmp = xi * (((t31 * zeta_1_inv + t530) + t647) - t884);
  t2595_tmp = t6 * ((t137 + t23_tmp * 9.1639912609505014) +
                    t42_tmp * 3.3306579276171671);
  sdvals[28] = (t2656_tmp + t2594_tmp) + t2595_tmp;
  t2620_tmp =
      (t7 * (t80_tmp * 5.833333333333333 - t108) +
       t5 * ((((t104_tmp * 1.75 + t538) + t1949) + t2091) -
             0.73773313348254121)) +
      (((((-t462 + t1086) - t1061) + t2 * t605) - t2 * 0.46681777788046508) +
       0.46681777788046508);
  t2657_tmp = t6 * (((-(t107_tmp * 6.125) + t78_tmp * 4.5819956304752507) +
                     t80_tmp * 3.3306579276171671) +
                    2.5403289638085842);
  t2432_tmp = xi * (((((t99 + t560) + t2 * 1.422082022959295) - t1252) +
                     t78_tmp * 0.47233158524721253) -
                    1.7694136082065079);
  sdvals[29] = (t2620_tmp - t2657_tmp) - t2432_tmp;
  t2347_tmp =
      t6 * ((t2347_tmp - t297) + t328) +
      -xi * (((((((((t109 - t153) + t410) + t438) + t456) + t1218) - t1238) -
               t1132) +
              t2011) -
             t2064);
  c_sfvals_tmp =
      t5 *
      (((((((t231 - t351) + t369) + t733) + t1121) - t1738) - t1761) - t1930);
  sdvals[30] = (t2347_tmp + t2627) + c_sfvals_tmp;
  b_sfvals_tmp =
      (t7 * ((t2341_tmp + t298) - t294) +
       (((((t508 + t1058) + t1231) + t1420) - t1230) +
        t1045_tmp * -3.10956908453179)) +
      -t5 *
          (((((((0.50121921663579494 - t144) + t362) + t495) + t561) + t1682) -
            t1379) -
           t1932);
  t307_tmp_tmp =
      xi * (((((((t307_tmp_tmp - 0.50121921663579494) + t601) + t737) + t1250) -
              t1008) +
             t1353) +
            t1471);
  sfvals_tmp = t6 * ((((((t200 + t458) - t685) + t1490) + t2003) - t1929) +
                     5.8204260395535252);
  sdvals[31] = (b_sfvals_tmp + t307_tmp_tmp) + sfvals_tmp;
  d_sfvals_tmp =
      (t7 * ((t2350_tmp - t299) + t318) +
       -t5 * (((((((t154 - t513) + t546) - t1511) - t2012) + t2065) + t2103) +
              1.5489588052711221)) +
      (((((((((t487 - t470) + t1049) + t398_tmp * -4.146092112709054) +
            eta * t1188) +
           t1421) -
          t1212) -
         t1277) -
        t1347) +
       0.45978403930907591);
  f_sfvals_tmp =
      xi *
      ((((((((-t180 + t275) + t694) - t579) + t955) - t1021) + t1605) + t2047) -
       0.5510619903047087);
  e_sfvals_tmp = t6 * ((((((t232 + t1678) + t2114) - t1931) - t2081) - t2256) +
                       1.640236756266755);
  sdvals[32] = (d_sfvals_tmp - f_sfvals_tmp) - e_sfvals_tmp;
  h_sfvals_tmp =
      t5 *
      (((((((t300 + t516) + t678) - t473) + t1379) + t1932) - t1761) - t1930);
  sdvals[33] =
      ((t2326 +
        ((((((((((t204 + t277) + t322) + t508) + t735) + t1231) + t1263) -
            t1230) +
           t1679) +
          t1791) +
         t1814)) +
       t2569) +
      h_sfvals_tmp;
  g_sfvals_tmp =
      (-t7 * (((t48 - t76) + t201) - t229) +
       (((((t422 + t1045_tmp * -4.9207102688002644) + t770) + t1380) - t1430) -
        t1524)) +
      t5 * ((((((((t83 + t199) - t362) + t602) - t495) + t1121) - t1682) -
             t1738) +
            0.0060524657271722546);
  i_sfvals_tmp = t6 * (((((t316_tmp + t506) + t1404) + t2003) - t1929) +
                       2.5973354288898678);
  k_sfvals_tmp =
      xi * (((((((t109 + 0.50121921663579494) + t308) + t438) - t601) + t1008) -
             t798) -
            t1547);
  sdvals[34] = (g_sfvals_tmp + i_sfvals_tmp) - k_sfvals_tmp;
  j_sfvals_tmp =
      (t7 * (((t89 - t152) + t203) - t230) +
       t5 * ((((((((-t209 - t238) + t535) + t581) + t1511) + t2012) + t2257) -
              t2117) -
             0.45978403930907591)) +
      (((((((((t624 - t470) + t1049) - t978) + t1381) - t1065) +
          t398_tmp * -0.66089302976449027) -
         t1277) +
        t1523_tmp * -0.66184642626739076) +
       0.45978403930907591);
  l_sfvals_tmp =
      xi * (((((((-t336 + t509) + t694) - t579) + t964) - t1188) + t2006) -
            1.0365230281772631);
  t316_tmp = t6 * ((((((t301 + t1361) + t2062) + t2102) - t1931) - t2081) +
                   1.0365230281772631);
  sdvals[35] = (j_sfvals_tmp - l_sfvals_tmp) - t316_tmp;
  sdvals[36] =
      t6 * (((t23 - t78) + t107) + t137) -
      xi * ((((((((((t103 + t554) - t530) + t884) - t647) - t1060) + t1166) -
               t1399) +
              t1449) +
             t1948) -
            t2138);
  sdvals[37] =
      (((((((((f_sdvals_tmp + t50) + t507) + t1138) + t1221) - t997) + t1424) -
         t1045_tmp * 7.6209868914257513) +
        t7 * (((t30 - t45) + t13 * t39) - t138)) -
       t5 * (((((((t296_tmp + t498) - t545) + t652) - t1004) + t1569) - t1794) -
             1.722331585247213)) -
      0.375;
  sdvals[38] =
      ((((((((((t484 - t547) - t462) + t1086) + eta * t1252) - t1061) + t1425) -
          t1099) -
         t5 *
             ((((((((-t104 + t476) - t605) + t1443) - t1949) + t2060) - t2091) +
               t2139) +
              0.46681777788046508)) -
        t398_tmp * 3.882991262331605) -
       t7 * (((t61 - t80) + t108) - t139)) +
      0.46681777788046508;
  sdvals[39] = ((t2326 + t2541) + t2569) - h_sfvals_tmp;
  sdvals[40] = (g_sfvals_tmp - i_sfvals_tmp) + k_sfvals_tmp;
  sdvals[41] = (j_sfvals_tmp + l_sfvals_tmp) + t316_tmp;
  sdvals[42] =
      (t2347_tmp +
       (((((((((((t90 + t157) + t248) - t422) + t1059) - t980) + t1430) +
            t1491) +
           t1524) +
          t1728) +
         t1848) -
        t2040)) -
      c_sfvals_tmp;
  sdvals[43] = (b_sfvals_tmp - t307_tmp_tmp) - sfvals_tmp;
  sdvals[44] = (d_sfvals_tmp + f_sfvals_tmp) + e_sfvals_tmp;
  sdvals[45] =
      (t2518_tmp +
       (((((((t120_tmp * -0.875 - t507) + t997) + t2 * t498) - t1221) - t1271) +
         t456_tmp * -0.47233158524721253) +
        0.375)) -
      t2370_tmp;
  sdvals[46] = (t2656_tmp - t2594_tmp) - t2595_tmp;
  sdvals[47] = (t2620_tmp + t2657_tmp) + t2432_tmp;
  sdvals[48] =
      (sdvals_tmp +
       (((((((((((t90 + t204) + t248) - t422) + t735) + t980) + t1362) +
            t1430) +
           t1524) +
          t1814) +
         t1848) -
        t2040)) +
      b_sdvals_tmp;
  sdvals[49] = (t137_tmp - c_sdvals_tmp) - d_sdvals_tmp;
  sdvals[50] = (e_sdvals_tmp - t2163_tmp) + t288_tmp;
  sdvals_tmp =
      t5 *
      ((((((-t536 - t598) + t23_tmp * -2.0529609506137581) + t1675) + t1867) +
        t1868) +
       t2005);
  sdvals[51] =
      (t2622 +
       (((((((((((t729 + t990) - t662) + t1032) - t905) - t1085) + t1510) +
            t1513) -
           t1256) +
          t1830) +
         t1885) +
        t1905)) -
      sdvals_tmp;
  b_sdvals_tmp =
      (((((t1032 - t905) + t1286) + t2 * t598) - t1256) + t1654) +
      -t5 * (((((((t373 + t418) + t446) + t558) + t1182) + t1675) + t2005) +
             3.507290222520552);
  t307_tmp_tmp =
      xi * ((((((((t622 + t702) + t785) + t817) - t595) + t1026) - t1279) +
             t456_tmp * -2.0529609506137581) +
            0.70508208897121338);
  t137_tmp =
      t6 * (((((t763 - t578) + t1580) + t1865) + t1866) - 0.68432031687125283);
  sdvals[52] = (b_sdvals_tmp - t307_tmp_tmp) - t137_tmp;
  c_sdvals_tmp =
      t5 * (((((((t449 - t424) + t11 * t621) + t1927) + t1958) + t1960) +
             t2023) -
            1.0065237914456751) +
      (((((((((-t411 + eta * t590) - t874) + t1289) - t970) + t1614) - t1245) +
         t1655) +
        t1523_tmp * -4.58918562486089) +
       0.41493879151080282);
  d_sdvals_tmp =
      t6 *
      (((((t42_tmp * -0.68432031687125283 + t1869) + t1956) + t1957) + t2068) +
       0.84018834177117407);
  e_sdvals_tmp =
      xi * ((((((((t460 - t574) - t590) + t1114) + t1199) + t11 * t990) +
              t42_tmp * -0.70508208897121338) +
             t2184) +
            0.2486033418363017);
  sdvals[53] = (c_sdvals_tmp + d_sdvals_tmp) - e_sdvals_tmp;
  f_sdvals_tmp =
      t5 *
      ((((((-t494 - t636) + t23_tmp * -1.396762465840063) + t1330) + t2025) +
        t2131) +
       t2132);
  sdvals[54] = (t2604 + t2648) - f_sdvals_tmp;
  t296_tmp =
      (((((t603 + t1222) + t1446) - t1214) + t1671) + t2 * t636) +
      t5 * (((((((t416 + t553) + t566) + t727) + t1596) - t1330) - t2025) +
            4.3542486889354093);
  t2163_tmp =
      xi *
      ((((((((t20 + t445) + t615) + t715) + t782) + t1215) + t1224) + t1378) +
       1.3333333333333333);
  t288_tmp =
      t6 * (((((t776 - t751) + t1597) + t2129) + t2130) - 0.46558748861335453);
  sdvals[55] = (t296_tmp + t2163_tmp) - t288_tmp;
  t2518_tmp =
      t5 * (((((((t453 + t548) + t1881) + t1971) + t1973) - t1968) - t2134) -
            0.36989287388226072) +
      (((((((((t475 + t583) + t398_tmp * -5.9670182212002807) + t1265) - t934) +
           eta * t1254) +
          t1650) +
         t1672) -
        t1401) -
       0.23773234462850429);
  t2370_tmp =
      t6 *
      (((((t42_tmp * -0.46558748861335453 + t1969) + t1970) + t2128) + t2133) +
       0.27207965207632351);
  t2656_tmp =
      xi *
      ((((((((t42_tmp * -1.3333333333333333 + t464) - t378) + t972) + t1195) +
          t1254) +
         t2183) +
        t101_tmp * -0.46558748861335453) +
       0.33554556643444161);
  sdvals[56] = (t2518_tmp + t2370_tmp) + t2656_tmp;
  t2594_tmp =
      t5 *
      ((((((-t496 - t519) + t23_tmp * -0.56801551165331654) + t1383) + t2044) +
        t2045) +
       t2053);
  sdvals[57] =
      (t2591 +
       (((((((((((-t490 - t582) - t654) - t689) + t1023) + t1094) + t1095) +
            t1249) +
           t1499) +
          t1550) +
         t1647) +
        t1677)) +
      t2594_tmp;
  t2595_tmp =
      (((((-t582 + t892) - t689) + t1095) + t1045_tmp * -0.78164055089822715) +
       t1722) +
      t5 * (((((((t441 + t549) + t604) + t811) + t1383) + t1687) + t2053) +
            1.60230642111131);
  t2620_tmp =
      t6 * (((((-t393 + t683) + t1477) + t2042) + t2043) - 0.18933850388443879);
  t2657_tmp =
      xi *
      ((((((((t510 + t631) + t833) - t585) + t23_tmp * -3.204612842222621) -
          t813) +
         t1255) +
        t1426) +
       3.37825124436212);
  sdvals[58] = (t2595_tmp + t2620_tmp) - t2657_tmp;
  t2432_tmp =
      -t5 * (((((((t500 - t423) + t11 * t584) + t1995) + t2015) + t2109) +
              t2111) -
             0.56879340083481766) +
      (((((((((eta * t365 - t559) + t899) - t592) + t1198) - t914) - t1083) +
         t1523_tmp * -30.294795544622058) +
        t1723) +
       0.72612763219851451);
  t2347_tmp =
      t6 *
      (((((t42_tmp * -0.18933850388443879 + t2046) + t2107) + t2108) + t2213) +
       0.260546850299409);
  c_sfvals_tmp = xi * ((((((((-t365 + t541) + t607) + t942) - t1107) +
                          t42_tmp * -3.37825124436212) +
                         t1933) +
                        t101_tmp * -0.18933850388443879) +
                       1.034374182733923);
  sdvals[59] = (t2432_tmp - t2347_tmp) - c_sfvals_tmp;
  sdvals[60] = (t2622 + t2664) + sdvals_tmp;
  sdvals[61] = (b_sdvals_tmp + t307_tmp_tmp) + t137_tmp;
  sdvals[62] = (c_sdvals_tmp - d_sdvals_tmp) + e_sdvals_tmp;
  sdvals_tmp = -t18 + t23_tmp * -1.3333333333333333;
  sdvals[63] =
      (t2604 +
       ((((((((((sdvals_tmp - t603) + t1214) - t1078) + t1523) - t1222) +
            t1721) +
           t1806) -
          t1530) +
         t1882) +
        t1954)) +
      f_sdvals_tmp;
  sdvals[64] = (t296_tmp - t2163_tmp) + t288_tmp;
  sdvals[65] = (t2518_tmp - t2370_tmp) - t2656_tmp;
  sdvals[66] = (t2591 + t2661) - t2594_tmp;
  sdvals[67] = (t2595_tmp - t2620_tmp) + t2657_tmp;
  sdvals[68] = (t2432_tmp + t2347_tmp) + c_sfvals_tmp;
  b_sdvals_tmp =
      t5 * ((((((t536 + t536 * zeta_1_inv) - t598) + t1675) + t2005) - t1867) -
            t1868);
  sdvals[69] = (t2592 + t2665) + b_sdvals_tmp;
  t307_tmp_tmp =
      (((((t905 + t1256) + t1286) - t1032) + t1654) +
       t1045_tmp * -2.5205650253135219) +
      t5 * (((((((t418 + t446) - t373) - t558) - t1182) + t1675) + t2005) +
            3.507290222520552);
  t137_tmp =
      xi * ((((((((t595 + t622) + t785) + t817) - t702) + t1279) - t1026) +
             t1279 * zeta_1_inv) -
            0.70508208897121338);
  c_sdvals_tmp =
      t6 * (((((t578 + t763) + t1580) - t1865) - t1866) + 0.68432031687125283);
  sdvals[70] = (t307_tmp_tmp + t137_tmp) + c_sdvals_tmp;
  d_sdvals_tmp =
      t5 * (((((((t424 + t449) + t42_tmp * -3.507290222520552) + t1927) +
               t2023) -
              t1958) -
             t1960) -
            1.0065237914456751) +
      (((((((((-t411 + t874) + t398_tmp * -2.14649958897077) + t1289) - t970) +
           eta * t1199) -
          t1245) +
         t1655) -
        t1614) +
       0.41493879151080282);
  e_sdvals_tmp = t6 * (((((t11 * t557 + t1956) + t1957) - t1869) - t2068) +
                       0.84018834177117407);
  f_sdvals_tmp =
      xi *
      ((((((((t574 - t460) - t590) + t1114) + t1199) + t11 * t662) + t2184) +
        t101_tmp * -0.68432031687125283) +
       0.2486033418363017);
  sdvals[71] = (d_sdvals_tmp - e_sdvals_tmp) + f_sdvals_tmp;
  t296_tmp =
      t5 * ((((((t494 + t494 * zeta_1_inv) - t636) + t1330) + t2025) - t2131) -
            t2132);
  sdvals[72] = (t2613 + t2651) + t296_tmp;
  t2163_tmp =
      (((((-t603 + t1214) + t1446) - t1222) + t1671) +
       t1045_tmp * -0.81623895622897058) +
      t5 * (((((((t553 - t416) + t727) - t566) + t1330) + t1596) + t2025) -
            4.3542486889354093);
  t288_tmp =
      xi *
      ((((((((t20 - t445) + t715) - t615) + t1105) + t1215) + t1224) + t1378) +
       1.3333333333333333);
  t2518_tmp =
      t6 * (((((t751 + t776) + t1597) - t2129) - t2130) + 0.46558748861335453);
  sdvals[73] = (t2163_tmp + t288_tmp) + t2518_tmp;
  t2370_tmp =
      -t5 * (((((((-t453 + t548) + t1881) + t1968) + t1971) + t1973) + t2134) +
             0.36989287388226072) +
      (((((((((t475 + eta * t378) - t583) + t1265) - t934) + t1672) +
          t1523_tmp * -11.9438906324971) -
         t1401) -
        t1650) -
       0.23773234462850429);
  t2656_tmp = t6 * (((((t11 * t728 + t1969) + t1970) - t2128) - t2133) +
                    0.27207965207632351);
  t2594_tmp =
      xi *
      ((((((((t11 * t18 - t378) - t464) + t972) + t1254) - t1195) + t2183) +
        t11 * t1530) +
       0.33554556643444161);
  sdvals[74] = (t2370_tmp - t2656_tmp) - t2594_tmp;
  t2595_tmp =
      t5 * ((((((t519 - t496) + t519 * zeta_1_inv) + t1383) + t2053) - t2044) -
            t2045);
  sdvals[75] =
      (t2619 +
       ((((((((((t2412_tmp - t490) - t654) + t1094) + t1249) - t1023) - t1095) +
           t1499) +
          t1677) +
         t1850) +
        t1903)) -
      t2595_tmp;
  t2620_tmp =
      ((((t2412_tmp + t892) + t2 * t496) - t1095) + t1722) +
      -t5 * (((((((t441 - t549) + t604) - t811) + t1383) - t1687) + t2053) +
             1.60230642111131);
  t2657_tmp =
      t6 * (((((t393 + t683) + t1477) - t2042) - t2043) + 0.18933850388443879);
  t2432_tmp =
      xi *
      ((((((((t510 + t585) + t631) + t741) + t813) + t833) + t1255) + t1426) +
       3.37825124436212);
  sdvals[76] = (t2620_tmp - t2657_tmp) - t2432_tmp;
  t2347_tmp =
      -t5 *
          (((((((t423 + t500) + t42_tmp * -1.60230642111131) + t1995) + t2015) -
             t2109) -
            t2111) -
           0.56879340083481766) +
      (((((((((t559 + t398_tmp * -15.50877623982498) + t899) - t592) + t1083) +
           eta * t942) +
          t1198) -
         t914) +
        t1723) +
       0.72612763219851451);
  c_sfvals_tmp = t6 * (((((t11 * t388 + t2107) + t2108) - t2046) - t2213) +
                       0.260546850299409);
  b_sfvals_tmp =
      xi * ((((((((-t365 - t541) - t607) + t942) + t11 * t490) - t1107) +
              t11 * t654) +
             t1933) +
            1.034374182733923);
  sdvals[77] = (t2347_tmp + c_sfvals_tmp) + b_sfvals_tmp;
  sdvals[78] =
      (t2592 +
       (((((((((((t662 + t1032) + t1053) + t1163) - t905) - t990) - t1085) +
            t1518) -
           t1256) +
          t1827) +
         t1885) +
        t1905)) -
      b_sdvals_tmp;
  sdvals[79] = (t307_tmp_tmp - t137_tmp) - c_sdvals_tmp;
  sdvals[80] = (d_sdvals_tmp + e_sdvals_tmp) - f_sdvals_tmp;
  sdvals[81] =
      (t2613 +
       ((((((((((sdvals_tmp + t603) + t1078) + t1222) + t1488) + t1523) -
            t1214) +
           t1610) +
          t1721) -
         t1530) +
        t1954)) -
      t296_tmp;
  sdvals[82] = (t2163_tmp - t288_tmp) - t2518_tmp;
  sdvals[83] = (t2370_tmp + t2656_tmp) + t2594_tmp;
  sdvals[84] = (t2619 + t2660) + t2595_tmp;
  sdvals[85] = (t2620_tmp + t2657_tmp) + t2432_tmp;
  sdvals[86] = (t2347_tmp - c_sfvals_tmp) - b_sfvals_tmp;
  sdvals_tmp =
      -t6 * ((t2363_tmp + t504) - t1715) +
      (((((((((-t271 - t404) + t626) + t644) + t1033) - t1042) + t1465) -
         t1831) +
        t2105) +
       t2146) *
          xi;
  t316_tmp = eta * 28.964133390237421 + t23_tmp * 23.604758390237421;
  b_sdvals_tmp =
      t5 * ((((((t316_tmp + t594) + t1690) - t1785) - t1786) - t2029) - t2142);
  sdvals[87] =
      (sdvals_tmp +
       ((((((((((t65 + t597) + t1037) + t1047) - t746) + t1223) - t1046) -
           t1075) +
          t1880) +
         t1898) +
        t2048)) -
      b_sdvals_tmp;
  t307_tmp_tmp = (-t7 * ((t2361_tmp + t415) - t2027) +
                  (((((t597 + t764) + t1047) - t1046) + t1837) +
                   t1045_tmp * -8.0357894378061818)) +
                 t5 * (((((t2453_tmp + t1229) + t1476) - t1690) + t2142) -
                       2.728860179461551);
  t137_tmp =
      t6 * ((((((-t437 - t1034) + t1541) + t1715) + t11 * t838) + t1784) -
            9.65471113007914);
  c_sdvals_tmp =
      xi * (((((((t404 + t589) + t838) + t989) - t768) + t1227) - t1033) -
            1.7864583333333333);
  sdvals[88] = (t307_tmp_tmp + t137_tmp) - c_sdvals_tmp;
  d_sdvals_tmp =
      (-t7 * ((t2372_tmp + t42_tmp * -2.728860179461551) + t2028) +
       t5 * (((((((t272 - t593) + t1209) - t2100) - t2106) - t2147) + t2300) +
             1.1469461761408171)) +
      (((((((((t402 + t575) + t722) + t398_tmp * -10.71438591707491) - t635) +
           t1057) -
          t1014) +
         eta * t1044) +
        t1838) -
       1.1469461761408171);
  e_sdvals_tmp =
      xi * (((((((t499 - t399) - t565) + t1044) + t1709) + t1976) + t1992) +
            2.678596479268728);
  f_sdvals_tmp = t6 * ((((((t1713 + t1787) - t1641) + t2030) + t2144) + t2303) +
                       2.678596479268728);
  sdvals[89] = (d_sdvals_tmp + e_sdvals_tmp) - f_sdvals_tmp;
  t296_tmp = t78_tmp * 19.055555555555557 - t193;
  sdvals[90] =
      t6 * ((t296_tmp + t296) - t323) +
      xi * (((((((((t186 + t288) + t493) - t659) - t957) + t1434) + t1546) +
              t1555) -
             t1303) +
            t1962);
  t2163_tmp = eta * 4.083333333333333 - t39;
  t288_tmp = t42_tmp * 9.5277777777777786 - t192;
  sdvals[91] =
      (((((((((t2163_tmp + t2 * 4.0097537330863595) - 1.3365845776954535) +
             t398) +
            t425) -
           t671) +
          t1024) +
         t1765) +
        t5 *
            (((((((t184 + 4.4552819256515113) - t542) - t389) + t732) + t1191) +
              t1589) +
             t1924)) -
       t1045_tmp * 12.486499205700831) +
      t7 * ((t288_tmp + t293) - t80_tmp * 1.7320508075688772 *
                                    2.6457513110645907 * 2.0416666666666665);
  t2518_tmp = t194 - t80_tmp * 9.5277777777777786;
  sdvals[92] =
      ((((((((((t380 + t627) - t567) - t587) - t998) + eta * t788) + t1304) +
          t1766) -
         t398_tmp * 19.321834762992019) +
        t7 * ((t2518_tmp - t316) + t325)) -
       t5 * (((((((t187 + t521) + t543) + t1556) + t1963) + t2078) + t2153) -
             1.209883718479863)) -
      1.209883718479863;
  sdvals[93] = (sdvals_tmp + t2643) + b_sdvals_tmp;
  sdvals[94] = (t307_tmp_tmp - t137_tmp) + c_sdvals_tmp;
  sdvals[95] = (d_sdvals_tmp - e_sdvals_tmp) + f_sdvals_tmp;
  sdvals_tmp = t5 * ((((4.0097537330863595 - t368) + t1191) + t1924) -
                     t334_tmp * 2.0416666666666665);
  sdvals[96] = ((t1168 + ((((((t2 * 1.7320508075688772 * 2.6457513110645907 *
                                   -0.97222222222222221 +
                               1.3365845776954535) +
                              t322_tmp * -0.68055555555555558) -
                             t425) +
                            t671) -
                           t1024) +
                          t2 * t542)) +
                t2393) -
               sdvals_tmp;
  b_sdvals_tmp = (t7 * (t42_tmp * 13.611111111111111 - t192) +
                  (eta * t493 + t1523_tmp * -4.6040640299008588)) +
                 t5 * (((t101_tmp * 19.055555555555557 - t389) + t732) + t1589);
  t307_tmp_tmp = t6 * ((-t323 + t42_tmp * 5.65116364840965) +
                       t23_tmp * 14.561727499712671);
  t137_tmp = xi * ((t288 + t307_tmp * 2.7222222222222223) - t957);
  sdvals[97] = (b_sdvals_tmp - t307_tmp_tmp) - t137_tmp;
  c_sdvals_tmp =
      (-t7 * (t80_tmp * 13.611111111111111 - t194) +
       -t5 * ((((t104_tmp * 9.5277777777777786 + zeta * 0.52073069656752557) +
                t1963) +
               t2153) +
              2.87344961485347)) +
      (((((t380 - t587) + t2 * 1.209883718479863) + t1304) +
        t1045_tmp * -4.6040640299008588) -
       1.209883718479863);
  d_sdvals_tmp = t6 * (((t80_tmp * 5.65116364840965 + t11 * t1261) -
                        t107_tmp * 1.7320508075688772 * 2.6457513110645907 *
                            2.0416666666666665) +
                       4.1621664019002784);
  e_sdvals_tmp =
      xi * ((((t333_tmp * 0.68055555555555558 + t391) - t788) + t1261) -
            6.8353355572911854);
  sdvals[98] = (c_sdvals_tmp + d_sdvals_tmp) + e_sdvals_tmp;
  f_sdvals_tmp =
      -t6 * ((t2363_tmp - t504) + t1715) +
      (((((((((-t271 + t404) + t626) + t644) - t1033) - t1042) + t1465) +
         t1831) +
        t2105) -
       t2146) *
          xi;
  t2370_tmp =
      t5 * ((((((t316_tmp - t594) - t1690) - t1785) - t1786) + t2029) + t2142);
  sdvals[99] =
      (f_sdvals_tmp +
       ((((((((((t65 - t597) + t1037) + t1046) - t746) + t1075) + t1223) -
           t1047) +
          t1608) +
         t1898) +
        t2222)) -
      t2370_tmp;
  t2656_tmp = (-t7 * ((t2361_tmp - t415) + t2027) +
               (((((t764 - t597) + t1046) - t1047) + t2 * t594) + t1837)) +
              t5 * (((((t2453_tmp + t1476) - t1229) + t1690) - t2142) +
                    2.728860179461551);
  t2594_tmp =
      t6 *
      ((((((t437 - t1034) + t1541) + t1715) + t78_tmp * -28.964133390237421) -
        t1784) +
       9.65471113007914);
  t2595_tmp =
      xi * (((((((t589 - t404) + t838) + t989) + t1033) - t768) - t1227) -
            1.7864583333333333);
  sdvals[100] = (t2656_tmp - t2594_tmp) - t2595_tmp;
  t2620_tmp =
      (-t7 * ((t2372_tmp + t11 * t611) - t2028) +
       -t5 * (((((((-t272 + t593) + t1209) + t2100) + t2106) - t2147) + t2300) -
              1.1469461761408171)) +
      (((((((((t402 + eta * t399) + t722) - t575) - t635) + t1014) + t1057) +
         t1838) +
        t1523_tmp * -8.0357894378061818) -
       1.1469461761408171);
  t2657_tmp =
      xi * (((((((t565 - t399) - t499) + t1044) + t1709) + t1976) - t1992) +
            2.678596479268728);
  t2432_tmp = t6 * ((((((t1641 - t1713) - t1787) + t2030) + t2144) + t2303) +
                    2.678596479268728);
  sdvals[101] = (t2620_tmp - t2657_tmp) + t2432_tmp;
  sdvals[102] =
      xi * (((((((((t186 - t288) + t493) - t659) + t957) - t1434) + t1546) -
              t1555) -
             t1303) +
            t1962) +
      t6 * ((t296_tmp - t296) + t323);
  sdvals[103] =
      (((((((((t2163_tmp + 1.3365845776954535) + t398) - t425) + t671) +
           t2 * t368) -
          t1024) +
         t1765) +
        t5 *
            (((((((t184 - 4.4552819256515113) + t542) - t389) + t732) - t1191) +
              t1589) -
             t1924)) -
       t2 * 4.58257569495584 * 0.875) +
      t7 * ((t288_tmp - t293) +
            t12 * 1.7320508075688772 * 2.6457513110645907 * t52);
  sdvals[104] =
      ((((((((((t380 + eta * t391) - t627) - t567) - t587) + t998) + t1304) +
          t1766) -
         t1523_tmp * 12.486499205700831) +
        t7 * ((t2518_tmp + t316) - t325)) +
       t5 * (((((((-t187 + t521) - t543) + t1556) + t2078) - t1963) - t2153) +
             1.209883718479863)) -
      1.209883718479863;
  sdvals[105] = (f_sdvals_tmp + t2642) + t2370_tmp;
  sdvals[106] = (t2656_tmp + t2594_tmp) + t2595_tmp;
  sdvals[107] = (t2620_tmp + t2657_tmp) - t2432_tmp;
  sdvals[108] = ((t1168 + t2390) + t2393) + sdvals_tmp;
  sdvals[109] = (b_sdvals_tmp + t307_tmp_tmp) + t137_tmp;
  sdvals[110] = (c_sdvals_tmp - d_sdvals_tmp) - e_sdvals_tmp;
  sdvals[111] =
      xi * ((((((t2 * 24.563722977605611 - t8 * 9.00816742205005) +
                zeta * 15.42048214141467) +
               t78_tmp * 0.254351947302049) -
              t103_tmp * 15.555555555555555) +
             t456_tmp * 2.5958527026854332) -
            6.666666666666667) +
      t6 * ((t78_tmp * -31.111111111111111 + t107_tmp * 21.777777777777779) +
            9.3333333333333339);
  sdvals[112] =
      (((eta * -6.666666666666667 + t3 * 9.3333333333333339) +
        t5 * (((eta * 24.563722977605611 + t42_tmp * 0.254351947302049) +
               t23_tmp * 2.5958527026854332) -
              t101_tmp * 31.111111111111111)) -
       t1523_tmp * 9.00816742205005) +
      (t398_tmp * 15.42048214141467 -
       t7 * (t42_tmp * 15.555555555555555 - t139_tmp * 21.777777777777779));
  sdvals[113] =
      (((((t2 * 7.7102410707073341 - t8 * 22.15522547827215) +
          t9 * 8.6830015107667684) +
         zeta * 18.515798371546051) -
        t1045_tmp * 9.00816742205005) +
       t7 * (t80_tmp * 15.555555555555555 - t108_tmp * 21.777777777777779)) +
      (-t5 * ((((zeta * 9.00816742205005 + t78_tmp * 1.2979263513427159) +
                t80_tmp * 0.254351947302049) -
               t104_tmp * 15.555555555555555) -
              7.7102410707073341) -
       5.0435744040406671);
  sdvals_tmp =
      t5 *
      ((((((-t518 - t528) + t1015) + t23_tmp * -5.6535404114009031) + t1807) +
        t1809) +
       t1810);
  sdvals[114] =
      ((((((((t570 + t1011) + t1018) - t1010) + t1492) - t1248) + t1755) +
        t1758) +
       t2564) +
      sdvals_tmp;
  b_sdvals_tmp =
      (((((t486 + t926) + t1208) - t1088) + t1560) +
       t1045_tmp * -12.459456472098831) +
      t5 * (((((((t396 + t440) + t467) + t630) + t672) + t1487) + t2112) +
            2.7250809929537918);
  t307_tmp_tmp =
      t6 * (((((t619 - t571) + t1080) + t1807) + t1808) - 1.8845134704669679);
  t137_tmp = xi * ((((t570 + t618) + t847) + t1015) - t1009);
  sdvals[115] = (b_sdvals_tmp + t307_tmp_tmp) - t137_tmp;
  c_sdvals_tmp =
      -t5 * (((((((t429 - t606) + t1468) + t11 * t420) + t2122) + t2124) +
              t2149) -
             1.1641935638153169) +
      (((((((((t457 + eta * t485) + t902) + t1055) + t1125) - t927) - t988) +
         t1523_tmp * -7.2546336983070994) +
        t1561) -
       1.1641935638153169);
  d_sdvals_tmp =
      t6 *
      (((((t1811 + t42_tmp * -1.8845134704669679) + t1851) + t1853) + t2069) +
       1.8845134704669679);
  e_sdvals_tmp = xi * ((((((-t392 + t697) - t551) + t1269) - t1247) + t2072) +
                       1.8845134704669679);
  sdvals[116] = (c_sdvals_tmp - d_sdvals_tmp) + e_sdvals_tmp;
  sdvals[117] = (t2492 + t2564) - sdvals_tmp;
  sdvals[118] = (b_sdvals_tmp - t307_tmp_tmp) + t137_tmp;
  sdvals[119] = (c_sdvals_tmp + d_sdvals_tmp) - e_sdvals_tmp;
  sdvals_tmp = (t111 + t111 * zeta_1_inv) + t398_tmp * 25.35950915904878;
  sdvals[120] =
      -xi *
      (((((((sdvals_tmp + t859) + t862) + t947) - t1483) + t1567) + t1768) +
       t1945);
  b_sdvals_tmp = (t115 + 10.417645787316825) + t367;
  sdvals[121] =
      (((((t483 + t783) - t710) + t1112) + t1134) + t2 * t517) -
      t5 * (((((b_sdvals_tmp + t375) + t384) + t1297) + t1385) + t2054);
  sdvals[122] =
      (((((((((t469 - t488) + t979) + eta * t896) + t1113) + t1375) - t1098) -
         t1135) -
        t398_tmp * 29.883726743463921) +
       t5 * (((((((t11 * t113 - t409) + t686) + t1329) + t1769) + t1946) +
              t2165) -
             0.12977835530975809)) +
      0.12977835530975809;
  t307_tmp_tmp =
      t5 *
      ((((((-t374 - t564) + t23_tmp * -25.367630581806829) + t1487) + t1809) +
        t1810) +
       t2112);
  sdvals[123] =
      (t2484 +
       (((((((((t696 + t981) + t1088) - t926) - t1102) + t1497) - t1208) +
          t1816) +
         t1863) +
        t1900)) -
      t307_tmp_tmp;
  t137_tmp =
      (((((t358 + t570) + t1011) - t1010) + t1045_tmp * -5.6535404114009031) +
       t1891) +
      t5 * ((((t2413_tmp + t672) - t526) + t1015) + t1807);
  c_sdvals_tmp =
      t6 * (((((t703 - t527) + t1503) + t1807) + t1808) - 8.4558768606022756);
  d_sdvals_tmp = xi * ((((((t421 + t772) + t809) - t570) + t1009) - t1251) +
                       t456_tmp * -5.6535404114009031);
  sdvals[124] = (t137_tmp - c_sdvals_tmp) - d_sdvals_tmp;
  e_sdvals_tmp =
      -t5 * ((((((t401 + t515) + t1468) + t1853) + t2072) + t2149) -
             5.0104759609968337) +
      (((((((((t457 + t472) + t551) + t398_tmp * -7.5380538818678708) + t1125) -
           t927) -
          t981) +
         t8 * t518) +
        t1892) -
       1.1641935638153169);
  f_sdvals_tmp =
      t6 *
      (((((t42_tmp * -8.4558768606022756 + t1811) + t1853) + t2120) + t2121) +
       4.153152157366276);
  t296_tmp =
      xi * (((((((t485 + t697) - t551) + t1066) - t922) + t11 * t981) + t2191) +
            0.30686976018475881);
  sdvals[125] = (e_sdvals_tmp + f_sdvals_tmp) - t296_tmp;
  t2163_tmp =
      t5 * ((((((t374 + t374 * zeta_1_inv) - t564) + t1487) - t1809) - t1810) +
            t2112);
  sdvals[126] =
      (t2487 +
       (((((((((t1018 + t1088) - t926) - t981) - t1102) + t1492) - t1208) +
          t1820) +
         t1863) +
        t1900)) -
      t2163_tmp;
  t288_tmp =
      (((((t358 - t570) + t1010) - t1011) + t2 * t528) + t1891) +
      t5 * ((((t2413_tmp + t526) + t672) + t456_tmp * -25.367630581806829) +
            t2035);
  t2518_tmp =
      t6 * (((((t527 + t703) + t1503) + t2035) + t2036) + 8.4558768606022756);
  t2370_tmp = xi * ((((((t421 + t570) + t772) + t809) + t1251) - t1009) +
                    t1251 * zeta_1_inv);
  sdvals[127] = (t288_tmp - t2518_tmp) - t2370_tmp;
  t2656_tmp =
      t5 * ((((((t515 - t401) - t1468) + t1853) + t2072) - t2149) +
            5.0104759609968337) +
      (((((((((eta * t392 + t457) + t472) - t551) + t981) + t1125) - t927) +
         t1523_tmp * -5.6535404114009031) +
        t1892) -
       1.1641935638153169);
  t2594_tmp = t6 * (((((t11 * t515 - t1811) - t1853) + t2120) + t2121) +
                    4.153152157366276);
  t2595_tmp = xi * (((((((t485 + t551) - t697) + t1066) - t922) + t2191) +
                     t101_tmp * -1.8845134704669679) +
                    0.30686976018475881);
  sdvals[128] = (t2656_tmp + t2594_tmp) - t2595_tmp;
  t2620_tmp = t5 * ((-t517 + t1385) + t2054);
  sdvals[129] = (t2384 + t2387) + t2620_tmp;
  t2657_tmp = (t398_tmp * -0.25955671061951607 + eta * t1483) +
              -t5 * ((t375 + t384) + t1297);
  t2432_tmp =
      t6 * (t23_tmp * 0.92594440149245094 + t42_tmp * 0.92594440149245094);
  t2347_tmp = xi * sdvals_tmp;
  sdvals[130] = (t2657_tmp + t2432_tmp) + t2347_tmp;
  c_sfvals_tmp =
      t5 * (((t387 + t1329) + t1769) - 2.85485934826355) +
      (((((-t488 + t979) - t1135) - t2 * 0.12977835530975809) + t2 * t686) +
       0.12977835530975809);
  b_sfvals_tmp =
      t6 * ((t80_tmp * 0.92594440149245094 + t2164) + 0.46297220074622553);
  sfvals_tmp = xi * ((((t11 * t207 - t395) - t2 * 12.67975457952439) + t896) +
                     2.2621087922075662);
  sdvals[131] = (c_sfvals_tmp - b_sfvals_tmp) - sfvals_tmp;
  d_sfvals_tmp =
      t5 * ((((((t518 - t528) + t518 * zeta_1_inv) + t1015) + t1807) - t1809) -
            t1810);
  sdvals[132] =
      ((((((((-t570 + t1010) + t1018) - t1011) + t1408) + t1492) - t1248) +
        t1758) +
       t2581) -
      d_sfvals_tmp;
  f_sfvals_tmp =
      (((((t486 + t1088) - t926) + t2 * t564) + t1560) - t1208) +
      -t5 * (((((((-t396 + t440) - t467) + t630) - t672) + t1487) + t2112) +
             2.7250809929537918);
  e_sfvals_tmp =
      t6 * (((((t571 + t619) + t1080) + t2035) + t2036) + 1.8845134704669679);
  h_sfvals_tmp = xi * ((((t570 + t847) - t618) + t1015) - t1009);
  sdvals[133] = (f_sfvals_tmp - e_sfvals_tmp) - h_sfvals_tmp;
  g_sfvals_tmp =
      -t5 * (((((((t429 + t606) + t1468) + t42_tmp * -2.7250809929537918) +
                t2149) +
               t101_tmp * -4.153152157366276) -
              t2124) -
             1.1641935638153169) +
      (((((((((t457 + t988) + t1055) + eta * t922) + t1125) +
           t398_tmp * -4.2226829451685486) -
          t902) -
         t927) +
        t1561) -
       1.1641935638153169);
  i_sfvals_tmp = t6 * (((((t11 * t551 + t1851) - t1811) + t2069) - t1853) +
                       1.8845134704669679);
  k_sfvals_tmp = xi * ((((((t392 + t697) - t551) + t1247) - t1269) + t2072) -
                       1.8845134704669679);
  sdvals[134] = (g_sfvals_tmp + i_sfvals_tmp) + k_sfvals_tmp;
  sdvals[135] = (t2491 + t2581) + d_sfvals_tmp;
  sdvals[136] = (f_sfvals_tmp + e_sfvals_tmp) + h_sfvals_tmp;
  sdvals[137] = (g_sfvals_tmp - i_sfvals_tmp) - k_sfvals_tmp;
  sdvals[138] =
      xi *
      (((((((sdvals_tmp - t859) - t862) - t947) + t1483) + t1567) + t1945) -
       t1768);
  sdvals[139] =
      (((((t710 - t483) - t783) + t1112) + t1134) -
       t1045_tmp * 1.388916602238677) +
      t5 * (((((b_sdvals_tmp + t23_tmp * -47.848899637484287) - t384) + t1385) -
             t1297) +
            t2054);
  sdvals[140] =
      (((((((((eta * t395 - t469) - t488) + t979) + t1113) - t1375) - t1098) -
         t1135) -
        t1523_tmp * 38.039263738573183) +
       t5 * (((((((t409 + t686) + t1329) + t1769) - t1946) +
               t101_tmp * -0.46297220074622553) -
              t209_tmp * 3.9375) -
             0.12977835530975809)) +
      0.12977835530975809;
  sdvals[141] = (t2487 + t2589) + t2163_tmp;
  sdvals[142] = (t288_tmp + t2518_tmp) + t2370_tmp;
  sdvals[143] = (t2656_tmp - t2594_tmp) + t2595_tmp;
  sdvals[144] = (t2484 + t2597) + t307_tmp_tmp;
  sdvals[145] = (t137_tmp + c_sdvals_tmp) + d_sdvals_tmp;
  sdvals[146] = (e_sdvals_tmp - f_sdvals_tmp) + t296_tmp;
  sdvals[147] = ((((((t245 + t245 * zeta_1_inv) + t483) + t783) - t710) +
                  t1045_tmp * -12.67975457952439) +
                 t2387) -
                t2620_tmp;
  sdvals[148] = (t2657_tmp - t2432_tmp) - t2347_tmp;
  sdvals[149] = (c_sfvals_tmp + b_sfvals_tmp) + sfvals_tmp;
  sdvals_tmp =
      t5 *
      ((((((-t366 - t397) + t23_tmp * -55.636055296942807) + t1179) + t1741) +
        t1742) +
       t1922);
  sdvals[150] = (t2472 + t2498) - sdvals_tmp;
  b_sdvals_tmp = (((((-t451 + t815) + t1129) + t1167) + t2 * t397) - t1152) +
                 -t5 * ((((t2423_tmp - t451) + t1179) + t1235) + t1922);
  t307_tmp_tmp = xi * ((((t405 + t532) + t775) - t749) + t1260);
  t137_tmp = t6 * (((((t534 - t406) + t1273) + t11 * t775) + t12 * t775) -
                   18.5453517656476);
  sdvals[151] = (b_sdvals_tmp + t307_tmp_tmp) - t137_tmp;
  c_sdvals_tmp =
      t5 * ((((((t390 + t427) + t1076) + t1726) + t1750) + t2001) -
            5.1985524118022024) +
      (((((((((t505 + eta * t371) - t407) - t427) - t664) + t1120) + t1130) -
         t1128) +
        t1523_tmp * -26.264953013639559) +
       5.1985524118022024);
  d_sdvals_tmp = xi * ((((((-t371 + t479) - t400) + t721) - t1119) + t1700) +
                       8.7549843378798524);
  e_sdvals_tmp =
      t6 *
      (((((t42_tmp * -18.5453517656476 + t1702) + t1743) + t1748) + t1998) +
       8.7549843378798524);
  sdvals[152] = (c_sdvals_tmp - d_sdvals_tmp) + e_sdvals_tmp;
  sdvals[153] =
      ((((((((t451 + t755) - t726) - t815) + t1152) + t1201) + t1572) + t1907) +
       t2498) +
      sdvals_tmp;
  sdvals[154] = (b_sdvals_tmp - t307_tmp_tmp) + t137_tmp;
  sdvals[155] = (c_sdvals_tmp + d_sdvals_tmp) - e_sdvals_tmp;
  sdvals_tmp =
      t5 * ((((((t366 + t366 * zeta_1_inv) - t397) + t1179) + t1922) - t1741) -
            t1742);
  sdvals[156] = (t2471 + t2490) + sdvals_tmp;
  b_sdvals_tmp = (((((t451 + t1129) - t815) + t1152) + t1167) +
                  t1045_tmp * -26.264953013639559) +
                 -t5 * ((((t2423_tmp + t451) + t1235) - t1179) - t1922);
  t307_tmp_tmp = xi * ((((t405 + t775) - t532) - t749) + t1260);
  t137_tmp = t6 * (((((t406 + t534) + t1273) + t78_tmp * -55.636055296942807) +
                    t80_tmp * -55.636055296942807) +
                   18.5453517656476);
  sdvals[157] = (b_sdvals_tmp + t307_tmp_tmp) + t137_tmp;
  c_sdvals_tmp =
      -t5 * ((((((-t390 + t427) - t1076) - t1726) + t1750) + t2001) +
             5.1985524118022024) +
      (((((((((t427 + t505) - t407) + t398_tmp * -35.01993735151941) - t664) +
           t1130) +
          eta * t721) -
         t1120) -
        t1128) +
       5.1985524118022024);
  d_sdvals_tmp = xi * ((((((t371 + t479) - t400) - t721) + t1119) + t1700) -
                       8.7549843378798524);
  e_sdvals_tmp = t6 * (((((t11 * t400 + t1748) - t1702) - t1743) + t1998) +
                       8.7549843378798524);
  sdvals[158] = (c_sdvals_tmp - d_sdvals_tmp) - e_sdvals_tmp;
  sdvals[159] =
      ((((((((-t451 + t755) + t815) - t726) + t1201) - t1152) + t1572) +
        t1657) +
       t2490) -
      sdvals_tmp;
  sdvals[160] = (b_sdvals_tmp - t307_tmp_tmp) - t137_tmp;
  sdvals[161] = (c_sdvals_tmp + d_sdvals_tmp) + e_sdvals_tmp;
  sdvals[162] = xi * ((((t2 * 49.6469618329983 - t8 * 49.6469618329983) +
                        zeta * 9.1864197174084428) +
                       t78_tmp * 40.46054211558986) +
                      t456_tmp * 90.10750394858816);
  sdvals[163] = (t5 * ((eta * 49.6469618329983 + t42_tmp * 40.46054211558986) +
                       90.10750394858816 * eta * zeta_1_inv) -
                 t1523_tmp * 49.6469618329983) +
                t398_tmp * 9.1864197174084428;
  sdvals[164] =
      ((((t2 * 4.5932098587042214 - t8 * 162.72051507510761) +
         t9 * 99.2939236659966) +
        zeta * 68.019801267815183) -
       t1045_tmp * 49.6469618329983) +
      (-t5 * (((zeta * 49.6469618329983 + t78_tmp * 45.05375197429408) +
               t80_tmp * 40.46054211558986) -
              4.5932098587042214) -
       4.5932098587042214);
}

// quad_16_ncoords - Obtain nodal coordinates in master element for quad_16
void quad_16_ncoords(double natcoords[32])
{
  double xis[4];
  ::sfe_sfuncs::bar_4_ncoords(&xis[0]);
  for (int m{0}; m < 16; m++) {
    int natcoords_tmp;
    natcoords_tmp = m << 1;
    natcoords[natcoords_tmp] = xis[iv25[m] - 1];
    natcoords[natcoords_tmp + 1] = xis[iv26[m] - 1];
  }
}

// quad_16_sfunc - Bicubic quadrilateral element with equidistant points
void quad_16_sfunc(double xi, double eta, double sfvals[16])
{
  double N_eta[4];
  double N_xi[4];
  ::sfe_sfuncs::bar_4_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_4_sfunc(eta, &N_eta[0]);
  for (int k{0}; k < 16; k++) {
    sfvals[k] = N_xi[iv25[k] - 1] * N_eta[iv26[k] - 1];
  }
}

// quad_16_sfunc - Bicubic quadrilateral element with equidistant points
void quad_16_sfunc(double xi, double eta, double sfvals[16], double sdvals[32])
{
  double N_eta[4];
  double N_xi[4];
  double sdvals_eta[4];
  double sdvals_xi[4];
  ::sfe_sfuncs::bar_4_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_4_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  for (int k{0}; k < 16; k++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sdvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv25[k] - 1;
    b_sfvals_tmp = iv26[k] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = N_xi[sfvals_tmp];
    sfvals[k] = d_sfvals_tmp * c_sfvals_tmp;
    sdvals_tmp = k << 1;
    sdvals[sdvals_tmp] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp;
    sdvals[sdvals_tmp + 1] = d_sfvals_tmp * sdvals_eta[b_sfvals_tmp];
  }
}

// quad_25_ncoords - Obtain nodal coordinates in master element for quad_25
void quad_25_ncoords(double natcoords[50])
{
  double xis[5];
  ::sfe_sfuncs::bar_5_ncoords(&xis[0]);
  for (int m{0}; m < 25; m++) {
    int natcoords_tmp;
    natcoords_tmp = m << 1;
    natcoords[natcoords_tmp] = xis[iv27[m] - 1];
    natcoords[natcoords_tmp + 1] = xis[iv28[m] - 1];
  }
}

// quad_25_sfunc - Biquartic quadrilateral element with equidistant points
void quad_25_sfunc(double xi, double eta, double sfvals[25])
{
  double N_eta[5];
  double N_xi[5];
  ::sfe_sfuncs::bar_5_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_5_sfunc(eta, &N_eta[0]);
  for (int k{0}; k < 25; k++) {
    sfvals[k] = N_xi[iv27[k] - 1] * N_eta[iv28[k] - 1];
  }
}

// quad_25_sfunc - Biquartic quadrilateral element with equidistant points
void quad_25_sfunc(double xi, double eta, double sfvals[25], double sdvals[50])
{
  double N_eta[5];
  double N_xi[5];
  double sdvals_eta[5];
  double sdvals_xi[5];
  ::sfe_sfuncs::bar_5_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_5_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  for (int k{0}; k < 25; k++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sdvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv27[k] - 1;
    b_sfvals_tmp = iv28[k] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = N_xi[sfvals_tmp];
    sfvals[k] = d_sfvals_tmp * c_sfvals_tmp;
    sdvals_tmp = k << 1;
    sdvals[sdvals_tmp] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp;
    sdvals[sdvals_tmp + 1] = d_sfvals_tmp * sdvals_eta[b_sfvals_tmp];
  }
}

// quad_36_ncoords - Obtain nodal coordinates in master element for quad_36
void quad_36_ncoords(double natcoords[72])
{
  double xis[6];
  ::sfe_sfuncs::bar_6_ncoords(&xis[0]);
  for (int m{0}; m < 36; m++) {
    int natcoords_tmp;
    natcoords_tmp = m << 1;
    natcoords[natcoords_tmp] = xis[iv29[m] - 1];
    natcoords[natcoords_tmp + 1] = xis[iv30[m] - 1];
  }
}

// quad_36_sfunc   Biquintic quadrilateral element with equidistant points
void quad_36_sfunc(double xi, double eta, double sfvals[36])
{
  double N_eta[6];
  double N_xi[6];
  ::sfe_sfuncs::bar_6_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_6_sfunc(eta, &N_eta[0]);
  for (int k{0}; k < 36; k++) {
    sfvals[k] = N_xi[iv29[k] - 1] * N_eta[iv30[k] - 1];
  }
}

// quad_36_sfunc   Biquintic quadrilateral element with equidistant points
void quad_36_sfunc(double xi, double eta, double sfvals[36], double sdvals[72])
{
  double N_eta[6];
  double N_xi[6];
  double sdvals_eta[6];
  double sdvals_xi[6];
  ::sfe_sfuncs::bar_6_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_6_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  for (int k{0}; k < 36; k++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sdvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv29[k] - 1;
    b_sfvals_tmp = iv30[k] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = N_xi[sfvals_tmp];
    sfvals[k] = d_sfvals_tmp * c_sfvals_tmp;
    sdvals_tmp = k << 1;
    sdvals[sdvals_tmp] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp;
    sdvals[sdvals_tmp + 1] = d_sfvals_tmp * sdvals_eta[b_sfvals_tmp];
  }
}

// quad_49_ncoords - Obtain nodal coordinates in master element for quad_49
void quad_49_ncoords(double natcoords[98])
{
  double xis[7];
  ::sfe_sfuncs::bar_7_ncoords(&xis[0]);
  for (int m{0}; m < 49; m++) {
    int natcoords_tmp;
    natcoords_tmp = m << 1;
    natcoords[natcoords_tmp] = xis[iv31[m] - 1];
    natcoords[natcoords_tmp + 1] = xis[iv32[m] - 1];
  }
}

// quad_49_sfunc - Bisextic quadrilateral element with equidistant points
void quad_49_sfunc(double xi, double eta, double sfvals[49])
{
  double N_eta[7];
  double N_xi[7];
  ::sfe_sfuncs::bar_7_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_7_sfunc(eta, &N_eta[0]);
  for (int k{0}; k < 49; k++) {
    sfvals[k] = N_xi[iv31[k] - 1] * N_eta[iv32[k] - 1];
  }
}

// quad_49_sfunc - Bisextic quadrilateral element with equidistant points
void quad_49_sfunc(double xi, double eta, double sfvals[49], double sdvals[98])
{
  double N_eta[7];
  double N_xi[7];
  double sdvals_eta[7];
  double sdvals_xi[7];
  ::sfe_sfuncs::bar_7_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_7_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  for (int k{0}; k < 49; k++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sdvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv31[k] - 1;
    b_sfvals_tmp = iv32[k] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = N_xi[sfvals_tmp];
    sfvals[k] = d_sfvals_tmp * c_sfvals_tmp;
    sdvals_tmp = k << 1;
    sdvals[sdvals_tmp] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp;
    sdvals[sdvals_tmp + 1] = d_sfvals_tmp * sdvals_eta[b_sfvals_tmp];
  }
}

// quad_4_ncoords - Obtain nodal coordinates in master element for quad_4
void quad_4_ncoords(double natcoords[8])
{
  double xis[2];
  ::sfe_sfuncs::bar_2_ncoords(&xis[0]);
  natcoords[0] = xis[0];
  natcoords[1] = xis[0];
  natcoords[2] = xis[1];
  natcoords[3] = xis[0];
  natcoords[4] = xis[1];
  natcoords[5] = xis[1];
  natcoords[6] = xis[0];
  natcoords[7] = xis[1];
}

// quad_4_sfunc_sfunc - Bilinear quadrilateral element
void quad_4_sfunc(double xi, double eta, double sfvals[4])
{
  double N_eta[2];
  double N_xi[2];
  ::sfe_sfuncs::bar_2_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_2_sfunc(eta, &N_eta[0]);
  sfvals[0] = N_xi[0] * N_eta[0];
  sfvals[1] = N_eta[0] * N_xi[1];
  sfvals[2] = N_xi[1] * N_eta[1];
  sfvals[3] = N_xi[0] * N_eta[1];
}

// quad_4_sfunc_sfunc - Bilinear quadrilateral element
void quad_4_sfunc(double xi, double eta, double sfvals[4], double sdvals[8])
{
  double N_eta[2];
  double N_xi[2];
  double sdvals_eta[2];
  double sdvals_xi[2];
  ::sfe_sfuncs::bar_2_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_2_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  sfvals[0] = N_xi[0] * N_eta[0];
  sdvals[0] = sdvals_xi[0] * N_eta[0];
  sdvals[1] = N_xi[0] * sdvals_eta[0];
  sfvals[1] = N_eta[0] * N_xi[1];
  sdvals[2] = N_eta[0] * sdvals_xi[1];
  sdvals[3] = sdvals_eta[0] * N_xi[1];
  sfvals[2] = N_xi[1] * N_eta[1];
  sdvals[4] = sdvals_xi[1] * N_eta[1];
  sdvals[5] = N_xi[1] * sdvals_eta[1];
  sfvals[3] = N_xi[0] * N_eta[1];
  sdvals[6] = sdvals_xi[0] * N_eta[1];
  sdvals[7] = N_xi[0] * sdvals_eta[1];
}

// quad_9_ncoords - Obtain nodal coordinates in master element for quad_9
void quad_9_ncoords(double natcoords[18])
{
  double xis[3];
  ::sfe_sfuncs::bar_3_ncoords(&xis[0]);
  for (int m{0}; m < 9; m++) {
    int natcoords_tmp;
    natcoords_tmp = m << 1;
    natcoords[natcoords_tmp] = xis[iv33[m] - 1];
    natcoords[natcoords_tmp + 1] = xis[iv34[m] - 1];
  }
}

// quad_9_sfunc - Bilinear quadrilateral element
void quad_9_sfunc(double xi, double eta, double sfvals[9])
{
  double N_eta[3];
  double N_xi[3];
  ::sfe_sfuncs::bar_3_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_3_sfunc(eta, &N_eta[0]);
  for (int k{0}; k < 9; k++) {
    sfvals[k] = N_xi[iv33[k] - 1] * N_eta[iv34[k] - 1];
  }
}

// quad_9_sfunc - Bilinear quadrilateral element
void quad_9_sfunc(double xi, double eta, double sfvals[9], double sdvals[18])
{
  double N_eta[3];
  double N_xi[3];
  double sdvals_eta[3];
  double sdvals_xi[3];
  ::sfe_sfuncs::bar_3_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_3_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  for (int k{0}; k < 9; k++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sdvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv33[k] - 1;
    b_sfvals_tmp = iv34[k] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = N_xi[sfvals_tmp];
    sfvals[k] = d_sfvals_tmp * c_sfvals_tmp;
    sdvals_tmp = k << 1;
    sdvals[sdvals_tmp] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp;
    sdvals[sdvals_tmp + 1] = d_sfvals_tmp * sdvals_eta[b_sfvals_tmp];
  }
}

// quad_gl_16_ncoords - Obtain nodal coordinates in master element for
void quad_gl_16_ncoords(double natcoords[32])
{
  double xis[4];
  ::sfe_sfuncs::bar_gl_4_ncoords(&xis[0]);
  for (int m{0}; m < 16; m++) {
    int natcoords_tmp;
    natcoords_tmp = m << 1;
    natcoords[natcoords_tmp] = xis[iv25[m] - 1];
    natcoords[natcoords_tmp + 1] = xis[iv26[m] - 1];
  }
}

// quad_gl_16_sfunc - Bicubic quadrilateral element with Gauss-Lobatto points
void quad_gl_16_sfunc(double xi, double eta, double sfvals[16])
{
  double N_eta[4];
  double N_xi[4];
  ::sfe_sfuncs::bar_gl_4_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_gl_4_sfunc(eta, &N_eta[0]);
  for (int k{0}; k < 16; k++) {
    sfvals[k] = N_xi[iv25[k] - 1] * N_eta[iv26[k] - 1];
  }
}

// quad_gl_16_sfunc - Bicubic quadrilateral element with Gauss-Lobatto points
void quad_gl_16_sfunc(double xi, double eta, double sfvals[16],
                      double sdvals[32])
{
  double N_eta[4];
  double N_xi[4];
  double sdvals_eta[4];
  double sdvals_xi[4];
  ::sfe_sfuncs::bar_gl_4_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_gl_4_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  for (int k{0}; k < 16; k++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sdvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv25[k] - 1;
    b_sfvals_tmp = iv26[k] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = N_xi[sfvals_tmp];
    sfvals[k] = d_sfvals_tmp * c_sfvals_tmp;
    sdvals_tmp = k << 1;
    sdvals[sdvals_tmp] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp;
    sdvals[sdvals_tmp + 1] = d_sfvals_tmp * sdvals_eta[b_sfvals_tmp];
  }
}

// quad_gl_25_ncoords - Obtain nodal coordinates in master element for
void quad_gl_25_ncoords(double natcoords[50])
{
  double xis[5];
  ::sfe_sfuncs::bar_gl_5_ncoords(&xis[0]);
  for (int m{0}; m < 25; m++) {
    int natcoords_tmp;
    natcoords_tmp = m << 1;
    natcoords[natcoords_tmp] = xis[iv27[m] - 1];
    natcoords[natcoords_tmp + 1] = xis[iv28[m] - 1];
  }
}

// quad_gl_25_sfunc - Biquartic quadrilateral element with Gauss-Lobatto
void quad_gl_25_sfunc(double xi, double eta, double sfvals[25])
{
  double N_eta[5];
  double N_xi[5];
  ::sfe_sfuncs::bar_gl_5_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_gl_5_sfunc(eta, &N_eta[0]);
  for (int k{0}; k < 25; k++) {
    sfvals[k] = N_xi[iv27[k] - 1] * N_eta[iv28[k] - 1];
  }
}

// quad_gl_25_sfunc - Biquartic quadrilateral element with Gauss-Lobatto
void quad_gl_25_sfunc(double xi, double eta, double sfvals[25],
                      double sdvals[50])
{
  double N_eta[5];
  double N_xi[5];
  double sdvals_eta[5];
  double sdvals_xi[5];
  ::sfe_sfuncs::bar_gl_5_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_gl_5_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  for (int k{0}; k < 25; k++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sdvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv27[k] - 1;
    b_sfvals_tmp = iv28[k] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = N_xi[sfvals_tmp];
    sfvals[k] = d_sfvals_tmp * c_sfvals_tmp;
    sdvals_tmp = k << 1;
    sdvals[sdvals_tmp] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp;
    sdvals[sdvals_tmp + 1] = d_sfvals_tmp * sdvals_eta[b_sfvals_tmp];
  }
}

// quad_gl_36_ncoords - Obtain nodal coordinates in master element for
void quad_gl_36_ncoords(double natcoords[72])
{
  double xis[6];
  ::sfe_sfuncs::bar_gl_6_ncoords(&xis[0]);
  for (int m{0}; m < 36; m++) {
    int natcoords_tmp;
    natcoords_tmp = m << 1;
    natcoords[natcoords_tmp] = xis[iv29[m] - 1];
    natcoords[natcoords_tmp + 1] = xis[iv30[m] - 1];
  }
}

// quad_gl_36_sfunc - Biquintic quadrilateral element with equidistant points
void quad_gl_36_sfunc(double xi, double eta, double sfvals[36])
{
  double N_eta[6];
  double N_xi[6];
  ::sfe_sfuncs::bar_gl_6_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_gl_6_sfunc(eta, &N_eta[0]);
  for (int k{0}; k < 36; k++) {
    sfvals[k] = N_xi[iv29[k] - 1] * N_eta[iv30[k] - 1];
  }
}

// quad_gl_36_sfunc - Biquintic quadrilateral element with equidistant points
void quad_gl_36_sfunc(double xi, double eta, double sfvals[36],
                      double sdvals[72])
{
  double N_eta[6];
  double N_xi[6];
  double sdvals_eta[6];
  double sdvals_xi[6];
  ::sfe_sfuncs::bar_gl_6_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_gl_6_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  for (int k{0}; k < 36; k++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sdvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv29[k] - 1;
    b_sfvals_tmp = iv30[k] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = N_xi[sfvals_tmp];
    sfvals[k] = d_sfvals_tmp * c_sfvals_tmp;
    sdvals_tmp = k << 1;
    sdvals[sdvals_tmp] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp;
    sdvals[sdvals_tmp + 1] = d_sfvals_tmp * sdvals_eta[b_sfvals_tmp];
  }
}

// quad_gl_49_ncoords - Obtain nodal coordinates in master element for
void quad_gl_49_ncoords(double natcoords[98])
{
  double xis[7];
  ::sfe_sfuncs::bar_gl_7_ncoords(&xis[0]);
  for (int m{0}; m < 49; m++) {
    int natcoords_tmp;
    natcoords_tmp = m << 1;
    natcoords[natcoords_tmp] = xis[iv31[m] - 1];
    natcoords[natcoords_tmp + 1] = xis[iv32[m] - 1];
  }
}

// quad_gl_49_sfunc - Bisextic quadrilateral element with equidistant points
void quad_gl_49_sfunc(double xi, double eta, double sfvals[49])
{
  double N_eta[7];
  double N_xi[7];
  ::sfe_sfuncs::bar_gl_7_sfunc(xi, &N_xi[0]);
  ::sfe_sfuncs::bar_gl_7_sfunc(eta, &N_eta[0]);
  for (int k{0}; k < 49; k++) {
    sfvals[k] = N_xi[iv31[k] - 1] * N_eta[iv32[k] - 1];
  }
}

// quad_gl_49_sfunc - Bisextic quadrilateral element with equidistant points
void quad_gl_49_sfunc(double xi, double eta, double sfvals[49],
                      double sdvals[98])
{
  double N_eta[7];
  double N_xi[7];
  double sdvals_eta[7];
  double sdvals_xi[7];
  ::sfe_sfuncs::bar_gl_7_sfunc(xi, &N_xi[0], &sdvals_xi[0]);
  ::sfe_sfuncs::bar_gl_7_sfunc(eta, &N_eta[0], &sdvals_eta[0]);
  for (int k{0}; k < 49; k++) {
    double c_sfvals_tmp;
    double d_sfvals_tmp;
    int b_sfvals_tmp;
    int sdvals_tmp;
    int sfvals_tmp;
    sfvals_tmp = iv31[k] - 1;
    b_sfvals_tmp = iv32[k] - 1;
    c_sfvals_tmp = N_eta[b_sfvals_tmp];
    d_sfvals_tmp = N_xi[sfvals_tmp];
    sfvals[k] = d_sfvals_tmp * c_sfvals_tmp;
    sdvals_tmp = k << 1;
    sdvals[sdvals_tmp] = sdvals_xi[sfvals_tmp] * c_sfvals_tmp;
    sdvals[sdvals_tmp + 1] = d_sfvals_tmp * sdvals_eta[b_sfvals_tmp];
  }
}

// tet_10_ncoords - Obtain nodal coordinates in master element for tet_10
void tet_10_ncoords(double natcoords[30])
{
  static const double dv[30]{0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0,
                             0.0, 1.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.5,
                             0.0, 0.0, 0.0, 0.5, 0.5, 0.0, 0.5, 0.0, 0.5, 0.5};
  std::copy(&dv[0], &dv[30], &natcoords[0]);
}

// tet_10_sfunc - Compute shape functions and their derivatives of tet_10
void tet_10_sfunc(double xi, double eta, double zeta, double sfvals[10])
{
  double sfvals_tmp;
  double t12;
  double t13;
  double t14;
  double t15;
  double t16;
  double t2;
  double t3;
  double t5;
  double t6;
  double t7;
  double t8;
  t2 = eta * 4.0;
  t3 = eta * eta;
  t5 = xi * xi;
  t6 = zeta * 4.0;
  t7 = zeta * zeta;
  t15 = eta * zeta * -4.0;
  t8 = t2 * zeta;
  t12 = t3 * 2.0;
  t13 = t5 * 2.0;
  t14 = t7 * 2.0;
  t16 = (t2 + t6) - 3.0;
  sfvals[0] =
      ((((((eta * -3.0 + t8) + t12) + t13) + t14) - zeta * 3.0) + t16 * xi) +
      1.0;
  sfvals[1] = t13 - xi;
  sfvals[2] = -eta + t12;
  sfvals[3] = t14 - zeta;
  sfvals[4] = t5 * -4.0 - xi * (t16 - 1.0);
  sfvals_tmp = t2 * xi;
  sfvals[5] = sfvals_tmp;
  sfvals[6] = ((t2 - t3 * 4.0) + t15) - sfvals_tmp;
  sfvals_tmp = t6 * xi;
  sfvals[7] = ((t6 - t7 * 4.0) + t15) - sfvals_tmp;
  sfvals[8] = sfvals_tmp;
  sfvals[9] = t8;
}

// tet_10_sfunc - Compute shape functions and their derivatives of tet_10
void tet_10_sfunc(double xi, double eta, double zeta, double sfvals[10],
                  double sdvals[30])
{
  double sfvals_tmp;
  double t12;
  double t13;
  double t14;
  double t15;
  double t16;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  t2 = eta * 4.0;
  t3 = eta * eta;
  t4 = xi * 4.0;
  t5 = xi * xi;
  t6 = zeta * 4.0;
  t7 = zeta * zeta;
  t15 = eta * zeta * -4.0;
  t8 = t2 * zeta;
  t12 = t3 * 2.0;
  t13 = t5 * 2.0;
  t14 = t7 * 2.0;
  t16 = (t2 + t6) - 3.0;
  sfvals[0] =
      ((((((eta * -3.0 + t8) + t12) + t13) + t14) - zeta * 3.0) + t16 * xi) +
      1.0;
  sfvals[1] = t13 - xi;
  sfvals[2] = -eta + t12;
  sfvals[3] = t14 - zeta;
  sfvals[4] = t5 * -4.0 - xi * (t16 - 1.0);
  sfvals_tmp = t2 * xi;
  sfvals[5] = sfvals_tmp;
  sfvals[6] = ((t2 - t3 * 4.0) + t15) - sfvals_tmp;
  sfvals_tmp = t6 * xi;
  sfvals[7] = ((t6 - t7 * 4.0) + t15) - sfvals_tmp;
  sfvals[8] = sfvals_tmp;
  sfvals[9] = t8;
  sfvals_tmp = t4 + t16;
  sdvals[0] = sfvals_tmp;
  sdvals[1] = sfvals_tmp;
  sdvals[2] = sfvals_tmp;
  sdvals[3] = t4 - 1.0;
  sdvals[4] = 0.0;
  sdvals[5] = 0.0;
  sdvals[6] = 0.0;
  sdvals[7] = t2 - 1.0;
  sdvals[8] = 0.0;
  sdvals[9] = 0.0;
  sdvals[10] = 0.0;
  sdvals[11] = t6 - 1.0;
  sdvals[12] = ((-t2 - t6) + 4.0) - 8.0 * xi;
  sdvals[13] = -t4;
  sdvals[14] = -t4;
  sdvals[15] = eta * 4.0;
  sdvals[16] = xi * 4.0;
  sdvals[17] = 0.0;
  sdvals[18] = -t2;
  sdvals[19] = ((eta * -8.0 - t4) - t6) + 4.0;
  sdvals[20] = -t2;
  sdvals[21] = -t6;
  sdvals[22] = -t6;
  sdvals[23] = ((-t2 - t4) - zeta * 8.0) + 4.0;
  sdvals[24] = zeta * 4.0;
  sdvals[25] = 0.0;
  sdvals[26] = xi * 4.0;
  sdvals[27] = 0.0;
  sdvals[28] = zeta * 4.0;
  sdvals[29] = eta * 4.0;
}

// tet_20_ncoords - Obtain nodal coordinates in master element for tet_20
void tet_20_ncoords(double natcoords[60])
{
  static const double dv[60]{0.0,
                             0.0,
                             0.0,
                             1.0,
                             0.0,
                             0.0,
                             0.0,
                             1.0,
                             0.0,
                             0.0,
                             0.0,
                             1.0,
                             0.33333333333333331,
                             0.0,
                             0.0,
                             0.66666666666666663,
                             0.0,
                             0.0,
                             0.66666666666666663,
                             0.33333333333333331,
                             0.0,
                             0.33333333333333331,
                             0.66666666666666663,
                             0.0,
                             0.0,
                             0.66666666666666663,
                             0.0,
                             0.0,
                             0.33333333333333331,
                             0.0,
                             0.0,
                             0.0,
                             0.33333333333333331,
                             0.0,
                             0.0,
                             0.66666666666666663,
                             0.66666666666666663,
                             0.0,
                             0.33333333333333331,
                             0.33333333333333331,
                             0.0,
                             0.66666666666666663,
                             0.0,
                             0.66666666666666663,
                             0.33333333333333331,
                             0.0,
                             0.33333333333333331,
                             0.66666666666666663,
                             0.33333333333333331,
                             0.33333333333333331,
                             0.0,
                             0.33333333333333331,
                             0.0,
                             0.33333333333333331,
                             0.33333333333333331,
                             0.33333333333333331,
                             0.33333333333333331,
                             0.0,
                             0.33333333333333331,
                             0.33333333333333331};
  std::copy(&dv[0], &dv[60], &natcoords[0]);
}

// tet_20_sfunc - Compute shape functions and their derivatives of tet_20
void tet_20_sfunc(double xi, double eta, double zeta, double sfvals[20])
{
  double sfvals_tmp;
  double t10;
  double t14;
  double t16;
  double t2;
  double t22;
  double t24;
  double t29;
  double t3;
  double t30;
  double t31;
  double t33;
  double t34;
  double t35;
  double t39;
  double t4;
  double t5;
  double t52;
  double t53;
  double t54;
  double t55;
  double t57;
  double t58;
  double t59;
  double t6;
  double t60;
  double t61;
  double t61_tmp;
  double t62;
  double t69;
  double t7;
  double t70;
  double t71;
  double t72;
  double t72_tmp;
  double t73;
  double t73_tmp;
  double t74;
  double t9;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t4 = xi * xi;
  t5 = std::pow(xi, 3.0);
  t6 = zeta * zeta;
  t7 = std::pow(zeta, 3.0);
  t9 = eta * 18.0;
  t10 = eta * 27.0;
  t14 = zeta * 27.0;
  t29 = eta * 4.5;
  t30 = eta * 13.5;
  t31 = eta * 22.5;
  t33 = zeta * 4.5;
  t34 = zeta * 13.5;
  t35 = zeta * 22.5;
  t61_tmp = eta * zeta;
  t61 = t61_tmp * -4.5;
  t62 = t61_tmp * -22.5;
  t16 = t10 * zeta;
  t22 = t2 * 27.0;
  t24 = t6 * 27.0;
  t39 = t29 * zeta;
  t52 = t3 * 4.5;
  t53 = t2 * 13.5;
  t54 = t3 * 13.5;
  t55 = t5 * 4.5;
  t57 = t5 * 13.5;
  t58 = t7 * 4.5;
  t59 = t6 * 13.5;
  t60 = t7 * 13.5;
  t69 = t6 * t30;
  t70 = t2 * t34;
  t71 = t4 * t34;
  t72_tmp = eta * t6;
  t72 = t72_tmp * -13.5;
  t73_tmp = t2 * zeta;
  t73 = t73_tmp * -13.5;
  t74 = t4 * t30;
  sfvals_tmp = t30 + t34;
  sfvals[0] =
      (((((((((((eta * -5.5 + t2 * 9.0) + t6 * 9.0) - t52) - t55) - t58) +
            t72) +
           t73) -
          zeta * 5.5) -
         t4 * (sfvals_tmp - 9.0)) -
        xi * (((((-t9 - zeta * 18.0) + t16) + t53) + t59) + 5.5)) +
       t9 * zeta) +
      1.0;
  sfvals[1] = (t4 * -4.5 + t55) + xi;
  sfvals[2] = (eta - t2 * 4.5) + t52;
  sfvals[3] = (t6 * -4.5 + t58) + zeta;
  sfvals[4] = (t57 + t4 * ((t10 + t14) - 22.5)) +
              (((((t16 - t31) - t35) + t53) + t59) + 9.0) * xi;
  sfvals[5] = (-t57 - t4 * (sfvals_tmp - 18.0)) + ((t29 + t33) - 4.5) * xi;
  sfvals[6] = t74 - t29 * xi;
  sfvals_tmp = (-t29 + t53) * xi;
  sfvals[7] = sfvals_tmp;
  sfvals[8] = ((((t2 * 18.0 + t39) - t29) - t54) + t73) - sfvals_tmp;
  sfvals[9] =
      ((((((t2 * -22.5 + eta * 9.0) + t2 * t14) + t54) + t62) + t69) + t74) +
      ((t16 + t22) - t31) * xi;
  sfvals[10] =
      ((((((t6 * -22.5 + zeta * 9.0) + t6 * t10) + t60) + t62) + t70) + t71) +
      ((t16 + t24) - t35) * xi;
  sfvals_tmp = (-t33 + t59) * xi;
  sfvals[11] = ((((t6 * 18.0 + t39) - t33) - t60) + t72) - sfvals_tmp;
  sfvals[12] = t71 - t33 * xi;
  sfvals[13] = sfvals_tmp;
  sfvals[14] = t61 + t70;
  sfvals[15] = t61 + t69;
  sfvals[16] = eta * t4 * -27.0 - xi * ((t16 - t10) + t22);
  sfvals[17] = t4 * zeta * -27.0 - xi * ((t16 - t14) + t24);
  sfvals[18] = t16 * xi;
  sfvals[19] = ((t16 - t72_tmp * 27.0) + t61_tmp * -27.0 * xi) - t73_tmp * 27.0;
}

// tet_20_sfunc - Compute shape functions and their derivatives of tet_20
void tet_20_sfunc(double xi, double eta, double zeta, double sfvals[20],
                  double sdvals[60])
{
  double t10;
  double t11;
  double t12;
  double t13;
  double t14;
  double t15;
  double t16;
  double t17;
  double t2;
  double t22;
  double t23;
  double t24;
  double t25;
  double t25_tmp;
  double t26;
  double t27;
  double t28;
  double t29;
  double t3;
  double t30;
  double t31;
  double t32;
  double t33;
  double t34;
  double t35;
  double t39;
  double t4;
  double t41;
  double t44;
  double t5;
  double t52;
  double t53;
  double t54;
  double t55;
  double t56;
  double t57;
  double t58;
  double t59;
  double t6;
  double t60;
  double t61;
  double t62;
  double t64;
  double t66;
  double t68;
  double t69;
  double t7;
  double t70;
  double t71;
  double t72;
  double t72_tmp;
  double t73;
  double t73_tmp;
  double t74;
  double t76_tmp;
  double t78;
  double t79;
  double t8;
  double t80;
  double t81;
  double t82;
  double t83;
  double t87;
  double t88;
  double t89;
  double t9;
  double t90;
  double t91;
  double t92;
  double t94;
  double t95;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t4 = xi * xi;
  t5 = std::pow(xi, 3.0);
  t6 = zeta * zeta;
  t7 = std::pow(zeta, 3.0);
  t8 = eta * 9.0;
  t9 = eta * 18.0;
  t10 = eta * 27.0;
  t11 = eta * 54.0;
  t12 = zeta * 9.0;
  t13 = zeta * 18.0;
  t14 = zeta * 27.0;
  t15 = zeta * 54.0;
  t25_tmp = eta * zeta;
  t25 = t25_tmp * -27.0;
  t26 = t25_tmp * -54.0;
  t29 = eta * 4.5;
  t30 = eta * 13.5;
  t31 = eta * 22.5;
  t32 = xi * 4.5;
  t33 = zeta * 4.5;
  t34 = zeta * 13.5;
  t35 = zeta * 22.5;
  t61 = t25_tmp * -4.5;
  t62 = t25_tmp * -22.5;
  t16 = t10 * zeta;
  t17 = t11 * zeta;
  t22 = t2 * 27.0;
  t23 = t4 * 27.0;
  t24 = t6 * 27.0;
  t27 = t10 * xi;
  t28 = t14 * xi;
  t39 = t29 * zeta;
  t52 = t3 * 4.5;
  t53 = t2 * 13.5;
  t54 = t3 * 13.5;
  t55 = t5 * 4.5;
  t56 = t4 * 13.5;
  t57 = t5 * 13.5;
  t58 = t7 * 4.5;
  t59 = t6 * 13.5;
  t60 = t7 * 13.5;
  t64 = t2 * 40.5;
  t66 = t4 * 40.5;
  t68 = t6 * 40.5;
  t69 = t6 * t30;
  t70 = t2 * t34;
  t71 = t4 * t34;
  t72_tmp = eta * t6;
  t72 = t72_tmp * -13.5;
  t73_tmp = t2 * zeta;
  t73 = t73_tmp * -13.5;
  t74 = t4 * t30;
  t76_tmp = t10 + t14;
  t87 = (t29 + t33) - 4.5;
  t41 = -t10 * xi;
  t44 = -t14 * xi;
  t78 = -t29 + t53;
  t81 = -t32 + t56;
  t82 = -t33 + t59;
  t88 = (t16 + t22) - t31;
  t89 = (t16 + t24) - t35;
  t94 = ((((t16 - t31) - t35) + t53) + t59) + 9.0;
  t25_tmp = t30 + t34;
  sfvals[0] =
      (((((((((((eta * -5.5 + t2 * 9.0) + t6 * 9.0) - t52) - t55) - t58) +
            t72) +
           t73) -
          zeta * 5.5) -
         t4 * (t25_tmp - 9.0)) -
        xi * (((((-t9 - t13) + t16) + t53) + t59) + 5.5)) +
       t9 * zeta) +
      1.0;
  sfvals[1] = (t4 * -4.5 + t55) + xi;
  sfvals[2] = (eta - t2 * 4.5) + t52;
  sfvals[3] = (t6 * -4.5 + t58) + zeta;
  sfvals[4] = (t57 + t4 * (t76_tmp - 22.5)) + t94 * xi;
  sfvals[5] = (-t57 - t4 * (t25_tmp - 18.0)) + t87 * xi;
  sfvals[6] = t74 - t29 * xi;
  t25_tmp = t78 * xi;
  sfvals[7] = t25_tmp;
  sfvals[8] = ((((t2 * 18.0 + t39) - t29) - t54) + t73) - t25_tmp;
  sfvals[9] =
      ((((((t2 * -22.5 + t8) + t2 * t14) + t54) + t62) + t69) + t74) + t88 * xi;
  sfvals[10] = ((((((t6 * -22.5 + t12) + t6 * t10) + t60) + t62) + t70) + t71) +
               t89 * xi;
  t25_tmp = t82 * xi;
  sfvals[11] = ((((t6 * 18.0 + t39) - t33) - t60) + t72) - t25_tmp;
  sfvals[12] = t71 - t33 * xi;
  sfvals[13] = t25_tmp;
  sfvals[14] = t61 + t70;
  sfvals[15] = t61 + t69;
  sfvals[16] = eta * t4 * -27.0 - xi * ((t16 - t10) + t22);
  sfvals[17] = t4 * zeta * -27.0 - xi * ((t16 - t14) + t24);
  sfvals[18] = t16 * xi;
  sfvals[19] = ((t16 - t72_tmp * 27.0) + t25 * xi) - t73_tmp * 27.0;
  t79 = t29 - t53;
  t80 = t32 - t56;
  t83 = t33 - t59;
  t90 = t23 + (t76_tmp - 22.5) * xi;
  t91 = t27 + t88;
  t92 = t28 + t89;
  t95 = (-t56 + -xi * (t76_tmp - 18.0)) +
        (((((t9 + t13) + t25) - t53) - t59) - 5.5);
  sdvals[0] = t95;
  sdvals[1] = t95;
  sdvals[2] = t95;
  sdvals[3] = (t56 - 9.0 * xi) + 1.0;
  sdvals[4] = 0.0;
  sdvals[5] = 0.0;
  sdvals[6] = 0.0;
  sdvals[7] = (-t8 + t53) + 1.0;
  sdvals[8] = 0.0;
  sdvals[9] = 0.0;
  sdvals[10] = 0.0;
  sdvals[11] = (-t12 + t59) + 1.0;
  sdvals[12] = (t66 + t94) + xi * ((t11 + t15) - 45.0);
  sdvals[13] = t90;
  sdvals[14] = t90;
  sdvals[15] = (-t66 + t87) - xi * (t76_tmp - 36.0);
  sdvals[16] = t80;
  sdvals[17] = t80;
  sdvals[18] = t27 - t29;
  sdvals[19] = t81;
  sdvals[20] = 0.0;
  sdvals[21] = t78;
  t73_tmp = xi * (t10 - 4.5);
  sdvals[22] = t73_tmp;
  sdvals[23] = 0.0;
  sdvals[24] = t79;
  sdvals[25] = ((((eta * 36.0 + t25) + t33) - t64) - t73_tmp) - 4.5;
  sdvals[26] = t79;
  sdvals[27] = t91;
  t73_tmp = t11 + t14;
  sdvals[28] = ((((((eta * -45.0 + t17) - t35) + t56) + t59) + t64) +
                xi * (t73_tmp - 22.5)) +
               9.0;
  sdvals[29] = t91;
  sdvals[30] = t92;
  sdvals[31] = t92;
  t72_tmp = t10 + t15;
  sdvals[32] = ((((((t17 - t31) + t53) + t56) + t68) - zeta * 45.0) +
                xi * (t72_tmp - 22.5)) +
               9.0;
  sdvals[33] = t83;
  sdvals[34] = t83;
  t25_tmp = xi * (t14 - 4.5);
  sdvals[35] = ((((t25 + t29) - t68) + zeta * 36.0) - t25_tmp) - 4.5;
  sdvals[36] = t28 - t33;
  sdvals[37] = 0.0;
  sdvals[38] = t81;
  sdvals[39] = t82;
  sdvals[40] = 0.0;
  sdvals[41] = t25_tmp;
  sdvals[42] = 0.0;
  sdvals[43] = t16 - t33;
  sdvals[44] = t78;
  sdvals[45] = 0.0;
  sdvals[46] = t82;
  sdvals[47] = t16 - t29;
  sdvals[48] = ((t10 + t25) - t22) - t11 * xi;
  sdvals[49] = -t23 - xi * (t73_tmp - 27.0);
  sdvals[50] = t41;
  sdvals[51] = ((t14 + t25) - t24) - t15 * xi;
  sdvals[52] = t44;
  sdvals[53] = -t23 - xi * (t72_tmp - 27.0);
  sdvals[54] = t16;
  sdvals[55] = t28;
  sdvals[56] = t27;
  sdvals[57] = t25;
  sdvals[58] = ((t14 + t26) - t24) + t44;
  sdvals[59] = ((t10 + t26) - t22) + t41;
}

// tet_35_ncoords - Obtain nodal coordinates in master element for tet_35
void tet_35_ncoords(double natcoords[105])
{
  static const double dv[105]{
      0.0,  0.0,  0.0,  1.0,  0.0,  0.0,  0.0,  1.0,  0.0,  0.0,  0.0,  1.0,
      0.25, 0.0,  0.0,  0.5,  0.0,  0.0,  0.75, 0.0,  0.0,  0.75, 0.25, 0.0,
      0.5,  0.5,  0.0,  0.25, 0.75, 0.0,  0.0,  0.75, 0.0,  0.0,  0.5,  0.0,
      0.0,  0.25, 0.0,  0.0,  0.0,  0.25, 0.0,  0.0,  0.5,  0.0,  0.0,  0.75,
      0.75, 0.0,  0.25, 0.5,  0.0,  0.5,  0.25, 0.0,  0.75, 0.0,  0.75, 0.25,
      0.0,  0.5,  0.5,  0.0,  0.25, 0.75, 0.25, 0.25, 0.0,  0.5,  0.25, 0.0,
      0.25, 0.5,  0.0,  0.25, 0.0,  0.25, 0.5,  0.0,  0.25, 0.25, 0.0,  0.5,
      0.5,  0.25, 0.25, 0.25, 0.5,  0.25, 0.25, 0.25, 0.5,  0.0,  0.5,  0.25,
      0.0,  0.25, 0.25, 0.0,  0.25, 0.5,  0.25, 0.25, 0.25};
  std::copy(&dv[0], &dv[105], &natcoords[0]);
}

// tet_35_sfunc - Compute shape functions and their derivatives of tet_35
void tet_35_sfunc(double xi, double eta, double zeta, double sfvals[35])
{
  double sfvals_tmp;
  double t10;
  double t102;
  double t103;
  double t11;
  double t110;
  double t113;
  double t114;
  double t12;
  double t120;
  double t121;
  double t123;
  double t124;
  double t125;
  double t128;
  double t13;
  double t130;
  double t132;
  double t14;
  double t140;
  double t142;
  double t15;
  double t150;
  double t153;
  double t153_tmp;
  double t154;
  double t154_tmp;
  double t155;
  double t156;
  double t157;
  double t158;
  double t159;
  double t16;
  double t160;
  double t169;
  double t17;
  double t170;
  double t172;
  double t174;
  double t175;
  double t176;
  double t179;
  double t179_tmp;
  double t18;
  double t180;
  double t180_tmp;
  double t19;
  double t196;
  double t197;
  double t198;
  double t2;
  double t20;
  double t200;
  double t207;
  double t208;
  double t209;
  double t222;
  double t223;
  double t224;
  double t228;
  double t231;
  double t233;
  double t24;
  double t25;
  double t26;
  double t27;
  double t29;
  double t3;
  double t37;
  double t38;
  double t39;
  double t4;
  double t40;
  double t47;
  double t48;
  double t5;
  double t50;
  double t51;
  double t52;
  double t52_tmp;
  double t54;
  double t58;
  double t6;
  double t63;
  double t7;
  double t73;
  double t8;
  double t84;
  double t87;
  double t88;
  double t93;
  double t99;
  t2 = eta * 4.0;
  t3 = eta * eta;
  t4 = std::pow(eta, 3.0);
  t6 = xi * xi;
  t7 = std::pow(xi, 3.0);
  t10 = zeta * zeta;
  t11 = std::pow(zeta, 3.0);
  t13 = eta * 16.0;
  t14 = eta * 28.0;
  t15 = eta * 32.0;
  t16 = zeta * 16.0;
  t17 = zeta * 28.0;
  t18 = zeta * 32.0;
  t24 = eta * 96.0;
  t25 = eta * 128.0;
  t26 = eta * 160.0;
  t27 = eta * 192.0;
  t29 = eta * 256.0;
  t37 = zeta * 96.0;
  t38 = zeta * 128.0;
  t39 = zeta * 160.0;
  t40 = zeta * 192.0;
  t52_tmp = eta * zeta;
  t52 = t52_tmp * -32.0;
  t63 = eta * 5.333333333333333;
  t73 = zeta * 5.333333333333333;
  t113 = t52_tmp * -224.0;
  t114 = t52_tmp * -256.0;
  t123 = eta * 42.666666666666664;
  t124 = eta * 46.666666666666664;
  t125 = eta * 69.333333333333329;
  t128 = zeta * 42.666666666666664;
  t130 = zeta * 69.333333333333329;
  t150 = t52_tmp * -5.333333333333333;
  t176 = t52_tmp * -69.333333333333329;
  t5 = t3 * t3;
  t8 = t6 * t6;
  t12 = t10 * t10;
  t19 = t14 * zeta;
  t20 = t15 * zeta;
  t47 = t3 * 16.0;
  t48 = t3 * 32.0;
  t50 = t10 * 16.0;
  t51 = t10 * 32.0;
  t54 = t25 * zeta;
  t58 = t29 * zeta;
  t84 = t3 * 64.0;
  t87 = t3 * 128.0;
  t88 = t4 * 128.0;
  t93 = t3 * 256.0;
  t99 = t10 * 64.0;
  t102 = t10 * 128.0;
  t103 = t11 * 128.0;
  t110 = t63 * zeta;
  t120 = t10 * t15;
  t121 = t3 * t18;
  t153_tmp = eta * t10;
  t153 = t153_tmp * -16.0;
  t154_tmp = t3 * zeta;
  t154 = t154_tmp * -16.0;
  t155 = t10 * t25;
  t156 = t3 * t38;
  t157 = t11 * t25;
  t158 = t4 * t38;
  t159 = t10 * t29;
  t160 = t3 * (zeta * 256.0);
  t169 = t4 * 42.666666666666664;
  t174 = t11 * 42.666666666666664;
  t179_tmp = eta * t11;
  t179 = t179_tmp * -128.0;
  t180_tmp = t4 * zeta;
  t180 = t180_tmp * -128.0;
  t197 = t11 * t123;
  t198 = t4 * t128;
  t207 = t179_tmp * -42.666666666666664;
  t208 = t180_tmp * -42.666666666666664;
  t209 = t3 * t10 * -128.0;
  t132 = t5 * 10.666666666666666;
  t140 = t8 * 10.666666666666666;
  t142 = t12 * 10.666666666666666;
  t170 = t5 * 42.666666666666664;
  t172 = t8 * 42.666666666666664;
  t175 = t12 * 42.666666666666664;
  t196 = t6 * t54;
  t200 = t10 * t84;
  t222 = t20 + t154_tmp * -128.0;
  t223 = t52 + t155;
  t224 = t52 + t156;
  t228 = ((t25 - 16.0) + (t38 - 16.0)) - 48.0;
  t231 = t6 * (-t13 + t84);
  t233 = t6 * (-t16 + t99);
  sfvals_tmp = t123 + t128;
  sfvals[0] =
      (((((((((((((((((eta * -8.3333333333333339 + t3 * 23.333333333333332) -
                      t4 * 26.666666666666668) +
                     t10 * 23.333333333333332) -
                    t11 * 26.666666666666668) +
                   t132) +
                  t140) +
                 t142) +
                t197) +
               t198) +
              t200) -
             zeta * 8.3333333333333339) +
            t7 * (sfvals_tmp - 26.666666666666668)) +
           t6 * (((((eta * -80.0 + t54) + t84) + t99) - zeta * 80.0) +
                 23.333333333333332)) -
          t153_tmp * 80.0) +
         (((((((((t52_tmp * -160.0 + t124) + zeta * 46.666666666666664) -
                t3 * 80.0) -
               t10 * 80.0) +
              t155) +
             t156) +
            t169) +
           t174) -
          8.3333333333333339) *
             xi) -
        t154_tmp * 80.0) +
       t124 * zeta) +
      1.0;
  sfvals[1] = ((t6 * 7.333333333333333 - t7 * 16.0) + t140) - xi;
  sfvals[2] = ((-eta + t3 * 7.333333333333333) - t4 * 16.0) + t132;
  sfvals[3] = ((t10 * 7.333333333333333 - t11 * 16.0) + t142) - zeta;
  t180_tmp = t52_tmp * 192.0;
  sfvals[4] =
      ((-t172 -
        t6 * (((((-t27 - t40) + t58) + t87) + t102) + 69.333333333333329)) -
       t7 * (t228 - 16.0)) -
      xi * (((((((((-(t3 * 96.0) - t10 * 96.0) + t125) + t130) + t155) + t156) +
               t169) +
              t174) -
             t180_tmp) -
            16.0);
  sfvals[5] =
      ((t8 * 64.0 +
        t6 * (((((eta * -144.0 + t54) + t84) + t99) - zeta * 144.0) + 76.0)) -
       xi * (((((-t14 - t17) + t20) + t47) + t50) + 12.0)) +
      t7 * (t228 - 48.0);
  sfvals[6] = ((-t172 + t6 * ((t15 + t18) - 37.333333333333336)) -
               t7 * (sfvals_tmp - 74.666666666666671)) -
              xi * ((t63 + t73) - 5.333333333333333);
  sfvals[7] = (eta * t6 * -32.0 + t7 * t123) + t63 * xi;
  sfvals[8] = t231 + (t2 - t47) * xi;
  sfvals_tmp = ((t63 - t48) + t169) * xi;
  sfvals[9] = sfvals_tmp;
  sfvals[10] =
      ((((((t3 * -37.333333333333336 + t4 * 74.666666666666671) + t63) + t121) +
         t150) -
        t170) +
       t208) -
      sfvals_tmp;
  sfvals[11] =
      (((((((((eta * -12.0 + t3 * 76.0) + t5 * 64.0) + t19) - t88) + t153) +
          t158) +
         t200) +
        t231) +
       (((t14 + t88) - t3 * 144.0) + t224) * xi) -
      t154_tmp * 144.0;
  sfvals_tmp = eta * t7;
  sfvals[12] =
      (((((((((((t3 * -69.333333333333329 + t4 * 96.0) + t13) + t176) + t180) -
             t170) +
            t207) +
           t209) -
          xi * (((((t88 - t3 * 192.0) + t125) + t155) + t160) - t180_tmp)) -
         sfvals_tmp * 42.666666666666664) +
        t10 * t24) +
       t3 * t40) -
      t6 * ((-t24 + t54) + t87);
  t179_tmp = t7 * zeta;
  sfvals[13] =
      (((((((((((t10 * -69.333333333333329 + t11 * 96.0) + t16) + t176) +
              t179) -
             t175) +
            t208) +
           t209) -
          xi * (((((t103 - t10 * 192.0) + t130) + t156) + t159) - t180_tmp)) +
         t10 * t27) +
        t3 * t37) -
       t179_tmp * 42.666666666666664) -
      t6 * ((-t37 + t54) + t102);
  sfvals[14] =
      (((((((((t10 * 76.0 + t12 * 64.0) + t19) - t103) + t154) + t157) + t200) +
         t233) -
        zeta * 12.0) -
       t153_tmp * 144.0) +
      (((t17 + t103) - t10 * 144.0) + t223) * xi;
  t180_tmp = ((t73 - t51) + t174) * xi;
  sfvals[15] =
      ((((((t10 * -37.333333333333336 + t11 * 74.666666666666671) + t73) +
          t120) +
         t150) -
        t175) +
       t207) -
      t180_tmp;
  sfvals[16] = (t7 * t128 + t73 * xi) - t6 * zeta * 32.0;
  sfvals[17] = t233 + (zeta * 4.0 - t50) * xi;
  sfvals[18] = t180_tmp;
  sfvals[19] = (t110 + t198) - t154_tmp * 32.0;
  sfvals[20] = ((t153 + t154) + t200) + t2 * zeta;
  sfvals[21] = (t110 + t197) - t153_tmp * 32.0;
  sfvals[22] = (t7 * t25 + t6 * ((t58 - eta * 224.0) + t93)) +
               (((((t24 + t88) + t113) - t3 * 224.0) + t155) + t160) * xi;
  sfvals[23] = (sfvals_tmp * -128.0 + ((t20 - t15) + t48) * xi) -
               t6 * ((t54 - t26) + t87);
  sfvals[24] = -t6 * (-t15 + t87) - xi * (((t15 + t88) - t3 * 160.0) + t224);
  sfvals[25] = (t7 * t38 + t6 * ((t58 - zeta * 224.0) + t10 * 256.0)) +
               (((((t37 + t103) + t113) - t10 * 224.0) + t156) + t159) * xi;
  sfvals[26] =
      (((t20 - t18) + t51) * xi - t179_tmp * 128.0) - t6 * ((t54 - t39) + t102);
  sfvals[27] = -t6 * (-t18 + t102) - xi * (((t18 + t103) - t10 * 160.0) + t223);
  sfvals[28] = t196 + t52 * xi;
  sfvals[29] = -t222 * xi;
  sfvals_tmp = t52_tmp * 32.0 + t10 * -t25;
  sfvals[30] = -xi * sfvals_tmp;
  sfvals[31] = ((((t52 + t120) + t180) + t209) + t3 * t39) + t222 * xi;
  sfvals[32] = ((((((t157 + t158) + t196) - t153_tmp * 224.0) + t10 * t93) +
                 ((t113 + t159) + t160) * xi) -
                t154_tmp * 224.0) +
               t24 * zeta;
  sfvals[33] = ((((t52 + t121) + t179) + t209) + t10 * t26) + xi * sfvals_tmp;
  sfvals[34] = t6 * t114 - xi * ((t114 + t159) + t160);
}

// tet_35_sfunc - Compute shape functions and their derivatives of tet_35
void tet_35_sfunc(double xi, double eta, double zeta, double sfvals[35],
                  double sdvals[105])
{
  double b_sfvals_tmp;
  double sfvals_tmp;
  double t10;
  double t101;
  double t102;
  double t103;
  double t105;
  double t106;
  double t107;
  double t108;
  double t109;
  double t11;
  double t110;
  double t113;
  double t114;
  double t115;
  double t116;
  double t117;
  double t12;
  double t120;
  double t121;
  double t123;
  double t124;
  double t125;
  double t128;
  double t13;
  double t130;
  double t131;
  double t132;
  double t14;
  double t140;
  double t142;
  double t15;
  double t150;
  double t153;
  double t153_tmp;
  double t154;
  double t154_tmp;
  double t155;
  double t156;
  double t157;
  double t158;
  double t159;
  double t16;
  double t160;
  double t161;
  double t162;
  double t167;
  double t169;
  double t17;
  double t170;
  double t171;
  double t172;
  double t174;
  double t175;
  double t176;
  double t177;
  double t178;
  double t179;
  double t179_tmp;
  double t18;
  double t180;
  double t180_tmp;
  double t181;
  double t182;
  double t183;
  double t184;
  double t185;
  double t186;
  double t186_tmp;
  double t189;
  double t19;
  double t192;
  double t195;
  double t196;
  double t197;
  double t198;
  double t199;
  double t199_tmp;
  double t2;
  double t20;
  double t200;
  double t205;
  double t206;
  double t207;
  double t208;
  double t209;
  double t211;
  double t213;
  double t214;
  double t216;
  double t219;
  double t221;
  double t222;
  double t223;
  double t224;
  double t225;
  double t228;
  double t23;
  double t231;
  double t232;
  double t233;
  double t234;
  double t239;
  double t24;
  double t240;
  double t244;
  double t246;
  double t247;
  double t248;
  double t249;
  double t25;
  double t250;
  double t251;
  double t254;
  double t255;
  double t26;
  double t262;
  double t263;
  double t263_tmp;
  double t264;
  double t264_tmp;
  double t267;
  double t268;
  double t269;
  double t27;
  double t270;
  double t272;
  double t273;
  double t274;
  double t28;
  double t29;
  double t3;
  double t30;
  double t31;
  double t32;
  double t33;
  double t36;
  double t37;
  double t38;
  double t39;
  double t4;
  double t40;
  double t41;
  double t42;
  double t43;
  double t44;
  double t45;
  double t46;
  double t47;
  double t48;
  double t49;
  double t5;
  double t50;
  double t51;
  double t52;
  double t52_tmp;
  double t53;
  double t54;
  double t56;
  double t58;
  double t6;
  double t60;
  double t61;
  double t63;
  double t7;
  double t72;
  double t73;
  double t8;
  double t84;
  double t86;
  double t87;
  double t88;
  double t90;
  double t91;
  double t92;
  double t93;
  double t94;
  double t96;
  double t99;
  t2 = eta * 4.0;
  t3 = eta * eta;
  t4 = std::pow(eta, 3.0);
  t6 = xi * xi;
  t7 = std::pow(xi, 3.0);
  t10 = zeta * zeta;
  t11 = std::pow(zeta, 3.0);
  t13 = eta * 16.0;
  t14 = eta * 28.0;
  t15 = eta * 32.0;
  t16 = zeta * 16.0;
  t17 = zeta * 28.0;
  t18 = zeta * 32.0;
  t23 = eta * 64.0;
  t24 = eta * 96.0;
  t25 = eta * 128.0;
  t26 = eta * 160.0;
  t27 = eta * 192.0;
  t28 = eta * 224.0;
  t29 = eta * 256.0;
  t30 = eta * 288.0;
  t31 = eta * 320.0;
  t32 = eta * 384.0;
  t33 = eta * 448.0;
  t36 = zeta * 64.0;
  t37 = zeta * 96.0;
  t38 = zeta * 128.0;
  t39 = zeta * 160.0;
  t40 = zeta * 192.0;
  t41 = zeta * 224.0;
  t42 = zeta * 256.0;
  t43 = zeta * 288.0;
  t44 = zeta * 320.0;
  t45 = zeta * 384.0;
  t46 = zeta * 448.0;
  t52_tmp = eta * zeta;
  t52 = t52_tmp * -32.0;
  t63 = eta * 5.333333333333333;
  t72 = xi * 5.333333333333333;
  t73 = zeta * 5.333333333333333;
  t113 = t52_tmp * -224.0;
  t114 = t52_tmp * -256.0;
  t115 = t52_tmp * -288.0;
  t116 = t52_tmp * -448.0;
  t117 = t52_tmp * 512.0;
  t123 = eta * 42.666666666666664;
  t124 = eta * 46.666666666666664;
  t125 = eta * 69.333333333333329;
  t128 = zeta * 42.666666666666664;
  t130 = zeta * 69.333333333333329;
  t150 = t52_tmp * -5.333333333333333;
  t176 = t52_tmp * -69.333333333333329;
  t5 = t3 * t3;
  t8 = t6 * t6;
  t12 = t10 * t10;
  t19 = t14 * zeta;
  t20 = t15 * zeta;
  t47 = t3 * 16.0;
  t48 = t3 * 32.0;
  t49 = t6 * 32.0;
  t50 = t10 * 16.0;
  t51 = t10 * 32.0;
  t53 = t23 * zeta;
  t54 = t25 * zeta;
  t56 = t27 * zeta;
  t58 = t29 * zeta;
  t60 = t31 * zeta;
  t61 = t32 * zeta;
  t84 = t3 * 64.0;
  t86 = t3 * 96.0;
  t87 = t3 * 128.0;
  t88 = t4 * 128.0;
  t90 = t3 * 160.0;
  t91 = t3 * 192.0;
  t92 = t3 * 224.0;
  t93 = t3 * 256.0;
  t94 = t3 * 384.0;
  t96 = t7 * 128.0;
  t99 = t10 * 64.0;
  t101 = t10 * 96.0;
  t102 = t10 * 128.0;
  t103 = t11 * 128.0;
  t105 = t10 * 160.0;
  t106 = t10 * 192.0;
  t107 = t10 * 224.0;
  t108 = t10 * 256.0;
  t109 = t10 * 384.0;
  t110 = t63 * zeta;
  t120 = t10 * t15;
  t121 = t3 * t18;
  t153_tmp = eta * t10;
  t153 = t153_tmp * -16.0;
  t154_tmp = t3 * zeta;
  t154 = t154_tmp * -16.0;
  t155 = t10 * t25;
  t156 = t3 * t38;
  t157 = t11 * t25;
  t158 = t4 * t38;
  t159 = t10 * t29;
  t160 = t3 * t42;
  t161 = t10 * t32;
  t162 = t3 * t45;
  t167 = t6 * t38;
  t169 = t4 * 42.666666666666664;
  t171 = t7 * 42.666666666666664;
  t174 = t11 * 42.666666666666664;
  t177 = t153_tmp * -128.0;
  t178 = t154_tmp * -128.0;
  t179_tmp = eta * t11;
  t179 = t179_tmp * -128.0;
  t180_tmp = t4 * zeta;
  t180 = t180_tmp * -128.0;
  t181 = t153_tmp * -256.0;
  t182 = t154_tmp * -256.0;
  t183 = t153_tmp * -384.0;
  t184 = t154_tmp * -384.0;
  t185 = t6 * t25;
  t186_tmp = t6 * zeta;
  t186 = t186_tmp * -128.0;
  t189 = t4 * 170.66666666666666;
  t192 = t7 * 170.66666666666666;
  t195 = t11 * 170.66666666666666;
  t197 = t11 * t123;
  t198 = t4 * t128;
  t199_tmp = eta * t6;
  t199 = t199_tmp * -128.0;
  t207 = t179_tmp * -42.666666666666664;
  t208 = t180_tmp * -42.666666666666664;
  t209 = t3 * t10 * -128.0;
  t131 = t58 * xi;
  t132 = t5 * 10.666666666666666;
  t140 = t8 * 10.666666666666666;
  t142 = t12 * 10.666666666666666;
  t170 = t5 * 42.666666666666664;
  t172 = t8 * 42.666666666666664;
  t175 = t12 * 42.666666666666664;
  t196 = t6 * t54;
  t200 = t10 * t84;
  t211 = -t15 + t87;
  t213 = t6 * (t25 - 16.0);
  t214 = t6 * (t38 - 16.0);
  t216 = -t18 + t102;
  t221 = t20 + t177;
  t222 = t20 + t178;
  t223 = t52 + t155;
  t224 = t52 + t156;
  t228 = ((t25 - 16.0) + (t38 - 16.0)) - 48.0;
  t232 = (t20 - t15) + t48;
  t234 = (t20 - t18) + t51;
  t239 = (t58 - t28) + t93;
  t240 = (t58 - t41) + t108;
  t251 = (t113 + t159) + t160;
  t205 = t2 - t47;
  t206 = zeta * 4.0 - t50;
  t219 = t211 * xi;
  t225 = t216 * xi;
  t231 = t6 * (-t13 + t84);
  t233 = t6 * (-t16 + t99);
  t244 = (t63 - t48) + t169;
  t246 = (t72 - t49) + t171;
  t247 = (t73 - t51) + t174;
  t248 = (t48 - t63) - t169;
  t249 = (t49 - t72) - t171;
  t250 = (t51 - t73) - t174;
  t254 = ((t14 + t88) - t3 * 144.0) + t224;
  t255 = ((t17 + t103) - t10 * 144.0) + t223;
  t263_tmp = t37 + t103;
  t263 = (((t263_tmp + t113) - t107) + t156) + t159;
  t264_tmp = t24 + t88;
  t264 = (((t264_tmp + t113) - t92) + t155) + t160;
  t180_tmp = ((((-t27 - t40) + t58) + t87) + t102) + 69.333333333333329;
  t269 = (-t96 + -t6 * ((t29 + t42) - 192.0)) + -xi * t180_tmp;
  t270 = ((((((((t52_tmp * -160.0 + t124) + zeta * 46.666666666666664) -
               t3 * 80.0) -
              t10 * 80.0) +
             t155) +
            t156) +
           t169) +
          t174) -
         8.3333333333333339;
  sfvals_tmp = t123 + t128;
  sfvals[0] =
      (((((((((((((((((eta * -8.3333333333333339 + t3 * 23.333333333333332) -
                      t4 * 26.666666666666668) +
                     t10 * 23.333333333333332) -
                    t11 * 26.666666666666668) +
                   t132) +
                  t140) +
                 t142) +
                t197) +
               t198) +
              t200) -
             zeta * 8.3333333333333339) +
            t7 * (sfvals_tmp - 26.666666666666668)) +
           t6 * (((((eta * -80.0 + t54) + t84) + t99) - zeta * 80.0) +
                 23.333333333333332)) -
          t153_tmp * 80.0) +
         t270 * xi) -
        t154_tmp * 80.0) +
       t124 * zeta) +
      1.0;
  sfvals[1] = ((t6 * 7.333333333333333 - t7 * 16.0) + t140) - xi;
  sfvals[2] = ((-eta + t3 * 7.333333333333333) - t4 * 16.0) + t132;
  sfvals[3] = ((t10 * 7.333333333333333 - t11 * 16.0) + t142) - zeta;
  t179_tmp = t52_tmp * 192.0;
  sfvals[4] =
      ((-t172 - t6 * t180_tmp) - t7 * (t228 - 16.0)) -
      xi * (((((((((-t86 - t101) + t125) + t130) + t155) + t156) + t169) +
              t174) -
             t179_tmp) -
            16.0);
  sfvals[5] =
      ((t8 * 64.0 +
        t6 * (((((eta * -144.0 + t54) + t84) + t99) - zeta * 144.0) + 76.0)) -
       xi * (((((-t14 - t17) + t20) + t47) + t50) + 12.0)) +
      t7 * (t228 - 48.0);
  t180_tmp = t15 + t18;
  sfvals[6] = ((-t172 + t6 * (t180_tmp - 37.333333333333336)) -
               t7 * (sfvals_tmp - 74.666666666666671)) -
              xi * ((t63 + t73) - 5.333333333333333);
  sfvals[7] = (t199_tmp * -32.0 + t7 * t123) + t63 * xi;
  sfvals[8] = t231 + t205 * xi;
  sfvals_tmp = t244 * xi;
  sfvals[9] = sfvals_tmp;
  sfvals[10] =
      ((((((t3 * -37.333333333333336 + t4 * 74.666666666666671) + t63) + t121) +
         t150) -
        t170) +
       t208) -
      sfvals_tmp;
  sfvals[11] =
      (((((((((eta * -12.0 + t3 * 76.0) + t5 * 64.0) + t19) - t88) + t153) +
          t158) +
         t200) +
        t231) +
       t254 * xi) -
      t154_tmp * 144.0;
  sfvals_tmp = eta * t7;
  sfvals[12] =
      (((((((((((t3 * -69.333333333333329 + t4 * 96.0) + t13) + t176) + t180) -
             t170) +
            t207) +
           t209) -
          xi * (((((t88 - t91) + t125) + t155) + t160) - t179_tmp)) -
         sfvals_tmp * 42.666666666666664) +
        t10 * t24) +
       t3 * t40) -
      t6 * ((-t24 + t54) + t87);
  b_sfvals_tmp = t7 * zeta;
  sfvals[13] =
      (((((((((((t10 * -69.333333333333329 + t11 * 96.0) + t16) + t176) +
              t179) -
             t175) +
            t208) +
           t209) -
          xi * (((((t103 - t106) + t130) + t156) + t159) - t179_tmp)) +
         t10 * t27) +
        t3 * t37) -
       b_sfvals_tmp * 42.666666666666664) -
      t6 * ((-t37 + t54) + t102);
  sfvals[14] =
      (((((((((t10 * 76.0 + t12 * 64.0) + t19) - t103) + t154) + t157) + t200) +
         t233) -
        zeta * 12.0) -
       t153_tmp * 144.0) +
      t255 * xi;
  t179_tmp = t247 * xi;
  sfvals[15] =
      ((((((t10 * -37.333333333333336 + t11 * 74.666666666666671) + t73) +
          t120) +
         t150) -
        t175) +
       t207) -
      t179_tmp;
  sfvals[16] = (t7 * t128 + t73 * xi) - t186_tmp * 32.0;
  sfvals[17] = t233 + t206 * xi;
  sfvals[18] = t179_tmp;
  sfvals[19] = (t110 + t198) - t154_tmp * 32.0;
  sfvals[20] = ((t153 + t154) + t200) + t2 * zeta;
  sfvals[21] = (t110 + t197) - t153_tmp * 32.0;
  sfvals[22] = (t7 * t25 + t6 * t239) + t264 * xi;
  sfvals[23] = (sfvals_tmp * -128.0 + t232 * xi) - t6 * ((t54 - t26) + t87);
  sfvals[24] = -t6 * t211 - xi * (((t15 + t88) - t90) + t224);
  sfvals[25] = (t7 * t38 + t6 * t240) + t263 * xi;
  sfvals[26] = (t234 * xi - b_sfvals_tmp * 128.0) - t6 * ((t54 - t39) + t102);
  sfvals[27] = -t6 * t216 - xi * (((t18 + t103) - t105) + t223);
  sfvals[28] = t196 + t52 * xi;
  sfvals[29] = -t222 * xi;
  sfvals_tmp = t52_tmp * 32.0 + t10 * -t25;
  sfvals[30] = -xi * sfvals_tmp;
  sfvals[31] = ((((t52 + t120) + t180) + t209) + t3 * t39) + t222 * xi;
  sfvals[32] =
      ((((((t157 + t158) + t196) - t153_tmp * 224.0) + t10 * t93) + t251 * xi) -
       t154_tmp * 224.0) +
      t24 * zeta;
  sfvals[33] = ((((t52 + t121) + t179) + t209) + t10 * t26) + xi * sfvals_tmp;
  sfvals[34] = t6 * t114 - xi * ((t114 + t159) + t160);
  t267 = t225 + t255;
  t268 = t219 + t254;
  t272 = (t186 + -xi * ((-t40 + t58) + t108)) +
         (((((t56 + t106) - t103) - t130) + t178) + t181);
  t273 = (t199 + -xi * ((-t27 + t58) + t93)) +
         (((((t56 + t91) - t88) - t125) + t177) + t182);
  t274 = ((t171 + t6 * t228) +
          (((((t58 - t26) - t39) + t87) + t102) + 46.666666666666664) * xi) +
         t270;
  t262 = (t96 + -xi * (t180_tmp - 28.0)) + t6 * (t228 - 64.0);
  sdvals[0] = t274;
  sdvals[1] = t274;
  sdvals[2] = t274;
  sdvals[3] = ((t6 * -48.0 + t171) + 14.666666666666666 * xi) - 1.0;
  sdvals[4] = 0.0;
  sdvals[5] = 0.0;
  sdvals[6] = 0.0;
  sdvals[7] = ((eta * 14.666666666666666 - t3 * 48.0) + t169) - 1.0;
  sdvals[8] = 0.0;
  sdvals[9] = 0.0;
  sdvals[10] = 0.0;
  sdvals[11] = ((t10 * -48.0 + t174) + zeta * 14.666666666666666) - 1.0;
  b_sfvals_tmp = t32 + t45;
  sdvals[12] =
      ((-t192 +
        (((((((((t56 + t86) + t101) - t125) - t130) + t177) + t178) - t169) -
          t174) +
         16.0)) -
       t6 * (b_sfvals_tmp - 288.0)) -
      xi * (((((-t32 - t45) + t93) + t108) + t117) + 138.66666666666666);
  sdvals[13] = t269;
  sdvals[14] = t269;
  sdvals[15] = ((t7 * 256.0 + (((((t14 + t17) + t52) - t47) - t50) - 12.0)) +
                t6 * (b_sfvals_tmp - 384.0)) +
               xi * (((((t58 - t30) - t43) + t87) + t102) + 152.0);
  sdvals[16] = t262;
  sdvals[17] = t262;
  sdvals[18] = ((-t192 + ((-t63 - t73) + 5.333333333333333)) +
                xi * ((t23 + t36) - 74.666666666666671)) -
               t6 * ((t228 - 64.0) - 80.0);
  sdvals[19] = t249;
  sdvals[20] = t249;
  sdvals[21] = (t63 + t185) - t23 * xi;
  sdvals[22] = t246;
  sdvals[23] = 0.0;
  sdvals[24] = t205 + t219;
  sdvals[25] = t213 - xi * (t15 - 4.0);
  sdvals[26] = 0.0;
  sdvals[27] = t244;
  b_sfvals_tmp = xi * ((-t23 + t87) + 5.333333333333333);
  sdvals[28] = b_sfvals_tmp;
  sdvals[29] = 0.0;
  sdvals[30] = t248;
  sdvals[31] =
      ((((((eta * -74.666666666666671 + t53) + t92) - t73) + t178) - t189) -
       b_sfvals_tmp) +
      5.333333333333333;
  sdvals[32] = t248;
  sdvals[33] = t268;
  sdvals[34] =
      (((((((((eta * 152.0 + t4 * 256.0) + t17) - t50) + t115) - t94) + t155) +
         t162) +
        t213) +
       xi * ((((-t18 + t58) - t30) + t94) + 28.0)) -
      12.0;
  sdvals[35] = t268;
  sdvals[36] = t273;
  b_sfvals_tmp = t29 + (t38 - 16.0);
  sdvals[37] =
      (((((((((((eta * -138.66666666666666 + t3 * 288.0) + t61) + t101) -
              t130) +
             t181) +
            t184) -
           t171) -
          t174) -
         t189) -
        t6 * (b_sfvals_tmp - 80.0)) -
       xi * (((((-t40 - t32) + t94) + t102) + t117) + 69.333333333333329)) +
      16.0;
  sdvals[38] = t273;
  sdvals[39] = t272;
  sdvals[40] = t272;
  t180_tmp = t42 + (t25 - 16.0);
  sdvals[41] =
      (((((((((((t10 * 288.0 + t61) + t86) - t125) + t182) + t183) - t169) -
           t171) -
          t195) -
         zeta * 138.66666666666666) -
        t6 * (t180_tmp - 80.0)) -
       xi * (((((-t27 - t45) + t87) + t109) + t117) + 69.333333333333329)) +
      16.0;
  sdvals[42] = t267;
  sdvals[43] = t267;
  sdvals[44] =
      (((((((((t11 * 256.0 + t14) - t47) + t115) - t109) + t156) + t161) +
         t214) +
        zeta * 152.0) +
       xi * ((((-t15 + t58) - t43) + t109) + 28.0)) -
      12.0;
  sdvals[45] = t250;
  sdvals[46] = t250;
  t179_tmp = xi * ((-t36 + t102) + 5.333333333333333);
  sdvals[47] =
      ((((((t53 + t107) - t63) + t177) - t195) - zeta * 74.666666666666671) -
       t179_tmp) +
      5.333333333333333;
  sdvals[48] = (t73 + t167) - t36 * xi;
  sdvals[49] = 0.0;
  sdvals[50] = t246;
  sdvals[51] = t206 + t225;
  sdvals[52] = 0.0;
  sdvals[53] = t214 - xi * (t18 - 4.0);
  sdvals[54] = t247;
  sdvals[55] = 0.0;
  sdvals[56] = t179_tmp;
  sdvals[57] = 0.0;
  sdvals[58] = (t73 + t156) - 64.0 * zeta * eta;
  sdvals[59] = t244;
  sdvals[60] = 0.0;
  sdvals[61] = t206 + t223;
  sdvals[62] = t205 + t224;
  sdvals[63] = 0.0;
  sdvals[64] = t247;
  sdvals[65] = (t63 + t155) - 64.0 * eta * zeta;
  sdvals[66] = (t264 + t6 * t32) + xi * ((t3 * 512.0 - t33) + t117);
  sdvals[67] = (t96 + t6 * ((eta * 512.0 + t42) - 224.0)) +
               xi * (((((-t33 - t41) + t94) + t102) + t117) + 96.0);
  sdvals[68] = t6 * t29 + t239 * xi;
  sdvals[69] = (t232 - t199_tmp * 384.0) - xi * ((-t31 + t58) + t93);
  sdvals[70] = (-t96 - t6 * (b_sfvals_tmp - 144.0)) + xi * ((t18 + t23) - 32.0);
  b_sfvals_tmp = t15 * xi;
  sdvals[71] = t199 + b_sfvals_tmp;
  sdvals[72] = (((-t15 + t90) - t88) + t222) - xi * (-t23 + t93);
  sdvals[73] = -xi * ((((-t31 - t18) + t58) + t94) + 32.0) - t6 * (t29 - 32.0);
  sdvals[74] = -t219;
  sdvals[75] = (t263 + t6 * t45) + xi * ((t10 * 512.0 - t46) + t117);
  sdvals[76] = t6 * t42 + t240 * xi;
  sdvals[77] = (t96 + xi * (((((-t28 - t46) + t87) + t109) + t117) + 96.0)) +
               t6 * ((t29 + zeta * 512.0) - 224.0);
  sdvals[78] = (t234 - t186_tmp * 384.0) - xi * ((-t44 + t58) + t108);
  t179_tmp = t18 * xi;
  sdvals[79] = t186 + t179_tmp;
  sdvals[80] = (-t96 - t6 * (t180_tmp - 144.0)) + xi * ((t15 + t36) - 32.0);
  sdvals[81] = (((-t18 + t105) - t103) + t221) - xi * (-t36 + t108);
  sdvals[82] = -t225;
  sdvals[83] = -xi * ((((-t15 - t44) + t58) + t109) + 32.0) - t6 * (t42 - 32.0);
  sdvals[84] = t52 + t131;
  sdvals[85] = t167 - t179_tmp;
  sdvals[86] = t185 - b_sfvals_tmp;
  sdvals[87] = t224;
  b_sfvals_tmp = t18 + t114;
  sdvals[88] = -xi * b_sfvals_tmp;
  sdvals[89] = t219;
  sdvals[90] = t223;
  sdvals[91] = t225;
  t180_tmp = t15 + t114;
  sdvals[92] = -xi * t180_tmp;
  sdvals[93] = t222;
  sdvals[94] = ((((-t18 + t51) + t60) + t181) + t184) + xi * b_sfvals_tmp;
  sdvals[95] = ((((-t15 + t53) + t90) - t88) + t182) - t219;
  sdvals[96] = t131 + t251;
  sdvals[97] =
      (((((t263_tmp + t116) - t107) + t162) + t167) + t153_tmp * 512.0) +
      xi * ((-t41 + t108) + t117);
  sdvals[98] =
      (((((t264_tmp + t116) - t92) + t161) + t185) + t154_tmp * 512.0) +
      xi * ((-t28 + t93) + t117);
  sdvals[99] = t221;
  sdvals[100] = ((((-t18 + t53) + t105) - t103) + t181) - t225;
  sdvals[101] = ((((-t15 + t48) + t60) + t182) + t183) + xi * t180_tmp;
  sdvals[102] = ((t58 + t181) + t182) - t117 * xi;
  sdvals[103] = t186_tmp * -256.0 - xi * ((-t42 + t108) + t117);
  sdvals[104] = t199_tmp * -256.0 - xi * ((-t29 + t93) + t117);
}

// tet_4_ncoords - Obtain nodal coordinates in master element for tet_4
void tet_4_ncoords(double natcoords[12])
{
  static const signed char b_iv[12]{0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1};
  for (int i{0}; i < 12; i++) {
    natcoords[i] = b_iv[i];
  }
}

// tet_4_sfunc - Compute shape functions and their derivatives of tet_4
static inline void tet_4_sfunc(double xi, double eta, double zeta,
                               double sfvals[4])
{
  sfvals[0] = -xi + ((1.0 - zeta) - eta);
  sfvals[1] = xi;
  sfvals[2] = eta;
  sfvals[3] = zeta;
}

// tet_4_sfunc - Compute shape functions and their derivatives of tet_4
void tet_4_sfunc(double xi, double eta, double zeta, double sfvals[4],
                 double sdvals[12])
{
  static const signed char b_iv[12]{-1, -1, -1, 1, 0, 0, 0, 1, 0, 0, 0, 1};
  sfvals[0] = -xi + ((1.0 - zeta) - eta);
  sfvals[1] = xi;
  sfvals[2] = eta;
  sfvals[3] = zeta;
  for (int i{0}; i < 12; i++) {
    sdvals[i] = b_iv[i];
  }
}

// tet_56_ncoords - Obtain nodal coordinates in master element for tet_56
void tet_56_ncoords(double natcoords[168])
{
  static const double dv[168]{
      0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.2, 0.0,
      0.0, 0.4, 0.0, 0.0, 0.6, 0.0, 0.0, 0.8, 0.0, 0.0, 0.8, 0.2, 0.0, 0.6,
      0.4, 0.0, 0.4, 0.6, 0.0, 0.2, 0.8, 0.0, 0.0, 0.8, 0.0, 0.0, 0.6, 0.0,
      0.0, 0.4, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.4, 0.0, 0.0,
      0.6, 0.0, 0.0, 0.8, 0.8, 0.0, 0.2, 0.6, 0.0, 0.4, 0.4, 0.0, 0.6, 0.2,
      0.0, 0.8, 0.0, 0.8, 0.2, 0.0, 0.6, 0.4, 0.0, 0.4, 0.6, 0.0, 0.2, 0.8,
      0.2, 0.2, 0.0, 0.4, 0.2, 0.0, 0.6, 0.2, 0.0, 0.4, 0.4, 0.0, 0.2, 0.6,
      0.0, 0.2, 0.4, 0.0, 0.2, 0.0, 0.2, 0.4, 0.0, 0.2, 0.6, 0.0, 0.2, 0.4,
      0.0, 0.4, 0.2, 0.0, 0.6, 0.2, 0.0, 0.4, 0.6, 0.2, 0.2, 0.4, 0.4, 0.2,
      0.2, 0.6, 0.2, 0.2, 0.4, 0.4, 0.2, 0.2, 0.6, 0.4, 0.2, 0.4, 0.0, 0.6,
      0.2, 0.0, 0.4, 0.2, 0.0, 0.2, 0.2, 0.0, 0.2, 0.4, 0.0, 0.2, 0.6, 0.0,
      0.4, 0.4, 0.2, 0.2, 0.2, 0.4, 0.2, 0.2, 0.2, 0.4, 0.2, 0.2, 0.2, 0.4};
  std::copy(&dv[0], &dv[168], &natcoords[0]);
}

// tet_56_sfunc - Compute shape functions and their derivatives of tet_56
void tet_56_sfunc(double xi, double eta, double zeta, double sfvals[56])
{
  double b_sfvals_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double h_sfvals_tmp;
  double sfvals_tmp;
  double t10;
  double t102;
  double t11;
  double t113;
  double t114;
  double t116;
  double t12;
  double t121;
  double t123;
  double t124;
  double t13;
  double t130;
  double t138;
  double t139;
  double t14;
  double t141;
  double t146;
  double t148;
  double t149;
  double t15;
  double t16;
  double t161;
  double t166;
  double t169;
  double t17;
  double t173;
  double t175;
  double t178;
  double t181;
  double t182;
  double t188;
  double t19;
  double t199;
  double t2;
  double t200;
  double t207;
  double t208;
  double t210;
  double t212;
  double t218;
  double t229;
  double t23;
  double t230;
  double t232;
  double t234;
  double t240;
  double t25;
  double t251;
  double t253;
  double t254;
  double t257;
  double t259;
  double t26;
  double t260;
  double t261;
  double t262;
  double t264;
  double t265;
  double t266;
  double t267;
  double t268;
  double t269;
  double t271;
  double t273;
  double t277;
  double t283;
  double t285;
  double t286;
  double t291;
  double t292;
  double t293;
  double t294;
  double t296;
  double t298;
  double t299;
  double t3;
  double t300;
  double t301;
  double t303;
  double t305;
  double t309;
  double t31;
  double t310;
  double t311;
  double t312;
  double t317;
  double t320;
  double t324;
  double t327;
  double t328;
  double t339;
  double t344;
  double t348;
  double t349;
  double t35;
  double t36;
  double t361;
  double t362;
  double t363;
  double t364;
  double t365;
  double t366;
  double t378;
  double t382;
  double t384;
  double t388;
  double t389;
  double t4;
  double t401;
  double t402;
  double t403;
  double t404;
  double t405;
  double t406;
  double t41;
  double t418;
  double t420;
  double t422;
  double t423;
  double t426;
  double t427;
  double t428;
  double t429;
  double t434;
  double t435;
  double t438;
  double t439;
  double t440;
  double t442;
  double t446;
  double t447;
  double t450;
  double t451;
  double t46;
  double t464;
  double t474;
  double t475;
  double t48;
  double t48_tmp;
  double t491;
  double t492;
  double t497;
  double t497_tmp;
  double t498;
  double t498_tmp;
  double t5;
  double t501;
  double t502;
  double t515;
  double t515_tmp;
  double t516;
  double t516_tmp;
  double t517;
  double t518;
  double t521;
  double t522;
  double t529;
  double t530;
  double t538;
  double t539;
  double t543;
  double t544;
  double t551;
  double t552;
  double t554;
  double t556;
  double t559;
  double t560;
  double t561;
  double t566;
  double t566_tmp;
  double t569;
  double t569_tmp;
  double t570;
  double t570_tmp;
  double t571;
  double t572;
  double t573;
  double t574;
  double t577;
  double t578;
  double t588;
  double t590;
  double t597;
  double t598;
  double t6;
  double t614;
  double t615;
  double t640;
  double t641;
  double t647;
  double t648;
  double t65;
  double t67;
  double t68;
  double t69;
  double t7;
  double t71;
  double t76;
  double t78;
  double t79;
  double t8;
  double t80;
  double t87;
  double t9;
  double t96;
  double t99;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = std::pow(eta, 5.0);
  t6 = xi * xi;
  t7 = std::pow(xi, 3.0);
  t9 = std::pow(xi, 5.0);
  t10 = zeta * zeta;
  t11 = std::pow(zeta, 3.0);
  t13 = std::pow(zeta, 5.0);
  t14 = eta * 25.0;
  t15 = zeta * 25.0;
  t16 = eta * 125.0;
  t17 = eta * 250.0;
  t19 = zeta * 125.0;
  t25 = eta * 6.25;
  t26 = eta * 4.166666666666667;
  t31 = eta * 1250.0;
  t35 = zeta * 6.25;
  t36 = zeta * 4.166666666666667;
  t41 = zeta * 1250.0;
  t48_tmp = eta * zeta;
  t48 = t48_tmp * -125.0;
  t65 = eta * 37.5;
  t67 = eta * 41.666666666666664;
  t68 = eta * 31.25;
  t69 = eta * 20.833333333333332;
  t71 = eta * 93.75;
  t76 = zeta * 37.5;
  t78 = zeta * 41.666666666666664;
  t79 = zeta * 31.25;
  t80 = zeta * 20.833333333333332;
  t96 = t48_tmp * -4.166666666666667;
  t113 = eta * 312.5;
  t114 = eta * 156.25;
  t116 = eta * 281.25;
  t121 = eta * 1562.5;
  t123 = eta * 781.25;
  t124 = eta * 520.83333333333326;
  t130 = eta * 979.16666666666674;
  t138 = zeta * 312.5;
  t139 = zeta * 156.25;
  t141 = zeta * 281.25;
  t146 = zeta * 1562.5;
  t148 = zeta * 781.25;
  t149 = zeta * 520.83333333333326;
  t169 = t48_tmp * -37.5;
  t173 = t48_tmp * -31.25;
  t207 = eta * 52.083333333333336;
  t208 = eta * 97.916666666666671;
  t210 = eta * 57.291666666666671;
  t212 = eta * 160.41666666666671;
  t218 = eta * 130.20833333333329;
  t229 = zeta * 52.083333333333336;
  t230 = zeta * 97.916666666666671;
  t232 = zeta * 57.291666666666671;
  t234 = zeta * 160.41666666666671;
  t240 = zeta * 130.20833333333329;
  t310 = t48_tmp * -312.5;
  t311 = t48_tmp * -156.25;
  t317 = t48_tmp * -1562.5;
  t320 = t48_tmp * -1093.75;
  t324 = t48_tmp * -1718.75;
  t339 = eta * 739.58333333333326;
  t344 = zeta * 739.58333333333326;
  t418 = t48_tmp * -160.41666666666671;
  t4 = t2 * t2;
  t8 = t6 * t6;
  t12 = t10 * t10;
  t23 = t17 * zeta;
  t46 = t25 * zeta;
  t87 = t2 * 2500.0;
  t99 = t67 * zeta;
  t102 = t68 * zeta;
  t161 = t2 * 20.833333333333332;
  t166 = t10 * 20.833333333333332;
  t175 = t113 * zeta;
  t178 = t116 * zeta;
  t181 = t121 * zeta;
  t182 = t124 * zeta;
  t188 = t130 * zeta;
  t199 = t10 * (eta * 3125.0);
  t200 = t2 * (zeta * 3125.0);
  t251 = t2 * 312.5;
  t253 = t2 * 156.25;
  t254 = t3 * 156.25;
  t257 = t2 * 468.75;
  t259 = t3 * 833.33333333333326;
  t260 = t2 * 1562.5;
  t261 = t3 * 1562.5;
  t262 = t2 * 781.25;
  t264 = t3 * 781.25;
  t265 = t2 * 520.83333333333326;
  t267 = t3 * 520.83333333333326;
  t269 = t2 * 906.25;
  t271 = t2 * 1093.75;
  t273 = t3 * 1406.25;
  t277 = t2 * 1718.75;
  t283 = t10 * 312.5;
  t285 = t10 * 156.25;
  t286 = t11 * 156.25;
  t291 = t11 * 833.33333333333326;
  t292 = t10 * 1562.5;
  t293 = t11 * 1562.5;
  t294 = t10 * 781.25;
  t296 = t11 * 781.25;
  t299 = t11 * 520.83333333333326;
  t301 = t10 * 906.25;
  t303 = t10 * 1093.75;
  t305 = t11 * 1406.25;
  t309 = t10 * 1718.75;
  t312 = t208 * zeta;
  t327 = t10 * t69;
  t328 = t2 * t80;
  t348 = t3 * 52.083333333333336;
  t349 = t5 * 26.041666666666668;
  t361 = t2 * 260.41666666666669;
  t362 = t3 * 260.41666666666669;
  t363 = t5 * 260.41666666666669;
  t365 = t5 * 130.20833333333329;
  t366 = t2 * 322.91666666666669;
  t378 = t9 * 26.041666666666668;
  t382 = t9 * 260.41666666666669;
  t384 = t9 * 130.20833333333329;
  t388 = t11 * 52.083333333333336;
  t389 = t13 * 26.041666666666668;
  t401 = t10 * 260.41666666666669;
  t402 = t11 * 260.41666666666669;
  t403 = t13 * 260.41666666666669;
  t405 = t13 * 130.20833333333329;
  t406 = t10 * 322.91666666666669;
  t420 = t339 * zeta;
  t422 = t10 * t113;
  t423 = t2 * t138;
  t426 = t10 * t114;
  t427 = t2 * t139;
  t428 = t11 * t114;
  t429 = t3 * t139;
  t434 = t10 * t121;
  t435 = t2 * t146;
  t438 = t11 * t121;
  t439 = t3 * t146;
  t440 = t10 * t123;
  t442 = t2 * t148;
  t446 = t11 * t124;
  t447 = t3 * t149;
  t474 = t2 * 739.58333333333326;
  t475 = t2 * 369.79166666666669;
  t491 = t10 * 739.58333333333326;
  t492 = t10 * 369.79166666666669;
  t497_tmp = eta * t10;
  t497 = t497_tmp * -312.5;
  t498_tmp = t2 * zeta;
  t498 = t498_tmp * -312.5;
  t501 = t497_tmp * -156.25;
  t502 = t498_tmp * -156.25;
  t521 = t497_tmp * -1093.75;
  t522 = t498_tmp * -1093.75;
  t529 = t497_tmp * -1718.75;
  t530 = t498_tmp * -1718.75;
  t566_tmp = t2 * t10;
  t566 = t566_tmp * -156.25;
  t569_tmp = t2 * t11;
  t569 = t569_tmp * -781.25;
  t570_tmp = t3 * t10;
  t570 = t570_tmp * -781.25;
  t573 = t566_tmp * -1093.75;
  t574 = t566_tmp * -1718.75;
  t577 = t569_tmp * -260.41666666666669;
  t578 = t570_tmp * -260.41666666666669;
  t266 = t4 * 781.25;
  t268 = t4 * 520.83333333333326;
  t298 = t12 * 781.25;
  t300 = t12 * 520.83333333333326;
  t364 = t4 * 130.20833333333329;
  t404 = t12 * 130.20833333333329;
  t450 = t12 * t124;
  t451 = t4 * t149;
  t464 = t10 * (t2 * 3125.0);
  t515_tmp = eta * t12;
  t515 = t515_tmp * -520.83333333333326;
  t516_tmp = t4 * zeta;
  t516 = t516_tmp * -520.83333333333326;
  t517 = t12 * t218;
  t518 = t4 * t240;
  t538 = t8 * zeta * -520.83333333333326;
  t539 = t8 * t240;
  t543 = t515_tmp * -130.20833333333329;
  t544 = t516_tmp * -130.20833333333329;
  t551 = eta * t8 * -520.83333333333326;
  t552 = t8 * t218;
  t554 = t10 * t251;
  t556 = t10 * t260;
  t559 = t10 * t262;
  t560 = t11 * t262;
  t561 = t10 * t264;
  t571 = t11 * t361;
  t572 = t10 * t362;
  t588 = -t114 + t262;
  t590 = -t139 + t294;
  t597 = t311 + t440;
  t598 = t311 + t442;
  t614 = -t6 * (eta * t139 + t10 * -t123);
  t615 = -t6 * (t114 * zeta + t2 * -t148);
  t640 = (t99 + t446) + t497;
  t641 = (t99 + t447) + t498;
  t647 = t6 * ((t69 - t253) + t362);
  t648 = t6 * ((t80 - t285) + t402);
  sfvals_tmp = t218 + t240;
  sfvals[0] =
      ((((((((((((((((((((((eta * -11.416666666666666 + t2 * 46.875) -
                           t3 * 88.541666666666671) +
                          t4 * 78.125) +
                         t10 * 46.875) -
                        t11 * 88.541666666666671) +
                       t12 * 78.125) -
                      t349) -
                     t378) -
                    t389) +
                   t543) +
                  t544) +
                 t577) +
                t578) -
               zeta * 11.416666666666666) -
              t8 * (sfvals_tmp - 78.125)) -
             t497_tmp * 265.625) +
            t11 * t113) +
           t3 * t138) +
          t10 * t257) -
         t498_tmp * 265.625) +
        t71 * zeta) -
       t7 * (((((t182 - t113) - t138) + t361) + t401) + 88.541666666666671)) +
      ((-xi * ((((((((((((((-t71 - zeta * 93.75) + eta * 531.25 * zeta) -
                          t3 * 312.5) -
                         t11 * 312.5) +
                        t2 * 265.625) +
                       t364) +
                      t10 * 265.625) +
                     t404) +
                    t446) +
                   t447) +
                  t559) -
                 t497_tmp * 937.5) -
                t498_tmp * 937.5) +
               11.416666666666666) -
        t6 * (((((((((eta * 265.625 - t257) + t362) - t10 * 468.75) + t402) +
                  t440) +
                 t442) +
                zeta * 265.625) -
               t48_tmp * 937.5) -
              46.875)) +
       1.0);
  sfvals[1] = (((t6 * -10.416666666666666 + t7 * 36.458333333333336) -
                t8 * 52.083333333333336) +
               t378) +
              xi;
  sfvals[2] = (((eta - t2 * 10.416666666666666) + t3 * 36.458333333333336) -
               t4 * 52.083333333333336) +
              t349;
  sfvals[3] = (((t10 * -10.416666666666666 + t11 * 36.458333333333336) -
                t12 * 52.083333333333336) +
               t389) +
              zeta;
  b_sfvals_tmp = t124 + t149;
  sfvals[4] =
      (((t384 + t8 * (b_sfvals_tmp - 364.58333333333331)) +
        t6 *
            (((((((((t267 + t299) + t48_tmp * -2187.5) + t339) + t344) - t271) -
                t303) +
               t434) +
              t435) -
             160.41666666666671)) +
       ((((((((((((((-t212 - t234) + t364) + t404) + t420) + t446) + t447) -
               t3 * 364.58333333333331) +
              t475) -
             t11 * 364.58333333333331) +
            t492) +
           t521) +
          t522) +
         t559) +
        25.0) *
           xi) +
      t7 * (((((t181 - eta * 1093.75) - zeta * 1093.75) + t262) + t294) +
            369.79166666666669);
  sfvals[5] =
      (((-t382 - t8 * ((t123 + t148) - 677.08333333333326)) -
        t7 * (((((eta * -1406.25 + t181) + t262) + t294) - zeta * 1406.25) +
              614.58333333333326)) -
       t6 * (((((((((t317 + t339) + t344) - t262) + t362) - t294) + t402) +
               t440) +
              t442) -
             222.91666666666671)) +
      (((((((((t48_tmp * -250.0 - t2 * 125.0) - t10 * 125.0) + t208) + t230) +
           t348) +
          t388) +
         t426) +
        t427) -
       25.0) *
          xi;
  sfvals[6] =
      (((t382 + t8 * (b_sfvals_tmp - 625.0)) -
        t6 * (((((eta * -322.91666666666669 + t175) + t253) + t285) -
               zeta * 322.91666666666669) +
              162.5)) +
       (((((t99 - t65) - t76) + t161) + t166) + 16.666666666666668) * xi) +
      t7 * (((((t182 - t123) - t148) + t361) + t401) + 510.41666666666669);
  sfvals[7] = (((-t384 - t6 * ((t210 + t232) - 63.541666666666671)) +
                t7 * ((t114 + t139) - 213.54166666666671)) -
               t8 * (sfvals_tmp - 286.45833333333331)) +
              ((t25 + t35) - 6.25) * xi;
  sfvals[8] = ((t552 - eta * t7 * 156.25) + t6 * t210) - t25 * xi;
  sfvals_tmp = t7 * (t207 - t361);
  sfvals[9] = (-t6 * (-t68 + t253) - sfvals_tmp) + (-t26 + t161) * xi;
  sfvals[10] = t647 - xi * ((t26 - t2 * 31.25) + t348);
  b_sfvals_tmp = (((-t25 - t254) + t2 * 57.291666666666671) + t364) * xi;
  sfvals[11] = b_sfvals_tmp;
  sfvals[12] = ((((((((t2 * 63.541666666666671 - t3 * 213.54166666666671) +
                      t4 * 286.45833333333331) +
                     t46) -
                    t25) -
                   t365) +
                  t429) +
                 t544) -
                b_sfvals_tmp) -
               t498_tmp * 57.291666666666671;
  b_sfvals_tmp = t3 * zeta;
  sfvals[13] = ((((((((((((eta * 16.666666666666668 - t2 * 162.5) +
                          t3 * 510.41666666666669) -
                         t4 * 625.0) +
                        t169) +
                       t327) +
                      t363) +
                     t451) +
                    t566) +
                   t572) +
                  t647) +
                 ((((-t65 + t268) - t264) + t366) + t641) * xi) -
                b_sfvals_tmp * 781.25) +
               t366 * zeta;
  sfvals[14] =
      (((((((((((((((t2 * 222.91666666666671 - t3 * 614.58333333333326) +
                    t4 * 677.08333333333326) -
                   t14) +
                  t312) -
                 t363) +
                t11 * t207) +
               t559) +
              t570) +
             t577) -
            t6 * (((t16 + t264) - t262) + t598)) -
           xi * ((((((((t23 - t208) + t266) - t273) + t439) + t474) + t501) +
                  t498_tmp * -1562.5) +
                 t559)) +
          sfvals_tmp) -
         t497_tmp * 125.0) -
        t498_tmp * 739.58333333333326) -
       t516_tmp * 781.25) +
      t273 * zeta;
  sfvals_tmp = eta * t11;
  sfvals[15] =
      (((((((((((((((((t2 * -160.41666666666671 + t3 * 369.79166666666669) -
                      t4 * 364.58333333333331) +
                     t14) +
                    t365) +
                   t418) +
                  t451) +
                 t517) +
                t2 * t344) +
               t552) +
              t561) +
             t11 * t265) +
            t573) -
           sfvals_tmp * 364.58333333333331) +
          eta * t492) +
         t6 * (((((eta * 369.79166666666669 + t264) + t320) - t271) + t435) +
               t440)) +
        (((((((((t268 - t212) - t3 * 1093.75) + t420) + t439) + t446) + t474) +
           t498_tmp * -2187.5) +
          t521) +
         t556) *
            xi) -
       b_sfvals_tmp * 1093.75) +
      t7 * ((eta * -364.58333333333331 + t182) + t265);
  c_sfvals_tmp = t182 + t10 * 520.83333333333326;
  sfvals[16] =
      (((((((((((((((((t10 * -160.41666666666671 + t11 * 369.79166666666669) -
                      t12 * 364.58333333333331) +
                     t15) +
                    t405) +
                   t418) +
                  t450) +
                 t518) +
                t539) +
               t10 * t339) +
              t560) +
             t10 * t267) +
            t573) -
           sfvals_tmp * 1093.75) +
          (((((((((t300 - t234) - t11 * 1093.75) + t420) + t438) + t447) +
              t491) +
             t497_tmp * -2187.5) +
            t522) +
           t556) *
              xi) -
         b_sfvals_tmp * 364.58333333333331) +
        t475 * zeta) +
       t6 * (((((t296 + t320) - t303) + t434) + t442) +
             zeta * 369.79166666666669)) +
      t7 * (c_sfvals_tmp - zeta * 364.58333333333331);
  d_sfvals_tmp = t7 * (t229 - t401);
  sfvals[17] =
      (((((((((((((((t10 * 222.91666666666671 - t11 * 614.58333333333326) +
                    t12 * 677.08333333333326) -
                   t15) +
                  t312) -
                 t403) +
                t3 * t229) +
               t559) +
              t569) +
             t578) -
            t6 * (((t19 + t296) - t294) + t597)) -
           xi * ((((((((t23 - t230) + t298) - t305) + t438) + t491) + t502) +
                  t497_tmp * -1562.5) +
                 t559)) +
          d_sfvals_tmp) -
         t497_tmp * 739.58333333333326) -
        t515_tmp * 781.25) +
       eta * t305) -
      t498_tmp * 125.0;
  sfvals[18] =
      ((((((((((((t10 * -162.5 + t11 * 510.41666666666669) - t12 * 625.0) +
                t169) +
               t328) +
              t403) +
             t450) +
            t566) +
           t571) +
          t648) +
         zeta * 16.666666666666668) -
        sfvals_tmp * 781.25) +
       eta * t406) +
      ((((-t76 + t300) - t296) + t406) + t640) * xi;
  e_sfvals_tmp = (((-t35 - t286) + t10 * 57.291666666666671) + t404) * xi;
  sfvals[19] = ((((((((t10 * 63.541666666666671 - t11 * 213.54166666666671) +
                      t12 * 286.45833333333331) +
                     t46) -
                    t35) -
                   t405) +
                  t428) +
                 t543) -
                t497_tmp * 57.291666666666671) -
               e_sfvals_tmp;
  sfvals[20] = ((t539 + t6 * t232) - t35 * xi) - t7 * zeta * 156.25;
  sfvals[21] = (-t6 * (-t79 + t285) - d_sfvals_tmp) + (-t36 + t166) * xi;
  sfvals[22] = t648 - xi * ((t36 - t10 * 31.25) + t388);
  sfvals[23] = e_sfvals_tmp;
  d_sfvals_tmp = b_sfvals_tmp * 156.25;
  sfvals[24] = ((t518 + t2 * t232) - d_sfvals_tmp) + -6.25 * zeta * eta;
  sfvals[25] = ((((t96 + t327) + t566) + t572) + t2 * t79) -
               b_sfvals_tmp * 52.083333333333336;
  sfvals[26] =
      ((((t96 + t328) + t566) + t571) - sfvals_tmp * 52.083333333333336) +
      t10 * t68;
  e_sfvals_tmp = sfvals_tmp * 156.25;
  sfvals[27] = ((t517 - e_sfvals_tmp) + t10 * t210) + -6.25 * eta * zeta;
  f_sfvals_tmp = t48_tmp * 2500.0;
  g_sfvals_tmp = t498_tmp * 2500.0;
  sfvals[28] =
      ((t551 - t6 * (((((-t87 + t130) + t200) + t261) + t434) - f_sfvals_tmp)) -
       xi * (((((((((-t17 - t3 * 1250.0) + t188) + t268) +
                  t2 * 979.16666666666674) +
                 t439) +
                t446) +
               t556) -
              t497_tmp * 1250.0) -
             g_sfvals_tmp)) -
      t7 * ((-t31 + t181) + t260);
  h_sfvals_tmp = t48_tmp * 281.25;
  sfvals[29] =
      ((-xi * (((((t16 + t254) - t2 * 281.25) + t423) + t426) - h_sfvals_tmp) +
        t6 * (((((eta * 906.25 + t264) + t324) - t277) + t435) + t440)) +
       t8 * t123) +
      t7 * ((t181 - t121) + t260);
  sfvals[30] = ((t551 - xi * ((t99 - t67) + t2 * 41.666666666666664)) +
                t6 * ((eta * -354.16666666666669 + t175) + t251)) -
               t7 * ((eta * -833.33333333333326 + t182) + t265);
  sfvals[31] =
      (-t7 * t588 + ((((t68 + t173) - t2 * 187.5) + t254) + t427) * xi) -
      t6 * (((eta * 187.5 + t264) - t271) + t598);
  sfvals[32] = -t6 * ((t67 + t267) - t251) -
               xi * ((((-t67 + t2 * 354.16666666666669) - t259) + t268) + t641);
  sfvals[33] =
      (t7 * t588 + t6 * (((t116 + t261) - t277) + (t310 + t435))) +
      ((((((((-t16 + t178) + t266) + t269) - t261) + t439) + t501) + t530) +
       t559) *
          xi;
  t515_tmp = t497_tmp * 2500.0;
  sfvals[34] =
      ((t538 -
        t6 * (((((-(t10 * 2500.0) + zeta * 979.16666666666674) + t199) + t293) +
               t435) -
              f_sfvals_tmp)) -
       xi * (((((((((-(zeta * 250.0) - t11 * 1250.0) + t188) + t300) +
                  t10 * 979.16666666666674) +
                 t438) +
                t447) +
               t556) -
              t515_tmp) -
             t498_tmp * 1250.0)) -
      t7 * ((-t41 + t181) + t292);
  sfvals[35] =
      ((-xi * (((((t19 + t286) - t10 * 281.25) + t422) + t427) - h_sfvals_tmp) +
        t8 * t148) +
       t6 * (((((t296 + t324) - t309) + t434) + t442) + zeta * 906.25)) +
      t7 * ((t181 - t146) + t292);
  sfvals[36] = ((t538 - xi * ((t99 - t78) + t10 * 41.666666666666664)) +
                t6 * ((t175 + t283) - zeta * 354.16666666666669)) -
               t7 * (c_sfvals_tmp - zeta * 833.33333333333326);
  sfvals[37] =
      (-t7 * t590 + ((((t79 + t173) - t10 * 187.5) + t286) + t426) * xi) -
      t6 * (((t296 - t303) + t597) + zeta * 187.5);
  sfvals[38] =
      -t6 * ((t78 + t299) - t283) -
      xi * ((((-t78 + t10 * 354.16666666666669) - t291) + t300) + t640);
  sfvals[39] =
      (t7 * t590 + t6 * (((t141 + t293) - t309) + (t310 + t434))) +
      ((((((((-t19 + t178) + t298) + t301) - t293) + t438) + t502) + t529) +
       t559) *
          xi;
  sfvals[40] = (t7 * t182 + t6 * t310) + t99 * xi;
  sfvals[41] = t615 + (t102 + t502) * xi;
  c_sfvals_tmp = t641 * xi;
  sfvals[42] = c_sfvals_tmp;
  f_sfvals_tmp = t48_tmp * 31.25;
  h_sfvals_tmp = t10 * -t114;
  t516_tmp = xi * (((t502 + t559) + f_sfvals_tmp) + h_sfvals_tmp);
  sfvals[43] = t516_tmp;
  t566_tmp = t640 * xi;
  sfvals[44] = t566_tmp;
  sfvals[45] = t614 + xi * (f_sfvals_tmp + h_sfvals_tmp);
  sfvals[46] = ((((((t99 + t516) + t554) - t497_tmp * 41.666666666666664) -
                  t570_tmp * 520.83333333333326) -
                 c_sfvals_tmp) -
                t498_tmp * 354.16666666666669) +
               t259 * zeta;
  sfvals[47] =
      (((((((((t48 + t4 * t148) + b_sfvals_tmp * -1562.5) + t10 * t261) +
            t560) +
           t574) +
          t615) -
         e_sfvals_tmp) +
        t10 * t116) +
       ((((t178 + t439) + t497) + t530) + t556) * xi) +
      t269 * zeta;
  sfvals[48] =
      (((((((((((t23 + t515) + t516) - t497_tmp * 979.16666666666674) -
              t569_tmp * 1562.5) -
             t570_tmp * 1562.5) +
            t11 * t31) +
           t3 * t41) +
          t10 * t87) +
         t7 * (t48_tmp * -520.83333333333326)) -
        t498_tmp * 979.16666666666674) -
       t6 * ((t434 + t435) - t48_tmp * 1250.0)) -
      xi * (((((t188 + t438) + t439) + t464) - t515_tmp) - g_sfvals_tmp);
  sfvals[49] =
      (((((((((t48 + t12 * t123) + sfvals_tmp * -1562.5) + t11 * t260) + t561) +
           t574) +
          t614) +
         eta * t301) +
        t2 * t141) +
       ((((t178 + t438) + t498) + t529) + t556) * xi) -
      d_sfvals_tmp;
  sfvals[50] =
      ((((((t99 + t515) + t554) - t497_tmp * 354.16666666666669) + eta * t291) -
        t569_tmp * 520.83333333333326) -
       t566_tmp) -
      t498_tmp * 41.666666666666664;
  sfvals[51] = (((((((t102 + t428) + t429) + t10 * t271) + t569) + t570) -
                 t497_tmp * 187.5) -
                t498_tmp * 187.5) -
               t516_tmp;
  sfvals[52] = (t7 * t181 +
                (((((t31 * zeta + t438) + t439) + t464) - t497_tmp * 2812.5) -
                 t498_tmp * 2812.5) *
                    xi) +
               t6 * ((t199 + t200) - t48_tmp * 2812.5);
  sfvals[53] = (t7 * t317 + ((t310 + t422) + t423) * xi) -
               t6 * ((-(t48_tmp * 1875.0) + t434) + t435);
  sfvals[54] = -xi * ((((t175 - t498_tmp * 1875.0) + t439) + t497) + t556) +
               t6 * (t175 + t2 * -t146);
  sfvals[55] = t6 * (eta * t138 + t10 * -t121) -
               xi * ((((t175 - t497_tmp * 1875.0) + t438) + t498) + t556);
}

// tet_56_sfunc - Compute shape functions and their derivatives of tet_56
void tet_56_sfunc(double xi, double eta, double zeta, double sfvals[56],
                  double sdvals[168])
{
  double b_sfvals_tmp;
  double b_t708_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double h_sfvals_tmp;
  double i_sfvals_tmp;
  double j_sfvals_tmp;
  double k_sfvals_tmp;
  double l_sfvals_tmp;
  double m_sfvals_tmp;
  double n_sfvals_tmp;
  double o_sfvals_tmp;
  double sfvals_tmp;
  double sfvals_tmp_tmp;
  double t10;
  double t102;
  double t104;
  double t105;
  double t11;
  double t113;
  double t114;
  double t115;
  double t116;
  double t117;
  double t118;
  double t119;
  double t12;
  double t120;
  double t121;
  double t122;
  double t123;
  double t124;
  double t125;
  double t126;
  double t127;
  double t128;
  double t129;
  double t13;
  double t130;
  double t131;
  double t133;
  double t138;
  double t139;
  double t14;
  double t140;
  double t141;
  double t142;
  double t143;
  double t144;
  double t146;
  double t147;
  double t148;
  double t149;
  double t15;
  double t150;
  double t151;
  double t152;
  double t153;
  double t154;
  double t155;
  double t156;
  double t157;
  double t158;
  double t159;
  double t16;
  double t160;
  double t161;
  double t162;
  double t164;
  double t165;
  double t166;
  double t167;
  double t169;
  double t17;
  double t170;
  double t173;
  double t174;
  double t175;
  double t177;
  double t178;
  double t18;
  double t181;
  double t182;
  double t183;
  double t184;
  double t188;
  double t19;
  double t191;
  double t192;
  double t195;
  double t195_tmp;
  double t196;
  double t196_tmp;
  double t197;
  double t198;
  double t199;
  double t2;
  double t20;
  double t200;
  double t201;
  double t202;
  double t203;
  double t204;
  double t207;
  double t208;
  double t209;
  double t21;
  double t210;
  double t212;
  double t218;
  double t226;
  double t229;
  double t23;
  double t230;
  double t231;
  double t232;
  double t234;
  double t240;
  double t248;
  double t25;
  double t251;
  double t252;
  double t253;
  double t254;
  double t255;
  double t257;
  double t258;
  double t259;
  double t26;
  double t260;
  double t261;
  double t262;
  double t263;
  double t264;
  double t265;
  double t266;
  double t267;
  double t268;
  double t269;
  double t270;
  double t271;
  double t273;
  double t274;
  double t275;
  double t276;
  double t277;
  double t278;
  double t279;
  double t280;
  double t283;
  double t284;
  double t285;
  double t286;
  double t287;
  double t289;
  double t290;
  double t291;
  double t292;
  double t293;
  double t294;
  double t295;
  double t296;
  double t298;
  double t299;
  double t3;
  double t30;
  double t300;
  double t301;
  double t302;
  double t303;
  double t305;
  double t306;
  double t307;
  double t308;
  double t309;
  double t31;
  double t310;
  double t311;
  double t312;
  double t313;
  double t315;
  double t317;
  double t319;
  double t32;
  double t320;
  double t321;
  double t322;
  double t323;
  double t324;
  double t325;
  double t326;
  double t327;
  double t328;
  double t33;
  double t331;
  double t331_tmp;
  double t332;
  double t332_tmp;
  double t339;
  double t34;
  double t344;
  double t348;
  double t349;
  double t35;
  double t350;
  double t353;
  double t36;
  double t361;
  double t362;
  double t363;
  double t364;
  double t365;
  double t366;
  double t370;
  double t375;
  double t376;
  double t378;
  double t379;
  double t382;
  double t383;
  double t384;
  double t388;
  double t389;
  double t390;
  double t393;
  double t4;
  double t40;
  double t401;
  double t402;
  double t403;
  double t404;
  double t405;
  double t406;
  double t41;
  double t410;
  double t415;
  double t416;
  double t417;
  double t418;
  double t419;
  double t42;
  double t420;
  double t422;
  double t423;
  double t426;
  double t427;
  double t428;
  double t429;
  double t43;
  double t432;
  double t433;
  double t434;
  double t435;
  double t438;
  double t439;
  double t44;
  double t440;
  double t442;
  double t446;
  double t447;
  double t45;
  double t450;
  double t451;
  double t458;
  double t459;
  double t46;
  double t464;
  double t465;
  double t466;
  double t474;
  double t475;
  double t478;
  double t479;
  double t48;
  double t482;
  double t483;
  double t48_tmp;
  double t49;
  double t491;
  double t492;
  double t495;
  double t496;
  double t497;
  double t498;
  double t5;
  double t50;
  double t501;
  double t502;
  double t505;
  double t506;
  double t507;
  double t508;
  double t51;
  double t511;
  double t512;
  double t515;
  double t515_tmp;
  double t516;
  double t516_tmp;
  double t517;
  double t518;
  double t519;
  double t520;
  double t521;
  double t522;
  double t525;
  double t526;
  double t527;
  double t528;
  double t529;
  double t530;
  double t531;
  double t532;
  double t533;
  double t534;
  double t536;
  double t536_tmp;
  double t537;
  double t538;
  double t539;
  double t540;
  double t543;
  double t544;
  double t549;
  double t549_tmp;
  double t55;
  double t550;
  double t551;
  double t552;
  double t553;
  double t554;
  double t556;
  double t559;
  double t560;
  double t561;
  double t566;
  double t566_tmp;
  double t567;
  double t568;
  double t569;
  double t569_tmp;
  double t57;
  double t570;
  double t570_tmp;
  double t571;
  double t572;
  double t573;
  double t574;
  double t575;
  double t576;
  double t577;
  double t578;
  double t579;
  double t58;
  double t580;
  double t581;
  double t582;
  double t583;
  double t585;
  double t587;
  double t588;
  double t59;
  double t590;
  double t592;
  double t593;
  double t595;
  double t596;
  double t597;
  double t598;
  double t599;
  double t6;
  double t60;
  double t600;
  double t602;
  double t602_tmp;
  double t603;
  double t603_tmp;
  double t604;
  double t606;
  double t61;
  double t614;
  double t615;
  double t62;
  double t623;
  double t624;
  double t625;
  double t627;
  double t628;
  double t629;
  double t636;
  double t637;
  double t640;
  double t641;
  double t643;
  double t644;
  double t645;
  double t647;
  double t648;
  double t649;
  double t65;
  double t650;
  double t651;
  double t652;
  double t653;
  double t654;
  double t657;
  double t658;
  double t659;
  double t66;
  double t664;
  double t667;
  double t67;
  double t673;
  double t674;
  double t68;
  double t687;
  double t689;
  double t69;
  double t691;
  double t692;
  double t693;
  double t693_tmp;
  double t694;
  double t694_tmp;
  double t695;
  double t695_tmp;
  double t7;
  double t70;
  double t702;
  double t703;
  double t704;
  double t706;
  double t707;
  double t708;
  double t708_tmp;
  double t71;
  double t710;
  double t711;
  double t712;
  double t713;
  double t714;
  double t715;
  double t716;
  double t76;
  double t77;
  double t78;
  double t79;
  double t8;
  double t80;
  double t81;
  double t82;
  double t85;
  double t86;
  double t87;
  double t88;
  double t89;
  double t9;
  double t91;
  double t92;
  double t93;
  double t94;
  double t95;
  double t96;
  double t98;
  double t99;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = std::pow(eta, 5.0);
  t6 = xi * xi;
  t7 = std::pow(xi, 3.0);
  t9 = std::pow(xi, 5.0);
  t10 = zeta * zeta;
  t11 = std::pow(zeta, 3.0);
  t13 = std::pow(zeta, 5.0);
  t14 = eta * 25.0;
  t15 = zeta * 25.0;
  t16 = eta * 125.0;
  t17 = eta * 250.0;
  t18 = eta * 375.0;
  t19 = zeta * 125.0;
  t20 = zeta * 250.0;
  t21 = zeta * 375.0;
  t25 = eta * 6.25;
  t26 = eta * 4.166666666666667;
  t30 = eta * 625.0;
  t31 = eta * 1250.0;
  t32 = eta * 2500.0;
  t33 = eta * 3125.0;
  t34 = xi * 6.25;
  t35 = zeta * 6.25;
  t36 = zeta * 4.166666666666667;
  t40 = zeta * 625.0;
  t41 = zeta * 1250.0;
  t42 = zeta * 2500.0;
  t43 = zeta * 3125.0;
  t48_tmp = eta * zeta;
  t48 = t48_tmp * -125.0;
  t49 = t48_tmp * -250.0;
  t50 = t48_tmp * -375.0;
  t55 = t48_tmp * 1875.0;
  t58 = t48_tmp * 3750.0;
  t59 = t48_tmp * 4375.0;
  t60 = t48_tmp * 5000.0;
  t61 = t48_tmp * 5625.0;
  t62 = t48_tmp * 6250.0;
  t65 = eta * 37.5;
  t66 = eta * 62.5;
  t67 = eta * 41.666666666666664;
  t68 = eta * 31.25;
  t69 = eta * 20.833333333333332;
  t70 = eta * 83.333333333333329;
  t71 = eta * 93.75;
  t76 = zeta * 37.5;
  t77 = zeta * 62.5;
  t78 = zeta * 41.666666666666664;
  t79 = zeta * 31.25;
  t80 = zeta * 20.833333333333332;
  t81 = zeta * 83.333333333333329;
  t82 = zeta * 93.75;
  t96 = t48_tmp * -4.166666666666667;
  t104 = t48_tmp * -625.0;
  t105 = t48_tmp * -3125.0;
  t113 = eta * 312.5;
  t114 = eta * 156.25;
  t115 = eta * 562.5;
  t116 = eta * 281.25;
  t117 = eta * 937.5;
  t118 = eta * 468.75;
  t119 = eta * 708.33333333333326;
  t120 = eta * 531.25;
  t121 = eta * 1562.5;
  t122 = eta * 1041.666666666667;
  t123 = eta * 781.25;
  t124 = eta * 520.83333333333326;
  t125 = eta * 1812.5;
  t126 = eta * 645.83333333333326;
  t127 = eta * 2187.5;
  t128 = eta * 1093.75;
  t129 = eta * 1958.333333333333;
  t130 = eta * 979.16666666666674;
  t131 = eta * 2083.333333333333;
  t133 = eta * 1718.75;
  t138 = zeta * 312.5;
  t139 = zeta * 156.25;
  t140 = zeta * 562.5;
  t141 = zeta * 281.25;
  t142 = zeta * 937.5;
  t143 = zeta * 468.75;
  t144 = zeta * 708.33333333333326;
  t146 = zeta * 1562.5;
  t147 = zeta * 1041.666666666667;
  t148 = zeta * 781.25;
  t149 = zeta * 520.83333333333326;
  t150 = zeta * 1812.5;
  t151 = zeta * 645.83333333333326;
  t152 = zeta * 2187.5;
  t153 = zeta * 1093.75;
  t154 = zeta * 1958.333333333333;
  t155 = zeta * 979.16666666666674;
  t156 = zeta * 2083.333333333333;
  t157 = zeta * 3437.5;
  t158 = zeta * 1718.75;
  t169 = t48_tmp * -37.5;
  t170 = t48_tmp * -41.666666666666664;
  t173 = t48_tmp * -31.25;
  t174 = t48_tmp * -83.333333333333329;
  t207 = eta * 52.083333333333336;
  t208 = eta * 97.916666666666671;
  t209 = eta * 114.5833333333333;
  t210 = eta * 57.291666666666671;
  t212 = eta * 160.41666666666671;
  t218 = eta * 130.20833333333329;
  t226 = eta * 1479.166666666667;
  t229 = zeta * 52.083333333333336;
  t230 = zeta * 97.916666666666671;
  t231 = zeta * 114.5833333333333;
  t232 = zeta * 57.291666666666671;
  t234 = zeta * 160.41666666666671;
  t240 = zeta * 130.20833333333329;
  t248 = zeta * 1479.166666666667;
  t310 = t48_tmp * -312.5;
  t311 = t48_tmp * -156.25;
  t315 = t48_tmp * -708.33333333333326;
  t317 = t48_tmp * -1562.5;
  t319 = t48_tmp * -2187.5;
  t320 = t48_tmp * -1093.75;
  t321 = t48_tmp * -1958.333333333333;
  t322 = t48_tmp * -979.16666666666674;
  t323 = t48_tmp * -3437.5;
  t324 = t48_tmp * -1718.75;
  t326 = t48_tmp * 4687.5;
  t339 = eta * 739.58333333333326;
  t344 = zeta * 739.58333333333326;
  t417 = t48_tmp * -114.5833333333333;
  t418 = t48_tmp * -160.41666666666671;
  t419 = t48_tmp * -1479.166666666667;
  t4 = t2 * t2;
  t8 = t6 * t6;
  t12 = t10 * t10;
  t23 = t17 * zeta;
  t44 = t2 * 125.0;
  t45 = t10 * 125.0;
  t46 = t25 * zeta;
  t51 = t30 * zeta;
  t57 = t33 * zeta;
  t85 = t2 * 625.0;
  t86 = t3 * 1250.0;
  t87 = t2 * 2500.0;
  t88 = t2 * 3125.0;
  t89 = t3 * 3125.0;
  t91 = t10 * 625.0;
  t92 = t11 * 1250.0;
  t93 = t10 * 2500.0;
  t94 = t10 * 3125.0;
  t95 = t11 * 3125.0;
  t98 = t66 * zeta;
  t99 = t67 * zeta;
  t102 = t68 * zeta;
  t159 = t2 * 41.666666666666664;
  t160 = t2 * 31.25;
  t161 = t2 * 20.833333333333332;
  t162 = t2 * 187.5;
  t164 = t10 * 41.666666666666664;
  t165 = t10 * 31.25;
  t166 = t10 * 20.833333333333332;
  t167 = t10 * 187.5;
  t175 = t113 * zeta;
  t177 = t115 * zeta;
  t178 = t116 * zeta;
  t181 = t121 * zeta;
  t182 = t124 * zeta;
  t183 = t125 * zeta;
  t184 = t126 * zeta;
  t188 = t130 * zeta;
  t191 = t10 * t30;
  t192 = t2 * t40;
  t195_tmp = eta * t10;
  t195 = t195_tmp * 1875.0;
  t196_tmp = t2 * zeta;
  t196 = t196_tmp * 1875.0;
  t197 = t10 * t32;
  t198 = t2 * t42;
  t199 = t10 * t33;
  t200 = t2 * t43;
  t201 = t11 * t33;
  t202 = t3 * t43;
  t203 = t195_tmp * 6250.0;
  t204 = t196_tmp * 6250.0;
  t251 = t2 * 312.5;
  t252 = t3 * 312.5;
  t253 = t2 * 156.25;
  t254 = t3 * 156.25;
  t255 = t2 * 281.25;
  t257 = t2 * 468.75;
  t258 = t2 * 354.16666666666669;
  t259 = t3 * 833.33333333333326;
  t260 = t2 * 1562.5;
  t261 = t3 * 1562.5;
  t262 = t2 * 781.25;
  t263 = t3 * 1041.666666666667;
  t264 = t3 * 781.25;
  t265 = t2 * 520.83333333333326;
  t267 = t3 * 520.83333333333326;
  t269 = t2 * 906.25;
  t270 = t2 * 2187.5;
  t271 = t2 * 1093.75;
  t273 = t3 * 1406.25;
  t274 = t2 * 979.16666666666674;
  t275 = t3 * 2083.333333333333;
  t276 = t2 * 3437.5;
  t277 = t2 * 1718.75;
  t278 = t7 * 156.25;
  t283 = t10 * 312.5;
  t284 = t11 * 312.5;
  t285 = t10 * 156.25;
  t286 = t11 * 156.25;
  t287 = t10 * 281.25;
  t289 = t10 * 468.75;
  t290 = t10 * 354.16666666666669;
  t291 = t11 * 833.33333333333326;
  t292 = t10 * 1562.5;
  t293 = t11 * 1562.5;
  t294 = t10 * 781.25;
  t295 = t11 * 1041.666666666667;
  t296 = t11 * 781.25;
  t299 = t11 * 520.83333333333326;
  t301 = t10 * 906.25;
  t302 = t10 * 2187.5;
  t303 = t10 * 1093.75;
  t305 = t11 * 1406.25;
  t306 = t10 * 979.16666666666674;
  t307 = t11 * 2083.333333333333;
  t308 = t10 * 3437.5;
  t309 = t10 * 1718.75;
  t312 = t208 * zeta;
  t313 = t209 * zeta;
  t325 = t226 * zeta;
  t327 = t10 * t69;
  t328 = t2 * t80;
  t331_tmp = eta * t11;
  t331 = t331_tmp * -3125.0;
  t332_tmp = t3 * zeta;
  t332 = t332_tmp * -3125.0;
  t348 = t3 * 52.083333333333336;
  t349 = t5 * 26.041666666666668;
  t350 = t2 * 57.291666666666671;
  t353 = t2 * 265.625;
  t361 = t2 * 260.41666666666669;
  t362 = t3 * 260.41666666666669;
  t363 = t5 * 260.41666666666669;
  t365 = t5 * 130.20833333333329;
  t366 = t2 * 322.91666666666669;
  t370 = t3 * 364.58333333333331;
  t375 = t2 * 4687.5;
  t376 = t2 * 2343.75;
  t378 = t9 * 26.041666666666668;
  t379 = t6 * 57.291666666666671;
  t382 = t9 * 260.41666666666669;
  t384 = t9 * 130.20833333333329;
  t388 = t11 * 52.083333333333336;
  t389 = t13 * 26.041666666666668;
  t390 = t10 * 57.291666666666671;
  t393 = t10 * 265.625;
  t401 = t10 * 260.41666666666669;
  t402 = t11 * 260.41666666666669;
  t403 = t13 * 260.41666666666669;
  t405 = t13 * 130.20833333333329;
  t406 = t10 * 322.91666666666669;
  t410 = t11 * 364.58333333333331;
  t415 = t10 * 4687.5;
  t416 = t10 * 2343.75;
  t420 = t339 * zeta;
  t422 = t10 * t113;
  t423 = t2 * t138;
  t426 = t10 * t114;
  t427 = t2 * t139;
  t428 = t11 * t114;
  t429 = t3 * t139;
  t432 = t10 * t118;
  t433 = t2 * t143;
  t434 = t10 * t121;
  t435 = t2 * t146;
  t438 = t11 * t121;
  t439 = t3 * t146;
  t440 = t10 * t123;
  t442 = t2 * t148;
  t446 = t11 * t124;
  t447 = t3 * t149;
  t458 = t11 * t131;
  t459 = t3 * t156;
  t465 = t7 * t146;
  t466 = t7 * t149;
  t474 = t2 * 739.58333333333326;
  t475 = t2 * 369.79166666666669;
  t491 = t10 * 739.58333333333326;
  t492 = t10 * 369.79166666666669;
  t497 = t195_tmp * -312.5;
  t498 = t196_tmp * -312.5;
  t501 = t195_tmp * -156.25;
  t502 = t196_tmp * -156.25;
  t505 = t195_tmp * -1562.5;
  t506 = t196_tmp * -1562.5;
  t507 = t331_tmp * -1562.5;
  t508 = t332_tmp * -1562.5;
  t511 = t331_tmp * -520.83333333333326;
  t512 = t332_tmp * -520.83333333333326;
  t519 = t195_tmp * -2187.5;
  t520 = t196_tmp * -2187.5;
  t521 = t195_tmp * -1093.75;
  t522 = t196_tmp * -1093.75;
  t525 = t331_tmp * -2083.333333333333;
  t526 = t332_tmp * -2083.333333333333;
  t527 = t195_tmp * -3437.5;
  t528 = t196_tmp * -3437.5;
  t529 = t195_tmp * -1718.75;
  t530 = t196_tmp * -1718.75;
  t533 = t7 * t121;
  t534 = t7 * t124;
  t536_tmp = t7 * zeta;
  t536 = t536_tmp * -1562.5;
  t537 = t536_tmp * -520.83333333333326;
  t540 = t536_tmp * -2083.333333333333;
  t549_tmp = eta * t7;
  t549 = t549_tmp * -1562.5;
  t550 = t549_tmp * -520.83333333333326;
  t553 = t549_tmp * -2083.333333333333;
  t566_tmp = t2 * t10;
  t566 = t566_tmp * -156.25;
  t567 = t566_tmp * -1562.5;
  t568 = t566_tmp * -781.25;
  t569_tmp = t2 * t11;
  t569 = t569_tmp * -781.25;
  t570_tmp = t3 * t10;
  t570 = t570_tmp * -781.25;
  t573 = t566_tmp * -1093.75;
  t574 = t566_tmp * -1718.75;
  t577 = t569_tmp * -260.41666666666669;
  t578 = t570_tmp * -260.41666666666669;
  t579 = t566_tmp * -4687.5;
  t580 = t566_tmp * -2343.75;
  t583 = (t25 + t35) - 6.25;
  t599 = -t6 * (t114 + t317);
  t266 = t4 * 781.25;
  t268 = t4 * 520.83333333333326;
  t279 = t8 * 781.25;
  t280 = t8 * 520.83333333333326;
  t298 = t12 * 781.25;
  t300 = t12 * 520.83333333333326;
  t364 = t4 * 130.20833333333329;
  t383 = t8 * 130.20833333333329;
  t404 = t12 * 130.20833333333329;
  t450 = t12 * t124;
  t451 = t4 * t149;
  t464 = t10 * t88;
  t478 = t4 * 1302.083333333333;
  t479 = t4 * 651.04166666666674;
  t482 = t8 * 1302.083333333333;
  t483 = t8 * 651.04166666666674;
  t495 = t12 * 1302.083333333333;
  t496 = t12 * 651.04166666666674;
  t515_tmp = eta * t12;
  t515 = t515_tmp * -520.83333333333326;
  t516_tmp = t4 * zeta;
  t516 = t516_tmp * -520.83333333333326;
  t517 = t12 * t218;
  t518 = t4 * t240;
  t531 = eta * t415;
  t532 = t375 * zeta;
  t538 = t8 * zeta * -520.83333333333326;
  t539 = t8 * t240;
  t543 = t515_tmp * -130.20833333333329;
  t544 = t516_tmp * -130.20833333333329;
  t551 = eta * t8 * -520.83333333333326;
  t552 = t8 * t218;
  t554 = t10 * t251;
  t556 = t10 * t260;
  t559 = t10 * t262;
  t560 = t11 * t262;
  t561 = t10 * t264;
  t571 = t11 * t361;
  t572 = t10 * t362;
  t575 = t10 * t375;
  t576 = t10 * t376;
  t581 = -t26 + t161;
  t582 = -t36 + t166;
  t585 = t181 - t114;
  t587 = t181 - t139;
  t588 = -t114 + t262;
  t590 = -t139 + t294;
  t592 = t102 + t501;
  t593 = t102 + t502;
  t597 = t311 + t440;
  t598 = t311 + t442;
  t600 = -t6 * (t139 - t181);
  t602_tmp = eta * t138 + t10 * -t121;
  t602 = -xi * t602_tmp;
  t603_tmp = t175 + t2 * -t146;
  t603 = -xi * t603_tmp;
  t614 = -t6 * (eta * t139 + t10 * -t123);
  t615 = -t6 * (t114 * zeta + t2 * -t148);
  t595 = t310 + t434;
  t596 = t310 + t435;
  t604 = t6 * t588;
  t606 = t6 * t590;
  t623 = (-t26 + t160) - t348;
  t624 = (t67 + t267) - t251;
  t625 = t6 * ((-t113 + t262) + 20.833333333333332);
  t627 = t6 * ((-t138 + t294) + 20.833333333333332);
  t628 = (-t36 + t165) - t388;
  t629 = (t78 + t299) - t283;
  t643 = (t310 + t422) + t423;
  t644 = (t170 + t422) + t511;
  t645 = (t170 + t423) + t512;
  t650 = ((-t25 - t254) + t350) + t364;
  t652 = ((-t34 - t278) + t379) + t383;
  t654 = ((-t35 - t286) + t390) + t404;
  t658 = (((t68 + t173) - t162) + t254) + t427;
  t659 = (((t79 + t173) - t167) + t286) + t426;
  t673 = (((t178 + t439) + t497) + t530) + t556;
  t674 = (((t178 + t438) + t498) + t529) + t556;
  t687 = ((((t31 * zeta + t438) + t439) + t464) - t195_tmp * 2812.5) -
         t196_tmp * 2812.5;
  t692 = ((((((((t49 - t44) - t45) + t208) + t230) + t348) + t388) + t426) +
          t427) -
         25.0;
  t693_tmp = t124 + t149;
  t693 = ((t280 + ((t67 + t78) - 37.5) * xi) + t7 * (t693_tmp - 781.25)) +
         -t6 * ((t113 + t138) - 322.91666666666669);
  t694_tmp = -t16 + t178;
  t694 = ((((((t694_tmp + t266) + t269) - t261) + t439) + t501) + t530) + t559;
  t695_tmp = -t19 + t178;
  t695 = ((((((t695_tmp + t298) + t301) - t293) + t438) + t502) + t529) + t559;
  t702 = ((((((((t267 + t299) + t319) + t339) + t344) - t271) - t303) + t434) +
          t435) -
         160.41666666666671;
  t706 = ((((((((t268 - t212) - t3 * 1093.75) + t420) + t439) + t446) + t474) +
           t520) +
          t521) +
         t556;
  t707 = ((((((((t300 - t234) - t11 * 1093.75) + t420) + t438) + t447) + t491) +
           t519) +
          t522) +
         t556;
  t710 = (((((((((((((-t212 - t234) + t364) + t404) + t420) + t446) + t447) -
                t370) +
               t475) -
              t410) +
             t492) +
            t521) +
           t522) +
          t559) +
         25.0;
  t636 = t624 * xi;
  t637 = t629 * xi;
  t640 = (t99 + t446) + t497;
  t641 = (t99 + t447) + t498;
  t647 = t6 * ((t69 - t253) + t362);
  t648 = t6 * ((t80 - t285) + t402);
  t649 = ((t25 + t254) - t350) - t364;
  t651 = ((t34 + t278) - t379) - t383;
  t653 = ((t35 + t286) - t390) - t404;
  t657 = ((((t99 - t65) - t76) + t161) + t166) + 16.666666666666668;
  t664 = ((t116 + t261) - t277) + t596;
  t667 = ((t141 + t293) - t309) + t595;
  t708_tmp = t181 - t121;
  b_t708_tmp = t121 + t146;
  t708 = ((-t279 + -t7 * (b_t708_tmp - 1406.25)) +
          (((((-t17 - t20) + t175) + t253) + t285) + 97.916666666666671) * xi) +
         -t6 * ((((t708_tmp - t146) + t262) + t294) + 739.58333333333326);
  t689 = (((-t65 + t268) - t264) + t366) + t641;
  t691 = (((-t76 + t300) - t296) + t406) + t640;
  sfvals_tmp = t218 + t240;
  sfvals[0] =
      ((((((((((((((((((((((eta * -11.416666666666666 + t2 * 46.875) -
                           t3 * 88.541666666666671) +
                          t4 * 78.125) +
                         t10 * 46.875) -
                        t11 * 88.541666666666671) +
                       t12 * 78.125) -
                      t349) -
                     t378) -
                    t389) +
                   t543) +
                  t544) +
                 t577) +
                t578) -
               zeta * 11.416666666666666) -
              t8 * (sfvals_tmp - 78.125)) -
             t195_tmp * 265.625) +
            t11 * t113) +
           t3 * t138) +
          t10 * t257) -
         t196_tmp * 265.625) +
        t71 * zeta) -
       t7 * (((((t182 - t113) - t138) + t361) + t401) + 88.541666666666671)) +
      ((-xi * ((((((((((((((-t71 - t82) + t120 * zeta) - t252) - t284) + t353) +
                       t364) +
                      t393) +
                     t404) +
                    t446) +
                   t447) +
                  t559) -
                 t195_tmp * 937.5) -
                t196_tmp * 937.5) +
               11.416666666666666) -
        t6 * (((((((((eta * 265.625 - t257) + t362) - t289) + t402) + t440) +
                 t442) +
                zeta * 265.625) -
               t48_tmp * 937.5) -
              46.875)) +
       1.0);
  sfvals[1] = (((t6 * -10.416666666666666 + t7 * 36.458333333333336) -
                t8 * 52.083333333333336) +
               t378) +
              xi;
  sfvals[2] = (((eta - t2 * 10.416666666666666) + t3 * 36.458333333333336) -
               t4 * 52.083333333333336) +
              t349;
  sfvals[3] = (((t10 * -10.416666666666666 + t11 * 36.458333333333336) -
                t12 * 52.083333333333336) +
               t389) +
              zeta;
  b_sfvals_tmp = t181 - t128;
  sfvals[4] =
      (((t384 + t8 * (t693_tmp - 364.58333333333331)) + t6 * t702) +
       t710 * xi) +
      t7 * ((((b_sfvals_tmp - t153) + t262) + t294) + 369.79166666666669);
  sfvals[5] =
      (((-t382 - t8 * ((t123 + t148) - 677.08333333333326)) -
        t7 * (((((eta * -1406.25 + t181) + t262) + t294) - zeta * 1406.25) +
              614.58333333333326)) -
       t6 * (((((((((t317 + t339) + t344) - t262) + t362) - t294) + t402) +
               t440) +
              t442) -
             222.91666666666671)) +
      t692 * xi;
  sfvals[6] =
      (((t382 + t8 * (t693_tmp - 625.0)) -
        t6 * (((((eta * -322.91666666666669 + t175) + t253) + t285) -
               zeta * 322.91666666666669) +
              162.5)) +
       t657 * xi) +
      t7 * (((((t182 - t123) - t148) + t361) + t401) + 510.41666666666669);
  sfvals[7] = (((-t384 - t6 * ((t210 + t232) - 63.541666666666671)) +
                t7 * ((t114 + t139) - 213.54166666666671)) -
               t8 * (sfvals_tmp - 286.45833333333331)) +
              t583 * xi;
  sfvals[8] = ((t552 - t549_tmp * 156.25) + t6 * t210) - t25 * xi;
  sfvals_tmp = t7 * (t207 - t361);
  c_sfvals_tmp = -t68 + t253;
  sfvals[9] = (-t6 * c_sfvals_tmp - sfvals_tmp) + t581 * xi;
  sfvals[10] = t647 - xi * ((t26 - t160) + t348);
  d_sfvals_tmp = t650 * xi;
  sfvals[11] = d_sfvals_tmp;
  sfvals[12] = ((((((((t2 * 63.541666666666671 - t3 * 213.54166666666671) +
                      t4 * 286.45833333333331) +
                     t46) -
                    t25) -
                   t365) +
                  t429) +
                 t544) -
                d_sfvals_tmp) -
               t196_tmp * 57.291666666666671;
  sfvals[13] = ((((((((((((eta * 16.666666666666668 - t2 * 162.5) +
                          t3 * 510.41666666666669) -
                         t4 * 625.0) +
                        t169) +
                       t327) +
                      t363) +
                     t451) +
                    t566) +
                   t572) +
                  t647) +
                 t689 * xi) -
                t332_tmp * 781.25) +
               t366 * zeta;
  sfvals[14] =
      (((((((((((((((t2 * 222.91666666666671 - t3 * 614.58333333333326) +
                    t4 * 677.08333333333326) -
                   t14) +
                  t312) -
                 t363) +
                t11 * t207) +
               t559) +
              t570) +
             t577) -
            t6 * (((t16 + t264) - t262) + t598)) -
           xi * ((((((((t23 - t208) + t266) - t273) + t439) + t474) + t501) +
                  t506) +
                 t559)) +
          sfvals_tmp) -
         t195_tmp * 125.0) -
        t196_tmp * 739.58333333333326) -
       t516_tmp * 781.25) +
      t273 * zeta;
  sfvals[15] =
      (((((((((((((((((t2 * -160.41666666666671 + t3 * 369.79166666666669) -
                      t4 * 364.58333333333331) +
                     t14) +
                    t365) +
                   t418) +
                  t451) +
                 t517) +
                t2 * t344) +
               t552) +
              t561) +
             t11 * t265) +
            t573) -
           t331_tmp * 364.58333333333331) +
          eta * t492) +
         t6 * (((((eta * 369.79166666666669 + t264) + t320) - t271) + t435) +
               t440)) +
        t706 * xi) -
       t332_tmp * 1093.75) +
      t7 * ((eta * -364.58333333333331 + t182) + t265);
  sfvals_tmp = t182 + t10 * 520.83333333333326;
  sfvals[16] =
      (((((((((((((((((t10 * -160.41666666666671 + t11 * 369.79166666666669) -
                      t12 * 364.58333333333331) +
                     t15) +
                    t405) +
                   t418) +
                  t450) +
                 t518) +
                t539) +
               t10 * t339) +
              t560) +
             t10 * t267) +
            t573) -
           t331_tmp * 1093.75) +
          t707 * xi) -
         t332_tmp * 364.58333333333331) +
        t475 * zeta) +
       t6 * (((((t296 + t320) - t303) + t434) + t442) +
             zeta * 369.79166666666669)) +
      t7 * (sfvals_tmp - zeta * 364.58333333333331);
  d_sfvals_tmp = t7 * (t229 - t401);
  sfvals[17] =
      (((((((((((((((t10 * 222.91666666666671 - t11 * 614.58333333333326) +
                    t12 * 677.08333333333326) -
                   t15) +
                  t312) -
                 t403) +
                t3 * t229) +
               t559) +
              t569) +
             t578) -
            t6 * (((t19 + t296) - t294) + t597)) -
           xi * ((((((((t23 - t230) + t298) - t305) + t438) + t491) + t502) +
                  t505) +
                 t559)) +
          d_sfvals_tmp) -
         t195_tmp * 739.58333333333326) -
        t515_tmp * 781.25) +
       eta * t305) -
      t196_tmp * 125.0;
  sfvals[18] =
      ((((((((((((t10 * -162.5 + t11 * 510.41666666666669) - t12 * 625.0) +
                t169) +
               t328) +
              t403) +
             t450) +
            t566) +
           t571) +
          t648) +
         zeta * 16.666666666666668) -
        t331_tmp * 781.25) +
       eta * t406) +
      t691 * xi;
  e_sfvals_tmp = t654 * xi;
  sfvals[19] = ((((((((t10 * 63.541666666666671 - t11 * 213.54166666666671) +
                      t12 * 286.45833333333331) +
                     t46) -
                    t35) -
                   t405) +
                  t428) +
                 t543) -
                t195_tmp * 57.291666666666671) -
               e_sfvals_tmp;
  sfvals[20] = ((t539 + t6 * t232) - t35 * xi) - t536_tmp * 156.25;
  f_sfvals_tmp = -t79 + t285;
  sfvals[21] = (-t6 * f_sfvals_tmp - d_sfvals_tmp) + t582 * xi;
  sfvals[22] = t648 - xi * ((t36 - t165) + t388);
  sfvals[23] = e_sfvals_tmp;
  d_sfvals_tmp = t332_tmp * 156.25;
  sfvals[24] = ((t518 + t2 * t232) - d_sfvals_tmp) + -6.25 * zeta * eta;
  sfvals[25] = ((((t96 + t327) + t566) + t572) + t2 * t79) -
               t332_tmp * 52.083333333333336;
  sfvals[26] =
      ((((t96 + t328) + t566) + t571) - t331_tmp * 52.083333333333336) +
      t10 * t68;
  e_sfvals_tmp = t331_tmp * 156.25;
  sfvals[27] = ((t517 - e_sfvals_tmp) + t10 * t210) + -6.25 * eta * zeta;
  g_sfvals_tmp = t48_tmp * 2500.0;
  h_sfvals_tmp = t196_tmp * 2500.0;
  i_sfvals_tmp = ((((-t87 + t130) + t200) + t261) + t434) - g_sfvals_tmp;
  sfvals[28] =
      ((t551 - t6 * i_sfvals_tmp) -
       xi * (((((((((-t17 - t86) + t188) + t268) + t274) + t439) + t446) +
               t556) -
              t195_tmp * 1250.0) -
             h_sfvals_tmp)) -
      t7 * ((-t31 + t181) + t260);
  j_sfvals_tmp = t48_tmp * 281.25;
  sfvals[29] =
      ((-xi * (((((t16 + t254) - t255) + t423) + t426) - j_sfvals_tmp) +
        t6 * (((((eta * 906.25 + t264) + t324) - t277) + t435) + t440)) +
       t8 * t123) +
      t7 * (t708_tmp + t260);
  sfvals[30] = ((t551 - xi * ((t99 - t67) + t159)) +
                t6 * ((eta * -354.16666666666669 + t175) + t251)) -
               t7 * ((eta * -833.33333333333326 + t182) + t265);
  sfvals[31] =
      (-t7 * t588 + t658 * xi) - t6 * (((eta * 187.5 + t264) - t271) + t598);
  sfvals[32] = -t6 * t624 - xi * ((((-t67 + t258) - t259) + t268) + t641);
  sfvals[33] = (t7 * t588 + t6 * t664) + t694 * xi;
  k_sfvals_tmp = t195_tmp * 2500.0;
  l_sfvals_tmp = ((((-t93 + t155) + t199) + t293) + t435) - g_sfvals_tmp;
  sfvals[34] =
      ((t538 - t6 * l_sfvals_tmp) -
       xi * (((((((((-t20 - t92) + t188) + t300) + t306) + t438) + t447) +
               t556) -
              k_sfvals_tmp) -
             t196_tmp * 1250.0)) -
      t7 * ((-t41 + t181) + t292);
  sfvals[35] =
      ((-xi * (((((t19 + t286) - t287) + t422) + t427) - j_sfvals_tmp) +
        t8 * t148) +
       t6 * (((((t296 + t324) - t309) + t434) + t442) + zeta * 906.25)) +
      t7 * ((t181 - t146) + t292);
  sfvals[36] = ((t538 - xi * ((t99 - t78) + t164)) +
                t6 * ((t175 + t283) - zeta * 354.16666666666669)) -
               t7 * (sfvals_tmp - zeta * 833.33333333333326);
  sfvals[37] =
      (-t7 * t590 + t659 * xi) - t6 * (((t296 - t303) + t597) + zeta * 187.5);
  sfvals[38] = -t6 * t629 - xi * ((((-t78 + t290) - t291) + t300) + t640);
  sfvals[39] = (t7 * t590 + t6 * t667) + t695 * xi;
  sfvals[40] = (t7 * t182 + t6 * t310) + t99 * xi;
  sfvals[41] = t615 + t593 * xi;
  sfvals_tmp = t641 * xi;
  sfvals[42] = sfvals_tmp;
  j_sfvals_tmp = t48_tmp * 31.25;
  m_sfvals_tmp = t10 * -t114;
  sfvals_tmp_tmp = t502 + t559;
  n_sfvals_tmp = xi * ((sfvals_tmp_tmp + j_sfvals_tmp) + m_sfvals_tmp);
  sfvals[43] = n_sfvals_tmp;
  o_sfvals_tmp = t640 * xi;
  sfvals[44] = o_sfvals_tmp;
  sfvals[45] = t614 + xi * (j_sfvals_tmp + m_sfvals_tmp);
  sfvals[46] = ((((((t99 + t516) + t554) - t195_tmp * 41.666666666666664) -
                  t570_tmp * 520.83333333333326) -
                 sfvals_tmp) -
                t196_tmp * 354.16666666666669) +
               t259 * zeta;
  sfvals[47] =
      (((((((((t48 + t4 * t148) + t508) + t10 * t261) + t560) + t574) + t615) -
         e_sfvals_tmp) +
        t10 * t116) +
       t673 * xi) +
      t269 * zeta;
  sfvals[48] =
      (((((((((((t23 + t515) + t516) - t195_tmp * 979.16666666666674) -
              t569_tmp * 1562.5) -
             t570_tmp * 1562.5) +
            t11 * t31) +
           t3 * t41) +
          t10 * t87) +
         t7 * (t48_tmp * -520.83333333333326)) -
        t196_tmp * 979.16666666666674) -
       t6 * ((t434 + t435) - t48_tmp * 1250.0)) -
      xi * (((((t188 + t438) + t439) + t464) - k_sfvals_tmp) - h_sfvals_tmp);
  sfvals[49] =
      (((((((((t48 + t12 * t123) + t507) + t11 * t260) + t561) + t574) + t614) +
         eta * t301) +
        t2 * t141) +
       t674 * xi) -
      d_sfvals_tmp;
  sfvals[50] =
      ((((((t99 + t515) + t554) - t195_tmp * 354.16666666666669) + eta * t291) -
        t569_tmp * 520.83333333333326) -
       o_sfvals_tmp) -
      t196_tmp * 41.666666666666664;
  sfvals[51] = (((((((t102 + t428) + t429) + t10 * t271) + t569) + t570) -
                 t195_tmp * 187.5) -
                t196_tmp * 187.5) -
               n_sfvals_tmp;
  sfvals_tmp = t199 + t200;
  sfvals[52] = (t7 * t181 + t687 * xi) + t6 * (sfvals_tmp - t48_tmp * 2812.5);
  sfvals[53] = (t7 * t317 + t643 * xi) - t6 * ((-t55 + t434) + t435);
  sfvals[54] = -xi * ((((t175 - t196) + t439) + t497) + t556) + t6 * t603_tmp;
  sfvals[55] = t6 * t602_tmp - xi * ((((t175 - t195) + t438) + t498) + t556);
  t711 = (-t606 + -xi * (((t20 + t293) - t292) + t595)) +
         ((((((((t49 + t230) + t305) - t298) + t427) + t434) + t507) - t491) +
          t568);
  t712 = (-t604 + -xi * (((t17 + t261) - t260) + t596)) +
         ((((((((t49 + t208) + t273) - t266) + t426) + t435) + t508) - t474) +
          t568);
  t602_tmp = t57 - t127;
  t713 = ((t280 + t7 * (b_t708_tmp - 1093.75)) +
          t6 * ((((t602_tmp - t152) + t260) + t292) + 739.58333333333326)) +
         t702 * xi;
  t714 = ((t534 + t6 * (b_sfvals_tmp + t260)) +
          (((((t200 + t261) + t319) + t339) - t270) + t434) * xi) +
         t706;
  t715 = ((t466 + t6 * ((t181 - t153) + t292)) +
          (((((t199 + t293) + t319) + t344) - t302) + t435) * xi) +
         t707;
  t716 = (((-t383 + -t7 * (t693_tmp - 312.5)) +
           -t6 * (((((-t117 - t142) + t181) + t262) + t294) + 265.625)) +
          -xi * (((((((((-t55 + t120) + zeta * 531.25) - t2 * 937.5) + t267) -
                     t10 * 937.5) +
                    t299) +
                   t434) +
                  t435) -
                 93.75)) +
         ((((((((((((((t71 + t82) + t252) + t284) + t48_tmp * -531.25) +
                   t10 * t117) +
                  t2 * t142) -
                 t353) -
                t364) -
               t393) -
              t404) +
             t511) +
            t512) +
           t568) -
          11.416666666666666);
  t703 = t637 + t691;
  t704 = t636 + t689;
  sdvals[0] = t716;
  sdvals[1] = t716;
  sdvals[2] = t716;
  sdvals[3] = (((t6 * 109.375 - t7 * 208.33333333333334) + t383) +
               -20.833333333333332 * xi) +
              1.0;
  sdvals[4] = 0.0;
  sdvals[5] = 0.0;
  sdvals[6] = 0.0;
  sdvals[7] = (((t2 * 109.375 - t3 * 208.33333333333334) - t69) + t364) + 1.0;
  sdvals[8] = 0.0;
  sdvals[9] = 0.0;
  sdvals[10] = 0.0;
  sdvals[11] =
      (((t10 * 109.375 - t11 * 208.33333333333334) - t80) + t404) + 1.0;
  t536_tmp = t131 + t156;
  sdvals[12] =
      (((t483 + t710) + t7 * (t536_tmp - 1458.333333333333)) +
       t6 * (((((eta * -3281.25 + t326) + t376) + t416) - zeta * 3281.25) +
             1109.375)) +
      xi * (((((((((-t59 + t199) + t200) + t226) + t248) + t263) + t295) -
              t270) -
             t302) -
            320.83333333333331);
  sdvals[13] = t713;
  sdvals[14] = t713;
  sdvals[15] =
      (((-t482 + t692) - t7 * ((t33 + t43) - 2708.333333333333)) -
       t6 * (((((eta * -4218.75 + t326) + t376) + t416) - zeta * 4218.75) +
             1843.75)) -
      xi * (((((((((t105 + t226) + t248) + t267) + t299) - t260) - t292) +
              t434) +
             t435) -
            445.83333333333331);
  sdvals[16] = t708;
  sdvals[17] = t708;
  sdvals[18] =
      (((t482 + t657) + t7 * (t536_tmp - 2500.0)) +
       t6 * (((((eta * -2343.75 + t181) + t262) + t294) - zeta * 2343.75) +
             1531.25)) -
      xi * (((((t51 - t126) - t151) + t251) + t283) + 325.0);
  sdvals[19] = t693;
  sdvals[20] = t693;
  sdvals[21] = (((-t483 + t583) + t6 * ((t118 + t143) - 640.625)) -
                t7 * (t693_tmp - 1145.833333333333)) -
               xi * ((t209 + t231) - 127.0833333333333);
  sdvals[22] = t651;
  sdvals[23] = t651;
  t536_tmp = eta * t6;
  sdvals[24] = ((-t25 + t534) - t536_tmp * 468.75) + t209 * xi;
  sdvals[25] = t652;
  sdvals[26] = 0.0;
  sdvals[27] = (t581 + t604) + xi * (t66 - t251);
  t516_tmp = t7 * (t124 - 52.083333333333336);
  sdvals[28] =
      (-t6 * (t113 - 31.25) + t516_tmp) + xi * (t67 - 4.166666666666667);
  sdvals[29] = 0.0;
  sdvals[30] = t623 + t636;
  sdvals[31] = t625 - xi * ((-t66 + t253) + 4.166666666666667);
  sdvals[32] = 0.0;
  sdvals[33] = t650;
  t515_tmp = xi * (((t209 + t267) - t257) - 6.25);
  sdvals[34] = t515_tmp;
  sdvals[35] = 0.0;
  sdvals[36] = t649;
  sdvals[37] = ((((((((eta * 127.0833333333333 - t2 * 640.625) +
                      t3 * 1145.833333333333) +
                     t35) +
                    t417) +
                   t433) -
                  t479) +
                 t512) -
                t515_tmp) -
               6.25;
  sdvals[38] = t649;
  sdvals[39] = t704;
  t515_tmp = t78 + t104;
  sdvals[40] =
      ((((((((((((eta * -325.0 + t2 * 1531.25) - t3 * 2500.0) - t76) + t166) +
              t184) +
             t459) +
            t478) +
           t497) +
          t559) +
         t625) -
        t196_tmp * 2343.75) +
       xi * (((((t515_tmp + t126) + t275) + t435) - t376) - 37.5)) +
      16.666666666666668;
  sdvals[41] = t704;
  sdvals[42] = t712;
  sdvals[43] =
      (((((((((((((((eta * 445.83333333333331 - t2 * 1843.75) +
                    t3 * 2708.333333333333) -
                   t45) +
                  t230) +
                 t332) +
                t388) +
               t419) +
              t434) -
             t478) +
            t511) +
           t580) -
          xi * ((((((((t2 * -4218.75 + t20) + t89) + t105) + t226) - t285) +
                  t434) +
                 t532) -
                97.916666666666671)) +
         t196_tmp * 4218.75) -
        t6 * (((-t121 + t376) + t587) + 125.0)) -
       t516_tmp) -
      25.0;
  sdvals[44] = t712;
  sdvals[45] = t714;
  t516_tmp = t122 + t149;
  sdvals[46] =
      (((((((((((((((((eta * -320.83333333333331 + t2 * 1109.375) -
                      t3 * 1458.333333333333) +
                     t325) -
                    t234) +
                   t383) +
                  t404) +
                 t11 * t122) +
                t459) +
               t479) -
              t410) +
             t492) +
            t519) +
           t576) +
          t7 * (t516_tmp - 364.58333333333331)) -
         t196_tmp * 3281.25) +
        t6 * ((((t602_tmp - t153) + t294) + t376) + 369.79166666666669)) +
       xi * (((((((((t2 * -3281.25 - t59) + t199) + t226) + t275) + t299) +
                t344) -
               t303) +
              t532) -
             160.41666666666671)) +
      25.0;
  sdvals[47] = t714;
  sdvals[48] = t715;
  sdvals[49] = t715;
  b_sfvals_tmp = t124 + t147;
  sdvals[50] =
      (((((((((((((((((t10 * 1109.375 - t11 * 1458.333333333333) + t325) -
                     t212) +
                    t364) +
                   t383) +
                  t3 * t147) +
                 t458) -
                t370) +
               t475) +
              t496) +
             t520) +
            t576) -
           zeta * 320.83333333333331) +
          t7 * (b_sfvals_tmp - 364.58333333333331)) -
         t195_tmp * 3281.25) +
        t6 * (((((t57 - t128) - t152) + t262) + t416) + 369.79166666666669)) +
       xi * (((((((((t10 * -3281.25 - t59) + t200) + t248) + t267) + t307) +
                t339) -
               t271) +
              t531) -
             160.41666666666671)) +
      25.0;
  sdvals[51] = t711;
  sdvals[52] = t711;
  t549_tmp = t7 * (t149 - 52.083333333333336);
  sdvals[53] =
      (((((((((((((((t10 * -1843.75 + t11 * 2708.333333333333) - t44) + t208) +
                  t331) +
                 t348) +
                t419) +
               t435) -
              t495) +
             t512) +
            t580) +
           zeta * 445.83333333333331) -
          xi * ((((((((t10 * -4218.75 + t17) + t95) + t105) + t248) - t253) +
                  t435) +
                 t531) -
                97.916666666666671)) +
         t195_tmp * 4218.75) -
        t6 * (((-t146 + t416) + t585) + 125.0)) -
       t549_tmp) -
      25.0;
  sdvals[54] = t703;
  sdvals[55] = t703;
  t708_tmp = t67 + t104;
  sdvals[56] =
      ((((((((((((t10 * 1531.25 - t11 * 2500.0) - t65) + t161) + t184) + t458) +
             t495) +
            t498) +
           t559) +
          t627) -
         zeta * 325.0) -
        t195_tmp * 2343.75) +
       xi * (((((t708_tmp + t151) + t307) + t434) - t416) - 37.5)) +
      16.666666666666668;
  sdvals[57] = t653;
  sdvals[58] = t653;
  d_sfvals_tmp = xi * (((t231 + t299) - t289) - 6.25);
  sdvals[59] =
      ((((((((t10 * -640.625 + t11 * 1145.833333333333) + t25) + t417) + t432) -
          t496) +
         t511) +
        zeta * 127.0833333333333) -
       d_sfvals_tmp) -
      6.25;
  e_sfvals_tmp = t6 * zeta;
  sdvals[60] = ((-t35 + t466) + t231 * xi) - e_sfvals_tmp * 468.75;
  sdvals[61] = 0.0;
  sdvals[62] = t652;
  sdvals[63] = (t582 + t606) + xi * (t77 - t283);
  sdvals[64] = 0.0;
  sdvals[65] =
      (-t6 * (t138 - 31.25) + t549_tmp) + xi * (t78 - 4.166666666666667);
  sdvals[66] = t628 + t637;
  sdvals[67] = 0.0;
  sdvals[68] = t627 - xi * ((-t77 + t285) + 4.166666666666667);
  sdvals[69] = t654;
  sdvals[70] = 0.0;
  sdvals[71] = d_sfvals_tmp;
  sdvals[72] = 0.0;
  t549_tmp = t196_tmp * 468.75;
  sdvals[73] = ((-t35 + t313) + t447) - t549_tmp;
  sdvals[74] = t650;
  sdvals[75] = 0.0;
  sdvals[76] = (((t98 + t497) + t502) + t559) + t582;
  sdvals[77] = t623 + t641;
  sdvals[78] = 0.0;
  sdvals[79] = t628 + t640;
  sdvals[80] = (((t98 + t498) + t501) + t559) + t581;
  sdvals[81] = 0.0;
  sdvals[82] = t654;
  d_sfvals_tmp = t195_tmp * 468.75;
  sdvals[83] = ((-t25 + t313) + t446) - d_sfvals_tmp;
  j_sfvals_tmp = t17 + t86;
  sdvals[84] =
      ((t553 +
        ((((((((j_sfvals_tmp + t10 * t31) + t198) + t322) - t268) - t274) +
           t508) +
          t511) +
         t567)) -
       xi * (((((t2 * -5000.0 - t60) + t89) + t129) + t199) + t204)) -
      t6 * ((eta * -3750.0 + t326) + t375);
  h_sfvals_tmp = t33 + t146;
  sdvals[85] =
      ((-t280 - t7 * (h_sfvals_tmp - 1250.0)) -
       t6 * (((((eta * -5000.0 - t42) + t62) + t292) + t375) +
             979.16666666666674)) -
      xi *
          (((((((((t2 * -3750.0 - t10 * 1250.0) - t60) + t129) + t155) + t199) +
              t275) +
             t299) +
            t532) -
           250.0);
  sdvals[86] = (t549 - xi * i_sfvals_tmp) - t6 * ((-t32 + t57) + t88);
  sdvals[87] = ((((((t694_tmp + t255) - t254) + t498) + t501) + t7 * t33) +
                t6 * ((eta * -4687.5 + t326) + t375)) +
               xi * (((((t125 + t200) + t261) + t323) - t276) + t434);
  k_sfvals_tmp = t57 - eta * 3437.5;
  sdvals[88] = ((t279 + t7 * (h_sfvals_tmp - 1562.5)) -
                xi * (((((t51 - t115) - t141) + t257) + t285) + 125.0)) +
               t6 * ((((k_sfvals_tmp - t158) + t294) + t376) + 906.25);
  sdvals[89] =
      (t533 + t6 * ((t181 - t133) + t260)) - xi * ((-t116 + t175) + t251);
  sdvals[90] = ((t553 + ((t67 + t170) - t159)) + xi * ((t51 + t85) - t119)) -
               t6 * ((-t32 + t181) + t260);
  sdvals[91] = ((-t280 + t6 * ((t30 + t138) - 354.16666666666669)) -
                t7 * (t516_tmp - 833.33333333333326)) -
               xi * ((t70 + t78) - 41.666666666666664);
  t516_tmp = t67 * xi;
  sdvals[92] = (t550 + t6 * t113) - t516_tmp;
  h_sfvals_tmp = t6 * (-t118 + t376);
  sdvals[93] = (t658 - xi * (((t18 + t261) - t270) + t596)) - h_sfvals_tmp;
  o_sfvals_tmp = t7 * (t121 - 156.25);
  sdvals[94] = (xi * ((((-t18 - t79) + t175) + t257) + 31.25) -
                t6 * (((-t127 + t376) + t587) + 187.5)) -
               o_sfvals_tmp;
  n_sfvals_tmp = xi * c_sfvals_tmp;
  sdvals[95] = -t604 + n_sfvals_tmp;
  sdvals[96] =
      ((((t67 + t259) - t258) - t268) + t645) - xi * ((t70 - t85) + t263);
  sdvals[97] = -xi * ((((((t78 - t87) + t104) + t119) + t275) + t435) -
                      41.666666666666664) -
               t6 * ((-t30 + t260) + 41.666666666666664);
  sdvals[98] = -t636;
  sdvals[99] =
      (t694 + h_sfvals_tmp) + xi * ((((t89 + t104) + t115) + t200) - t276);
  sdvals[100] =
      (t6 * (((k_sfvals_tmp - t138) + t375) + 281.25) + o_sfvals_tmp) +
      xi * ((((((((t89 + t125) + t141) + t323) - t285) + t434) - t375) + t532) -
            125.0);
  h_sfvals_tmp = -t113 + t260;
  sdvals[101] = t6 * h_sfvals_tmp + t664 * xi;
  k_sfvals_tmp = t326 + t415;
  o_sfvals_tmp = t20 + t92;
  sdvals[102] =
      ((t540 +
        ((((((((o_sfvals_tmp + t2 * t41) + t197) + t322) - t300) - t306) +
           t507) +
          t512) +
         t567)) -
       xi * (((((t10 * -5000.0 - t60) + t95) + t154) + t200) + t203)) -
      t6 * (k_sfvals_tmp - zeta * 3750.0);
  sdvals[103] = (t536 - xi * l_sfvals_tmp) - t6 * ((-t42 + t57) + t94);
  m_sfvals_tmp = t43 + t121;
  sdvals[104] =
      ((-t280 - t7 * (m_sfvals_tmp - 1250.0)) -
       t6 * (((((-t32 + t62) + t260) + t415) - zeta * 5000.0) +
             979.16666666666674)) -
      xi *
          (((((((((t2 * -1250.0 - t10 * 3750.0) - t60) + t130) + t154) + t200) +
              t267) +
             t307) +
            t531) -
           250.0);
  sdvals[105] = ((((((t695_tmp + t287) - t286) + t497) + t502) + t7 * t43) +
                 xi * (((((t150 + t199) + t293) + t323) - t308) + t435)) +
                t6 * (k_sfvals_tmp - zeta * 4687.5);
  sdvals[106] =
      (t465 + t6 * ((t181 - t158) + t292)) - xi * ((-t141 + t175) + t283);
  sdvals[107] = ((t279 + t7 * (m_sfvals_tmp - 1562.5)) -
                 xi * (((((t51 - t116) - t140) + t253) + t289) + 125.0)) +
                t6 * (((((t57 - t133) - t157) + t262) + t416) + 906.25);
  sdvals[108] = ((t540 + ((t78 + t170) - t164)) + xi * ((t51 + t91) - t144)) -
                t6 * ((-t42 + t181) + t292);
  k_sfvals_tmp = t78 * xi;
  sdvals[109] = (t537 + t6 * t138) - k_sfvals_tmp;
  sdvals[110] = ((-t280 + t6 * ((t40 + t113) - 354.16666666666669)) -
                 t7 * (b_sfvals_tmp - 833.33333333333326)) -
                xi * ((t67 + t81) - 41.666666666666664);
  b_sfvals_tmp = t6 * (-t143 + t416);
  sdvals[111] = (t659 - xi * (((t21 + t293) - t302) + t595)) - b_sfvals_tmp;
  m_sfvals_tmp = xi * f_sfvals_tmp;
  sdvals[112] = -t606 + m_sfvals_tmp;
  t602_tmp = t7 * (t146 - 156.25);
  sdvals[113] = (xi * ((((-t21 - t68) + t175) + t289) + 31.25) -
                 t6 * (((-t152 + t416) + t585) + 187.5)) -
                t602_tmp;
  sdvals[114] =
      ((((t78 + t291) - t290) - t300) + t644) - xi * ((t81 - t91) + t295);
  sdvals[115] = -t637;
  sdvals[116] = -xi * ((((((t67 - t93) + t104) + t144) + t307) + t434) -
                       41.666666666666664) -
                t6 * ((-t40 + t292) + 41.666666666666664);
  sdvals[117] =
      (t695 + b_sfvals_tmp) + xi * ((((t95 + t104) + t140) + t199) - t308);
  b_sfvals_tmp = -t138 + t292;
  sdvals[118] = t6 * b_sfvals_tmp + t667 * xi;
  sdvals[119] =
      (t6 * ((((t57 - t113) - t157) + t415) + 281.25) + t602_tmp) +
      xi * ((((((((t95 + t116) + t150) + t323) - t253) + t435) - t415) + t531) -
            125.0);
  sdvals[120] = (t99 + t6 * t181) + t104 * xi;
  sdvals[121] = (t466 + k_sfvals_tmp) - e_sfvals_tmp * 312.5;
  sdvals[122] = (t534 - t536_tmp * 312.5) + t516_tmp;
  sdvals[123] = t593 + t603;
  sdvals[124] = t600 + xi * (t79 + t310);
  sdvals[125] = t604 - n_sfvals_tmp;
  sdvals[126] = t641;
  t516_tmp = xi * (t515_tmp + t435);
  sdvals[127] = t516_tmp;
  sdvals[128] = t636;
  sdvals[129] = sfvals_tmp_tmp + t592;
  t515_tmp = ((-t79 + t175) + t285) + t505;
  sdvals[130] = -xi * t515_tmp;
  e_sfvals_tmp = ((-t68 + t175) + t253) + t506;
  sdvals[131] = -xi * e_sfvals_tmp;
  sdvals[132] = t640;
  sdvals[133] = t637;
  t708_tmp = xi * (t708_tmp + t434);
  sdvals[134] = t708_tmp;
  sdvals[135] = t592 + t602;
  sdvals[136] = t606 - m_sfvals_tmp;
  sdvals[137] = t599 + xi * (t68 + t310);
  sdvals[138] = t645;
  sdvals[139] =
      ((((((t78 + t191) + t198) - t164) + t315) + t526) + t567) - t516_tmp;
  sdvals[140] = ((((((t67 + t174) + t192) + t259) - t258) - t268) - t636) -
                t332_tmp * 1041.666666666667;
  sdvals[141] = t603 + t673;
  sdvals[142] = (((((((((-t19 + t183) + t202) + t287) - t286) + t438) + t527) +
                   t196_tmp * -4687.5) +
                  t575) +
                 t600) +
                xi * ((((t141 + t199) + t323) - t283) + t532);
  sdvals[143] =
      (((((((((-t16 + t177) + t202) + t266) + t269) - t261) + t528) + t576) +
        t604) -
       d_sfvals_tmp) +
      xi * ((((t104 + t116) + t200) + t261) - t277);
  sdvals[144] =
      ((((((t197 + t198) + t322) + t507) + t508) + t566_tmp * -3125.0) +
       t6 * t317) -
      xi * (sfvals_tmp - g_sfvals_tmp);
  sdvals[145] =
      ((((((((((o_sfvals_tmp + t321) + t331) - t300) - t306) + t526) + t537) +
          t579) +
         t195_tmp * 5000.0) +
        t196_tmp * 3750.0) -
       xi * (((((-t60 - t93) + t155) + t203) + t293) + t532)) -
      t6 * ((-t41 + t57) + t292);
  sdvals[146] =
      ((((((((((j_sfvals_tmp + t321) + t332) - t268) - t274) + t525) + t550) +
          t579) +
         t195_tmp * 3750.0) +
        t196_tmp * 5000.0) -
       xi * (((((-t60 - t87) + t130) + t204) + t261) + t531)) -
      t6 * ((-t31 + t57) + t260);
  sdvals[147] = t602 + t674;
  sdvals[148] =
      (((((((((-t19 + t177) + t201) + t298) + t301) - t293) + t527) + t576) +
        t606) -
       t549_tmp) +
      xi * ((((t104 + t141) + t199) + t293) - t309);
  sdvals[149] = (((((((((-t16 + t183) + t201) + t255) - t254) + t439) + t528) +
                   t195_tmp * -4687.5) +
                  t575) +
                 t599) +
                xi * ((((t116 + t200) + t323) - t251) + t531);
  sdvals[150] = t644;
  sdvals[151] = ((((((t78 + t174) + t191) + t291) - t290) - t300) - t637) -
                t331_tmp * 1041.666666666667;
  sdvals[152] =
      ((((((t67 + t192) + t197) - t159) + t315) + t525) + t567) - t708_tmp;
  sdvals[153] = ((t173 + t426) + t427) + t568;
  sdvals[154] =
      (((((((t50 + t79) - t167) + t286) + t433) + t10 * t127) + t507) + t580) +
      xi * t515_tmp;
  sdvals[155] =
      (((((((t50 + t68) - t162) + t254) + t432) + t2 * t152) + t508) + t580) +
      xi * e_sfvals_tmp;
  sdvals[156] = (t687 + t6 * t326) + xi * ((-t61 + t203) + t204);
  sdvals[157] =
      (t465 + xi * (((((t10 * -2812.5 + t41) - t61) + t203) + t293) + t532)) +
      t6 * ((t62 + t94) - zeta * 2812.5);
  sdvals[158] =
      (t533 + xi * (((((t2 * -2812.5 + t31) - t61) + t204) + t261) + t531)) +
      t6 * ((eta * -2812.5 + t62) + t88);
  sdvals[159] = (t643 - xi * ((-t58 + t199) + t200)) - t536_tmp * zeta * 4687.5;
  sdvals[160] =
      (t536 + xi * ((t51 - t138) + t283)) - t6 * ((t57 + t292) - zeta * 1875.0);
  sdvals[161] =
      (t549 + xi * ((t51 - t113) + t251)) - t6 * ((eta * -1875.0 + t57) + t260);
  sdvals[162] =
      ((((t196 + t310) + t422) + t508) + t567) + xi * (t51 + t2 * -t43);
  sdvals[163] =
      t6 * (t105 + t138) - xi * ((((-t58 + t138) + t199) - t283) + t532);
  sdvals[164] = -t6 * h_sfvals_tmp -
                xi * ((((t2 * -1875.0 + t104) + t113) + t200) + t261);
  sdvals[165] =
      ((((t195 + t310) + t423) + t507) + t567) + xi * (eta * t40 + t10 * -t33);
  sdvals[166] = -t6 * b_sfvals_tmp -
                xi * ((((t10 * -1875.0 + t104) + t138) + t199) + t293);
  sdvals[167] =
      t6 * (t105 + t113) - xi * ((((-t58 + t113) + t200) - t251) + t531);
}

// tet_84_ncoords - Obtain nodal coordinates in master element for tet_84
void tet_84_ncoords(double natcoords[252])
{
  static const double dv[252]{0.0,
                              0.0,
                              0.0,
                              1.0,
                              0.0,
                              0.0,
                              0.0,
                              1.0,
                              0.0,
                              0.0,
                              0.0,
                              1.0,
                              0.16666666666666671,
                              0.0,
                              0.0,
                              0.33333333333333331,
                              0.0,
                              0.0,
                              0.5,
                              0.0,
                              0.0,
                              0.66666666666666663,
                              0.0,
                              0.0,
                              0.83333333333333337,
                              0.0,
                              0.0,
                              0.83333333333333337,
                              0.16666666666666671,
                              0.0,
                              0.66666666666666663,
                              0.33333333333333331,
                              0.0,
                              0.5,
                              0.5,
                              0.0,
                              0.33333333333333331,
                              0.66666666666666663,
                              0.0,
                              0.16666666666666671,
                              0.83333333333333337,
                              0.0,
                              0.0,
                              0.83333333333333337,
                              0.0,
                              0.0,
                              0.66666666666666663,
                              0.0,
                              0.0,
                              0.5,
                              0.0,
                              0.0,
                              0.33333333333333331,
                              0.0,
                              0.0,
                              0.16666666666666671,
                              0.0,
                              0.0,
                              0.0,
                              0.16666666666666671,
                              0.0,
                              0.0,
                              0.33333333333333331,
                              0.0,
                              0.0,
                              0.5,
                              0.0,
                              0.0,
                              0.66666666666666663,
                              0.0,
                              0.0,
                              0.83333333333333337,
                              0.83333333333333337,
                              0.0,
                              0.16666666666666671,
                              0.66666666666666663,
                              0.0,
                              0.33333333333333331,
                              0.5,
                              0.0,
                              0.5,
                              0.33333333333333331,
                              0.0,
                              0.66666666666666663,
                              0.16666666666666671,
                              0.0,
                              0.83333333333333337,
                              0.0,
                              0.83333333333333337,
                              0.16666666666666671,
                              0.0,
                              0.66666666666666663,
                              0.33333333333333331,
                              0.0,
                              0.5,
                              0.5,
                              0.0,
                              0.33333333333333331,
                              0.66666666666666663,
                              0.0,
                              0.16666666666666671,
                              0.83333333333333337,
                              0.16666666666666671,
                              0.16666666666666671,
                              0.0,
                              0.33333333333333331,
                              0.16666666666666671,
                              0.0,
                              0.5,
                              0.16666666666666671,
                              0.0,
                              0.66666666666666663,
                              0.16666666666666671,
                              0.0,
                              0.5,
                              0.33333333333333331,
                              0.0,
                              0.33333333333333331,
                              0.5,
                              0.0,
                              0.16666666666666671,
                              0.66666666666666663,
                              0.0,
                              0.16666666666666671,
                              0.5,
                              0.0,
                              0.16666666666666671,
                              0.33333333333333331,
                              0.0,
                              0.33333333333333331,
                              0.33333333333333331,
                              0.0,
                              0.16666666666666671,
                              0.0,
                              0.16666666666666671,
                              0.33333333333333331,
                              0.0,
                              0.16666666666666671,
                              0.5,
                              0.0,
                              0.16666666666666671,
                              0.66666666666666663,
                              0.0,
                              0.16666666666666671,
                              0.5,
                              0.0,
                              0.33333333333333331,
                              0.33333333333333331,
                              0.0,
                              0.5,
                              0.16666666666666671,
                              0.0,
                              0.66666666666666663,
                              0.16666666666666671,
                              0.0,
                              0.5,
                              0.16666666666666671,
                              0.0,
                              0.33333333333333331,
                              0.33333333333333331,
                              0.0,
                              0.33333333333333331,
                              0.66666666666666663,
                              0.16666666666666671,
                              0.16666666666666671,
                              0.5,
                              0.33333333333333331,
                              0.16666666666666671,
                              0.33333333333333331,
                              0.5,
                              0.16666666666666671,
                              0.16666666666666671,
                              0.66666666666666663,
                              0.16666666666666671,
                              0.16666666666666671,
                              0.5,
                              0.33333333333333331,
                              0.16666666666666671,
                              0.33333333333333331,
                              0.5,
                              0.16666666666666671,
                              0.16666666666666671,
                              0.66666666666666663,
                              0.33333333333333331,
                              0.16666666666666671,
                              0.5,
                              0.5,
                              0.16666666666666671,
                              0.33333333333333331,
                              0.33333333333333331,
                              0.33333333333333331,
                              0.33333333333333331,
                              0.0,
                              0.66666666666666663,
                              0.16666666666666671,
                              0.0,
                              0.5,
                              0.16666666666666671,
                              0.0,
                              0.33333333333333331,
                              0.16666666666666671,
                              0.0,
                              0.16666666666666671,
                              0.16666666666666671,
                              0.0,
                              0.16666666666666671,
                              0.33333333333333331,
                              0.0,
                              0.16666666666666671,
                              0.5,
                              0.0,
                              0.16666666666666671,
                              0.66666666666666663,
                              0.0,
                              0.33333333333333331,
                              0.5,
                              0.0,
                              0.5,
                              0.33333333333333331,
                              0.0,
                              0.33333333333333331,
                              0.33333333333333331,
                              0.16666666666666671,
                              0.16666666666666671,
                              0.16666666666666671,
                              0.33333333333333331,
                              0.16666666666666671,
                              0.16666666666666671,
                              0.5,
                              0.16666666666666671,
                              0.16666666666666671,
                              0.33333333333333331,
                              0.33333333333333331,
                              0.16666666666666671,
                              0.16666666666666671,
                              0.5,
                              0.16666666666666671,
                              0.16666666666666671,
                              0.33333333333333331,
                              0.16666666666666671,
                              0.16666666666666671,
                              0.16666666666666671,
                              0.33333333333333331,
                              0.33333333333333331,
                              0.16666666666666671,
                              0.33333333333333331,
                              0.16666666666666671,
                              0.33333333333333331,
                              0.33333333333333331,
                              0.16666666666666671,
                              0.16666666666666671,
                              0.5};
  std::copy(&dv[0], &dv[252], &natcoords[0]);
}

// tet_84_sfunc - Compute shape functions and their derivatives of tet_84
void tet_84_sfunc(double xi, double eta, double zeta, double sfvals[84])
{
  double b_sfvals_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double h_sfvals_tmp;
  double i_sfvals_tmp;
  double j_sfvals_tmp;
  double k_sfvals_tmp;
  double l_sfvals_tmp;
  double m_sfvals_tmp;
  double n_sfvals_tmp;
  double o_sfvals_tmp;
  double sfvals_tmp;
  double t10;
  double t1003;
  double t1004;
  double t102;
  double t103;
  double t1032;
  double t1038;
  double t1038_tmp;
  double t1039;
  double t1039_tmp;
  double t1042;
  double t1043;
  double t1048;
  double t1049;
  double t1052;
  double t1053;
  double t1060;
  double t1060_tmp;
  double t1061;
  double t1061_tmp;
  double t1063;
  double t1068;
  double t1069;
  double t1076;
  double t1077;
  double t11;
  double t1110;
  double t1111;
  double t1112;
  double t1113;
  double t1116;
  double t1117;
  double t1118;
  double t1119;
  double t1120;
  double t1121;
  double t1148;
  double t1149;
  double t115;
  double t1150;
  double t1151;
  double t116;
  double t117;
  double t1178;
  double t1198;
  double t12;
  double t120;
  double t1200;
  double t1201;
  double t1206;
  double t1207;
  double t1208;
  double t1209;
  double t1212;
  double t1213;
  double t1224;
  double t1225;
  double t1226;
  double t1227;
  double t1228;
  double t1229;
  double t1236;
  double t1237;
  double t1240;
  double t1241;
  double t125;
  double t1265;
  double t1268;
  double t1269;
  double t127;
  double t1270;
  double t1272;
  double t1273;
  double t1274;
  double t128;
  double t1280;
  double t1281;
  double t1283;
  double t1285;
  double t1286;
  double t1288;
  double t1289;
  double t129;
  double t1290;
  double t1291;
  double t1292;
  double t1295;
  double t1296;
  double t1297;
  double t1298;
  double t130;
  double t1304;
  double t1305;
  double t1306;
  double t1309;
  double t1309_tmp;
  double t131;
  double t1311;
  double t1311_tmp;
  double t1312;
  double t1312_tmp;
  double t1313;
  double t1313_tmp;
  double t1314;
  double t1315;
  double t1316;
  double t1316_tmp;
  double t1317;
  double t1317_tmp;
  double t1318;
  double t132;
  double t1320;
  double t1323;
  double t1324;
  double t1325;
  double t1326;
  double t1333;
  double t1334;
  double t1335;
  double t1336;
  double t134;
  double t1343;
  double t1344;
  double t1345;
  double t1360;
  double t1361;
  double t1362;
  double t1363;
  double t1364;
  double t1365;
  double t1369;
  double t1370;
  double t1373;
  double t138;
  double t1387;
  double t1390;
  double t14;
  double t140;
  double t1411;
  double t1414;
  double t1415;
  double t1416;
  double t1417;
  double t1418;
  double t142;
  double t1424;
  double t1427;
  double t143;
  double t1459;
  double t1460;
  double t1461;
  double t1462;
  double t1475;
  double t1476;
  double t1493;
  double t1494;
  double t1498;
  double t1499;
  double t15;
  double t150;
  double t151;
  double t1513;
  double t155;
  double t158;
  double t16;
  double t161;
  double t162;
  double t17;
  double t176;
  double t179;
  double t18;
  double t184;
  double t186;
  double t188;
  double t189;
  double t190;
  double t2;
  double t20;
  double t202;
  double t209;
  double t21;
  double t210;
  double t214;
  double t217;
  double t221;
  double t225;
  double t228;
  double t229;
  double t23;
  double t230;
  double t231;
  double t24;
  double t241;
  double t245;
  double t248;
  double t249;
  double t250;
  double t257;
  double t258;
  double t26;
  double t261;
  double t264;
  double t265;
  double t266;
  double t267;
  double t268;
  double t280;
  double t281;
  double t282;
  double t283;
  double t285;
  double t287;
  double t29;
  double t291;
  double t293;
  double t3;
  double t303;
  double t313;
  double t318;
  double t344;
  double t346;
  double t347;
  double t349;
  double t35;
  double t350;
  double t351;
  double t357;
  double t36;
  double t360;
  double t389;
  double t39;
  double t392;
  double t399;
  double t4;
  double t40;
  double t409;
  double t41;
  double t410;
  double t411;
  double t412;
  double t413;
  double t414;
  double t415;
  double t416;
  double t417;
  double t42;
  double t422;
  double t423;
  double t43;
  double t430;
  double t431;
  double t432;
  double t433;
  double t434;
  double t435;
  double t440;
  double t441;
  double t448;
  double t45;
  double t453;
  double t454;
  double t455;
  double t456;
  double t457;
  double t459;
  double t46;
  double t461;
  double t463;
  double t464;
  double t466;
  double t467;
  double t47;
  double t472;
  double t473;
  double t474;
  double t475;
  double t476;
  double t481;
  double t49;
  double t494;
  double t495;
  double t496;
  double t497;
  double t498;
  double t499;
  double t5;
  double t50;
  double t500;
  double t501;
  double t502;
  double t507;
  double t508;
  double t515;
  double t516;
  double t517;
  double t518;
  double t519;
  double t520;
  double t525;
  double t526;
  double t533;
  double t538;
  double t539;
  double t540;
  double t541;
  double t542;
  double t544;
  double t546;
  double t548;
  double t549;
  double t55;
  double t551;
  double t552;
  double t557;
  double t558;
  double t56;
  double t560;
  double t561;
  double t563;
  double t564;
  double t566;
  double t569;
  double t573;
  double t574;
  double t577;
  double t594;
  double t595;
  double t596;
  double t6;
  double t60;
  double t61;
  double t618;
  double t618_tmp;
  double t619;
  double t619_tmp;
  double t62;
  double t626;
  double t627;
  double t63;
  double t634;
  double t635;
  double t636;
  double t637;
  double t638;
  double t639;
  double t649;
  double t651;
  double t652;
  double t66;
  double t663;
  double t67;
  double t7;
  double t70;
  double t708;
  double t719;
  double t72;
  double t720;
  double t721;
  double t723;
  double t732;
  double t734;
  double t746;
  double t75;
  double t751;
  double t79;
  double t796;
  double t79_tmp;
  double t8;
  double t807;
  double t808;
  double t809;
  double t82;
  double t820;
  double t834;
  double t838;
  double t843;
  double t845;
  double t858;
  double t858_tmp;
  double t859;
  double t859_tmp;
  double t861;
  double t862;
  double t863;
  double t872;
  double t873;
  double t876;
  double t877;
  double t888;
  double t889;
  double t892;
  double t893;
  double t896;
  double t897;
  double t9;
  double t90;
  double t900;
  double t901;
  double t91;
  double t916;
  double t917;
  double t920;
  double t921;
  double t926;
  double t927;
  double t928;
  double t929;
  double t936;
  double t937;
  double t94;
  double t948;
  double t949;
  double t95;
  double t950;
  double t951;
  double t954;
  double t955;
  double t968;
  double t969;
  double t98;
  double t998;
  t2 = eta * 4.0;
  t3 = eta * eta;
  t4 = std::pow(eta, 3.0);
  t6 = std::pow(eta, 5.0);
  t8 = xi * xi;
  t9 = std::pow(xi, 3.0);
  t11 = std::pow(xi, 5.0);
  t14 = zeta * zeta;
  t15 = std::pow(zeta, 3.0);
  t17 = std::pow(zeta, 5.0);
  t20 = eta * 36.0;
  t21 = eta * 54.0;
  t23 = zeta * 36.0;
  t24 = zeta * 54.0;
  t35 = eta * 72.0;
  t36 = eta * 90.0;
  t39 = eta * 135.0;
  t40 = eta * 148.0;
  t41 = eta * 162.0;
  t42 = eta * 180.0;
  t43 = eta * 216.0;
  t45 = eta * 324.0;
  t46 = eta * 360.0;
  t47 = eta * 378.0;
  t49 = eta * 432.0;
  t50 = eta * 486.0;
  t55 = zeta * 72.0;
  t56 = zeta * 90.0;
  t60 = zeta * 148.0;
  t61 = zeta * 162.0;
  t62 = zeta * 180.0;
  t63 = zeta * 216.0;
  t66 = zeta * 360.0;
  t67 = zeta * 378.0;
  t70 = zeta * 486.0;
  t79_tmp = eta * zeta;
  t79 = t79_tmp * -36.0;
  t82 = t79_tmp * -54.0;
  t102 = eta * 4.5;
  t103 = eta * 7.2;
  t115 = eta * 540.0;
  t116 = eta * 594.0;
  t117 = eta * 648.0;
  t120 = eta * 972.0;
  t125 = eta * 1296.0;
  t127 = eta * 1332.0;
  t128 = eta * 1458.0;
  t129 = eta * 1620.0;
  t130 = eta * 1944.0;
  t131 = eta * 2088.0;
  t132 = eta * 2106.0;
  t134 = eta * 2268.0;
  t138 = eta * 3240.0;
  t140 = eta * 3564.0;
  t142 = eta * 3780.0;
  t143 = eta * 3888.0;
  t150 = eta * 5022.0;
  t151 = eta * 5184.0;
  t155 = eta * 6426.0;
  t158 = eta * 7776.0;
  t161 = zeta * 4.5;
  t162 = zeta * 7.2;
  t176 = zeta * 648.0;
  t179 = zeta * 972.0;
  t184 = zeta * 1296.0;
  t186 = zeta * 1332.0;
  t188 = zeta * 1620.0;
  t189 = zeta * 1944.0;
  t190 = zeta * 2088.0;
  t202 = zeta * 3888.0;
  t209 = zeta * 5022.0;
  t210 = zeta * 5184.0;
  t214 = zeta * 6426.0;
  t217 = zeta * 7776.0;
  t261 = t79_tmp * -148.0;
  t264 = t79_tmp * -324.0;
  t265 = t79_tmp * -360.0;
  t266 = t79_tmp * -396.0;
  t267 = t79_tmp * -432.0;
  t318 = eta * 49.5;
  t344 = eta * 9342.0;
  t346 = eta * 10044.0;
  t347 = eta * 10368.0;
  t349 = eta * 11232.0;
  t350 = eta * 11664.0;
  t351 = eta * 12852.0;
  t357 = eta * 23328.0;
  t360 = zeta * 49.5;
  t389 = zeta * 10368.0;
  t392 = zeta * 11664.0;
  t399 = zeta * 23328.0;
  t563 = t79_tmp * -7.2;
  t566 = t79_tmp * -648.0;
  t569 = t79_tmp * -1071.0;
  t573 = t79_tmp * -1620.0;
  t574 = t79_tmp * -1944.0;
  t577 = t79_tmp * -3078.0;
  t636 = eta * 256.5;
  t637 = eta * 162.4;
  t638 = eta * 313.2;
  t639 = eta * 388.8;
  t649 = zeta * 256.5;
  t651 = zeta * 313.2;
  t652 = zeta * 388.8;
  t838 = t79_tmp * -11016.0;
  t843 = t79_tmp * -17496.0;
  t845 = t79_tmp * -21384.0;
  t1032 = t79_tmp * -313.2;
  t5 = t3 * t3;
  t7 = std::pow(t3, 3.0);
  t10 = t8 * t8;
  t12 = std::pow(t8, 3.0);
  t16 = t14 * t14;
  t18 = std::pow(t14, 3.0);
  t26 = t20 * zeta;
  t29 = t21 * zeta;
  t72 = t3 * 27.0;
  t75 = t14 * 27.0;
  t90 = t42 * zeta;
  t91 = t43 * zeta;
  t94 = eta * 297.0 * zeta;
  t95 = t45 * zeta;
  t98 = t49 * zeta;
  t221 = t4 * 72.0;
  t228 = t4 * 216.0;
  t229 = t3 * 252.0;
  t230 = t3 * 297.0;
  t231 = t3 * 324.0;
  t241 = t15 * 72.0;
  t248 = t15 * 216.0;
  t249 = t14 * 252.0;
  t250 = t14 * 297.0;
  t257 = t102 * zeta;
  t258 = t103 * zeta;
  t268 = t116 * zeta;
  t280 = t127 * zeta;
  t281 = t128 * zeta;
  t282 = t129 * zeta;
  t283 = t130 * zeta;
  t285 = t132 * zeta;
  t287 = t134 * zeta;
  t291 = t138 * zeta;
  t293 = t140 * zeta;
  t303 = t150 * zeta;
  t313 = t158 * zeta;
  t409 = t3 * 594.0;
  t410 = t3 * 648.0;
  t411 = t4 * 648.0;
  t413 = t3 * 972.0;
  t414 = t4 * 972.0;
  t417 = t3 * 1044.0;
  t422 = t4 * 1260.0;
  t423 = t4 * 1296.0;
  t430 = t3 * 1692.0;
  t431 = t3 * 1836.0;
  t432 = t3 * 1944.0;
  t433 = t4 * 1944.0;
  t435 = t6 * 1944.0;
  t440 = t4 * 2376.0;
  t441 = t3 * 2484.0;
  t448 = t3 * 3492.0;
  t453 = t3 * 3888.0;
  t454 = t4 * 3888.0;
  t456 = t6 * 3888.0;
  t457 = t3 * 3996.0;
  t459 = t3 * 4671.0;
  t461 = t3 * 5022.0;
  t463 = t3 * 5184.0;
  t464 = t4 * 5184.0;
  t466 = t3 * 5832.0;
  t472 = t4 * 7020.0;
  t473 = t3 * 7776.0;
  t474 = t4 * 7776.0;
  t476 = t4 * 7884.0;
  t494 = t14 * 594.0;
  t495 = t14 * 648.0;
  t496 = t15 * 648.0;
  t498 = t14 * 972.0;
  t499 = t15 * 972.0;
  t502 = t14 * 1044.0;
  t507 = t15 * 1260.0;
  t508 = t15 * 1296.0;
  t515 = t14 * 1692.0;
  t516 = t14 * 1836.0;
  t517 = t14 * 1944.0;
  t518 = t15 * 1944.0;
  t520 = t17 * 1944.0;
  t525 = t15 * 2376.0;
  t526 = t14 * 2484.0;
  t533 = t14 * 3492.0;
  t538 = t14 * 3888.0;
  t539 = t15 * 3888.0;
  t541 = t17 * 3888.0;
  t542 = t14 * 3996.0;
  t544 = t14 * 4671.0;
  t546 = t14 * 5022.0;
  t548 = t14 * 5184.0;
  t549 = t15 * 5184.0;
  t551 = t14 * 5832.0;
  t557 = t15 * 7020.0;
  t558 = t14 * 7776.0;
  t561 = t15 * 7884.0;
  t564 = t318 * zeta;
  t594 = t349 * zeta;
  t595 = t350 * zeta;
  t596 = t351 * zeta;
  t618_tmp = eta * t14;
  t618 = t618_tmp * -27.0;
  t619_tmp = t3 * zeta;
  t619 = t619_tmp * -27.0;
  t626 = t14 * t43;
  t627 = t3 * t63;
  t634 = t14 * t49;
  t635 = t3 * (zeta * 432.0);
  t719 = t3 * 11232.0;
  t720 = t3 * 11664.0;
  t721 = t4 * 11664.0;
  t723 = t3 * 12852.0;
  t732 = t4 * 21384.0;
  t734 = t3 * 23328.0;
  t807 = t14 * 11232.0;
  t808 = t14 * 11664.0;
  t809 = t15 * 11664.0;
  t820 = t15 * 21384.0;
  t834 = t636 * zeta;
  t861 = t619_tmp * -216.0;
  t862 = t618_tmp * -324.0;
  t863 = t619_tmp * -324.0;
  t872 = t15 * t117;
  t873 = t4 * t176;
  t888 = t14 * t130;
  t889 = t3 * t189;
  t892 = t15 * t130;
  t893 = t4 * t189;
  t900 = t17 * t130;
  t901 = t6 * t189;
  t916 = t14 * t143;
  t917 = t3 * t202;
  t920 = t15 * t143;
  t921 = t4 * t202;
  t926 = t17 * t143;
  t927 = t6 * t202;
  t928 = t14 * (eta * 3996.0);
  t929 = t3 * (zeta * 3996.0);
  t936 = t14 * t150;
  t937 = t3 * t209;
  t948 = t14 * t158;
  t949 = t3 * t217;
  t950 = t15 * t158;
  t951 = t4 * t217;
  t968 = t6 * 388.8;
  t1003 = t17 * 388.8;
  t1038_tmp = eta * t15;
  t1038 = t1038_tmp * -648.0;
  t1039_tmp = t4 * zeta;
  t1039 = t1039_tmp * -648.0;
  t1042 = t618_tmp * -972.0;
  t1043 = t619_tmp * -972.0;
  t1048 = t618_tmp * -1944.0;
  t1049 = t619_tmp * -1944.0;
  t1052 = t1038_tmp * -1944.0;
  t1053 = t1039_tmp * -1944.0;
  t1060_tmp = eta * t17;
  t1060 = t1060_tmp * -1944.0;
  t1061_tmp = t6 * zeta;
  t1061 = t1061_tmp * -1944.0;
  t1063 = t619_tmp * -2268.0;
  t1068 = t618_tmp * -3888.0;
  t1069 = t619_tmp * -3888.0;
  t1076 = t1060_tmp * -3888.0;
  t1077 = t1061_tmp * -3888.0;
  t1110 = t14 * t349;
  t1111 = t3 * (zeta * 11232.0);
  t1112 = t14 * t350;
  t1113 = t3 * t392;
  t1116 = t15 * t350;
  t1117 = t4 * t392;
  t1120 = t14 * t351;
  t1121 = t3 * (zeta * 12852.0);
  t1148 = t14 * t357;
  t1149 = t3 * t399;
  t1150 = t15 * t357;
  t1151 = t4 * t399;
  t1200 = t17 * t639;
  t1201 = t6 * t652;
  t1206 = t618_tmp * -10692.0;
  t1207 = t619_tmp * -10692.0;
  t1208 = t1038_tmp * -11016.0;
  t1209 = t1039_tmp * -11016.0;
  t1212 = t618_tmp * -11664.0;
  t1213 = t619_tmp * -11664.0;
  t1224 = t618_tmp * -17496.0;
  t1225 = t619_tmp * -17496.0;
  t1226 = t1038_tmp * -17496.0;
  t1227 = t1039_tmp * -17496.0;
  t1228 = t1038_tmp * -19440.0;
  t1229 = t1039_tmp * -19440.0;
  t1236 = t618_tmp * -23328.0;
  t1237 = t619_tmp * -23328.0;
  t1240 = t618_tmp * -25272.0;
  t1241 = t619_tmp * -25272.0;
  t1305 = t1060_tmp * -388.8;
  t1306 = t1061_tmp * -388.8;
  t1309_tmp = t3 * t14;
  t1309 = t1309_tmp * -594.0;
  t1311_tmp = t3 * t15;
  t1311 = t1311_tmp * -972.0;
  t1312_tmp = t4 * t14;
  t1312 = t1312_tmp * -972.0;
  t1313_tmp = t4 * t15;
  t1313 = t1313_tmp * -1296.0;
  t1314 = t1309_tmp * -1836.0;
  t1315 = t1309_tmp * -1944.0;
  t1318 = t1309_tmp * -2484.0;
  t1320 = t1309_tmp * -3888.0;
  t1324 = t1313_tmp * -3888.0;
  t1326 = t1309_tmp * -5022.0;
  t1360 = t1309_tmp * -10692.0;
  t1361 = t1309_tmp * -11232.0;
  t1362 = t1309_tmp * -11664.0;
  t1363 = t1311_tmp * -11664.0;
  t1364 = t1312_tmp * -11664.0;
  t1365 = t1313_tmp * -11664.0;
  t1369 = t1309_tmp * -17496.0;
  t1370 = t1309_tmp * -23328.0;
  t1373 = t1309_tmp * -25272.0;
  t225 = t5 * 162.0;
  t245 = t16 * 162.0;
  t412 = t5 * 648.0;
  t415 = t5 * 972.0;
  t416 = t7 * 972.0;
  t434 = t5 * 1944.0;
  t455 = t5 * 3888.0;
  t467 = t5 * 5832.0;
  t475 = t5 * 7776.0;
  t481 = t12 * 972.0;
  t497 = t16 * 648.0;
  t500 = t16 * 972.0;
  t501 = t18 * 972.0;
  t519 = t16 * 1944.0;
  t540 = t16 * 3888.0;
  t552 = t16 * 5832.0;
  t560 = t16 * 7776.0;
  t663 = t7 * 64.8;
  t708 = t5 * 8424.0;
  t746 = t12 * 64.8;
  t751 = t18 * 64.8;
  t796 = t16 * 8424.0;
  t858_tmp = eta * t16;
  t858 = t858_tmp * -162.0;
  t859_tmp = t5 * zeta;
  t859 = t859_tmp * -162.0;
  t876 = t16 * t117;
  t877 = t5 * t176;
  t896 = t16 * t130;
  t897 = t5 * t189;
  t954 = t16 * t158;
  t955 = t5 * t217;
  t969 = t7 * 388.8;
  t998 = t12 * 388.8;
  t1004 = t18 * 388.8;
  t1118 = t16 * t350;
  t1119 = t5 * t392;
  t1178 = t14 * t230;
  t1198 = t10 * t283;
  t1265 = t14 * t413;
  t1268 = t16 * t413;
  t1270 = t15 * t423;
  t1272 = t14 * t432;
  t1273 = t15 * t432;
  t1274 = t14 * t433;
  t1280 = t15 * t453;
  t1281 = t14 * t454;
  t1283 = t15 * t454;
  t1285 = t14 * t457;
  t1286 = t14 * t459;
  t1288 = t15 * t463;
  t1289 = t14 * t464;
  t1290 = t14 * t466;
  t1291 = t16 * t466;
  t1295 = t15 * t473;
  t1296 = t14 * t474;
  t1297 = t16 * t473;
  t1304 = t10 * (t79_tmp * -7776.0);
  t1316_tmp = t3 * t16;
  t1316 = t1316_tmp * -1944.0;
  t1317_tmp = t5 * t14;
  t1317 = t1317_tmp * -1944.0;
  t1323 = t1316_tmp * -3888.0;
  t1325 = t1317_tmp * -3888.0;
  t1333 = t14 * t720;
  t1334 = t15 * t720;
  t1335 = t14 * t721;
  t1336 = t15 * t721;
  t1343 = t14 * t734;
  t1344 = t15 * t734;
  t1345 = t14 * (t4 * 23328.0);
  t1387 = -t41 + t413;
  t1390 = -t61 + t498;
  t1411 = ((t130 - 162.0) + (t189 - 162.0)) - 810.0;
  t1414 = t283 + t1213;
  t1269 = t14 * t415;
  t1292 = t14 * t467;
  t1298 = t14 * t475;
  t1415 = t574 + t1112;
  t1416 = t574 + t1113;
  t1417 = t10 * t1387;
  t1418 = t10 * t1390;
  t1424 = -t10 * (-t117 + t453);
  t1427 = -t10 * (-t176 + t538);
  t1513 = t8 * (((t1043 + t1290) + t79_tmp * 162.0) + t14 * -t120);
  t1459 = (t91 + t920) + t1048;
  t1460 = (t91 + t921) + t1049;
  t1461 = (t98 + t950) + t1068;
  t1462 = (t98 + t951) + t1069;
  t1493 = t8 * (((-(zeta * 27.0) + t250) + t500) - t499);
  t1494 = t8 * (((-(eta * 27.0) + t230) + t415) - t414);
  t1498 = ((t82 + t14 * t116) + t896) + t1052;
  t1499 = ((t82 + t3 * (zeta * 594.0)) + t897) + t1053;
  t1475 = t8 * t1459;
  t1476 = t8 * t1460;
  sfvals_tmp = t639 + t652;
  sfvals[0] =
      (((((((((((((((((((((((eta * -14.7 + t3 * 81.2) - t4 * 220.5) +
                           t5 * 315.0) -
                          t6 * 226.8) +
                         t14 * 81.2) -
                        t15 * 220.5) +
                       t16 * 315.0) -
                      t17 * 226.8) +
                     t663) +
                    t746) +
                   t751) +
                  t1200) +
                 t1201) +
                t1268) +
               t1269) +
              t1270) -
             zeta * 14.7) +
            t11 * (sfvals_tmp - 226.8)) +
           t8 * ((((((((((((((eta * -661.5 + t3 * 1890.0) - t4 * 2268.0) +
                            t14 * 1890.0) -
                           t15 * 2268.0) +
                          t415) +
                         t500) +
                        t920) +
                       t921) +
                      t1290) -
                     zeta * 661.5) -
                    t618_tmp * 6804.0) -
                   t619_tmp * 6804.0) +
                  t142 * zeta) +
                 81.2)) -
          t618_tmp * 661.5) -
         t858_tmp * 1134.0) +
        eta * t507) +
       t1309_tmp * 1890.0) +
      (((((((((t1311_tmp * -2268.0 - t1312_tmp * 2268.0) +
              ((((((((((((((((((((t422 + t507) + t79_tmp * -1323.0) + t637) +
                               zeta * 162.4) -
                              t5 * 1134.0) -
                             t16 * 1134.0) +
                            t896) +
                           t897) +
                          t14 * t142) +
                         t3 * (zeta * 3780.0)) +
                        t968) +
                       t1003) +
                      t1038_tmp * -4536.0) +
                     t1039_tmp * -4536.0) -
                    t3 * 661.5) -
                   t14 * 661.5) +
                  t1280) +
                 t1281) +
                t1309_tmp * -6804.0) -
               14.7) *
                  xi) -
             t619_tmp * 661.5) -
            t859_tmp * 1134.0) +
           t422 * zeta) +
          t637 * zeta) +
         t10 * (((((t283 - eta * 1134.0) - zeta * 1134.0) + t413) + t498) +
                315.0)) +
        t9 * (((((((((eta * 1260.0 + t423) + t508) + t79_tmp * -4536.0) -
                   t3 * 2268.0) -
                  t14 * 2268.0) +
                 t916) +
                t917) +
               zeta * 1260.0) -
              220.5)) +
       1.0);
  sfvals[1] =
      ((((t8 * 13.7 - t9 * 67.5) + t10 * 153.0) - t11 * 162.0) + t746) - xi;
  sfvals[2] =
      ((((-eta + t3 * 13.7) - t4 * 67.5) + t5 * 153.0) - t6 * 162.0) + t663;
  sfvals[3] =
      ((((t14 * 13.7 - t15 * 67.5) + t16 * 153.0) - t17 * 162.0) + t751) - zeta;
  b_sfvals_tmp = t1038_tmp * 5184.0;
  c_sfvals_tmp = t79_tmp * 2088.0;
  d_sfvals_tmp = t619_tmp * 15552.0;
  e_sfvals_tmp = t1039_tmp * 5184.0;
  f_sfvals_tmp = t618_tmp * 15552.0;
  sfvals[4] =
      ((((-t998 -
          xi * ((((((((((((((((((((-t417 - t5 * 1296.0) + t4 * 1674.0) - t502) -
                                t16 * 1296.0) +
                               t15 * 1674.0) +
                              t638) +
                             t651) +
                            t896) +
                           t897) +
                          t936) +
                         t937) +
                        t968) +
                       t1003) +
                      t1280) +
                     t1281) -
                    b_sfvals_tmp) -
                   c_sfvals_tmp) -
                  t1309_tmp * 7776.0) -
                 e_sfvals_tmp) -
                36.0)) -
         t10 * (((((-t151 - t210) + t313) + t453) + t538) + 1674.0)) -
        t9 * (((((((((t150 + t209) + t454) + t539) - t473) - t558) +
                 t79_tmp * -15552.0) +
                t1112) +
               t1113) -
              1044.0)) -
       t11 * (t1411 - 162.0)) -
      t8 * ((((((((((((((-t131 - t190) + t434) + t461) - t464) + t519) + t546) -
                   t549) +
                  t346 * zeta) +
                 t950) +
                t951) +
               t1333) -
              f_sfvals_tmp) -
             d_sfvals_tmp) +
            313.2);
  g_sfvals_tmp = t143 + t202;
  h_sfvals_tmp = t79_tmp * 19440.0;
  sfvals[5] =
      ((((t481 + t11 * (g_sfvals_tmp - 3078.0)) +
         t10 * (((((eta * -9396.0 + t466) + t551) + t595) - zeta * 9396.0) +
                3699.0)) +
        t9 * (((((((((eta * 7884.0 - t3 * 9720.0) - t14 * 9720.0) + t454) +
                   t539) +
                  t1112) +
                 t1113) +
                zeta * 7884.0) -
               h_sfvals_tmp) -
              2074.5)) -
       xi * ((((((((((((((t225 - t4 * 486.0) + t245) - t15 * 486.0) +
                       eta * 1071.0 * zeta) -
                      t636) -
                     t649) +
                    t872) +
                   t873) +
                  t3 * 535.5) +
                 t14 * 535.5) +
                t1265) -
               t618_tmp * 1458.0) -
              t619_tmp * 1458.0) +
             45.0)) +
      t8 * ((((((((((((((eta * -2610.0 - t4 * 3564.0) - t15 * 3564.0) + t415) +
                      t459) +
                     t500) +
                    t544) +
                   t920) +
                  t921) +
                 t1206) +
                t1207) +
               t1290) -
              zeta * 2610.0) +
             t344 * zeta) +
            526.5);
  sfvals[6] =
      ((((t12 * -1296.0 -
          xi *
              (((((((((t40 + t60) + t221) - t3 * 180.0) + t241) - t14 * 180.0) +
                  t265) +
                 t626) +
                t627) -
               40.0)) -
         t11 * (g_sfvals_tmp - 3888.0)) -
        t10 * (((((eta * -8424.0 + t313) + t453) + t538) - zeta * 8424.0) +
               4356.0)) -
       t9 * (((((((((eta * 6120.0 + t423) - t463) + t508) - t548) + t916) +
                t917) +
               zeta * 6120.0) -
              t79_tmp * 10368.0) -
             2232.0)) +
      t8 * (((((((((eta * 1692.0 + t411) + t496) - t431) - t516) + t888) +
               t889) +
              zeta * 1692.0) -
             t79_tmp * 3672.0) -
            508.0);
  sfvals[7] =
      ((((t481 +
          t8 * (((((eta * -598.5 + t230) + t250) + t268) - zeta * 598.5) +
                297.0)) -
         t9 * (((((eta * -2376.0 + t283) + t413) + t498) - zeta * 2376.0) +
               1381.5)) +
        t10 * (((((eta * -3726.0 + t283) + t413) + t498) - zeta * 3726.0) +
               2889.0)) -
       xi * (((((t29 + t72) + t75) - t318) - t360) + 22.5)) +
      t11 * (t1411 - 1620.0);
  sfvals[8] =
      ((((-t998 + t8 * ((t36 + t56) - 97.2)) - t9 * ((t47 + t67) - 468.0)) +
        t10 * ((t117 + t176) - 1026.0)) -
       t11 * (sfvals_tmp - 1036.8)) -
      xi * ((t103 + t162) - 7.2);
  sfvals[9] =
      (((eta * t8 * -90.0 - eta * t10 * 648.0) + t9 * t47) + t11 * t639) +
      t103 * xi;
  sfvals[10] = ((t1417 - t9 * t1387) + t8 * (t230 - t318)) - xi * (t72 - t102);
  sfvals_tmp = t9 * ((t35 + t423) - t410);
  sfvals[11] = (((t2 - t3 * 36.0) + t221) * xi - t8 * ((t20 - t231) + t411)) +
               sfvals_tmp;
  sfvals[12] = t1494 + xi * (((t102 + t4 * 162.0) - t225) - t3 * 49.5);
  g_sfvals_tmp = ((((t103 + t4 * 378.0) - t3 * 90.0) - t412) + t968) * xi;
  sfvals[13] = g_sfvals_tmp;
  sfvals[14] =
      ((((((((((t3 * -97.2 + t4 * 468.0) - t5 * 1026.0) + t6 * 1036.8) + t103) +
            t563) +
           t877) -
          t969) +
         t1306) +
        t3 * t56) -
       g_sfvals_tmp) -
      t1039_tmp * 378.0;
  sfvals[15] =
      (((((((((((((((eta * -22.5 - t4 * 1381.5) + t5 * 2889.0) - t6 * 2754.0) +
                  t230) +
                 t416) +
                t564) +
               t618) +
              t901) +
             t1178) +
            t1269) +
           t1312) +
          t1494) +
         (((((t318 + t435) + t440) - t5 * 3726.0) - t3 * 598.5) + t1499) * xi) -
        t619_tmp * 598.5) -
       t859_tmp * 3726.0) +
      t440 * zeta;
  sfvals[16] =
      (((((((((((((((((((eta * 40.0 - t3 * 508.0) + t4 * 2232.0) -
                       t5 * 4356.0) -
                      t7 * 1296.0) +
                     t261) +
                    t456) +
                   t1077) +
                  t15 * t410) +
                 t1289) +
                t1313) +
               t1314) +
              t1325) -
             t1038_tmp * 72.0) -
            xi * (((((((((((t40 + t265) - t430) + t456) + t4 * 6120.0) + t626) -
                       t708) +
                      t3 * (zeta * 3672.0)) +
                     t955) +
                    t1281) +
                   t1315) -
                  t1039_tmp * 10368.0)) +
           t14 * t42) -
          t1039_tmp * 6120.0) +
         t430 * zeta) +
        t708 * zeta) -
       sfvals_tmp) -
      t8 * ((((-t42 + t431) + t455) - t464) + t1460);
  sfvals[17] =
      ((((((((((((((((((((((eta * -45.0 + t3 * 526.5) - t4 * 2074.5) +
                          t5 * 3699.0) -
                         t6 * 3078.0) +
                        t416) +
                       t834) +
                      t858) +
                     t927) +
                    t1268) +
                   t1283) +
                  t1286) +
                 t1292) +
                t1417) -
               t618_tmp * 535.5) -
              t1311_tmp * 3564.0) -
             t1312_tmp * 9720.0) +
            t15 * t50) +
           (((((((((((((t456 + t476) + t569) + t636) - t3 * 2610.0) +
                    t14 * t128) -
                   t5 * 9396.0) +
                  t1038) +
                 t3 * (zeta * 9342.0)) +
                t1119) +
               t1229) +
              t1280) +
             t1335) +
            t1360) *
               xi) -
          t619_tmp * 2610.0) -
         t859_tmp * 9396.0) +
        t476 * zeta) +
       t9 * ((((t50 - t3 * 3564.0) + t454) + t566) + t917)) +
      t8 *
          ((((((((eta * -535.5 - t4 * 9720.0) + t281) + t459) + t467) + t1042) +
             t1117) +
            t1207) +
           t1290);
  sfvals_tmp = t1309_tmp * 15552.0;
  g_sfvals_tmp = t79_tmp * 5184.0;
  i_sfvals_tmp = eta * t11;
  sfvals[18] =
      ((((((((((((((((((((((((t3 * -313.2 + t4 * 1044.0) - t5 * 1674.0) +
                            t6 * 1296.0) +
                           t20) +
                          t1032) +
                         t1061) -
                        t969) +
                       t1288) +
                      t1296) +
                     t1305) +
                    t1316) +
                   t1324) +
                  t1325) +
                 t1326) -
                xi * ((((((((((((((t435 - t3 * 2088.0) + t4 * 5022.0) -
                                 t5 * 5184.0) +
                                t638) +
                               t896) +
                              t936) +
                             t955) +
                            t3 * (zeta * 10044.0)) +
                           t1039_tmp * -15552.0) +
                          t1295) +
                         t1335) -
                        b_sfvals_tmp) -
                       c_sfvals_tmp) -
                      sfvals_tmp)) -
               i_sfvals_tmp * 388.8) -
              t1038_tmp * 1674.0) +
             eta * t502) +
            t16 * t125) +
           t3 * t190) +
          t5 * t210) -
         t1039_tmp * 5022.0) -
        t9 *
            (((((eta * 1674.0 + t454) - t463) + t916) + t949) - g_sfvals_tmp)) -
       t8 * (((((((((eta * -1044.0 + t303) + t455) + t461) - t474) + t920) +
                t618_tmp * -7776.0) +
               t1117) +
              t1333) -
             d_sfvals_tmp)) -
      t10 * ((-t125 + t283) + t432);
  b_sfvals_tmp = t11 * zeta;
  sfvals[19] =
      ((((((((((((((((((((((((t14 * -313.2 + t15 * 1044.0) - t16 * 1674.0) +
                            t17 * 1296.0) +
                           t23) +
                          t1032) +
                         t1060) -
                        t1004) +
                       t1289) +
                      t1295) +
                     t1306) +
                    t1317) +
                   t1323) +
                  t1324) +
                 t1326) -
                t1038_tmp * 5022.0) -
               xi * ((((((((((((((t520 - t14 * 2088.0) + t15 * 5022.0) -
                                t16 * 5184.0) +
                               t651) +
                              t897) +
                             t937) +
                            t954) +
                           t14 * t346) +
                          t1038_tmp * -15552.0) +
                         t1296) +
                        t1334) -
                       c_sfvals_tmp) -
                      sfvals_tmp) -
                     e_sfvals_tmp)) +
              t14 * t131) +
             t16 * t151) +
            t5 * t184) -
           t1039_tmp * 1674.0) -
          b_sfvals_tmp * 388.8) +
         t417 * zeta) -
        t9 * (((((t539 - t548) + t917) + t948) + zeta * 1674.0) -
              g_sfvals_tmp)) -
       t8 * (((((((((t303 + t540) + t546) - t15 * 7776.0) + t921) +
                 t619_tmp * -7776.0) +
                t1116) +
               t1333) -
              zeta * 1044.0) -
             f_sfvals_tmp)) -
      t10 * ((-t184 + t283) + t517);
  sfvals[20] =
      ((((((((((((((((((((((t14 * 526.5 - t15 * 2074.5) + t16 * 3699.0) -
                          t17 * 3078.0) +
                         t501) +
                        t834) +
                       t859) +
                      t926) +
                     t1269) +
                    t1283) +
                   t1286) +
                  t1291) +
                 t1418) -
                zeta * 45.0) +
               t8 * ((((((((t15 * -9720.0 + t281) + t544) + t552) + t1043) +
                        t1116) +
                       t1206) +
                      t1290) -
                     zeta * 535.5)) -
              t618_tmp * 2610.0) -
             t858_tmp * 9396.0) +
            eta * t561) -
           t1311_tmp * 9720.0) -
          t1312_tmp * 3564.0) +
         t4 * t70) +
        (((((((((((((t541 + t561) + t569) + t649) - t14 * 2610.0) +
                 t3 * (zeta * 1458.0)) -
                t16 * 9396.0) +
               t1039) +
              t14 * t344) +
             t1118) +
            t1228) +
           t1281) +
          t1334) +
         t1360) *
            xi) -
       t619_tmp * 535.5) +
      t9 * ((((t70 - t14 * 3564.0) + t539) + t566) + t916);
  sfvals_tmp = t9 * ((t55 + t508) - t495);
  sfvals[21] =
      (((((((((((((((((((t14 * -508.0 + t15 * 2232.0) - t16 * 4356.0) -
                       t18 * 1296.0) +
                      t261) +
                     t541) +
                    t1076) +
                   t14 * t411) +
                  t1288) +
                 t1313) +
                t1314) +
               t1323) +
              zeta * 40.0) -
             xi * (((((((((((t60 + t265) - t515) + t541) + t15 * 6120.0) +
                         t627) -
                        t796) +
                       t14 * (eta * 3672.0)) +
                      t954) +
                     t1280) +
                    t1315) -
                   t1038_tmp * 10368.0)) -
            t1038_tmp * 6120.0) +
           eta * t515) +
          eta * t796) +
         t3 * t62) -
        t1039_tmp * 72.0) -
       sfvals_tmp) -
      t8 * ((((-t62 + t516) + t540) - t549) + t1459);
  sfvals[22] =
      (((((((((((((((t15 * -1381.5 + t16 * 2889.0) - t17 * 2754.0) + t250) +
                  t501) +
                 t564) +
                t619) +
               t900) +
              t1178) +
             t1268) +
            t1311) +
           t1493) -
          zeta * 22.5) -
         t618_tmp * 598.5) -
        t858_tmp * 3726.0) +
       eta * t525) +
      (((((t360 + t520) + t525) - t16 * 3726.0) - t14 * 598.5) + t1498) * xi;
  c_sfvals_tmp = ((((t162 + t15 * 378.0) - t14 * 90.0) - t497) + t1003) * xi;
  sfvals[23] =
      ((((((((((t14 * -97.2 + t15 * 468.0) - t16 * 1026.0) + t17 * 1036.8) +
             t162) +
            t563) +
           t876) -
          t1004) +
         t1305) -
        t1038_tmp * 378.0) +
       t14 * t36) -
      c_sfvals_tmp;
  sfvals[24] = (((t9 * t67 + t11 * t652) + t162 * xi) - t8 * zeta * 90.0) -
               t10 * zeta * 648.0;
  sfvals[25] = ((t1418 - t9 * t1390) + t8 * (t250 - t360)) - xi * (t75 - t161);
  sfvals[26] = (((zeta * 4.0 - t14 * 36.0) + t241) * xi -
                t8 * ((t23 - t14 * 324.0) + t496)) +
               sfvals_tmp;
  sfvals[27] = t1493 + xi * (((t161 + t15 * 162.0) - t245) - t14 * 49.5);
  sfvals[28] = c_sfvals_tmp;
  sfvals[29] =
      (((t258 + t1201) + t4 * t67) - t619_tmp * 90.0) - t859_tmp * 648.0;
  sfvals[30] =
      ((((((t257 + t618) + t859) + t1178) + t1269) + t1312) + t4 * t61) -
      t619_tmp * 49.5;
  sfvals[31] = (((((((t15 * t35 + t4 * t55) + t1270) - t618_tmp * 36.0) -
                   t1311_tmp * 648.0) -
                  t1312_tmp * 648.0) +
                 t14 * t231) +
                t2 * zeta) -
               t619_tmp * 36.0;
  sfvals[32] =
      ((((((t257 + t619) + t858) + t1178) + t1268) + t1311) - t618_tmp * 49.5) +
      t15 * t41;
  sfvals[33] =
      (((t258 + t1200) - t618_tmp * 90.0) - t858_tmp * 648.0) + t15 * t47;
  sfvals[34] =
      (((t11 * t130 +
         t8 * (((((((((-(eta * 3078.0) + t475) + t596) + t723) + t950) -
                   t4 * 17496.0) +
                  t1151) +
                 t1224) +
                t619_tmp * -34992.0) +
               t1343)) +
        ((((((((((((((t115 + t435) + t4 * 6426.0) + t577) - t3 * 3078.0) -
                  t467) +
                 t896) +
                t14 * t155) +
               t955) +
              t1038_tmp * -5832.0) +
             t1121) +
            t1227) +
           t1295) +
          t1335) +
         t1369) *
            xi) +
       t10 * ((t313 - eta * 5832.0) + t473)) +
      t9 * (((((t155 + t721) + t843) - t3 * 17496.0) + t1112) + t1149);
  sfvals[35] =
      (((-t8 * (((((((((eta * -3492.0 + t455) + t594) + t719) + t920) - t721) +
                   t1117) +
                  t1212) +
                 t1237) +
                t1333) -
         i_sfvals_tmp * 3888.0) +
        (((((((((-t46 + t280) + t412) + t3 * 1332.0) - t4 * 1620.0) + t872) +
            t893) +
           t618_tmp * -1620.0) +
          t619_tmp * -3240.0) +
         t1272) *
            xi) -
       t9 * (((((eta * 9612.0 - t3 * 21384.0) + t721) + t845) + t1112) +
             t1149)) -
      t10 * ((-t347 + t595) + t720);
  sfvals_tmp = t79_tmp * 3996.0;
  sfvals[36] =
      (((t11 * t143 +
         (((((t42 + t228) + t266) - t3 * 396.0) + t626) + t635) * xi) -
        t8 * (((((eta * 2016.0 + t433) - t457) + t888) + t917) - sfvals_tmp)) +
       t9 * (((((eta * 7020.0 - t3 * 11016.0) + t454) + t838) + t916) + t949)) +
      t10 * ((eta * -9072.0 + t313) + t473);
  sfvals[37] = (((i_sfvals_tmp * -1944.0 + ((t29 - t21) + t3 * 54.0) * xi) -
                 t8 * ((t268 - t117) + t409)) -
                t10 * ((t283 - t143) + t432)) +
               t9 * ((eta * -2538.0 + t283) + t432);
  sfvals[38] = ((t1424 - xi * (((t20 + t228) - t229) + (t79 + t627))) +
                t8 * ((((t46 + t264) + t433) - t441) + t889)) -
               t9 * ((((t3 * -6480.0 + t120) + t454) + t566) + t917);
  c_sfvals_tmp = t9 * ((t43 + t454) - t432);
  sfvals[39] =
      (-t8 * ((((eta * -252.0 - t4 * 6480.0) + t441) + t455) + t1460) -
       c_sfvals_tmp) +
      ((((((t26 - t20) + t3 * 360.0) + t412) - t414) + t863) + t873) * xi;
  sfvals[40] = -t8 * (((-t21 + t409) + t434) - t433) -
               xi * (((((t21 + t435) + t4 * 2538.0) - t410) - t455) + t1499);
  sfvals[41] =
      (c_sfvals_tmp +
       t8 * ((((-(eta * 396.0) + t457) + t475) - t4 * 11016.0) + t1462)) +
      (((((((((((t42 + t266) + t456) + t472) + t626) - t3 * 2016.0) + t929) +
           t955) -
          t5 * 9072.0) +
         t1209) +
        t1281) +
       t1315) *
          xi;
  c_sfvals_tmp = t79_tmp * 1332.0;
  e_sfvals_tmp = t1039_tmp * 21384.0;
  sfvals[42] =
      ((t1424 - t9 * (((t129 + t721) - t720) + t1416)) -
       t8 * ((((((((-t127 + t291) + t719) + t5 * 11664.0) - t732) + t1048) +
               t1151) +
              t1237) +
             t1333)) -
      xi * (((((((((((((t46 - t448) + t456) + t4 * 9612.0) - t5 * 10368.0) +
                    t14 * t129) +
                   t1038) +
                  t1111) +
                 t1119) +
                t1280) +
               t1335) +
              t1362) -
             c_sfvals_tmp) -
            e_sfvals_tmp);
  g_sfvals_tmp = t619_tmp * 2106.0;
  sfvals[43] =
      ((t10 * (-t120 + t466) +
        t8 * ((((((((eta * -1107.0 + t3 * 8748.0) - t4 * 13608.0) + t285) +
                  t467) +
                 t1042) +
                t1117) +
               t1290) -
              t619_tmp * 14580.0)) -
       xi *
           ((((((((-t39 + t94) + t415) + t3 * 1107.0) - t433) + t893) + t1265) -
             t618_tmp * 162.0) -
            g_sfvals_tmp)) +
      t9 * (((t3 * -13608.0 + t130) + t721) + t1416);
  sfvals[44] =
      (((t11 * t189 +
         t8 * (((((((((-(zeta * 3078.0) + t560) + t596) + t14 * 12852.0) +
                    t951) -
                   t15 * 17496.0) +
                  t1150) +
                 t1225) +
                t618_tmp * -34992.0) +
               t1343)) +
        ((((((((((((((zeta * 540.0 + t520) + t15 * 6426.0) + t577) -
                   t14 * 3078.0) -
                  t552) +
                 t897) +
                t3 * t214) +
               t954) +
              t1039_tmp * -5832.0) +
             t1120) +
            t1226) +
           t1296) +
          t1334) +
         t1369) *
            xi) +
       t10 * ((t313 - zeta * 5832.0) + t558)) +
      t9 * (((((t214 + t809) + t843) - t14 * 17496.0) + t1113) + t1148);
  sfvals[45] =
      (((-t8 * (((((((((t540 + t594) + t807) + t921) - t809) + t1116) + t1213) +
                  t1236) +
                 t1333) -
                zeta * 3492.0) +
         (((((((((-t66 + t280) + t497) + t14 * 1332.0) - t15 * 1620.0) + t873) +
             t892) +
            t619_tmp * -1620.0) +
           t618_tmp * -3240.0) +
          t1272) *
             xi) -
        b_sfvals_tmp * 3888.0) -
       t9 * (((((t14 * -21384.0 + t809) + t845) + t1113) + t1148) +
             zeta * 9612.0)) -
      t10 * ((-t389 + t595) + t808);
  sfvals[46] =
      (((t11 * t202 +
         (((((t62 + t248) + t266) - t14 * 396.0) + t627) + t634) * xi) -
        t8 * (((((t518 - t542) + t889) + t916) + zeta * 2016.0) - sfvals_tmp)) +
       t9 * (((((t14 * -11016.0 + t539) + t838) + t917) + t948) +
             zeta * 7020.0)) +
      t10 * ((t313 + t558) - zeta * 9072.0);
  sfvals[47] = (((((t29 - t24) + t14 * 54.0) * xi - b_sfvals_tmp * 1944.0) -
                 t8 * ((t268 - t176) + t494)) -
                t10 * ((t283 - t202) + t517)) +
               t9 * ((t283 + t517) - zeta * 2538.0);
  sfvals[48] = ((t1427 - xi * (((t23 + t248) - t249) + (t79 + t626))) +
                t8 * ((((t66 + t264) + t518) - t526) + t888)) -
               t9 * ((((t14 * -6480.0 + t179) + t539) + t566) + t916);
  sfvals_tmp = t9 * ((t63 + t539) - t517);
  sfvals[49] =
      (-t8 * ((((t15 * -6480.0 + t526) + t540) + t1459) - zeta * 252.0) -
       sfvals_tmp) +
      ((((((t26 - t23) + t14 * 360.0) + t497) - t499) + t862) + t872) * xi;
  sfvals[50] = -t8 * (((-t24 + t494) + t519) - t518) -
               xi * (((((t24 + t520) + t15 * 2538.0) - t495) - t540) + t1498);
  sfvals[51] =
      (sfvals_tmp +
       t8 * ((((-(zeta * 396.0) + t542) + t560) - t15 * 11016.0) + t1461)) +
      (((((((((((t62 + t266) + t541) + t557) + t627) - t14 * 2016.0) + t928) +
           t954) -
          t16 * 9072.0) +
         t1208) +
        t1280) +
       t1315) *
          xi;
  sfvals_tmp = t1038_tmp * 21384.0;
  sfvals[52] =
      ((t1427 - t9 * (((t188 + t809) - t808) + t1415)) -
       t8 * ((((((((-t186 + t291) + t807) + t16 * 11664.0) - t820) + t1049) +
               t1150) +
              t1236) +
             t1333)) -
      xi * (((((((((((((t66 - t533) + t541) + t15 * 9612.0) - t16 * 10368.0) +
                    t3 * t188) +
                   t1039) +
                  t1110) +
                 t1118) +
                t1281) +
               t1334) +
              t1362) -
             sfvals_tmp) -
            c_sfvals_tmp);
  b_sfvals_tmp = t619_tmp * 162.0;
  sfvals[53] =
      ((t10 * (-t179 + t551) +
        t8 * ((((((((t14 * 8748.0 - t15 * 13608.0) + t285) + t552) + t1043) +
                 t1116) +
                t1290) -
               zeta * 1107.0) -
              t618_tmp * 14580.0)) -
       xi * ((((((((-(zeta * 135.0) + t94) + t500) + t14 * 1107.0) - t518) +
                t892) +
               t1265) -
              t618_tmp * 2106.0) -
             b_sfvals_tmp)) +
      t9 * (((t14 * -13608.0 + t189) + t809) + t1415);
  sfvals[54] = ((t1198 + t8 * t268) + t9 * t574) + t82 * xi;
  i_sfvals_tmp = t9 * (t117 * zeta + t3 * -t202);
  sfvals[55] = (t8 * (t95 + t1049) - xi * (t26 + t861)) - i_sfvals_tmp;
  sfvals[56] = t1476 - xi * ((t26 + t863) + t873);
  j_sfvals_tmp = t1499 * xi;
  sfvals[57] = j_sfvals_tmp;
  k_sfvals_tmp = t79_tmp * 36.0;
  l_sfvals_tmp = t14 * -t43;
  m_sfvals_tmp =
      ((((t863 + t873) + t1272) + t1312_tmp * -3888.0) + k_sfvals_tmp) +
      l_sfvals_tmp;
  sfvals[58] = -xi * m_sfvals_tmp;
  n_sfvals_tmp =
      ((((t861 + t872) + t1272) + t1311_tmp * -3888.0) + k_sfvals_tmp) +
      t14 * -t45;
  sfvals[59] = -xi * n_sfvals_tmp;
  o_sfvals_tmp = t1498 * xi;
  sfvals[60] = o_sfvals_tmp;
  sfvals[61] = t1475 - xi * ((t26 + t862) + t872);
  t1061_tmp = eta * t176 + t14 * -t143;
  t1313_tmp = t79_tmp * 324.0;
  t1060_tmp = t14 * -t130;
  sfvals[62] = (-t9 * t1061_tmp + t8 * (t1313_tmp + t1060_tmp)) -
               xi * (k_sfvals_tmp + l_sfvals_tmp);
  sfvals[63] =
      t1513 - xi * (((t1265 + t79_tmp * 27.0) + t14 * -t41) - b_sfvals_tmp);
  sfvals[64] =
      ((((((((t82 + t3 * t176) + t5 * t202) + t1061) + t1274) + t1309) +
         t1317) +
        t14 * t21) -
       j_sfvals_tmp) -
      t1039_tmp * 2538.0;
  sfvals[65] =
      ((((((((((((t90 + t15 * t43) + t927) + t1283) + t1285) + t1298) + t1476) -
            t618_tmp * 396.0) -
           t1311_tmp * 1944.0) -
          t1312_tmp * 11016.0) +
         ((((((t266 + t634) + t929) + t955) + t1209) + t1296) + t1320) * xi) -
        t619_tmp * 2016.0) -
       t859_tmp * 9072.0) +
      t472 * zeta;
  sfvals[66] =
      (((((((((((((((t265 + t876) + t1077) + t1323) + t1334) + t1361) + t1365) -
               t1038_tmp * 1620.0) -
              t1317_tmp * 11664.0) +
             t14 * t127) +
            t5 * t389) +
           t14 * t732) -
          t1039_tmp * 9612.0) +
         t448 * zeta) -
        t8 * ((((t282 + t1048) + t1117) + t1213) + t1333)) +
       i_sfvals_tmp) -
      xi * ((((((((t14 * t138 + t1052) + t1111) + t1119) + t1334) + t1345) +
              t1370) -
             c_sfvals_tmp) -
            e_sfvals_tmp);
  b_sfvals_tmp = t1116 + t1117;
  sfvals[67] =
      (((((((((((((((((t900 + t901) + t1198) + t1297) + t1298) + t1336) -
                  t618_tmp * 3078.0) -
                 t858_tmp * 5832.0) -
                t1311_tmp * 17496.0) -
               t1312_tmp * 17496.0) +
              t15 * t155) +
             t4 * t214) +
            t14 * t723) +
           (((((((((t577 + t954) + t955) + t1120) + t1121) + t1226) + t1227) +
              t1344) +
             t1345) +
            t1309_tmp * -34992.0) *
               xi) -
          t619_tmp * 3078.0) -
         t859_tmp * 5832.0) +
        t115 * zeta) +
       t9 * ((t79_tmp * -5832.0 + t948) + t949)) +
      t8 * ((((b_sfvals_tmp + t1224) + t1225) + t1343) + t155 * zeta);
  sfvals[68] =
      (((((((((((((((t265 + t877) + t1076) + t1325) + t1335) + t1361) + t1365) -
               t1038_tmp * 9612.0) +
              eta * t533) -
             t1316_tmp * 11664.0) +
            t3 * t186) +
           t16 * t347) +
          t3 * t820) -
         t1039_tmp * 1620.0) -
        t8 * ((((t282 + t1049) + t1116) + t1212) + t1333)) +
       t9 * t1061_tmp) -
      xi * ((((((((t3 * (zeta * 3240.0) + t1053) + t1110) + t1118) + t1335) +
               t1344) +
              t1370) -
             sfvals_tmp) -
            c_sfvals_tmp);
  sfvals[69] =
      ((((((((((((t90 + t4 * t63) + t926) + t1283) + t1285) + t1297) + t1475) -
            t618_tmp * 2016.0) -
           t858_tmp * 9072.0) +
          eta * t557) -
         t1311_tmp * 11016.0) -
        t1312_tmp * 1944.0) +
       ((((((t266 + t635) + t928) + t954) + t1208) + t1295) + t1320) * xi) -
      t619_tmp * 396.0;
  sfvals[70] =
      ((((((((t82 + t14 * t117) + t16 * t143) + t1060) + t1273) + t1309) +
         t1316) -
        t1038_tmp * 2538.0) +
       t3 * t24) -
      o_sfvals_tmp;
  sfvals[71] = ((((((((((t79 + t876) + t1274) + t1318) + t1323) + t1324) -
                    t1038_tmp * 972.0) +
                   t1311_tmp * 6480.0) +
                  t14 * t46) -
                 t1039_tmp * 216.0) +
                t229 * zeta) +
               xi * n_sfvals_tmp;
  sfvals[72] = ((((((((((t79 + t877) + t1273) + t1318) + t1324) + t1325) -
                    t1038_tmp * 216.0) +
                   eta * t249) +
                  t1312_tmp * 6480.0) +
                 t3 * t66) -
                t1039_tmp * 972.0) +
               xi * m_sfvals_tmp;
  sfvals_tmp = eta * t518;
  sfvals[73] =
      (((((((((((((t892 + t893) + t1291) + t1292) + t1336) + t1513) -
              t618_tmp * 1107.0) -
             t858_tmp * 972.0) +
            t1309_tmp * 8748.0) -
           t1311_tmp * 13608.0) -
          t1312_tmp * 13608.0) -
         t619_tmp * 1107.0) -
        t859_tmp * 972.0) +
       t39 * zeta) -
      xi * (((((((t893 - t14 * t132) + t1309_tmp * 14580.0) + t1363) + t1364) +
              sfvals_tmp) +
             t79_tmp * 297.0) -
            g_sfvals_tmp);
  c_sfvals_tmp = t79_tmp * 4320.0;
  sfvals[74] =
      ((t1304 -
        t8 * (((((t1150 + t1151) + t1309_tmp * 46656.0) - t618_tmp * 38880.0) +
               t79_tmp * 15984.0) -
              t619_tmp * 38880.0)) -
       t9 * ((t1148 + t1149) - h_sfvals_tmp)) -
      xi * (((((((((t954 + t955) + t618_tmp * 15984.0) + t619_tmp * 15984.0) +
                 t1228) +
                t1229) +
               t1344) +
              t1345) -
             t1309_tmp * 38880.0) -
            c_sfvals_tmp);
  sfvals[75] =
      ((t10 * t595 -
        xi * (((((t282 + t892) + t893) + t14 * t453) - t618_tmp * 3564.0) -
              t619_tmp * 3564.0)) +
       t9 * ((t79_tmp * -23328.0 + t1148) + t1149)) +
      t8 * ((((b_sfvals_tmp + t1240) + t1241) + t1343) + t79_tmp * 13284.0);
  b_sfvals_tmp = t267 + t634;
  sfvals[76] = ((t1304 + t8 * ((t916 + t917) - c_sfvals_tmp)) -
                t9 * ((t79_tmp * -11664.0 + t948) + t949)) -
               xi * (b_sfvals_tmp + t635);
  sfvals[77] = (t9 * t1414 + ((((t95 + t862) + t893) + t1063) + t1272) * xi) -
               t8 * ((((t287 + t1048) + t1117) + t1333) - d_sfvals_tmp);
  sfvals[78] =
      -t8 * t1462 - xi * (((((b_sfvals_tmp + t3 * (zeta * 4320.0)) + t955) +
                            t1039_tmp * -11664.0) +
                           t1296) +
                          t1320);
  sfvals[79] =
      (-t9 * t1414 +
       ((((((((t573 + t14 * t140) + t1052) + t1119) + t619_tmp * 13284.0) +
           t1039_tmp * -23328.0) +
          t1334) +
         t1345) +
        t1373) *
           xi) +
      t8 * ((((t293 + t1068) + t1151) + t1241) + t1343);
  b_sfvals_tmp = t9 * (t79_tmp * 1944.0 + t14 * -t350);
  sfvals[80] = (((((((((t573 + t3 * (zeta * 3564.0)) + t1053) + t1118) +
                     t618_tmp * 13284.0) +
                    t1038_tmp * -23328.0) +
                   t1335) +
                  t1344) +
                 t1373) *
                    xi +
                t8 * ((((t293 + t1069) + t1150) + t1240) + t1343)) -
               b_sfvals_tmp;
  sfvals[81] = (-t8 * ((((t287 + t1049) + t1116) + t1333) - f_sfvals_tmp) +
                ((((t95 + t863) + t892) + t618_tmp * -2268.0) + t1272) * xi) +
               b_sfvals_tmp;
  sfvals[82] =
      xi * (((((((t893 + t1063) + t14 * (t3 * 15552.0)) + t1363) + t1364) +
              sfvals_tmp) +
             t1313_tmp) +
            t14 * -t134) -
      t8 * (((t1049 + t1333) + t1313_tmp) + t1060_tmp);
  sfvals[83] =
      -t8 * t1461 - xi * ((((((t267 + t635) + t14 * (eta * 4320.0)) + t954) +
                            t1038_tmp * -11664.0) +
                           t1295) +
                          t1320);
}

// tet_84_sfunc - Compute shape functions and their derivatives of tet_84
void tet_84_sfunc(double xi, double eta, double zeta, double sfvals[84],
                  double sdvals[252])
{
  double b_sfvals_tmp;
  double b_sfvals_tmp_tmp;
  double b_t1511_tmp;
  double b_t1621_tmp;
  double b_t1621_tmp_tmp;
  double c_sfvals_tmp;
  double c_sfvals_tmp_tmp;
  double c_t1511_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double h_sfvals_tmp;
  double i_sfvals_tmp;
  double j_sfvals_tmp;
  double k_sfvals_tmp;
  double l_sfvals_tmp;
  double m_sfvals_tmp;
  double n_sfvals_tmp;
  double o_sfvals_tmp;
  double p_sfvals_tmp;
  double q_sfvals_tmp;
  double r_sfvals_tmp;
  double s_sfvals_tmp;
  double sfvals_tmp;
  double sfvals_tmp_tmp;
  double t10;
  double t1000;
  double t1003;
  double t1004;
  double t101;
  double t102;
  double t103;
  double t1032;
  double t1038;
  double t1038_tmp;
  double t1039;
  double t1039_tmp;
  double t1042;
  double t1043;
  double t1044;
  double t1045;
  double t1046;
  double t1047;
  double t1048;
  double t1049;
  double t1052;
  double t1053;
  double t1056;
  double t1057;
  double t1060;
  double t1060_tmp;
  double t1061;
  double t1061_tmp;
  double t1062;
  double t1063;
  double t1064;
  double t1065;
  double t1066;
  double t1067;
  double t1068;
  double t1069;
  double t1072;
  double t1073;
  double t1074;
  double t1075;
  double t1076;
  double t1077;
  double t1082;
  double t1083;
  double t1084;
  double t1085;
  double t1086;
  double t1087;
  double t1090;
  double t1091;
  double t1096;
  double t1097;
  double t1098;
  double t1099;
  double t11;
  double t1100;
  double t1101;
  double t1104;
  double t1105;
  double t1110;
  double t1111;
  double t1112;
  double t1113;
  double t1116;
  double t1117;
  double t1118;
  double t1119;
  double t1120;
  double t1121;
  double t1128;
  double t1129;
  double t1130;
  double t1131;
  double t1132;
  double t1133;
  double t1140;
  double t1141;
  double t1144;
  double t1145;
  double t1148;
  double t1149;
  double t115;
  double t1150;
  double t1151;
  double t1158;
  double t1159;
  double t116;
  double t1162;
  double t1163;
  double t1164;
  double t1165;
  double t1166;
  double t1167;
  double t1168;
  double t1169;
  double t117;
  double t1172;
  double t1173;
  double t1176;
  double t1177;
  double t1178;
  double t1179;
  double t1179_tmp;
  double t118;
  double t1180;
  double t1187;
  double t119;
  double t1190;
  double t1197;
  double t1198;
  double t1199;
  double t12;
  double t120;
  double t1200;
  double t1201;
  double t1202;
  double t1203;
  double t1204;
  double t1205;
  double t1206;
  double t1207;
  double t1208;
  double t1209;
  double t121;
  double t1210;
  double t1211;
  double t1212;
  double t1213;
  double t1216;
  double t1217;
  double t122;
  double t1224;
  double t1225;
  double t1226;
  double t1227;
  double t1228;
  double t1229;
  double t123;
  double t1230;
  double t1231;
  double t1232;
  double t1233;
  double t1234;
  double t1235;
  double t1236;
  double t1237;
  double t1238;
  double t1239;
  double t124;
  double t1240;
  double t1241;
  double t1242;
  double t1243;
  double t1246;
  double t1247;
  double t1248;
  double t1249;
  double t125;
  double t1254;
  double t1255;
  double t1256;
  double t1257;
  double t1258;
  double t1259;
  double t1260;
  double t1260_tmp;
  double t1261;
  double t1265;
  double t1268;
  double t1269;
  double t127;
  double t1270;
  double t1272;
  double t1273;
  double t1274;
  double t1279;
  double t128;
  double t1280;
  double t1281;
  double t1283;
  double t1285;
  double t1286;
  double t1288;
  double t1289;
  double t129;
  double t1290;
  double t1291;
  double t1292;
  double t1295;
  double t1296;
  double t1297;
  double t1298;
  double t130;
  double t1304;
  double t1305;
  double t1306;
  double t1309;
  double t1309_tmp;
  double t131;
  double t1310;
  double t1311;
  double t1311_tmp;
  double t1312;
  double t1312_tmp;
  double t1313;
  double t1313_tmp;
  double t1314;
  double t1315;
  double t1316;
  double t1316_tmp;
  double t1317;
  double t1317_tmp;
  double t1318;
  double t1319;
  double t132;
  double t1320;
  double t1321;
  double t1322;
  double t1323;
  double t1324;
  double t1325;
  double t1326;
  double t1327;
  double t1329;
  double t133;
  double t1330;
  double t1333;
  double t1334;
  double t1335;
  double t1336;
  double t1337;
  double t1338;
  double t134;
  double t1342;
  double t1343;
  double t1344;
  double t1345;
  double t1348;
  double t1349;
  double t135;
  double t1351;
  double t1352;
  double t1353;
  double t1354;
  double t1356;
  double t1358;
  double t1359;
  double t1359_tmp;
  double t136;
  double t1360;
  double t1361;
  double t1362;
  double t1363;
  double t1364;
  double t1365;
  double t1367;
  double t1368;
  double t1369;
  double t137;
  double t1370;
  double t1371;
  double t1372;
  double t1373;
  double t1374;
  double t1375;
  double t1377;
  double t1378;
  double t1379;
  double t138;
  double t1380;
  double t1381;
  double t1382;
  double t1383;
  double t1385;
  double t1386;
  double t1387;
  double t1388;
  double t1389;
  double t139;
  double t1390;
  double t1391;
  double t1393;
  double t1394;
  double t1395;
  double t14;
  double t140;
  double t1404;
  double t1405;
  double t1408;
  double t1409;
  double t141;
  double t1411;
  double t1414;
  double t1415;
  double t1416;
  double t1417;
  double t1418;
  double t142;
  double t1422;
  double t1424;
  double t1425;
  double t1427;
  double t143;
  double t1430;
  double t1432;
  double t1433;
  double t1435;
  double t144;
  double t1443;
  double t1444;
  double t1445;
  double t1446;
  double t145;
  double t1459;
  double t146;
  double t1460;
  double t1461;
  double t1462;
  double t1464;
  double t1466;
  double t1467;
  double t1468;
  double t147;
  double t1470;
  double t1471;
  double t1475;
  double t1476;
  double t148;
  double t1480;
  double t1481;
  double t1482;
  double t1484;
  double t1485_tmp;
  double t1486_tmp;
  double t1489;
  double t149;
  double t1490;
  double t1491;
  double t1492;
  double t1493;
  double t1494;
  double t1496;
  double t1497;
  double t1498;
  double t1499;
  double t15;
  double t150;
  double t1502;
  double t1503;
  double t1509;
  double t151;
  double t1510;
  double t1511;
  double t1511_tmp;
  double t1512;
  double t1513;
  double t1514;
  double t1515;
  double t1518;
  double t1519;
  double t1519_tmp;
  double t152;
  double t1522;
  double t1522_tmp;
  double t1523;
  double t1524;
  double t153;
  double t1534;
  double t1534_tmp;
  double t1535;
  double t1535_tmp;
  double t154;
  double t1543;
  double t1544;
  double t155;
  double t1552;
  double t1553;
  double t1559;
  double t156;
  double t1561;
  double t157;
  double t1575;
  double t1575_tmp;
  double t1577;
  double t1577_tmp;
  double t158;
  double t1581;
  double t1582;
  double t1582_tmp;
  double t1583;
  double t1583_tmp;
  double t1584;
  double t1584_tmp;
  double t1585;
  double t159;
  double t1592;
  double t1594;
  double t1595;
  double t1598;
  double t1599;
  double t16;
  double t160;
  double t1605;
  double t1607;
  double t1609;
  double t1609_tmp;
  double t161;
  double t1610;
  double t1610_tmp;
  double t1613;
  double t1615;
  double t1616;
  double t1617;
  double t1618;
  double t1619;
  double t162;
  double t1620;
  double t1621;
  double t1621_tmp;
  double t1621_tmp_tmp;
  double t1622;
  double t1623;
  double t1624;
  double t17;
  double t175;
  double t176;
  double t177;
  double t178;
  double t179;
  double t18;
  double t180;
  double t181;
  double t182;
  double t183;
  double t184;
  double t186;
  double t187;
  double t188;
  double t189;
  double t19;
  double t190;
  double t191;
  double t192;
  double t193;
  double t194;
  double t195;
  double t196;
  double t197;
  double t198;
  double t199;
  double t2;
  double t20;
  double t200;
  double t201;
  double t202;
  double t203;
  double t204;
  double t205;
  double t206;
  double t208;
  double t209;
  double t21;
  double t210;
  double t211;
  double t212;
  double t213;
  double t214;
  double t215;
  double t216;
  double t217;
  double t218;
  double t22;
  double t221;
  double t222;
  double t223;
  double t225;
  double t226;
  double t227;
  double t228;
  double t229;
  double t23;
  double t230;
  double t231;
  double t232;
  double t233;
  double t234;
  double t235;
  double t236;
  double t237;
  double t238;
  double t24;
  double t241;
  double t242;
  double t243;
  double t245;
  double t246;
  double t247;
  double t248;
  double t249;
  double t250;
  double t251;
  double t252;
  double t253;
  double t254;
  double t255;
  double t256;
  double t257;
  double t258;
  double t259;
  double t26;
  double t260;
  double t261;
  double t263;
  double t264;
  double t265;
  double t266;
  double t267;
  double t268;
  double t269;
  double t270;
  double t272;
  double t274;
  double t278;
  double t280;
  double t281;
  double t282;
  double t283;
  double t284;
  double t285;
  double t287;
  double t288;
  double t289;
  double t29;
  double t291;
  double t292;
  double t293;
  double t294;
  double t299;
  double t3;
  double t300;
  double t302;
  double t303;
  double t306;
  double t308;
  double t309;
  double t310;
  double t311;
  double t313;
  double t314;
  double t318;
  double t344;
  double t345;
  double t346;
  double t347;
  double t348;
  double t349;
  double t35;
  double t350;
  double t351;
  double t352;
  double t353;
  double t354;
  double t355;
  double t356;
  double t357;
  double t36;
  double t360;
  double t37;
  double t38;
  double t386;
  double t387;
  double t388;
  double t389;
  double t39;
  double t390;
  double t391;
  double t392;
  double t393;
  double t394;
  double t395;
  double t396;
  double t397;
  double t398;
  double t399;
  double t4;
  double t40;
  double t409;
  double t41;
  double t410;
  double t411;
  double t412;
  double t413;
  double t414;
  double t415;
  double t416;
  double t417;
  double t418;
  double t42;
  double t421;
  double t422;
  double t423;
  double t424;
  double t425;
  double t426;
  double t427;
  double t428;
  double t429;
  double t43;
  double t430;
  double t431;
  double t432;
  double t433;
  double t434;
  double t435;
  double t436;
  double t437;
  double t438;
  double t439;
  double t44;
  double t440;
  double t441;
  double t442;
  double t443;
  double t445;
  double t446;
  double t447;
  double t448;
  double t449;
  double t45;
  double t450;
  double t453;
  double t454;
  double t455;
  double t456;
  double t457;
  double t459;
  double t46;
  double t460;
  double t461;
  double t462;
  double t463;
  double t464;
  double t465;
  double t466;
  double t467;
  double t468;
  double t469;
  double t47;
  double t472;
  double t473;
  double t474;
  double t475;
  double t476;
  double t477;
  double t48;
  double t480;
  double t481;
  double t482;
  double t483;
  double t484;
  double t49;
  double t494;
  double t495;
  double t496;
  double t497;
  double t498;
  double t499;
  double t5;
  double t50;
  double t500;
  double t501;
  double t502;
  double t503;
  double t506;
  double t507;
  double t508;
  double t509;
  double t51;
  double t510;
  double t511;
  double t512;
  double t513;
  double t514;
  double t515;
  double t516;
  double t517;
  double t518;
  double t519;
  double t520;
  double t521;
  double t522;
  double t523;
  double t524;
  double t525;
  double t526;
  double t527;
  double t528;
  double t530;
  double t531;
  double t532;
  double t533;
  double t534;
  double t535;
  double t538;
  double t539;
  double t540;
  double t541;
  double t542;
  double t544;
  double t545;
  double t546;
  double t547;
  double t548;
  double t549;
  double t55;
  double t550;
  double t551;
  double t552;
  double t553;
  double t554;
  double t557;
  double t558;
  double t559;
  double t56;
  double t560;
  double t561;
  double t562;
  double t563;
  double t564;
  double t566;
  double t567;
  double t569;
  double t57;
  double t570;
  double t571;
  double t573;
  double t574;
  double t575;
  double t577;
  double t578;
  double t579;
  double t58;
  double t582;
  double t583;
  double t585;
  double t586;
  double t587;
  double t59;
  double t590;
  double t591;
  double t592;
  double t594;
  double t595;
  double t596;
  double t598;
  double t6;
  double t60;
  double t600;
  double t602;
  double t604;
  double t605;
  double t606;
  double t607;
  double t608;
  double t609;
  double t61;
  double t610;
  double t611;
  double t612;
  double t613;
  double t614;
  double t615;
  double t616;
  double t617;
  double t618;
  double t618_tmp;
  double t619;
  double t619_tmp;
  double t62;
  double t622;
  double t623;
  double t626;
  double t627;
  double t63;
  double t630;
  double t631;
  double t634;
  double t635;
  double t636;
  double t637;
  double t638;
  double t639;
  double t64;
  double t649;
  double t65;
  double t651;
  double t652;
  double t66;
  double t663;
  double t67;
  double t68;
  double t69;
  double t7;
  double t70;
  double t708;
  double t709;
  double t71;
  double t710;
  double t712;
  double t713;
  double t714;
  double t715;
  double t716;
  double t717;
  double t718;
  double t719;
  double t72;
  double t720;
  double t721;
  double t722;
  double t723;
  double t724;
  double t725;
  double t726;
  double t727;
  double t728;
  double t729;
  double t730;
  double t731;
  double t732;
  double t733;
  double t734;
  double t735;
  double t736;
  double t737;
  double t738;
  double t739;
  double t74;
  double t740;
  double t741;
  double t742;
  double t743;
  double t744;
  double t745;
  double t746;
  double t75;
  double t751;
  double t77;
  double t79;
  double t796;
  double t797;
  double t798;
  double t79_tmp;
  double t8;
  double t800;
  double t801;
  double t802;
  double t803;
  double t804;
  double t805;
  double t806;
  double t807;
  double t808;
  double t809;
  double t810;
  double t811;
  double t812;
  double t813;
  double t814;
  double t815;
  double t816;
  double t817;
  double t818;
  double t819;
  double t82;
  double t820;
  double t821;
  double t822;
  double t823;
  double t824;
  double t825;
  double t826;
  double t827;
  double t828;
  double t829;
  double t830;
  double t831;
  double t832;
  double t833;
  double t834;
  double t838;
  double t842;
  double t843;
  double t845;
  double t847;
  double t856;
  double t857;
  double t858;
  double t858_tmp;
  double t859;
  double t859_tmp;
  double t860;
  double t861;
  double t862;
  double t863;
  double t865;
  double t866;
  double t867;
  double t87;
  double t870;
  double t871;
  double t872;
  double t873;
  double t876;
  double t877;
  double t884;
  double t885;
  double t888;
  double t889;
  double t892;
  double t893;
  double t896;
  double t897;
  double t9;
  double t90;
  double t900;
  double t901;
  double t902;
  double t903;
  double t906;
  double t907;
  double t91;
  double t911;
  double t916;
  double t917;
  double t920;
  double t921;
  double t926;
  double t927;
  double t928;
  double t929;
  double t936;
  double t937;
  double t938;
  double t939;
  double t94;
  double t940;
  double t941;
  double t948;
  double t949;
  double t95;
  double t950;
  double t951;
  double t954;
  double t955;
  double t956;
  double t957;
  double t96;
  double t962;
  double t963;
  double t965;
  double t968;
  double t969;
  double t98;
  double t997;
  double t998;
  double t_sfvals_tmp;
  double u_sfvals_tmp;
  double v_sfvals_tmp;
  t2 = eta * 4.0;
  t3 = eta * eta;
  t4 = std::pow(eta, 3.0);
  t6 = std::pow(eta, 5.0);
  t8 = xi * xi;
  t9 = std::pow(xi, 3.0);
  t11 = std::pow(xi, 5.0);
  t14 = zeta * zeta;
  t15 = std::pow(zeta, 3.0);
  t17 = std::pow(zeta, 5.0);
  t19 = eta * 27.0;
  t20 = eta * 36.0;
  t21 = eta * 54.0;
  t22 = zeta * 27.0;
  t23 = zeta * 36.0;
  t24 = zeta * 54.0;
  t35 = eta * 72.0;
  t36 = eta * 90.0;
  t37 = eta * 99.0;
  t38 = eta * 108.0;
  t39 = eta * 135.0;
  t40 = eta * 148.0;
  t41 = eta * 162.0;
  t42 = eta * 180.0;
  t43 = eta * 216.0;
  t44 = eta * 297.0;
  t45 = eta * 324.0;
  t46 = eta * 360.0;
  t47 = eta * 378.0;
  t48 = eta * 396.0;
  t49 = eta * 432.0;
  t50 = eta * 486.0;
  t51 = eta * 504.0;
  t55 = zeta * 72.0;
  t56 = zeta * 90.0;
  t57 = zeta * 99.0;
  t58 = zeta * 108.0;
  t59 = zeta * 135.0;
  t60 = zeta * 148.0;
  t61 = zeta * 162.0;
  t62 = zeta * 180.0;
  t63 = zeta * 216.0;
  t64 = zeta * 297.0;
  t65 = zeta * 324.0;
  t66 = zeta * 360.0;
  t67 = zeta * 378.0;
  t68 = zeta * 396.0;
  t69 = zeta * 432.0;
  t70 = zeta * 486.0;
  t71 = zeta * 504.0;
  t79_tmp = eta * zeta;
  t79 = t79_tmp * -36.0;
  t82 = t79_tmp * -54.0;
  t102 = eta * 4.5;
  t103 = eta * 7.2;
  t115 = eta * 540.0;
  t116 = eta * 594.0;
  t117 = eta * 648.0;
  t118 = eta * 720.0;
  t119 = eta * 792.0;
  t120 = eta * 972.0;
  t121 = eta * 1071.0;
  t122 = eta * 1134.0;
  t123 = eta * 1188.0;
  t124 = eta * 1197.0;
  t125 = eta * 1296.0;
  t127 = eta * 1332.0;
  t128 = eta * 1458.0;
  t129 = eta * 1620.0;
  t130 = eta * 1944.0;
  t131 = eta * 2088.0;
  t132 = eta * 2106.0;
  t133 = eta * 2214.0;
  t134 = eta * 2268.0;
  t135 = eta * 2592.0;
  t136 = eta * 2664.0;
  t137 = eta * 3078.0;
  t138 = eta * 3240.0;
  t139 = eta * 3384.0;
  t140 = eta * 3564.0;
  t141 = eta * 3672.0;
  t142 = eta * 3780.0;
  t143 = eta * 3888.0;
  t144 = eta * 3996.0;
  t145 = eta * 4032.0;
  t146 = eta * 4176.0;
  t147 = eta * 4320.0;
  t148 = eta * 4536.0;
  t149 = eta * 4968.0;
  t150 = eta * 5022.0;
  t151 = eta * 5184.0;
  t152 = eta * 5220.0;
  t153 = eta * 5832.0;
  t154 = eta * 6156.0;
  t155 = eta * 6426.0;
  t156 = eta * 6984.0;
  t157 = eta * 7128.0;
  t158 = eta * 7776.0;
  t159 = eta * 7992.0;
  t160 = xi * 7.2;
  t161 = zeta * 4.5;
  t162 = zeta * 7.2;
  t175 = zeta * 594.0;
  t176 = zeta * 648.0;
  t177 = zeta * 720.0;
  t178 = zeta * 792.0;
  t179 = zeta * 972.0;
  t180 = zeta * 1071.0;
  t181 = zeta * 1134.0;
  t182 = zeta * 1188.0;
  t183 = zeta * 1197.0;
  t184 = zeta * 1296.0;
  t186 = zeta * 1332.0;
  t187 = zeta * 1458.0;
  t188 = zeta * 1620.0;
  t189 = zeta * 1944.0;
  t190 = zeta * 2088.0;
  t191 = zeta * 2106.0;
  t192 = zeta * 2214.0;
  t193 = zeta * 2268.0;
  t194 = zeta * 2592.0;
  t195 = zeta * 2664.0;
  t196 = zeta * 3078.0;
  t197 = zeta * 3240.0;
  t198 = zeta * 3384.0;
  t199 = zeta * 3564.0;
  t200 = zeta * 3672.0;
  t201 = zeta * 3780.0;
  t202 = zeta * 3888.0;
  t203 = zeta * 3996.0;
  t204 = zeta * 4032.0;
  t205 = zeta * 4176.0;
  t206 = zeta * 4320.0;
  t208 = zeta * 4968.0;
  t209 = zeta * 5022.0;
  t210 = zeta * 5184.0;
  t211 = zeta * 5220.0;
  t212 = zeta * 5832.0;
  t213 = zeta * 6156.0;
  t214 = zeta * 6426.0;
  t215 = zeta * 6984.0;
  t216 = zeta * 7128.0;
  t217 = zeta * 7776.0;
  t218 = zeta * 7992.0;
  t259 = t79_tmp * -72.0;
  t260 = t79_tmp * -99.0;
  t261 = t79_tmp * -148.0;
  t263 = t79_tmp * -297.0;
  t264 = t79_tmp * -324.0;
  t265 = t79_tmp * -360.0;
  t266 = t79_tmp * -396.0;
  t267 = t79_tmp * -432.0;
  t272 = t79_tmp * 864.0;
  t289 = t79_tmp * 2916.0;
  t300 = t79_tmp * 4212.0;
  t308 = t79_tmp * 6480.0;
  t311 = t79_tmp * 7344.0;
  t318 = eta * 49.5;
  t344 = eta * 9342.0;
  t345 = eta * 9720.0;
  t346 = eta * 10044.0;
  t347 = eta * 10368.0;
  t348 = eta * 11016.0;
  t349 = eta * 11232.0;
  t350 = eta * 11664.0;
  t351 = eta * 12852.0;
  t352 = eta * 15552.0;
  t353 = eta * 17496.0;
  t354 = eta * 19440.0;
  t355 = eta * 21384.0;
  t356 = eta * 22464.0;
  t357 = eta * 23328.0;
  t360 = zeta * 49.5;
  t386 = zeta * 9342.0;
  t387 = zeta * 9720.0;
  t388 = zeta * 10044.0;
  t389 = zeta * 10368.0;
  t390 = zeta * 11016.0;
  t391 = zeta * 11232.0;
  t392 = zeta * 11664.0;
  t393 = zeta * 12852.0;
  t394 = zeta * 15552.0;
  t395 = zeta * 17496.0;
  t396 = zeta * 19440.0;
  t397 = zeta * 21384.0;
  t398 = zeta * 22464.0;
  t399 = zeta * 23328.0;
  t563 = t79_tmp * -7.2;
  t566 = t79_tmp * -648.0;
  t567 = t79_tmp * -792.0;
  t569 = t79_tmp * -1071.0;
  t570 = t79_tmp * -1188.0;
  t571 = t79_tmp * -1197.0;
  t573 = t79_tmp * -1620.0;
  t574 = t79_tmp * -1944.0;
  t575 = t79_tmp * -2214.0;
  t577 = t79_tmp * -3078.0;
  t578 = t79_tmp * -3240.0;
  t579 = t79_tmp * -3888.0;
  t582 = t79_tmp * -4032.0;
  t583 = t79_tmp * -4536.0;
  t585 = t79_tmp * -5220.0;
  t586 = t79_tmp * -5832.0;
  t587 = t79_tmp * -6156.0;
  t590 = t79_tmp * -7776.0;
  t591 = t79_tmp * 8640.0;
  t600 = t79_tmp * 18684.0;
  t602 = t79_tmp * 20088.0;
  t606 = t79_tmp * 25704.0;
  t607 = t79_tmp * 26568.0;
  t608 = t79_tmp * 29160.0;
  t609 = t79_tmp * 31104.0;
  t610 = t79_tmp * 31968.0;
  t611 = t79_tmp * 33048.0;
  t612 = t79_tmp * 34992.0;
  t613 = t79_tmp * 46656.0;
  t614 = t79_tmp * 50544.0;
  t615 = t79_tmp * 52488.0;
  t616 = t79_tmp * 58320.0;
  t617 = t79_tmp * 64152.0;
  t636 = eta * 256.5;
  t637 = eta * 162.4;
  t638 = eta * 313.2;
  t639 = eta * 388.8;
  t649 = zeta * 256.5;
  t651 = zeta * 313.2;
  t652 = zeta * 388.8;
  t838 = t79_tmp * -11016.0;
  t842 = t79_tmp * -15552.0;
  t843 = t79_tmp * -17496.0;
  t845 = t79_tmp * -21384.0;
  t847 = t79_tmp * -23328.0;
  t856 = t79_tmp * 69984.0;
  t857 = t79_tmp * 77760.0;
  t1032 = t79_tmp * -313.2;
  t5 = t3 * t3;
  t7 = std::pow(t3, 3.0);
  t10 = t8 * t8;
  t12 = std::pow(t8, 3.0);
  t16 = t14 * t14;
  t18 = std::pow(t14, 3.0);
  t26 = t20 * zeta;
  t29 = t21 * zeta;
  t72 = t3 * 27.0;
  t74 = t3 * 54.0;
  t75 = t14 * 27.0;
  t77 = t14 * 54.0;
  t87 = t38 * zeta;
  t90 = t42 * zeta;
  t91 = t43 * zeta;
  t94 = t44 * zeta;
  t95 = t45 * zeta;
  t96 = t46 * zeta;
  t98 = t49 * zeta;
  t101 = t51 * zeta;
  t221 = t4 * 72.0;
  t222 = t3 * 90.0;
  t223 = t3 * 162.0;
  t226 = t3 * 180.0;
  t227 = t3 * 216.0;
  t228 = t4 * 216.0;
  t229 = t3 * 252.0;
  t230 = t3 * 297.0;
  t231 = t3 * 324.0;
  t232 = t3 * 360.0;
  t233 = t4 * 378.0;
  t234 = t3 * 396.0;
  t235 = t3 * 432.0;
  t236 = t4 * 486.0;
  t237 = t8 * 90.0;
  t238 = t9 * 378.0;
  t241 = t15 * 72.0;
  t242 = t14 * 90.0;
  t243 = t14 * 162.0;
  t246 = t14 * 180.0;
  t247 = t14 * 216.0;
  t248 = t15 * 216.0;
  t249 = t14 * 252.0;
  t250 = t14 * 297.0;
  t251 = t14 * 324.0;
  t252 = t14 * 360.0;
  t253 = t15 * 378.0;
  t254 = t14 * 396.0;
  t255 = t14 * 432.0;
  t256 = t15 * 486.0;
  t257 = t102 * zeta;
  t258 = t103 * zeta;
  t268 = t116 * zeta;
  t269 = t117 * zeta;
  t270 = t118 * zeta;
  t274 = t123 * zeta;
  t278 = t125 * zeta;
  t280 = t127 * zeta;
  t281 = t128 * zeta;
  t282 = t129 * zeta;
  t283 = t130 * zeta;
  t284 = t131 * zeta;
  t285 = t132 * zeta;
  t287 = t134 * zeta;
  t288 = t136 * zeta;
  t291 = t138 * zeta;
  t292 = t139 * zeta;
  t293 = t140 * zeta;
  t294 = t143 * zeta;
  t299 = t146 * zeta;
  t302 = t148 * zeta;
  t303 = t150 * zeta;
  t306 = t153 * zeta;
  t309 = t156 * zeta;
  t310 = t157 * zeta;
  t313 = t158 * zeta;
  t314 = t159 * zeta;
  t409 = t3 * 594.0;
  t410 = t3 * 648.0;
  t411 = t4 * 648.0;
  t413 = t3 * 972.0;
  t414 = t4 * 972.0;
  t417 = t3 * 1044.0;
  t418 = t3 * 1107.0;
  t421 = t3 * 1188.0;
  t422 = t4 * 1260.0;
  t423 = t4 * 1296.0;
  t425 = t3 * 1332.0;
  t426 = t3 * 1458.0;
  t427 = t3 * 1620.0;
  t428 = t4 * 1620.0;
  t429 = t4 * 1674.0;
  t430 = t3 * 1692.0;
  t431 = t3 * 1836.0;
  t432 = t3 * 1944.0;
  t433 = t4 * 1944.0;
  t435 = t6 * 1944.0;
  t436 = t3 * 2016.0;
  t437 = t3 * 2088.0;
  t438 = t3 * 2106.0;
  t439 = t3 * 2268.0;
  t440 = t4 * 2376.0;
  t441 = t3 * 2484.0;
  t442 = t4 * 2538.0;
  t443 = t4 * 2592.0;
  t445 = t3 * 2916.0;
  t446 = t3 * 3078.0;
  t447 = t3 * 3240.0;
  t448 = t3 * 3492.0;
  t449 = t3 * 3564.0;
  t450 = t3 * 3672.0;
  t453 = t3 * 3888.0;
  t454 = t4 * 3888.0;
  t456 = t6 * 3888.0;
  t457 = t3 * 3996.0;
  t459 = t3 * 4671.0;
  t460 = t3 * 4968.0;
  t461 = t3 * 5022.0;
  t462 = t4 * 5022.0;
  t463 = t3 * 5184.0;
  t464 = t4 * 5184.0;
  t466 = t3 * 5832.0;
  t468 = t6 * 5832.0;
  t469 = t4 * 6120.0;
  t472 = t4 * 7020.0;
  t473 = t3 * 7776.0;
  t474 = t4 * 7776.0;
  t476 = t4 * 7884.0;
  t477 = t3 * 7992.0;
  t482 = t11 * 1944.0;
  t483 = t11 * 3888.0;
  t484 = t11 * 5832.0;
  t494 = t14 * 594.0;
  t495 = t14 * 648.0;
  t496 = t15 * 648.0;
  t498 = t14 * 972.0;
  t499 = t15 * 972.0;
  t502 = t14 * 1044.0;
  t503 = t14 * 1107.0;
  t506 = t14 * 1188.0;
  t507 = t15 * 1260.0;
  t508 = t15 * 1296.0;
  t510 = t14 * 1332.0;
  t511 = t14 * 1458.0;
  t512 = t14 * 1620.0;
  t513 = t15 * 1620.0;
  t514 = t15 * 1674.0;
  t515 = t14 * 1692.0;
  t516 = t14 * 1836.0;
  t517 = t14 * 1944.0;
  t518 = t15 * 1944.0;
  t520 = t17 * 1944.0;
  t521 = t14 * 2016.0;
  t522 = t14 * 2088.0;
  t523 = t14 * 2106.0;
  t524 = t14 * 2268.0;
  t525 = t15 * 2376.0;
  t526 = t14 * 2484.0;
  t527 = t15 * 2538.0;
  t528 = t15 * 2592.0;
  t530 = t14 * 2916.0;
  t531 = t14 * 3078.0;
  t532 = t14 * 3240.0;
  t533 = t14 * 3492.0;
  t534 = t14 * 3564.0;
  t535 = t14 * 3672.0;
  t538 = t14 * 3888.0;
  t539 = t15 * 3888.0;
  t541 = t17 * 3888.0;
  t542 = t14 * 3996.0;
  t544 = t14 * 4671.0;
  t545 = t14 * 4968.0;
  t546 = t14 * 5022.0;
  t547 = t15 * 5022.0;
  t548 = t14 * 5184.0;
  t549 = t15 * 5184.0;
  t551 = t14 * 5832.0;
  t553 = t17 * 5832.0;
  t554 = t15 * 6120.0;
  t557 = t15 * 7020.0;
  t558 = t14 * 7776.0;
  t559 = t15 * 7776.0;
  t561 = t15 * 7884.0;
  t562 = t14 * 7992.0;
  t564 = t318 * zeta;
  t592 = t346 * zeta;
  t594 = t349 * zeta;
  t595 = t350 * zeta;
  t596 = t351 * zeta;
  t598 = t352 * zeta;
  t604 = t356 * zeta;
  t605 = t357 * zeta;
  t618_tmp = eta * t14;
  t618 = t618_tmp * -27.0;
  t619_tmp = t3 * zeta;
  t619 = t619_tmp * -27.0;
  t622 = t14 * t41;
  t623 = t3 * t61;
  t626 = t14 * t43;
  t627 = t3 * t63;
  t630 = t14 * t45;
  t631 = t3 * t65;
  t634 = t14 * t49;
  t635 = t3 * t69;
  t710 = t3 * 9342.0;
  t712 = t4 * 9612.0;
  t714 = t3 * 10044.0;
  t715 = t4 * 10368.0;
  t717 = t3 * 10692.0;
  t718 = t4 * 11016.0;
  t719 = t3 * 11232.0;
  t720 = t3 * 11664.0;
  t721 = t4 * 11664.0;
  t723 = t3 * 12852.0;
  t724 = t3 * 15552.0;
  t725 = t4 * 15552.0;
  t727 = t3 * 17496.0;
  t728 = t4 * 17496.0;
  t729 = t3 * 19440.0;
  t730 = t4 * 19440.0;
  t732 = t4 * 21384.0;
  t733 = t3 * 22464.0;
  t734 = t3 * 23328.0;
  t735 = t4 * 23328.0;
  t736 = t3 * 25272.0;
  t737 = t3 * 29160.0;
  t738 = t3 * 31104.0;
  t739 = t4 * 31104.0;
  t740 = t3 * 33048.0;
  t741 = t3 * 34992.0;
  t742 = t4 * 34992.0;
  t743 = t3 * 40824.0;
  t744 = t3 * 52488.0;
  t745 = t3 * 64152.0;
  t798 = t14 * 9342.0;
  t800 = t15 * 9612.0;
  t802 = t14 * 10044.0;
  t803 = t15 * 10368.0;
  t805 = t14 * 10692.0;
  t806 = t15 * 11016.0;
  t807 = t14 * 11232.0;
  t808 = t14 * 11664.0;
  t809 = t15 * 11664.0;
  t811 = t14 * 12852.0;
  t812 = t14 * 15552.0;
  t813 = t15 * 15552.0;
  t815 = t14 * 17496.0;
  t816 = t15 * 17496.0;
  t817 = t14 * 19440.0;
  t818 = t15 * 19440.0;
  t820 = t15 * 21384.0;
  t821 = t14 * 22464.0;
  t822 = t14 * 23328.0;
  t823 = t15 * 23328.0;
  t824 = t14 * 25272.0;
  t825 = t14 * 29160.0;
  t826 = t14 * 31104.0;
  t827 = t15 * 31104.0;
  t828 = t14 * 33048.0;
  t829 = t14 * 34992.0;
  t830 = t15 * 34992.0;
  t831 = t14 * 40824.0;
  t832 = t14 * 52488.0;
  t833 = t14 * 64152.0;
  t834 = t636 * zeta;
  t860 = t618_tmp * -216.0;
  t861 = t619_tmp * -216.0;
  t862 = t618_tmp * -324.0;
  t863 = t619_tmp * -324.0;
  t865 = t619_tmp * -432.0;
  t866 = t14 * t116;
  t867 = t3 * t175;
  t870 = t14 * t117;
  t871 = t3 * t176;
  t872 = t15 * t117;
  t873 = t4 * t176;
  t884 = t14 * t128;
  t885 = t3 * t187;
  t888 = t14 * t130;
  t889 = t3 * t189;
  t892 = t15 * t130;
  t893 = t4 * t189;
  t900 = t17 * t130;
  t901 = t6 * t189;
  t902 = t14 * t132;
  t903 = t3 * t191;
  t906 = t15 * t135;
  t907 = t4 * t194;
  t911 = t3 * t199;
  t916 = t14 * t143;
  t917 = t3 * t202;
  t920 = t15 * t143;
  t921 = t4 * t202;
  t926 = t17 * t143;
  t927 = t6 * t202;
  t928 = t14 * t144;
  t929 = t3 * t203;
  t936 = t14 * t150;
  t937 = t3 * t209;
  t938 = t15 * t151;
  t939 = t4 * t210;
  t940 = t14 * t153;
  t941 = t3 * t212;
  t948 = t14 * t158;
  t949 = t3 * t217;
  t950 = t15 * t158;
  t951 = t4 * t217;
  t956 = t14 * t159;
  t957 = t3 * t218;
  t965 = t3 * 535.5;
  t968 = t6 * 388.8;
  t997 = t11 * 388.8;
  t1000 = t14 * 535.5;
  t1003 = t17 * 388.8;
  t1038_tmp = eta * t15;
  t1038 = t1038_tmp * -648.0;
  t1039_tmp = t4 * zeta;
  t1039 = t1039_tmp * -648.0;
  t1042 = t618_tmp * -972.0;
  t1043 = t619_tmp * -972.0;
  t1044 = t618_tmp * -1188.0;
  t1045 = t619_tmp * -1188.0;
  t1046 = t618_tmp * -1620.0;
  t1047 = t619_tmp * -1620.0;
  t1048 = t618_tmp * -1944.0;
  t1049 = t619_tmp * -1944.0;
  t1052 = t1038_tmp * -1944.0;
  t1053 = t1039_tmp * -1944.0;
  t1060_tmp = eta * t17;
  t1060 = t1060_tmp * -1944.0;
  t1061_tmp = t6 * zeta;
  t1061 = t1061_tmp * -1944.0;
  t1062 = t618_tmp * -2268.0;
  t1063 = t619_tmp * -2268.0;
  t1064 = t618_tmp * -3240.0;
  t1065 = t619_tmp * -3240.0;
  t1066 = t618_tmp * -3672.0;
  t1067 = t619_tmp * -3672.0;
  t1068 = t618_tmp * -3888.0;
  t1069 = t619_tmp * -3888.0;
  t1072 = t1038_tmp * -3888.0;
  t1073 = t1039_tmp * -3888.0;
  t1076 = t1060_tmp * -3888.0;
  t1077 = t1061_tmp * -3888.0;
  t1082 = t618_tmp * -4968.0;
  t1083 = t619_tmp * -4968.0;
  t1084 = t618_tmp * -5022.0;
  t1085 = t619_tmp * -5022.0;
  t1086 = t618_tmp * -5832.0;
  t1087 = t619_tmp * -5832.0;
  t1090 = t618_tmp * -7776.0;
  t1091 = t619_tmp * -7776.0;
  t1098 = t14 * t344;
  t1099 = t3 * t386;
  t1104 = t15 * t347;
  t1105 = t4 * t389;
  t1110 = t14 * t349;
  t1111 = t3 * t391;
  t1112 = t14 * t350;
  t1113 = t3 * t392;
  t1116 = t15 * t350;
  t1117 = t4 * t392;
  t1120 = t14 * t351;
  t1121 = t3 * t393;
  t1128 = t15 * t352;
  t1129 = t4 * t394;
  t1132 = t618_tmp * 15984.0;
  t1133 = t619_tmp * 15984.0;
  t1144 = t15 * t355;
  t1145 = t4 * t397;
  t1148 = t14 * t357;
  t1149 = t3 * t399;
  t1150 = t15 * t357;
  t1151 = t4 * t399;
  t1164 = t618_tmp * 46656.0;
  t1165 = t619_tmp * 46656.0;
  t1166 = t1038_tmp * 46656.0;
  t1167 = t1039_tmp * 46656.0;
  t1168 = t618_tmp * 50544.0;
  t1169 = t619_tmp * 50544.0;
  t1172 = t618_tmp * 58320.0;
  t1173 = t619_tmp * 58320.0;
  t1187 = t6 * 2332.8;
  t1190 = t11 * 2332.8;
  t1197 = t17 * 2332.8;
  t1200 = t17 * t639;
  t1201 = t6 * t652;
  t1204 = t618_tmp * -10044.0;
  t1205 = t619_tmp * -10044.0;
  t1206 = t618_tmp * -10692.0;
  t1207 = t619_tmp * -10692.0;
  t1208 = t1038_tmp * -11016.0;
  t1209 = t1039_tmp * -11016.0;
  t1210 = t618_tmp * -11232.0;
  t1211 = t619_tmp * -11232.0;
  t1212 = t618_tmp * -11664.0;
  t1213 = t619_tmp * -11664.0;
  t1224 = t618_tmp * -17496.0;
  t1225 = t619_tmp * -17496.0;
  t1226 = t1038_tmp * -17496.0;
  t1227 = t1039_tmp * -17496.0;
  t1228 = t1038_tmp * -19440.0;
  t1229 = t1039_tmp * -19440.0;
  t1232 = t618_tmp * -21384.0;
  t1233 = t619_tmp * -21384.0;
  t1234 = t618_tmp * -22464.0;
  t1235 = t619_tmp * -22464.0;
  t1236 = t618_tmp * -23328.0;
  t1237 = t619_tmp * -23328.0;
  t1238 = t1038_tmp * -23328.0;
  t1239 = t1039_tmp * -23328.0;
  t1240 = t618_tmp * -25272.0;
  t1241 = t619_tmp * -25272.0;
  t1242 = t618_tmp * -29160.0;
  t1243 = t619_tmp * -29160.0;
  t1246 = t618_tmp * -33048.0;
  t1247 = t619_tmp * -33048.0;
  t1248 = t618_tmp * -34992.0;
  t1249 = t619_tmp * -34992.0;
  t1254 = t618_tmp * -52488.0;
  t1255 = t619_tmp * -52488.0;
  t1256 = t618_tmp * 69984.0;
  t1257 = t619_tmp * 69984.0;
  t1258 = t618_tmp * 77760.0;
  t1259 = t619_tmp * 77760.0;
  t1305 = t1060_tmp * -388.8;
  t1306 = t1061_tmp * -388.8;
  t1309_tmp = t3 * t14;
  t1309 = t1309_tmp * -594.0;
  t1310 = t1309_tmp * -972.0;
  t1311_tmp = t3 * t15;
  t1311 = t1311_tmp * -972.0;
  t1312_tmp = t4 * t14;
  t1312 = t1312_tmp * -972.0;
  t1313_tmp = t4 * t15;
  t1313 = t1313_tmp * -1296.0;
  t1314 = t1309_tmp * -1836.0;
  t1315 = t1309_tmp * -1944.0;
  t1318 = t1309_tmp * -2484.0;
  t1319 = t1309_tmp * -2916.0;
  t1320 = t1309_tmp * -3888.0;
  t1321 = t1311_tmp * -3888.0;
  t1322 = t1312_tmp * -3888.0;
  t1324 = t1313_tmp * -3888.0;
  t1326 = t1309_tmp * -5022.0;
  t1327 = t1309_tmp * -5832.0;
  t1329 = t1311_tmp * -7776.0;
  t1330 = t1312_tmp * -7776.0;
  t1337 = t1309_tmp * 14580.0;
  t1354 = t1309_tmp * 38880.0;
  t1356 = t1309_tmp * 46656.0;
  t1359_tmp = eta * t9;
  t1359 = t1359_tmp * zeta * -31104.0;
  t1360 = t1309_tmp * -10692.0;
  t1361 = t1309_tmp * -11232.0;
  t1362 = t1309_tmp * -11664.0;
  t1363 = t1311_tmp * -11664.0;
  t1364 = t1312_tmp * -11664.0;
  t1365 = t1313_tmp * -11664.0;
  t1367 = t1311_tmp * -15552.0;
  t1368 = t1312_tmp * -15552.0;
  t1369 = t1309_tmp * -17496.0;
  t1370 = t1309_tmp * -23328.0;
  t1371 = t1311_tmp * -23328.0;
  t1372 = t1312_tmp * -23328.0;
  t1373 = t1309_tmp * -25272.0;
  t1374 = t1309_tmp * -29160.0;
  t1375 = t1309_tmp * -33048.0;
  t1377 = t1311_tmp * -34992.0;
  t1378 = t1312_tmp * -34992.0;
  t1379 = t1309_tmp * -40824.0;
  t1380 = t1309_tmp * -52488.0;
  t1381 = t1309_tmp * 69984.0;
  t225 = t5 * 162.0;
  t245 = t16 * 162.0;
  t412 = t5 * 648.0;
  t415 = t5 * 972.0;
  t416 = t7 * 972.0;
  t424 = t5 * 1296.0;
  t434 = t5 * 1944.0;
  t455 = t5 * 3888.0;
  t465 = t5 * 5184.0;
  t467 = t5 * 5832.0;
  t475 = t5 * 7776.0;
  t480 = t10 * 648.0;
  t481 = t12 * 972.0;
  t497 = t16 * 648.0;
  t500 = t16 * 972.0;
  t501 = t18 * 972.0;
  t509 = t16 * 1296.0;
  t519 = t16 * 1944.0;
  t540 = t16 * 3888.0;
  t550 = t16 * 5184.0;
  t552 = t16 * 5832.0;
  t560 = t16 * 7776.0;
  t663 = t7 * 64.8;
  t708 = t5 * 8424.0;
  t709 = t5 * 9072.0;
  t713 = t5 * 9720.0;
  t716 = t5 * 10368.0;
  t722 = t5 * 11664.0;
  t726 = t5 * 15552.0;
  t731 = t5 * 19440.0;
  t746 = t12 * 64.8;
  t751 = t18 * 64.8;
  t796 = t16 * 8424.0;
  t797 = t16 * 9072.0;
  t801 = t16 * 9720.0;
  t804 = t16 * 10368.0;
  t810 = t16 * 11664.0;
  t814 = t16 * 15552.0;
  t819 = t16 * 19440.0;
  t858_tmp = eta * t16;
  t858 = t858_tmp * -162.0;
  t859_tmp = t5 * zeta;
  t859 = t859_tmp * -162.0;
  t876 = t16 * t117;
  t877 = t5 * t176;
  t896 = t16 * t130;
  t897 = t5 * t189;
  t954 = t16 * t158;
  t955 = t5 * t217;
  t962 = t10 * t189;
  t963 = t10 * t217;
  t969 = t7 * 388.8;
  t998 = t12 * 388.8;
  t1004 = t18 * 388.8;
  t1056 = t858_tmp * -1944.0;
  t1057 = t859_tmp * -1944.0;
  t1074 = t858_tmp * -3888.0;
  t1075 = t859_tmp * -3888.0;
  t1096 = t858_tmp * -7776.0;
  t1097 = t859_tmp * -7776.0;
  t1100 = t16 * t345;
  t1101 = t5 * t387;
  t1118 = t16 * t350;
  t1119 = t5 * t392;
  t1130 = t16 * t352;
  t1131 = t5 * t394;
  t1140 = t16 * t354;
  t1141 = t5 * t396;
  t1158 = eta * t827;
  t1159 = t739 * zeta;
  t1162 = eta * t829;
  t1163 = t741 * zeta;
  t1176 = t10 * t130;
  t1177 = t10 * t158;
  t1178 = t14 * t230;
  t1179_tmp = t10 * zeta;
  t1179 = t1179_tmp * -1944.0;
  t1180 = t1179_tmp * -7776.0;
  t1198 = t10 * t283;
  t1199 = t9 * t313;
  t1202 = t858_tmp * -9720.0;
  t1203 = t859_tmp * -9720.0;
  t1216 = t858_tmp * -11664.0;
  t1217 = t859_tmp * -11664.0;
  t1230 = t858_tmp * -19440.0;
  t1231 = t859_tmp * -19440.0;
  t1260_tmp = eta * t10;
  t1260 = t1260_tmp * -1944.0;
  t1261 = t1260_tmp * -7776.0;
  t1265 = t14 * t413;
  t1268 = t16 * t413;
  t1270 = t15 * t423;
  t1272 = t14 * t432;
  t1273 = t15 * t432;
  t1274 = t14 * t433;
  t1279 = t14 * t453;
  t1280 = t15 * t453;
  t1281 = t14 * t454;
  t1283 = t15 * t454;
  t1285 = t14 * t457;
  t1286 = t14 * t459;
  t1288 = t15 * t463;
  t1289 = t14 * t464;
  t1290 = t14 * t466;
  t1291 = t16 * t466;
  t1295 = t15 * t473;
  t1296 = t14 * t474;
  t1297 = t16 * t473;
  t1304 = t10 * t590;
  t1316_tmp = t3 * t16;
  t1316 = t1316_tmp * -1944.0;
  t1317_tmp = t5 * t14;
  t1317 = t1317_tmp * -1944.0;
  t1323 = t1316_tmp * -3888.0;
  t1325 = t1317_tmp * -3888.0;
  t1333 = t14 * t720;
  t1334 = t15 * t720;
  t1335 = t14 * t721;
  t1336 = t15 * t721;
  t1338 = t14 * t724;
  t1342 = t14 * t729;
  t1343 = t14 * t734;
  t1344 = t15 * t734;
  t1345 = t14 * t735;
  t1348 = t15 * t738;
  t1349 = t14 * t739;
  t1351 = t14 * t741;
  t1352 = t15 * t741;
  t1353 = t14 * t742;
  t1358 = t14 * t745;
  t1387 = -t41 + t413;
  t1388 = t10 * (t130 - 162.0);
  t1389 = t10 * (t189 - 162.0);
  t1390 = -t61 + t498;
  t1391 = -t117 + t453;
  t1393 = -t10 * (t158 - 648.0);
  t1394 = -t10 * (t217 - 648.0);
  t1395 = -t176 + t538;
  t1411 = ((t130 - 162.0) + (t189 - 162.0)) - 810.0;
  t1414 = t283 + t1213;
  t1269 = t14 * t415;
  t1292 = t14 * t467;
  t1298 = t14 * t475;
  t1382 = t102 - t72;
  t1383 = t161 - t75;
  t1385 = t79 + t626;
  t1386 = t79 + t627;
  t1408 = (t2 - t3 * 36.0) + t221;
  t1409 = (zeta * 4.0 - t14 * 36.0) + t241;
  t1415 = t574 + t1112;
  t1416 = t574 + t1113;
  t1417 = t10 * t1387;
  t1418 = t10 * t1390;
  t1422 = t9 * t1391;
  t1424 = -t10 * t1391;
  t1425 = t9 * t1395;
  t1427 = -t10 * t1395;
  t1430 = t9 * (-t130 + t720);
  t1433 = t9 * (-t189 + t808);
  t1443 = (t43 + t454) - t432;
  t1444 = (t63 + t539) - t517;
  t1445 = (t43 + t579) + t1112;
  t1446 = (t63 + t579) + t1113;
  t1480 = ((-t21 + t409) + t434) - t433;
  t1481 = -t8 * (((-t116 + t445) - t454) + 27.0);
  t1482 = -t8 * (((-t175 + t530) - t539) + 27.0);
  t1484 = ((-t24 + t494) + t519) - t518;
  t1502 = -t8 * (t1387 + t1414);
  t1503 = -t8 * (t1390 + (t283 + t1212));
  t1511_tmp = t79_tmp * 324.0;
  b_t1511_tmp = t14 * -t130;
  c_t1511_tmp = ((t1049 + t1333) + t1511_tmp) + b_t1511_tmp;
  t1511 = xi * c_t1511_tmp;
  t1513 = t8 * (((t1043 + t1290) + t79_tmp * 162.0) + t14 * -t120);
  t1514 = (((t237 - t160) - t238) + t480) - t997;
  t1515 = (((t242 - t162) - t253) + t497) - t1003;
  t1518 = (((t222 - t103) - t233) + t412) - t968;
  t1519_tmp = t62 + t248;
  t1519 = (((t1519_tmp + t266) - t254) + t627) + t634;
  t1522_tmp = t42 + t228;
  t1522 = (((t1522_tmp + t266) - t234) + t626) + t635;
  t1523 = (((t95 + t862) + t893) + t1063) + t1272;
  t1524 = (((t95 + t863) + t892) + t1062) + t1272;
  t1552 = (((((t266 + t634) + t929) + t955) + t1209) + t1296) + t1320;
  t1553 = (((((t266 + t635) + t928) + t954) + t1208) + t1295) + t1320;
  t1575_tmp = -t46 + t280;
  t1575 = (((((((t1575_tmp + t412) + t425) - t428) + t872) + t893) + t1046) +
           t1065) +
          t1272;
  t1577_tmp = -t66 + t280;
  t1577 = (((((((t1577_tmp + t497) + t510) - t513) + t873) + t892) + t1047) +
           t1064) +
          t1272;
  t1582_tmp = -t137 + t475;
  t1582 = (((((((t1582_tmp + t596) + t723) + t950) - t728) + t1151) + t1224) +
           t1249) +
          t1343;
  t1583_tmp = -t196 + t560;
  t1583 = (((((((t1583_tmp + t596) + t811) + t951) - t816) + t1150) + t1225) +
           t1248) +
          t1343;
  t1584_tmp = t573 + t14 * t140;
  t1584 = ((((((t1584_tmp + t1052) + t1119) + t619_tmp * 13284.0) + t1239) +
            t1334) +
           t1345) +
          t1373;
  t1585 = (((((((t573 + t911) + t1053) + t1118) + t618_tmp * 13284.0) + t1238) +
            t1335) +
           t1344) +
          t1373;
  t1592 = ((((((((t577 + t954) + t955) + t1120) + t1121) + t1226) + t1227) +
            t1344) +
           t1345) +
          t1309_tmp * -34992.0;
  t1404 = (t29 - t21) + t74;
  t1405 = (t29 - t24) + t77;
  t1432 = t9 * (t135 - t724);
  t1435 = t9 * (t194 - t812);
  t1459 = (t91 + t920) + t1048;
  t1460 = (t91 + t921) + t1049;
  t1461 = (t98 + t950) + t1068;
  t1462 = (t98 + t951) + t1069;
  t1464 = t8 * t1443;
  t1466 = t8 * t1444;
  t1467 = t8 * t1445;
  t1468 = t8 * t1446;
  t1485_tmp = ((t102 + t4 * 162.0) - t225) - t3 * 49.5;
  t1486_tmp = ((t161 + t15 * 162.0) - t245) - t14 * 49.5;
  t1489 = -t1480 * xi;
  t1490 = t1480 * xi;
  t1491 = -t1484 * xi;
  t1492 = t1484 * xi;
  t1493 = t8 * (((-t22 + t250) + t500) - t499);
  t1494 = t8 * (((-t19 + t230) + t415) - t414);
  t1496 = ((t29 + t892) + t618_tmp * -594.0) + t1056;
  t1497 = ((t29 + t893) + t619_tmp * -594.0) + t1057;
  t1498 = ((t82 + t866) + t896) + t1052;
  t1499 = ((t82 + t867) + t897) + t1053;
  t1509 = (((t160 + t238) - t237) - t480) + t997;
  t1510 = (((t162 + t253) - t242) - t497) + t1003;
  t1512 = (((t103 + t233) - t222) - t412) + t968;
  t1534_tmp = t26 - t20;
  t1534 = ((((t1534_tmp + t232) + t412) - t414) + t863) + t873;
  t1535_tmp = t26 - t23;
  t1535 = ((((t1535_tmp + t252) + t497) - t499) + t862) + t872;
  t1594 =
      ((((((((((t42 + t266) + t456) + t472) + t626) - t436) + t929) + t955) -
         t709) +
        t1209) +
       t1281) +
      t1315;
  t1595 =
      ((((((((((t62 + t266) + t541) + t557) + t627) - t521) + t928) + t954) -
         t797) +
        t1208) +
       t1280) +
      t1315;
  t1605 = ((((((((((((t456 + t476) + t569) + t636) - t3 * 2610.0) + t884) -
                 t5 * 9396.0) +
                t1038) +
               t1099) +
              t1119) +
             t1229) +
            t1280) +
           t1335) +
          t1360;
  t1607 = ((((((((((((t541 + t561) + t569) + t649) - t14 * 2610.0) + t885) -
                 t16 * 9396.0) +
                t1039) +
               t1098) +
              t1118) +
             t1228) +
            t1281) +
           t1334) +
          t1360;
  t1609_tmp = (zeta * 540.0 + t520) + t15 * 6426.0;
  t1609 = (((((((((((t1609_tmp + t577) - t531) - t552) + t897) + t3 * t214) +
                t954) +
               t1039_tmp * -5832.0) +
              t1120) +
             t1226) +
            t1296) +
           t1334) +
          t1369;
  t1610_tmp = (t115 + t435) + t4 * 6426.0;
  t1610 = (((((((((((t1610_tmp + t577) - t446) - t467) + t896) + t14 * t155) +
                t955) +
               t1038_tmp * -5832.0) +
              t1121) +
             t1227) +
            t1295) +
           t1335) +
          t1369;
  t1615 = (((((((((((((((((((t422 + t507) + t79_tmp * -1323.0) + t637) +
                          zeta * 162.4) -
                         t5 * 1134.0) -
                        t16 * 1134.0) +
                       t896) +
                      t897) +
                     t14 * t142) +
                    t3 * t201) +
                   t968) +
                  t1003) +
                 t1038_tmp * -4536.0) +
                t1039_tmp * -4536.0) -
               t3 * 661.5) -
              t14 * 661.5) +
             t1280) +
            t1281) +
           t1309_tmp * -6804.0) -
          14.7;
  t1621_tmp_tmp = t619_tmp * 15552.0;
  b_t1621_tmp_tmp = t618_tmp * 15552.0;
  t1621_tmp =
      (((((((((((((-t131 - t190) + t434) + t461) - t464) + t519) + t546) -
             t549) +
            t592) +
           t950) +
          t951) +
         t1333) -
        b_t1621_tmp_tmp) -
       t1621_tmp_tmp) +
      313.2;
  b_t1621_tmp = t158 + t217;
  t1621 = (((-t482 + -t10 * (b_t1621_tmp - 5184.0)) +
            -t9 * (((((-t352 - t394) + t605) + t720) + t808) + 5022.0)) +
           -t8 * (((((((((t346 + t388) + t474) + t559) - t609) - t724) - t812) +
                    t1148) +
                   t1149) -
                  2088.0)) +
          -xi * t1621_tmp;
  t1470 = t1461 * xi;
  t1471 = t1462 * xi;
  t1475 = t8 * t1459;
  t1476 = t8 * t1460;
  t1543 = (((-t48 + t457) + t475) - t718) + t1462;
  t1544 = (((-t68 + t542) + t560) - t806) + t1461;
  t1559 = ((((t360 + t520) + t525) - t16 * 3726.0) - t14 * 598.5) + t1498;
  t1561 = ((((t318 + t435) + t440) - t5 * 3726.0) - t3 * 598.5) + t1499;
  sfvals_tmp = t639 + t652;
  sfvals[0] =
      (((((((((((((((((((((((eta * -14.7 + t3 * 81.2) - t4 * 220.5) +
                           t5 * 315.0) -
                          t6 * 226.8) +
                         t14 * 81.2) -
                        t15 * 220.5) +
                       t16 * 315.0) -
                      t17 * 226.8) +
                     t663) +
                    t746) +
                   t751) +
                  t1200) +
                 t1201) +
                t1268) +
               t1269) +
              t1270) -
             zeta * 14.7) +
            t11 * (sfvals_tmp - 226.8)) +
           t8 * ((((((((((((((eta * -661.5 + t3 * 1890.0) - t4 * 2268.0) +
                            t14 * 1890.0) -
                           t15 * 2268.0) +
                          t415) +
                         t500) +
                        t920) +
                       t921) +
                      t1290) -
                     zeta * 661.5) -
                    t618_tmp * 6804.0) -
                   t619_tmp * 6804.0) +
                  t142 * zeta) +
                 81.2)) -
          t618_tmp * 661.5) -
         t858_tmp * 1134.0) +
        eta * t507) +
       t1309_tmp * 1890.0) +
      (((((((((t1311_tmp * -2268.0 - t1312_tmp * 2268.0) + t1615 * xi) -
             t619_tmp * 661.5) -
            t859_tmp * 1134.0) +
           t422 * zeta) +
          t637 * zeta) +
         t10 * (((((t283 - t122) - t181) + t413) + t498) + 315.0)) +
        t9 * (((((((((eta * 1260.0 + t423) + t508) + t583) - t439) - t524) +
                 t916) +
                t917) +
               zeta * 1260.0) -
              220.5)) +
       1.0);
  sfvals[1] =
      ((((t8 * 13.7 - t9 * 67.5) + t10 * 153.0) - t11 * 162.0) + t746) - xi;
  sfvals[2] =
      ((((-eta + t3 * 13.7) - t4 * 67.5) + t5 * 153.0) - t6 * 162.0) + t663;
  sfvals[3] =
      ((((t14 * 13.7 - t15 * 67.5) + t16 * 153.0) - t17 * 162.0) + t751) - zeta;
  b_sfvals_tmp = t1038_tmp * 5184.0;
  c_sfvals_tmp = t79_tmp * 2088.0;
  d_sfvals_tmp = t1039_tmp * 5184.0;
  sfvals[4] =
      ((((-t998 -
          xi * ((((((((((((((((((((-t417 - t424) + t429) - t502) - t509) +
                               t514) +
                              t638) +
                             t651) +
                            t896) +
                           t897) +
                          t936) +
                         t937) +
                        t968) +
                       t1003) +
                      t1280) +
                     t1281) -
                    b_sfvals_tmp) -
                   c_sfvals_tmp) -
                  t1309_tmp * 7776.0) -
                 d_sfvals_tmp) -
                36.0)) -
         t10 * (((((-t151 - t210) + t313) + t453) + t538) + 1674.0)) -
        t9 * (((((((((t150 + t209) + t454) + t539) - t473) - t558) + t842) +
                t1112) +
               t1113) -
              1044.0)) -
       t11 * (t1411 - 162.0)) -
      t8 * t1621_tmp;
  e_sfvals_tmp = t143 + t202;
  f_sfvals_tmp = t79_tmp * 19440.0;
  sfvals[5] =
      ((((t481 + t11 * (e_sfvals_tmp - 3078.0)) +
         t10 * (((((eta * -9396.0 + t466) + t551) + t595) - zeta * 9396.0) +
                3699.0)) +
        t9 * (((((((((eta * 7884.0 - t3 * 9720.0) - t14 * 9720.0) + t454) +
                   t539) +
                  t1112) +
                 t1113) +
                zeta * 7884.0) -
               f_sfvals_tmp) -
              2074.5)) -
       xi * ((((((((((((((t225 - t236) + t245) - t256) + t121 * zeta) - t636) -
                     t649) +
                    t872) +
                   t873) +
                  t965) +
                 t1000) +
                t1265) -
               t618_tmp * 1458.0) -
              t619_tmp * 1458.0) +
             45.0)) +
      t8 * ((((((((((((((eta * -2610.0 - t4 * 3564.0) - t15 * 3564.0) + t415) +
                      t459) +
                     t500) +
                    t544) +
                   t920) +
                  t921) +
                 t1206) +
                t1207) +
               t1290) -
              zeta * 2610.0) +
             t344 * zeta) +
            526.5);
  sfvals[6] =
      ((((t12 * -1296.0 -
          xi * (((((((((t40 + t60) + t221) - t226) + t241) - t246) + t265) +
                  t626) +
                 t627) -
                40.0)) -
         t11 * (e_sfvals_tmp - 3888.0)) -
        t10 * (((((eta * -8424.0 + t313) + t453) + t538) - zeta * 8424.0) +
               4356.0)) -
       t9 * (((((((((eta * 6120.0 + t423) - t463) + t508) - t548) + t916) +
                t917) +
               zeta * 6120.0) -
              t79_tmp * 10368.0) -
             2232.0)) +
      t8 * (((((((((eta * 1692.0 + t411) + t496) - t431) - t516) + t888) +
               t889) +
              zeta * 1692.0) -
             t79_tmp * 3672.0) -
            508.0);
  sfvals[7] =
      ((((t481 +
          t8 * (((((eta * -598.5 + t230) + t250) + t268) - zeta * 598.5) +
                297.0)) -
         t9 * (((((eta * -2376.0 + t283) + t413) + t498) - zeta * 2376.0) +
               1381.5)) +
        t10 * (((((eta * -3726.0 + t283) + t413) + t498) - zeta * 3726.0) +
               2889.0)) -
       xi * (((((t29 + t72) + t75) - t318) - t360) + 22.5)) +
      t11 * (t1411 - 1620.0);
  sfvals[8] =
      ((((-t998 + t8 * ((t36 + t56) - 97.2)) - t9 * ((t47 + t67) - 468.0)) +
        t10 * ((t117 + t176) - 1026.0)) -
       t11 * (sfvals_tmp - 1036.8)) -
      xi * ((t103 + t162) - 7.2);
  sfvals_tmp = eta * t8;
  sfvals[9] =
      (((sfvals_tmp * -90.0 - t1260_tmp * 648.0) + t9 * t47) + t11 * t639) +
      t103 * xi;
  sfvals[10] = ((t1417 - t9 * t1387) + t8 * (t230 - t318)) - xi * (t72 - t102);
  t1621_tmp = (t35 + t423) - t410;
  e_sfvals_tmp = t9 * t1621_tmp;
  g_sfvals_tmp = (t20 - t231) + t411;
  sfvals[11] = (t1408 * xi - t8 * g_sfvals_tmp) + e_sfvals_tmp;
  sfvals[12] = t1494 + xi * t1485_tmp;
  h_sfvals_tmp = t1512 * xi;
  sfvals[13] = h_sfvals_tmp;
  sfvals[14] =
      ((((((((((t3 * -97.2 + t4 * 468.0) - t5 * 1026.0) + t6 * 1036.8) + t103) +
            t563) +
           t877) -
          t969) +
         t1306) +
        t3 * t56) -
       h_sfvals_tmp) -
      t1039_tmp * 378.0;
  sfvals[15] =
      (((((((((((((((eta * -22.5 - t4 * 1381.5) + t5 * 2889.0) - t6 * 2754.0) +
                  t230) +
                 t416) +
                t564) +
               t618) +
              t901) +
             t1178) +
            t1269) +
           t1312) +
          t1494) +
         t1561 * xi) -
        t619_tmp * 598.5) -
       t859_tmp * 3726.0) +
      t440 * zeta;
  sfvals[16] =
      (((((((((((((((((((eta * 40.0 - t3 * 508.0) + t4 * 2232.0) -
                       t5 * 4356.0) -
                      t7 * 1296.0) +
                     t261) +
                    t456) +
                   t1077) +
                  t15 * t410) +
                 t1289) +
                t1313) +
               t1314) +
              t1325) -
             t1038_tmp * 72.0) -
            xi *
                (((((((((((t40 + t265) - t430) + t456) + t469) + t626) - t708) +
                     t3 * t200) +
                    t955) +
                   t1281) +
                  t1315) -
                 t1039_tmp * 10368.0)) +
           t14 * t42) -
          t1039_tmp * 6120.0) +
         t430 * zeta) +
        t708 * zeta) -
       e_sfvals_tmp) -
      t8 * ((((-t42 + t431) + t455) - t464) + t1460);
  sfvals[17] =
      ((((((((((((((((((((((eta * -45.0 + t3 * 526.5) - t4 * 2074.5) +
                          t5 * 3699.0) -
                         t6 * 3078.0) +
                        t416) +
                       t834) +
                      t858) +
                     t927) +
                    t1268) +
                   t1283) +
                  t1286) +
                 t1292) +
                t1417) -
               t618_tmp * 535.5) -
              t1311_tmp * 3564.0) -
             t1312_tmp * 9720.0) +
            t15 * t50) +
           t1605 * xi) -
          t619_tmp * 2610.0) -
         t859_tmp * 9396.0) +
        t476 * zeta) +
       t9 * ((((t50 - t449) + t454) + t566) + t917)) +
      t8 *
          ((((((((eta * -535.5 - t4 * 9720.0) + t281) + t459) + t467) + t1042) +
             t1117) +
            t1207) +
           t1290);
  e_sfvals_tmp = t1309_tmp * 15552.0;
  h_sfvals_tmp = t79_tmp * 5184.0;
  i_sfvals_tmp = eta * t11;
  sfvals[18] =
      ((((((((((((((((((((((((t3 * -313.2 + t4 * 1044.0) - t5 * 1674.0) +
                            t6 * 1296.0) +
                           t20) +
                          t1032) +
                         t1061) -
                        t969) +
                       t1288) +
                      t1296) +
                     t1305) +
                    t1316) +
                   t1324) +
                  t1325) +
                 t1326) -
                xi *
                    ((((((((((((((t435 - t437) + t462) - t465) + t638) + t896) +
                             t936) +
                            t955) +
                           t3 * t388) +
                          t1039_tmp * -15552.0) +
                         t1295) +
                        t1335) -
                       b_sfvals_tmp) -
                      c_sfvals_tmp) -
                     e_sfvals_tmp)) -
               i_sfvals_tmp * 388.8) -
              t1038_tmp * 1674.0) +
             eta * t502) +
            t16 * t125) +
           t3 * t190) +
          t5 * t210) -
         t1039_tmp * 5022.0) -
        t9 *
            (((((eta * 1674.0 + t454) - t463) + t916) + t949) - h_sfvals_tmp)) -
       t8 * (((((((((eta * -1044.0 + t303) + t455) + t461) - t474) + t920) +
                t1090) +
               t1117) +
              t1333) -
             t1621_tmp_tmp)) -
      t10 * ((-t125 + t283) + t432);
  b_sfvals_tmp = t11 * zeta;
  sfvals[19] =
      ((((((((((((((((((((((((t14 * -313.2 + t15 * 1044.0) - t16 * 1674.0) +
                            t17 * 1296.0) +
                           t23) +
                          t1032) +
                         t1060) -
                        t1004) +
                       t1289) +
                      t1295) +
                     t1306) +
                    t1317) +
                   t1323) +
                  t1324) +
                 t1326) -
                t1038_tmp * 5022.0) -
               xi * ((((((((((((((t520 - t522) + t547) - t550) + t651) + t897) +
                             t937) +
                            t954) +
                           t14 * t346) +
                          t1038_tmp * -15552.0) +
                         t1296) +
                        t1334) -
                       c_sfvals_tmp) -
                      e_sfvals_tmp) -
                     d_sfvals_tmp)) +
              t14 * t131) +
             t16 * t151) +
            t5 * t184) -
           t1039_tmp * 1674.0) -
          b_sfvals_tmp * 388.8) +
         t417 * zeta) -
        t9 * (((((t539 - t548) + t917) + t948) + zeta * 1674.0) -
              h_sfvals_tmp)) -
       t8 * (((((((((t303 + t540) + t546) - t559) + t921) + t1091) + t1116) +
               t1333) -
              zeta * 1044.0) -
             b_t1621_tmp_tmp)) -
      t10 * ((-t184 + t283) + t517);
  sfvals[20] =
      ((((((((((((((((((((((t14 * 526.5 - t15 * 2074.5) + t16 * 3699.0) -
                          t17 * 3078.0) +
                         t501) +
                        t834) +
                       t859) +
                      t926) +
                     t1269) +
                    t1283) +
                   t1286) +
                  t1291) +
                 t1418) -
                zeta * 45.0) +
               t8 * ((((((((t15 * -9720.0 + t281) + t544) + t552) + t1043) +
                        t1116) +
                       t1206) +
                      t1290) -
                     zeta * 535.5)) -
              t618_tmp * 2610.0) -
             t858_tmp * 9396.0) +
            eta * t561) -
           t1311_tmp * 9720.0) -
          t1312_tmp * 3564.0) +
         t4 * t70) +
        t1607 * xi) -
       t619_tmp * 535.5) +
      t9 * ((((t70 - t534) + t539) + t566) + t916);
  t1313_tmp = (t55 + t508) - t495;
  c_sfvals_tmp = t9 * t1313_tmp;
  sfvals[21] =
      (((((((((((((((((((t14 * -508.0 + t15 * 2232.0) - t16 * 4356.0) -
                       t18 * 1296.0) +
                      t261) +
                     t541) +
                    t1076) +
                   t14 * t411) +
                  t1288) +
                 t1313) +
                t1314) +
               t1323) +
              zeta * 40.0) -
             xi * (((((((((((t60 + t265) - t515) + t541) + t554) + t627) -
                        t796) +
                       t14 * t141) +
                      t954) +
                     t1280) +
                    t1315) -
                   t1038_tmp * 10368.0)) -
            t1038_tmp * 6120.0) +
           eta * t515) +
          eta * t796) +
         t3 * t62) -
        t1039_tmp * 72.0) -
       c_sfvals_tmp) -
      t8 * ((((-t62 + t516) + t540) - t549) + t1459);
  sfvals[22] =
      (((((((((((((((t15 * -1381.5 + t16 * 2889.0) - t17 * 2754.0) + t250) +
                  t501) +
                 t564) +
                t619) +
               t900) +
              t1178) +
             t1268) +
            t1311) +
           t1493) -
          zeta * 22.5) -
         t618_tmp * 598.5) -
        t858_tmp * 3726.0) +
       eta * t525) +
      t1559 * xi;
  d_sfvals_tmp = t1510 * xi;
  sfvals[23] =
      ((((((((((t14 * -97.2 + t15 * 468.0) - t16 * 1026.0) + t17 * 1036.8) +
             t162) +
            t563) +
           t876) -
          t1004) +
         t1305) -
        t1038_tmp * 378.0) +
       t14 * t36) -
      d_sfvals_tmp;
  e_sfvals_tmp = t8 * zeta;
  sfvals[24] = (((t9 * t67 + t11 * t652) + t162 * xi) - e_sfvals_tmp * 90.0) -
               t1179_tmp * 648.0;
  sfvals[25] = ((t1418 - t9 * t1390) + t8 * (t250 - t360)) - xi * (t75 - t161);
  h_sfvals_tmp = (t23 - t251) + t496;
  sfvals[26] = (t1409 * xi - t8 * h_sfvals_tmp) + c_sfvals_tmp;
  sfvals[27] = t1493 + xi * t1486_tmp;
  sfvals[28] = d_sfvals_tmp;
  sfvals[29] =
      (((t258 + t1201) + t4 * t67) - t619_tmp * 90.0) - t859_tmp * 648.0;
  sfvals[30] =
      ((((((t257 + t618) + t859) + t1178) + t1269) + t1312) + t4 * t61) -
      t619_tmp * 49.5;
  sfvals[31] = (((((((t15 * t35 + t4 * t55) + t1270) - t618_tmp * 36.0) -
                   t1311_tmp * 648.0) -
                  t1312_tmp * 648.0) +
                 t14 * t231) +
                t2 * zeta) -
               t619_tmp * 36.0;
  sfvals[32] =
      ((((((t257 + t619) + t858) + t1178) + t1268) + t1311) - t618_tmp * 49.5) +
      t15 * t41;
  sfvals[33] =
      (((t258 + t1200) - t618_tmp * 90.0) - t858_tmp * 648.0) + t15 * t47;
  c_sfvals_tmp = t155 + t721;
  sfvals[34] = (((t11 * t130 + t8 * t1582) + t1610 * xi) +
                t10 * ((t313 - t153) + t473)) +
               t9 * ((((c_sfvals_tmp + t843) - t727) + t1112) + t1149);
  sfvals[35] =
      (((-t8 * (((((((((eta * -3492.0 + t455) + t594) + t719) + t920) - t721) +
                   t1117) +
                  t1212) +
                 t1237) +
                t1333) -
         i_sfvals_tmp * 3888.0) +
        t1575 * xi) -
       t9 * (((((eta * 9612.0 - t3 * 21384.0) + t721) + t845) + t1112) +
             t1149)) -
      t10 * ((-t347 + t595) + t720);
  d_sfvals_tmp = t79_tmp * 3996.0;
  sfvals[36] =
      (((t11 * t143 + t1522 * xi) -
        t8 *
            (((((eta * 2016.0 + t433) - t457) + t888) + t917) - d_sfvals_tmp)) +
       t9 * (((((eta * 7020.0 - t3 * 11016.0) + t454) + t838) + t916) + t949)) +
      t10 * ((eta * -9072.0 + t313) + t473);
  sfvals[37] =
      (((i_sfvals_tmp * -1944.0 + t1404 * xi) - t8 * ((t268 - t117) + t409)) -
       t10 * ((t283 - t143) + t432)) +
      t9 * ((eta * -2538.0 + t283) + t432);
  sfvals[38] = ((t1424 - xi * (((t20 + t228) - t229) + t1386)) +
                t8 * ((((t46 + t264) + t433) - t441) + t889)) -
               t9 * ((((t3 * -6480.0 + t120) + t454) + t566) + t917);
  i_sfvals_tmp = t9 * t1443;
  sfvals[39] = (-t8 * ((((eta * -252.0 - t4 * 6480.0) + t441) + t455) + t1460) -
                i_sfvals_tmp) +
               t1534 * xi;
  sfvals[40] =
      -t8 * t1480 - xi * (((((t21 + t435) + t442) - t410) - t455) + t1499);
  sfvals[41] = (i_sfvals_tmp + t8 * t1543) + t1594 * xi;
  i_sfvals_tmp = t79_tmp * 1332.0;
  j_sfvals_tmp = t1039_tmp * 21384.0;
  t1061_tmp =
      (((((((-t127 + t291) + t719) + t722) - t732) + t1048) + t1151) + t1237) +
      t1333;
  sfvals[42] =
      ((t1424 - t9 * (((t129 + t721) - t720) + t1416)) - t8 * t1061_tmp) -
      xi * (((((((((((((t46 - t448) + t456) + t712) - t716) + t14 * t129) +
                   t1038) +
                  t1111) +
                 t1119) +
                t1280) +
               t1335) +
              t1362) -
             i_sfvals_tmp) -
            j_sfvals_tmp);
  k_sfvals_tmp = t619_tmp * 2106.0;
  sfvals[43] =
      ((t10 * (-t120 + t466) +
        t8 * ((((((((eta * -1107.0 + t3 * 8748.0) - t4 * 13608.0) + t285) +
                  t467) +
                 t1042) +
                t1117) +
               t1290) -
              t619_tmp * 14580.0)) -
       xi * ((((((((-t39 + t94) + t415) + t418) - t433) + t893) + t1265) -
              t618_tmp * 162.0) -
             k_sfvals_tmp)) +
      t9 * (((t3 * -13608.0 + t130) + t721) + t1416);
  l_sfvals_tmp = t214 + t809;
  sfvals[44] = (((t11 * t189 + t8 * t1583) + t1609 * xi) +
                t10 * ((t313 - t212) + t558)) +
               t9 * ((((l_sfvals_tmp + t843) - t815) + t1113) + t1148);
  sfvals[45] =
      (((-t8 * (((((((((t540 + t594) + t807) + t921) - t809) + t1116) + t1213) +
                  t1236) +
                 t1333) -
                zeta * 3492.0) +
         t1577 * xi) -
        b_sfvals_tmp * 3888.0) -
       t9 * (((((t14 * -21384.0 + t809) + t845) + t1113) + t1148) +
             zeta * 9612.0)) -
      t10 * ((-t389 + t595) + t808);
  t1060_tmp = t313 + t558;
  sfvals[46] = (((t11 * t202 + t1519 * xi) -
                 t8 * (((((t518 - t542) + t889) + t916) + zeta * 2016.0) -
                       d_sfvals_tmp)) +
                t9 * (((((t14 * -11016.0 + t539) + t838) + t917) + t948) +
                      zeta * 7020.0)) +
               t10 * (t1060_tmp - zeta * 9072.0);
  sfvals[47] =
      (((t1405 * xi - b_sfvals_tmp * 1944.0) - t8 * ((t268 - t176) + t494)) -
       t10 * ((t283 - t202) + t517)) +
      t9 * ((t283 + t517) - zeta * 2538.0);
  sfvals[48] = ((t1427 - xi * (((t23 + t248) - t249) + t1385)) +
                t8 * ((((t66 + t264) + t518) - t526) + t888)) -
               t9 * ((((t14 * -6480.0 + t179) + t539) + t566) + t916);
  b_sfvals_tmp = t9 * t1444;
  sfvals[49] =
      (-t8 * ((((t15 * -6480.0 + t526) + t540) + t1459) - zeta * 252.0) -
       b_sfvals_tmp) +
      t1535 * xi;
  sfvals[50] =
      -t8 * t1484 - xi * (((((t24 + t520) + t527) - t495) - t540) + t1498);
  sfvals[51] = (b_sfvals_tmp + t8 * t1544) + t1595 * xi;
  b_sfvals_tmp = t1038_tmp * 21384.0;
  d_sfvals_tmp =
      (((((((-t186 + t291) + t807) + t810) - t820) + t1049) + t1150) + t1236) +
      t1333;
  sfvals[52] =
      ((t1427 - t9 * (((t188 + t809) - t808) + t1415)) - t8 * d_sfvals_tmp) -
      xi * (((((((((((((t66 - t533) + t541) + t800) - t804) + t3 * t188) +
                   t1039) +
                  t1110) +
                 t1118) +
                t1281) +
               t1334) +
              t1362) -
             b_sfvals_tmp) -
            i_sfvals_tmp);
  m_sfvals_tmp = t619_tmp * 162.0;
  sfvals[53] =
      ((t10 * (-t179 + t551) +
        t8 * ((((((((t14 * 8748.0 - t15 * 13608.0) + t285) + t552) + t1043) +
                 t1116) +
                t1290) -
               zeta * 1107.0) -
              t618_tmp * 14580.0)) -
       xi * ((((((((-t59 + t94) + t500) + t503) - t518) + t892) + t1265) -
              t618_tmp * 2106.0) -
             m_sfvals_tmp)) +
      t9 * (((t14 * -13608.0 + t189) + t809) + t1415);
  sfvals[54] = ((t1198 + t8 * t268) + t9 * t574) + t82 * xi;
  sfvals_tmp_tmp = t269 + t3 * -t202;
  n_sfvals_tmp = t9 * sfvals_tmp_tmp;
  o_sfvals_tmp = t26 + t861;
  sfvals[55] = (t8 * (t95 + t1049) - xi * o_sfvals_tmp) - n_sfvals_tmp;
  sfvals[56] = t1476 - xi * ((t26 + t863) + t873);
  p_sfvals_tmp = t1499 * xi;
  sfvals[57] = p_sfvals_tmp;
  q_sfvals_tmp = t79_tmp * 36.0;
  r_sfvals_tmp = t14 * -t43;
  s_sfvals_tmp =
      ((((t863 + t873) + t1272) + t1322) + q_sfvals_tmp) + r_sfvals_tmp;
  sfvals[58] = -xi * s_sfvals_tmp;
  t_sfvals_tmp =
      ((((t861 + t872) + t1272) + t1321) + q_sfvals_tmp) + t14 * -t45;
  sfvals[59] = -xi * t_sfvals_tmp;
  u_sfvals_tmp = t1498 * xi;
  sfvals[60] = u_sfvals_tmp;
  sfvals[61] = t1475 - xi * ((t26 + t862) + t872);
  b_sfvals_tmp_tmp = eta * t176;
  c_sfvals_tmp_tmp = t14 * -t143;
  v_sfvals_tmp = b_sfvals_tmp_tmp + c_sfvals_tmp_tmp;
  sfvals[62] = (-t9 * v_sfvals_tmp + t8 * (t1511_tmp + b_t1511_tmp)) -
               xi * (q_sfvals_tmp + r_sfvals_tmp);
  sfvals[63] =
      t1513 - xi * (((t1265 + t79_tmp * 27.0) + t14 * -t41) - m_sfvals_tmp);
  sfvals[64] =
      ((((((((t82 + t871) + t5 * t202) + t1061) + t1274) + t1309) + t1317) +
        t14 * t21) -
       p_sfvals_tmp) -
      t1039_tmp * 2538.0;
  sfvals[65] =
      ((((((((((((t90 + t15 * t43) + t927) + t1283) + t1285) + t1298) + t1476) -
            t618_tmp * 396.0) -
           t1311_tmp * 1944.0) -
          t1312_tmp * 11016.0) +
         t1552 * xi) -
        t619_tmp * 2016.0) -
       t859_tmp * 9072.0) +
      t472 * zeta;
  sfvals[66] =
      (((((((((((((((t265 + t876) + t1077) + t1323) + t1334) + t1361) + t1365) -
               t1038_tmp * 1620.0) -
              t1317_tmp * 11664.0) +
             t14 * t127) +
            t5 * t389) +
           t14 * t732) -
          t1039_tmp * 9612.0) +
         t448 * zeta) -
        t8 * ((((t282 + t1048) + t1117) + t1213) + t1333)) +
       n_sfvals_tmp) -
      xi * ((((((((t14 * t138 + t1052) + t1111) + t1119) + t1334) + t1345) +
              t1370) -
             i_sfvals_tmp) -
            j_sfvals_tmp);
  j_sfvals_tmp = t1116 + t1117;
  sfvals[67] =
      (((((((((((((((((t900 + t901) + t1198) + t1297) + t1298) + t1336) -
                  t618_tmp * 3078.0) -
                 t858_tmp * 5832.0) -
                t1311_tmp * 17496.0) -
               t1312_tmp * 17496.0) +
              t15 * t155) +
             t4 * t214) +
            t14 * t723) +
           t1592 * xi) -
          t619_tmp * 3078.0) -
         t859_tmp * 5832.0) +
        t115 * zeta) +
       t9 * ((t586 + t948) + t949)) +
      t8 * ((((j_sfvals_tmp + t1224) + t1225) + t1343) + t155 * zeta);
  sfvals[68] =
      (((((((((((((((t265 + t877) + t1076) + t1325) + t1335) + t1361) + t1365) -
               t1038_tmp * 9612.0) +
              eta * t533) -
             t1316_tmp * 11664.0) +
            t3 * t186) +
           t16 * t347) +
          t3 * t820) -
         t1039_tmp * 1620.0) -
        t8 * ((((t282 + t1049) + t1116) + t1212) + t1333)) +
       t9 * v_sfvals_tmp) -
      xi * ((((((((t3 * t197 + t1053) + t1110) + t1118) + t1335) + t1344) +
              t1370) -
             b_sfvals_tmp) -
            i_sfvals_tmp);
  sfvals[69] =
      ((((((((((((t90 + t4 * t63) + t926) + t1283) + t1285) + t1297) + t1475) -
            t618_tmp * 2016.0) -
           t858_tmp * 9072.0) +
          eta * t557) -
         t1311_tmp * 11016.0) -
        t1312_tmp * 1944.0) +
       t1553 * xi) -
      t619_tmp * 396.0;
  sfvals[70] =
      ((((((((t82 + t870) + t16 * t143) + t1060) + t1273) + t1309) + t1316) -
        t1038_tmp * 2538.0) +
       t3 * t24) -
      u_sfvals_tmp;
  sfvals[71] = ((((((((((t79 + t876) + t1274) + t1318) + t1323) + t1324) -
                    t1038_tmp * 972.0) +
                   t1311_tmp * 6480.0) +
                  t14 * t46) -
                 t1039_tmp * 216.0) +
                t229 * zeta) +
               xi * t_sfvals_tmp;
  sfvals[72] = ((((((((((t79 + t877) + t1273) + t1318) + t1324) + t1325) -
                    t1038_tmp * 216.0) +
                   eta * t249) +
                  t1312_tmp * 6480.0) +
                 t3 * t66) -
                t1039_tmp * 972.0) +
               xi * s_sfvals_tmp;
  b_sfvals_tmp = eta * t518;
  sfvals[73] =
      (((((((((((((t892 + t893) + t1291) + t1292) + t1336) + t1513) -
              t618_tmp * 1107.0) -
             t858_tmp * 972.0) +
            t1309_tmp * 8748.0) -
           t1311_tmp * 13608.0) -
          t1312_tmp * 13608.0) -
         t619_tmp * 1107.0) -
        t859_tmp * 972.0) +
       t39 * zeta) -
      xi * (((((((t893 - t902) + t1337) + t1363) + t1364) + b_sfvals_tmp) +
             t79_tmp * 297.0) -
            k_sfvals_tmp);
  i_sfvals_tmp = t79_tmp * 4320.0;
  sfvals[74] =
      ((t1304 - t8 * (((((t1150 + t1151) + t1356) - t618_tmp * 38880.0) +
                       t79_tmp * 15984.0) -
                      t619_tmp * 38880.0)) -
       t9 * ((t1148 + t1149) - f_sfvals_tmp)) -
      xi * (((((((((t954 + t955) + t1132) + t1133) + t1228) + t1229) + t1344) +
              t1345) -
             t1354) -
            i_sfvals_tmp);
  sfvals[75] =
      ((t10 * t595 -
        xi * (((((t282 + t892) + t893) + t1279) - t618_tmp * 3564.0) -
              t619_tmp * 3564.0)) +
       t9 * ((t847 + t1148) + t1149)) +
      t8 * ((((j_sfvals_tmp + t1240) + t1241) + t1343) + t79_tmp * 13284.0);
  f_sfvals_tmp = t267 + t634;
  sfvals[76] = ((t1304 + t8 * ((t916 + t917) - i_sfvals_tmp)) -
                t9 * ((t79_tmp * -11664.0 + t948) + t949)) -
               xi * (f_sfvals_tmp + t635);
  sfvals[77] = (t9 * t1414 + t1523 * xi) -
               t8 * ((((t287 + t1048) + t1117) + t1333) - t1621_tmp_tmp);
  sfvals[78] =
      -t8 * t1462 -
      xi * (((((f_sfvals_tmp + t3 * t206) + t955) + t1039_tmp * -11664.0) +
             t1296) +
            t1320);
  sfvals[79] = (-t9 * t1414 + t1584 * xi) +
               t8 * ((((t293 + t1068) + t1151) + t1241) + t1343);
  t1316_tmp = t79_tmp * 1944.0 + t14 * -t350;
  f_sfvals_tmp = t9 * t1316_tmp;
  sfvals[80] =
      (t1585 * xi + t8 * ((((t293 + t1069) + t1150) + t1240) + t1343)) -
      f_sfvals_tmp;
  sfvals[81] = (-t8 * ((((t287 + t1049) + t1116) + t1333) - b_t1621_tmp_tmp) +
                t1524 * xi) +
               f_sfvals_tmp;
  sfvals[82] =
      xi * (((((((t893 + t1063) + t1338) + t1363) + t1364) + b_sfvals_tmp) +
             t1511_tmp) +
            t14 * -t134) -
      t8 * c_t1511_tmp;
  sfvals[83] =
      -t8 * t1461 -
      xi * ((((((t267 + t635) + t14 * t147) + t954) + t1038_tmp * -11664.0) +
             t1295) +
            t1320);
  t1581 = (((t482 + -xi * ((t21 + t24) - 49.5)) + t10 * (t1411 - 2592.0)) +
           -t9 * (t1411 - 1242.0)) +
          t8 * ((t116 + t175) - 598.5);
  t1618 = (((t483 + t10 * ((t350 + t392) - 9396.0)) +
            t9 * (((((t605 - t354) - t396) + t720) + t808) + 7884.0)) +
           -xi * (((((((((t121 + t180) - t289) + t411) - t426) + t496) - t511) +
                    t888) +
                   t889) -
                  256.5)) +
          t8 * (((((((((t344 + t386) + t454) + t539) + t845) - t717) - t805) +
                  t1112) +
                 t1113) -
                2610.0);
  t1511_tmp = t619_tmp * 31104.0;
  t1622 =
      (((t1260 + -t9 * ((-t151 + t313) + t473)) +
        -t8 * (((((t150 + t721) + t842) - t724) + t1112) + t1149)) +
       -xi * (((((((((-t131 + t475) + t592) + t714) + t950) - t725) + t1151) +
                t1343) -
               b_t1621_tmp_tmp) -
              t1511_tmp)) +
      ((((((((((((((t284 + t437) + t465) - t435) - t462) + t938) - t638) +
              t1056) +
             t1084) +
            t1097) +
           t1129) +
          t1205) +
         t1329) +
        t1338) +
       t1364);
  b_t1511_tmp = t618_tmp * 31104.0;
  t1623 =
      (((t1179 + -t9 * ((-t210 + t313) + t558)) +
        -t8 * (((((t209 + t809) + t842) - t812) + t1113) + t1148)) +
       -xi * (((((((((-t190 + t560) + t592) + t802) + t951) - t813) + t1150) +
                t1343) -
               b_t1511_tmp) -
              t1621_tmp_tmp)) +
      ((((((((((((((t284 + t522) + t550) - t520) - t547) + t939) - t651) +
              t1057) +
             t1085) +
            t1096) +
           t1128) +
          t1204) +
         t1330) +
        t1338) +
       t1363);
  t1624 =
      ((((t997 + t10 * t1411) +
         t9 * (((((t313 - t148) - zeta * 4536.0) + t453) + t538) + 1260.0)) +
        t8 * (((((((((t142 + t201) + t454) + t539) - t3 * 6804.0) -
                  t14 * 6804.0) -
                 t79_tmp * 13608.0) +
                t1112) +
               t1113) -
              661.5)) +
       ((((((((((((((t79_tmp * 7560.0 - eta * 1323.0) - zeta * 1323.0) + t434) +
                  t3 * 3780.0) +
                 t519) +
                t14 * 3780.0) -
               t4 * 4536.0) -
              t15 * 4536.0) +
             t950) +
            t951) -
           t618_tmp * 13608.0) -
          t619_tmp * 13608.0) +
         t1333) +
        162.4) *
           xi) +
      t1615;
  t1598 = t1492 + t1559;
  t1599 = t1490 + t1561;
  t1613 = (((-t483 + -t10 * (b_t1621_tmp - 8424.0)) +
            -xi * (((((t98 - t46) - t66) + t227) + t247) + 148.0)) +
           t8 * (((((t294 - t141) - t200) + t432) + t517) + 1692.0)) +
          -t9 * (((((t313 - t347) - t389) + t453) + t538) + 6120.0);
  t1616 =
      (-t1466 + -xi * ((((-t66 + t535) + t560) - t803) + t1461)) +
      (((((((((((t96 - t60) + t515) - t541) - t554) + t796) + t861) + t1066) +
          t1096) +
         t1104) +
        t1272) +
       t1321);
  b_sfvals_tmp = t96 - t40;
  t1617 =
      (-t1464 + -xi * ((((-t46 + t450) + t475) - t715) + t1462)) +
      ((((((((((b_sfvals_tmp + t430) - t456) - t469) + t708) + t860) + t1067) +
          t1097) +
         t1105) +
        t1272) +
       t1322);
  t1619 =
      ((t1425 + t8 * (((t187 + t809) - t805) + t1415)) +
       ((((((((t289 - t180) + t798) + t810) - t818) + t1049) + t1150) + t1232) +
        t1333) *
           xi) +
      t1607;
  t1620 =
      ((t1422 + t8 * (((t128 + t721) - t717) + t1416)) +
       ((((((((t289 - t121) + t710) + t722) - t730) + t1048) + t1151) + t1233) +
        t1333) *
           xi) +
      t1605;
  sdvals[0] = t1624;
  sdvals[1] = t1624;
  sdvals[2] = t1624;
  sdvals[3] =
      ((((t8 * -202.5 + t9 * 612.0) - t10 * 810.0) + t997) + 27.4 * xi) - 1.0;
  sdvals[4] = 0.0;
  sdvals[5] = 0.0;
  sdvals[6] = 0.0;
  sdvals[7] =
      ((((eta * 27.4 - t3 * 202.5) + t4 * 612.0) - t5 * 810.0) + t968) - 1.0;
  sdvals[8] = 0.0;
  sdvals[9] = 0.0;
  sdvals[10] = 0.0;
  sdvals[11] =
      ((((t14 * -202.5 + t15 * 612.0) - t16 * 810.0) + t1003) + zeta * 27.4) -
      1.0;
  b_t1621_tmp_tmp = t345 + t387;
  sdvals[12] =
      ((((-t1190 +
          ((((((((((((((((((((t284 + t417) + t424) + t502) + t509) - t429) -
                         t514) +
                        t938) +
                       t939) -
                      t638) -
                     t651) +
                    t1056) +
                   t1057) +
                  t1084) +
                 t1085) -
                t968) -
               t1003) +
              t14 * t473) +
             t1321) +
            t1322) +
           36.0)) -
         t10 * (b_t1621_tmp_tmp - 6480.0)) -
        t9 * (((((eta * -20736.0 + t609) + t724) + t812) - zeta * 20736.0) +
              6696.0)) -
       xi *
           ((((((((((((((-t146 - t205) + t455) + t540) + t602) + t714) - t715) +
                   t802) -
                  t803) +
                 t1128) +
                t1129) +
               t1343) -
              b_t1511_tmp) -
             t1511_tmp) +
            626.4)) -
      t8 * (((((((((eta * 15066.0 + t721) + t809) - t613) - t734) - t822) +
               t1162) +
              t1163) +
             zeta * 15066.0) -
            3132.0);
  sdvals[13] = t1621;
  sdvals[14] = t1621;
  f_sfvals_tmp = t354 + t396;
  sdvals[15] =
      ((((t484 +
          ((((((((((((((t236 + t256) - t225) - t245) + t569) + t636) + t649) +
                  t884) +
                 t885) +
                t1038) +
               t1039) -
              t965) -
             t1000) +
            t1310) -
           45.0)) +
         t10 * (f_sfvals_tmp - 15390.0)) +
        t9 * (((((eta * -37584.0 + t613) + t734) + t822) - zeta * 37584.0) +
              14796.0)) +
       xi * ((((((((((((((t4 * -7128.0 - t15 * 7128.0) - t152) - t211) + t434) +
                      t519) +
                     t600) +
                    t710) +
                   t798) +
                  t950) +
                 t951) +
                t1232) +
               t1233) +
              t1333) +
             1053.0)) +
      t8 * (((((((((eta * 23652.0 - t616) + t721) + t809) - t737) - t825) +
               t1162) +
              t1163) +
             zeta * 23652.0) -
            6223.5);
  sdvals[16] = t1618;
  sdvals[17] = t1618;
  sdvals[18] =
      ((((t11 * -7776.0 +
          ((((((((b_sfvals_tmp - t60) + t226) + t246) - t221) - t241) + t860) +
            t861) +
           40.0)) -
         t10 * (f_sfvals_tmp - 19440.0)) -
        t9 * (((((eta * -33696.0 + t609) + t724) + t812) - zeta * 33696.0) +
              17424.0)) +
       xi * (((((((((t139 + t198) + t423) + t508) - t311) - t450) - t535) +
               t916) +
              t917) -
             1016.0)) -
      t8 * (((((((((eta * 18360.0 + t454) + t539) - t609) - t724) - t812) +
               t1112) +
              t1113) +
             zeta * 18360.0) -
            6696.0);
  sdvals[19] = t1613;
  sdvals[20] = t1613;
  sdvals[21] =
      ((((t484 + (((((t82 - t72) - t75) + t318) + t360) - 22.5)) +
         t10 * (b_t1621_tmp_tmp - 13770.0)) +
        t9 * (((((eta * -14904.0 + t313) + t453) + t538) - zeta * 14904.0) +
              11556.0)) -
       t8 * (((((-t157 - t216) + t306) + t445) + t530) + 4144.5)) +
      xi * (((((t274 - t124) - t183) + t409) + t494) + 594.0);
  sdvals[22] = t1581;
  sdvals[23] = t1581;
  sdvals[24] =
      ((((-t1190 + ((-t103 - t162) + 7.2)) - t8 * ((t122 + t181) - 1404.0)) +
        t9 * ((t135 + t194) - 4104.0)) +
       xi * ((t42 + t62) - 194.4)) -
      t10 * ((t1411 - 2592.0) - 1458.0);
  sdvals[25] = t1514;
  sdvals[26] = t1514;
  sdvals[27] = (((t103 + t1176) - t1359_tmp * 2592.0) + t8 * t122) - t42 * xi;
  sdvals[28] = t1509;
  sdvals[29] = 0.0;
  sdvals[30] = ((t1382 + t1422) + t8 * (t50 - t445)) + xi * (-t37 + t409);
  sdvals[31] =
      ((t1388 - t9 * (t130 - 162.0)) + t8 * (t116 - 49.5)) - xi * (t21 - 4.5);
  sdvals[32] = 0.0;
  sdvals[33] = (t1408 + t1464) - xi * t1621_tmp;
  b_t1621_tmp_tmp = t9 * ((-t125 + t453) + 72.0);
  sdvals[34] = (-t8 * ((-t117 + t432) + 36.0) + xi * ((-t35 + t227) + 4.0)) +
               b_t1621_tmp_tmp;
  sdvals[35] = 0.0;
  sdvals[36] = t1485_tmp + t1490;
  sdvals[37] = t1481 + xi * (((t3 * 486.0 - t37) - t411) + 4.5);
  sdvals[38] = 0.0;
  sdvals[39] = t1512;
  f_sfvals_tmp = xi * ((((-t42 + t3 * 1134.0) + t434) - t443) + 7.2);
  sdvals[40] = f_sfvals_tmp;
  sdvals[41] = 0.0;
  sdvals[42] = t1518;
  sdvals[43] =
      ((((((((((eta * -194.4 + t3 * 1404.0) - t4 * 4104.0) + t90) - t162) +
            t465) +
           t907) +
          t1057) -
         t1187) -
        t619_tmp * 1134.0) -
       f_sfvals_tmp) +
      7.2;
  sdvals[44] = t1518;
  sdvals[45] = t1599;
  sdvals[46] =
      (((((((((((((((t3 * -4144.5 + t4 * 11556.0) - t5 * 13770.0) + t116) -
                  t75) +
                 t360) +
                t468) +
               t571) +
              t866) +
             t1101) +
            t1281) +
           t1319) +
          t1481) +
         t3 * t216) -
        t1039_tmp * 14904.0) +
       xi * ((((((((t3 * 7128.0 - t4 * 14904.0) - t24) + t274) - t124) + t713) +
               t951) +
              t1087) +
             49.5)) -
      22.5;
  sdvals[47] = t1599;
  sdvals[48] = t1617;
  sdvals[49] =
      (((((((((((((((((((eta * -1016.0 + t3 * 6696.0) - t4 * 17424.0) -
                       t6 * 7776.0) -
                      t60) +
                     t246) +
                    t292) -
                   t241) +
                  t731) +
                 t15 * t125) +
                t1066) +
               t1231) +
              t1321) +
             t1338) +
            t1368) -
           t8 * ((((t141 + t725) - t724) + t1446) - 180.0)) -
          xi * (((((((((((t3 * 18360.0 - t4 * 33696.0) - t139) - t66) + t247) +
                      t311) +
                     t731) +
                    t1068) +
                   t1159) +
                  t1333) -
                 t1511_tmp) +
                148.0)) -
         t619_tmp * 18360.0) +
        t1039_tmp * 33696.0) -
       b_t1621_tmp_tmp) +
      40.0;
  sdvals[50] = t1617;
  sdvals[51] = t1620;
  sdvals[52] =
      ((((((((((((((((((((((eta * 1053.0 - t3 * 6223.5) + t4 * 14796.0) -
                          t5 * 15390.0) +
                         t256) +
                        t468) -
                       t245) +
                      t585) +
                     t649) +
                    t896) +
                   t1098) +
                  t1141) -
                 t1000) +
                t1334) +
               t1345) +
              t1374) +
             t1388) -
            t1038_tmp * 7128.0) +
           xi * (((((((((((((t3 * 23652.0 - t4 * 37584.0) - t152) - t180) +
                          t511) +
                         t600) +
                        t731) -
                       t496) +
                      t950) +
                     t1167) -
                    t1173) +
                   t1232) +
                  t1351) +
                 256.5)) +
          t619_tmp * 23652.0) -
         t1039_tmp * 37584.0) +
        t9 * ((((-t157 + t313) - t176) + t720) + 486.0)) +
       t8 * ((((((((t187 + t344) + t735) - t498) + t845) - t737) + t1112) +
              t1163) -
             535.5)) -
      45.0;
  sdvals[53] = t1620;
  sdvals[54] = t1622;
  b_t1621_tmp_tmp = t143 + (t189 - 162.0);
  sdvals[55] =
      ((((((((((((((((((((((((eta * -626.4 + t3 * 3132.0) - t4 * 6696.0) +
                            t5 * 6480.0) +
                           t299) +
                          t502) +
                         t509) -
                        t514) -
                       t651) +
                      t1074) +
                     t1104) -
                    t997) -
                   t1003) +
                  t1203) +
                 t1204) -
                t1187) +
               t1343) +
              t1363) +
             t1368) -
            t10 * (b_t1621_tmp_tmp - 1134.0)) -
           t9 * (((((-t210 - t347) + t538) + t598) + t720) + 1674.0)) -
          t8 * (((((((((t209 + t346) + t539) + t725) - t558) - t609) - t734) +
                  t1148) +
                 t1163) -
                1044.0)) -
         t619_tmp * 15066.0) +
        t1039_tmp * 20736.0) -
       xi * ((((((((((((((t3 * 15066.0 - t4 * 20736.0) - t146) - t190) + t519) +
                      t546) -
                     t549) +
                    t602) +
                   t713) +
                  t1128) +
                 t1159) -
                t1165) +
               t1351) -
              b_t1511_tmp) +
             313.2)) +
      36.0;
  sdvals[56] = t1622;
  sdvals[57] = t1623;
  sdvals[58] = t1623;
  f_sfvals_tmp = t202 + (t130 - 162.0);
  sdvals[59] =
      ((((((((((((((((((((((((t14 * 3132.0 - t15 * 6696.0) + t16 * 6480.0) +
                            t299) +
                           t417) +
                          t424) -
                         t429) -
                        t638) +
                       t1075) +
                      t1105) -
                     t968) -
                    t997) +
                   t1202) +
                  t1205) -
                 t1197) +
                t1343) +
               t1364) +
              t1367) -
             zeta * 626.4) -
            t10 * (f_sfvals_tmp - 1134.0)) -
           t9 * (((((-t151 - t389) + t453) + t598) + t808) + 1674.0)) -
          t618_tmp * 15066.0) +
         t1038_tmp * 20736.0) -
        t8 * (((((((((t150 + t388) + t454) - t473) + t813) - t609) - t822) +
                t1149) +
               t1162) -
              1044.0)) -
       xi * ((((((((((((((t14 * 15066.0 - t15 * 20736.0) - t131) - t205) +
                       t434) +
                      t461) -
                     t464) +
                    t602) +
                   t801) +
                  t1129) +
                 t1158) -
                t1164) +
               t1351) -
              t1511_tmp) +
             313.2)) +
      36.0;
  sdvals[60] = t1619;
  sdvals[61] = t1619;
  sdvals[62] =
      ((((((((((((((((((((((t14 * -6223.5 + t15 * 14796.0) - t16 * 15390.0) +
                          t236) -
                         t225) +
                        t553) +
                       t585) +
                      t636) +
                     t897) +
                    t1099) +
                   t1140) -
                  t965) +
                 t1335) +
                t1344) +
               t1374) +
              t1389) +
             zeta * 1053.0) +
            t618_tmp * 23652.0) -
           t1038_tmp * 37584.0) +
          xi * (((((((((((((t14 * 23652.0 - t15 * 37584.0) - t121) - t211) +
                         t426) +
                        t600) -
                       t411) +
                      t819) +
                     t951) +
                    t1166) -
                   t1172) +
                  t1233) +
                 t1351) +
                256.5)) -
         t1039_tmp * 7128.0) +
        t9 * ((((-t216 + t313) - t117) + t808) + 486.0)) +
       t8 * ((((((((t128 + t386) - t413) + t823) + t845) - t825) + t1113) +
              t1162) -
             535.5)) -
      45.0;
  sdvals[63] = t1616;
  sdvals[64] = t1616;
  i_sfvals_tmp = t9 * ((-t184 + t538) + 72.0);
  sdvals[65] =
      (((((((((((((((((((t14 * 6696.0 - t15 * 17424.0) - t17 * 7776.0) - t40) +
                      t226) +
                     t292) -
                    t221) +
                   t819) +
                  t4 * t184) +
                 t1067) +
                t1230) +
               t1322) +
              t1338) +
             t1367) -
            zeta * 1016.0) -
           t8 * ((((t200 + t813) - t812) + t1445) - 180.0)) -
          xi *
              (((((((((((t14 * 18360.0 - t15 * 33696.0) - t46) - t198) + t227) +
                     t311) +
                    t819) +
                   t1069) +
                  t1158) +
                 t1333) -
                b_t1511_tmp) +
               148.0)) -
         t618_tmp * 18360.0) +
        t1038_tmp * 33696.0) -
       i_sfvals_tmp) +
      40.0;
  sdvals[66] = t1598;
  sdvals[67] = t1598;
  sdvals[68] =
      (((((((((((((((t14 * -4144.5 + t15 * 11556.0) - t16 * 13770.0) + t175) -
                  t72) +
                 t318) +
                t553) +
               t571) +
              t867) +
             t1100) +
            t1280) +
           t1319) +
          t1482) -
         t1038_tmp * 14904.0) +
        t14 * t157) +
       xi * ((((((((t14 * 7128.0 - t15 * 14904.0) - t21) + t274) - t183) +
                t801) +
               t950) +
              t1086) +
             49.5)) -
      22.5;
  sdvals[69] = t1515;
  sdvals[70] = t1515;
  t1621_tmp = xi * ((((-t62 + t14 * 1134.0) + t519) - t528) + 7.2);
  sdvals[71] =
      ((((((((((t14 * 1404.0 - t15 * 4104.0) + t90) - t103) + t550) + t906) +
           t1056) -
          t1197) -
         zeta * 194.4) -
        t618_tmp * 1134.0) -
       t1621_tmp) +
      7.2;
  j_sfvals_tmp = t9 * zeta;
  sdvals[72] = (((t162 + t962) + t8 * t181) - t62 * xi) - j_sfvals_tmp * 2592.0;
  sdvals[73] = 0.0;
  sdvals[74] = t1509;
  sdvals[75] = ((t1383 + t1425) + t8 * (t70 - t530)) + xi * (-t57 + t494);
  sdvals[76] = 0.0;
  sdvals[77] =
      ((t1389 - t9 * (t189 - 162.0)) + t8 * (t175 - 49.5)) - xi * (t24 - 4.5);
  sdvals[78] = (t1409 + t1466) - xi * t1313_tmp;
  sdvals[79] = 0.0;
  sdvals[80] = (-t8 * ((-t176 + t517) + 36.0) + xi * ((-t55 + t247) + 4.0)) +
               i_sfvals_tmp;
  sdvals[81] = t1486_tmp + t1492;
  sdvals[82] = 0.0;
  sdvals[83] = t1482 + xi * (((t14 * 486.0 - t57) - t496) + 4.5);
  sdvals[84] = t1510;
  sdvals[85] = 0.0;
  sdvals[86] = t1621_tmp;
  sdvals[87] = 0.0;
  sdvals[88] =
      (((t162 + t897) + t3 * t181) - t1039_tmp * 2592.0) - 180.0 * zeta * eta;
  sdvals[89] = t1512;
  sdvals[90] = 0.0;
  sdvals[91] = (((((t260 + t866) + t1039) + t1281) + t1319) + t1383) + t3 * t70;
  sdvals[92] = t1485_tmp + t1499;
  sdvals[93] = 0.0;
  sdvals[94] =
      (((((t259 + t627) + t870) + t1280) + t1315) + t1409) - t1038_tmp * 1296.0;
  sdvals[95] =
      (((((t259 + t626) + t871) + t1281) + t1315) + t1408) - t1039_tmp * 1296.0;
  sdvals[96] = 0.0;
  sdvals[97] = t1486_tmp + t1498;
  sdvals[98] =
      (((((t260 + t867) + t1038) + t1280) + t1319) + t1382) + t14 * t50;
  sdvals[99] = 0.0;
  sdvals[100] = t1510;
  sdvals[101] =
      (((t103 + t896) - t1038_tmp * 2592.0) + t14 * t122) - 180.0 * eta * zeta;
  sdvals[102] =
      (((t1610 +
         xi * (((((((((t3 * 25704.0 - t154) + t606) + t726) - t742) + t1128) +
                  t1167) +
                 t1248) -
                t1257) +
               t1356)) +
        t8 * (((((eta * 19278.0 + t742) - t615) - t744) + t1162) + t1257)) +
       t10 * t345) +
      t9 * ((t609 - t357) + t738);
  i_sfvals_tmp = t217 + t352;
  sdvals[103] =
      (((t482 + t10 * (i_sfvals_tmp - 5832.0)) +
        t8 * (((((((((eta * 25704.0 + t393) + t559) + t739) - t744) - t815) -
                 t856) +
                t1164) +
               t1257) -
              3078.0)) +
       xi * ((((((((((((((t3 * 19278.0 + t14 * 6426.0) - t15 * 5832.0) - t154) -
                       t196) +
                      t519) +
                     t606) +
                    t713) -
                   t735) +
                  t1128) +
                 t1159) +
                t1248) +
               t1255) +
              t1351) +
             540.0)) +
      t9 * (((((eta * -34992.0 + t613) - t395) + t741) + t808) + 6426.0);
  sdvals[104] = ((t1177 + t1582 * xi) + t9 * ((t605 - t353) + t734)) +
                t8 * (((((t351 + t735) - t612) - t741) + t1148) + t1165);
  sdvals[105] =
      (((t1575 - t1260_tmp * 19440.0) -
        t9 * ((eta * -41472.0 + t3 * 46656.0) + t613)) -
       xi * (((((((((-t156 + t475) + t604) + t733) + t950) - t735) + t1151) -
               t1165) +
              t1236) +
             t1343)) -
      t8 * (((((eta * 28836.0 - t617) + t742) - t745) + t1162) + t1257);
  sdvals[106] =
      (((-t483 - t10 * ((t357 + t392) - 10368.0)) -
        t9 * (((((eta * -42768.0 - t397) + t613) + t741) + t808) + 9612.0)) -
       t8 * (((((((((t356 + t391) + t539) + t725) - t613) - t741) - t808) +
               t1148) +
              t1163) -
             3492.0)) +
      xi * (((((((((t3 * -4860.0 + t136) + t186) + t443) + t496) - t308) -
               t512) +
              t916) +
             t941) -
            360.0);
  sdvals[107] = ((t1260_tmp * -11664.0 -
                  t8 * (((((t349 + t721) + t847) - t734) + t1112) + t1149)) -
                 t9 * ((-t355 + t605) + t734)) +
                xi * (((((t127 + t433) + t578) - t447) + t888) + t917);
  t1621_tmp = t79_tmp * 7992.0;
  sdvals[108] =
      (((t1522 - xi * (((((t145 + t454) - t477) + t916) + t949) - t1621_tmp)) +
        t8 * (((((eta * 21060.0 + t721) - t611) - t740) + t1112) + t1149)) +
       t10 * t354) +
      t9 * ((eta * -36288.0 + t609) + t738);
  sdvals[109] =
      (((t483 + t10 * (i_sfvals_tmp - 9072.0)) -
        t8 * (((((-t159 - t203) + t313) + t466) + t517) + 2016.0)) +
       xi * (((((-t68 + t247) + t272) - t119) + t410) + 180.0)) +
      t9 * (((((eta * -22032.0 + t538) + t598) - t390) + t720) + 7020.0);
  sdvals[110] =
      ((t1177 + t9 * ((t313 + t473) - t348)) + xi * ((t98 - t48) + t235)) -
      t8 * ((-t144 + t294) + t453);
  sdvals[111] =
      (((t1404 - t1260_tmp * 9720.0) + t8 * ((eta * -7614.0 + t306) + t466)) -
       t9 * ((t313 - t352) + t473)) -
      xi * ((-t125 + t274) + t421);
  sdvals[112] = (((-t482 - t8 * ((t123 + t175) - 648.0)) +
                  t9 * (b_t1621_tmp_tmp - 2376.0)) -
                 t10 * (b_t1621_tmp_tmp - 3726.0)) +
                xi * ((t24 + t38) - 54.0);
  b_t1621_tmp_tmp = t21 * xi;
  sdvals[113] = ((t1260 - sfvals_tmp * 594.0) + t9 * t130) + b_t1621_tmp_tmp;
  sdvals[114] = ((t1432 + (((t1534_tmp + t229) - t228) + t861)) +
                 xi * ((((t118 + t454) + t566) - t460) + t917)) -
                t8 * (((eta * 2916.0 + t721) - t729) + t1416);
  i_sfvals_tmp = -t65 + t294;
  sdvals[115] = ((t1393 + t8 * (((i_sfvals_tmp - t149) + t466) + 360.0)) -
                 t9 * ((((eta * -12960.0 + t313) - t176) + t720) + 972.0)) -
                xi * ((((-t51 - t23) + t98) + t410) + 36.0);
  t_sfvals_tmp = t8 * (-t45 + t432);
  u_sfvals_tmp = -t20 + t227;
  m_sfvals_tmp = xi * u_sfvals_tmp;
  sdvals[116] = (-t1422 + t_sfvals_tmp) - m_sfvals_tmp;
  k_sfvals_tmp = t8 * ((t117 - t466) + t721);
  sdvals[117] =
      (t1534 - xi * ((((t4 * -12960.0 - t51) + t460) + t475) + t1462)) -
      k_sfvals_tmp;
  s_sfvals_tmp = (-t143 + t720) + 216.0;
  sdvals[118] =
      (-t9 * s_sfvals_tmp - t8 * ((((t149 + t725) - t729) + t1446) - 252.0)) +
      xi * ((((((t23 + t118) + t443) + t566) - t445) + t889) - 36.0);
  r_sfvals_tmp = xi * g_sfvals_tmp;
  sdvals[119] = -t1464 + r_sfvals_tmp;
  sdvals[120] = (((((-t21 + t410) + t455) - t435) - t442) + t1497) +
                xi * (((t38 + t454) - t421) - t455);
  sdvals[121] =
      t8 * (((-t123 + t466) - t474) + 54.0) -
      xi * ((((((((t3 * 7614.0 - t24) - t125) + t274) + t713) + t951) - t725) +
             t1087) +
            54.0);
  sdvals[122] = t1489;
  sdvals[123] =
      (t1594 + k_sfvals_tmp) +
      xi *
          ((((((t4 * -22032.0 + t272) - t119) + t477) + t726) + t1091) + t1129);
  sdvals[124] =
      (t9 * s_sfvals_tmp +
       t8 * ((((((t69 + t159) + t590) + t739) - t740) + t1149) - 396.0)) +
      xi * (((((((((((t3 * 21060.0 - t4 * 36288.0) - t68) + t247) + t314) -
                  t145) +
                 t731) +
                t1068) +
               t1159) +
              t1247) +
             t1333) +
            180.0);
  k_sfvals_tmp = (t49 + t474) - t453;
  sdvals[125] = t1543 * xi + t8 * k_sfvals_tmp;
  sdvals[126] =
      ((t1432 +
        ((((((((((((t1575_tmp + t448) - t456) + t716) + t872) - t712) + t1046) +
              t1145) +
             t1211) +
            t1217) +
           t1321) +
          t1333) +
         t1364)) -
       t8 * ((((eta * 4860.0 + t586) + t742) - t741) + t1163)) -
      xi * ((((((((t4 * -42768.0 + t5 * 23328.0) - t136) + t308) + t733) +
               t1068) -
              t1165) +
             t1167) +
            t1343);
  s_sfvals_tmp = t619_tmp * 64152.0;
  sdvals[127] =
      ((t1393 - t9 * ((((-t189 + t605) - t357) + t741) + 1620.0)) -
       xi * (((((((((((((t3 * 28836.0 - t4 * 41472.0) - t156) - t186) + t512) +
                     t604) +
                    t731) -
                   t496) +
                  t950) +
                 t1167) +
                t1236) +
               t1351) -
              s_sfvals_tmp) +
             360.0)) -
      t8 * ((((((((t4 * 46656.0 + t197) + t356) - t745) - t517) - t613) +
              t1148) +
             t1257) -
            1332.0);
  sdvals[128] = (-t1430 - xi * t1061_tmp) -
                t8 * ((((t138 + t579) + t735) - t734) + t1149);
  sdvals[129] =
      ((((((((((t39 + t263) + t433) + t622) - t415) - t418) + t903) + t1053) +
         t1310) +
        t9 * (-t143 + t734)) +
       t8 * ((((t153 + t586) + t742) - t743) + t1163)) +
      xi * ((((((((t4 * -27216.0 + t300) - t133) + t722) + t727) + t1048) +
              t1151) +
             t1243) +
            t1333);
  sdvals[130] =
      ((t9 * ((((eta * -27216.0 - t189) + t605) + t741) + 1944.0) -
        xi * ((((((((t64 + t133) - t243) - t300) + t454) - t466) + t888) +
               t941) -
              135.0)) +
       t10 * (t350 - 972.0)) +
      t8 * ((((((((t191 + t353) + t735) - t498) - t608) - t743) + t1112) +
             t1163) -
            1107.0);
  sdvals[131] = (t1430 + t8 * (((t3 * -14580.0 + t132) + t721) + t1416)) -
                xi * ((((t44 + t264) + t433) - t438) + t889);
  sdvals[132] =
      (((t1609 +
         xi * (((((((((t14 * 25704.0 - t213) + t606) + t814) - t830) + t1129) +
                  t1166) +
                 t1249) -
                t1256) +
               t1356)) +
        t10 * t387) +
       t8 * (((((t830 - t615) - t832) + t1163) + t1256) + zeta * 19278.0)) +
      t9 * ((t609 - t399) + t826);
  sdvals[133] = ((t963 + t1583 * xi) + t9 * ((t605 - t395) + t822)) +
                t8 * (((((t393 + t823) - t612) - t829) + t1149) + t1164);
  q_sfvals_tmp = t158 + t394;
  sdvals[134] =
      (((t482 + t10 * (q_sfvals_tmp - 5832.0)) +
        t8 * (((((((((t351 + t474) + t827) - t727) - t832) - t856) + t1165) +
                t1256) +
               zeta * 25704.0) -
              3078.0)) +
       xi * ((((((((((((((t3 * 6426.0 - t4 * 5832.0) + t14 * 19278.0) - t137) -
                       t213) +
                      t434) +
                     t606) +
                    t801) -
                   t823) +
                  t1129) +
                 t1158) +
                t1249) +
               t1254) +
              t1351) +
             540.0)) +
      t9 * (((((t613 - t353) + t720) + t829) - zeta * 34992.0) + 6426.0);
  sdvals[135] =
      (((t1577 -
         t8 * (((((-t617 + t830) - t833) + t1163) + t1256) + zeta * 28836.0)) -
        t1179_tmp * 19440.0) -
       t9 * ((t14 * 46656.0 + t613) - zeta * 41472.0)) -
      xi * (((((((((-t215 + t560) + t604) + t821) + t951) - t823) + t1150) -
              t1164) +
             t1237) +
            t1343);
  sdvals[136] = ((t1179_tmp * -11664.0 -
                  t8 * (((((t391 + t809) + t847) - t822) + t1113) + t1148)) -
                 t9 * ((-t397 + t605) + t822)) +
                xi * (((((t186 + t518) + t578) - t532) + t889) + t916);
  sdvals[137] =
      (((-t483 - t10 * ((t350 + t399) - 10368.0)) -
        t9 * (((((-t355 + t613) + t720) + t829) - zeta * 42768.0) + 9612.0)) -
       t8 * (((((((((t349 + t398) + t454) + t813) - t613) - t720) - t829) +
               t1149) +
              t1162) -
             3492.0)) +
      xi * (((((((((t14 * -4860.0 + t127) + t195) + t411) + t528) - t308) -
               t427) +
              t917) +
             t940) -
            360.0);
  sdvals[138] =
      (((t1519 - xi * (((((t204 + t539) - t562) + t917) + t948) - t1621_tmp)) +
        t10 * t396) +
       t8 * (((((t809 - t611) - t828) + t1113) + t1148) + zeta * 21060.0)) +
      t9 * ((t609 + t826) - zeta * 36288.0);
  sdvals[139] = ((t963 + t9 * (t1060_tmp - t390)) + xi * ((t98 - t68) + t255)) -
                t8 * ((-t203 + t294) + t538);
  sdvals[140] =
      (((t483 + t10 * (q_sfvals_tmp - 9072.0)) -
        t8 * (((((-t144 - t218) + t313) + t432) + t551) + 2016.0)) +
       xi * (((((-t48 + t227) + t272) - t178) + t495) + 180.0)) +
      t9 * (((((t453 + t598) - t348) + t808) - zeta * 22032.0) + 7020.0);
  sdvals[141] = (((t1405 - t1179_tmp * 9720.0) - t9 * ((t313 - t394) + t558)) -
                 xi * ((-t184 + t274) + t506)) +
                t8 * ((t306 + t551) - zeta * 7614.0);
  t1621_tmp = t24 * xi;
  sdvals[142] = ((t1179 + t9 * t189) + t1621_tmp) - e_sfvals_tmp * 594.0;
  sdvals[143] =
      (((-t482 - t8 * ((t116 + t182) - 648.0)) + t9 * (f_sfvals_tmp - 2376.0)) -
       t10 * (f_sfvals_tmp - 3726.0)) +
      xi * ((t21 + t58) - 54.0);
  sdvals[144] = ((t1435 + (((t1535_tmp + t249) - t248) + t860)) +
                 xi * ((((t177 + t539) + t566) - t545) + t916)) -
                t8 * (((t809 - t817) + t1415) + zeta * 2916.0);
  f_sfvals_tmp = -t23 + t247;
  q_sfvals_tmp = t8 * (-t65 + t517);
  p_sfvals_tmp = xi * f_sfvals_tmp;
  sdvals[145] = (-t1425 + q_sfvals_tmp) - p_sfvals_tmp;
  b_sfvals_tmp = -t45 + t294;
  sdvals[146] = ((t1394 + t8 * (((b_sfvals_tmp - t208) + t551) + 360.0)) -
                 xi * ((((-t20 - t71) + t98) + t495) + 36.0)) -
                t9 * ((((t313 - t117) + t808) - zeta * 12960.0) + 972.0);
  n_sfvals_tmp = t8 * ((t176 - t551) + t809);
  sdvals[147] =
      (t1535 - xi * ((((t15 * -12960.0 - t71) + t545) + t560) + t1461)) -
      n_sfvals_tmp;
  t1061_tmp = xi * h_sfvals_tmp;
  sdvals[148] = -t1466 + t1061_tmp;
  t1313_tmp = (-t202 + t808) + 216.0;
  sdvals[149] =
      (-t9 * t1313_tmp - t8 * ((((t208 + t813) - t817) + t1445) - 252.0)) +
      xi * ((((((t20 + t177) + t528) + t566) - t530) + t888) - 36.0);
  sdvals[150] = (((((-t24 + t495) + t540) - t520) - t527) + t1496) +
                xi * (((t58 + t539) - t506) - t540);
  sdvals[151] = t1491;
  sdvals[152] =
      t8 * (((-t182 + t551) - t559) + 54.0) -
      xi * ((((((((t14 * 7614.0 - t21) - t184) + t274) + t801) + t950) - t813) +
             t1086) +
            54.0);
  sdvals[153] =
      (t1595 + n_sfvals_tmp) +
      xi * ((((((t15 * -22032.0 + t272) - t178) + t562) + t814) + t1090) +
            t1128);
  n_sfvals_tmp = (t69 + t559) - t538;
  sdvals[154] = t1544 * xi + t8 * n_sfvals_tmp;
  sdvals[155] =
      (t9 * t1313_tmp +
       t8 * ((((((t49 + t218) + t590) + t827) - t828) + t1148) - 396.0)) +
      xi * (((((((((((t14 * 21060.0 - t15 * 36288.0) - t48) + t227) + t314) -
                  t204) +
                 t819) +
                t1069) +
               t1158) +
              t1246) +
             t1333) +
            180.0);
  sdvals[156] =
      ((t1435 +
        ((((((((((((t1577_tmp + t533) - t541) + t804) + t873) - t800) + t1047) +
              t1144) +
             t1210) +
            t1216) +
           t1322) +
          t1333) +
         t1363)) -
       xi * ((((((((t15 * -42768.0 + t16 * 23328.0) - t195) + t308) + t821) +
                t1069) -
               t1164) +
              t1166) +
             t1343)) -
      t8 * ((((t586 + t830) - t829) + t1162) + zeta * 4860.0);
  sdvals[157] = (-t1433 - xi * d_sfvals_tmp) -
                t8 * ((((t197 + t579) + t823) - t822) + t1148);
  t1313_tmp = -t130 + t605;
  t1060_tmp = t618_tmp * 64152.0;
  sdvals[158] =
      ((t1394 - t9 * (((t1313_tmp - t399) + t829) + 1620.0)) -
       xi *
           (((((((((((((t14 * 28836.0 - t15 * 41472.0) - t127) - t215) + t427) +
                    t604) -
                   t411) +
                  t819) +
                 t951) +
                t1166) +
               t1237) +
              t1351) -
             t1060_tmp) +
            360.0)) -
      t8 * ((((((((t15 * 46656.0 + t138) + t398) - t432) - t833) - t613) +
              t1149) +
             t1256) -
            1332.0);
  sdvals[159] =
      ((((((((((t59 + t263) + t518) + t623) - t500) - t503) + t902) + t1052) +
         t1310) +
        t9 * (-t202 + t822)) +
       t8 * ((((t212 + t586) + t830) - t831) + t1162)) +
      xi * ((((((((t15 * -27216.0 + t300) - t192) + t810) + t815) + t1049) +
              t1150) +
             t1242) +
            t1333);
  sdvals[160] = (t1433 + t8 * (((t14 * -14580.0 + t191) + t809) + t1415)) -
                xi * ((((t64 + t264) + t518) - t523) + t888);
  sdvals[161] =
      ((t9 * (((t1313_tmp + t829) - zeta * 27216.0) + 1944.0) -
        xi * ((((((((t44 + t192) - t223) - t300) + t539) - t551) + t889) +
               t940) -
              135.0)) +
       t10 * (t392 - 972.0)) +
      t8 * ((((((((t132 + t395) - t413) + t823) - t608) - t831) + t1113) +
             t1162) -
            1107.0);
  sdvals[162] = ((t82 + t1199) + t8 * t586) + t274 * xi;
  sdvals[163] = ((t962 + t8 * t175) - t1621_tmp) - j_sfvals_tmp * 1944.0;
  sdvals[164] = ((t1176 - t1359_tmp * 1944.0) + t8 * t116) - b_t1621_tmp_tmp;
  b_t1621_tmp_tmp = t8 * t1414;
  sdvals[165] = (t1386 - b_t1621_tmp_tmp) + xi * sfvals_tmp_tmp;
  sdvals[166] = (t8 * (t65 + t579) - xi * (t23 + t267)) - t9 * (t176 - t313);
  sdvals[167] = (t1422 - t_sfvals_tmp) + m_sfvals_tmp;
  sdvals[168] = ((t79 + t631) + t1039) + t1471;
  sdvals[169] = t1468 - xi * ((t23 + t566) + t889);
  sdvals[170] = t1464 - r_sfvals_tmp;
  sdvals[171] = t1499;
  t1621_tmp = ((t24 + t570) + t941) + t1039_tmp * -7776.0;
  sdvals[172] = -xi * t1621_tmp;
  sdvals[173] = t1490;
  sdvals[174] = (((t631 + t1039) + t1281) + t1315) + t1385;
  f_sfvals_tmp = xi * (((f_sfvals_tmp + t1049) + t1333) + (t269 + t1068));
  sdvals[175] = f_sfvals_tmp;
  j_sfvals_tmp = xi * (((-t20 + t231) - t411) + t1462);
  sdvals[176] = j_sfvals_tmp;
  sdvals[177] = (((t630 + t1038) + t1280) + t1315) + t1386;
  t_sfvals_tmp = xi * (((-t23 + t251) - t496) + t1461);
  sdvals[178] = t_sfvals_tmp;
  m_sfvals_tmp = xi * (((u_sfvals_tmp + t1048) + t1333) + (t269 + t1069));
  sdvals[179] = m_sfvals_tmp;
  sdvals[180] = t1498;
  sdvals[181] = t1492;
  r_sfvals_tmp = ((t21 + t570) + t940) + t1038_tmp * -7776.0;
  sdvals[182] = -xi * r_sfvals_tmp;
  sdvals[183] = ((t79 + t630) + t1038) + t1470;
  sdvals[184] = t1466 - t1061_tmp;
  sdvals[185] = t1467 - xi * ((t20 + t566) + t888);
  t1061_tmp = t8 * t1316_tmp;
  sdvals[186] = (t1385 + xi * v_sfvals_tmp) - t1061_tmp;
  sdvals[187] = (t1425 - q_sfvals_tmp) + p_sfvals_tmp;
  q_sfvals_tmp = t9 * (t117 + t590);
  sdvals[188] = (t8 * (t45 + t579) - q_sfvals_tmp) - xi * (t20 + t267);
  sdvals[189] = (((t79_tmp * -27.0 + t622) + t623) + t1310) + t1511;
  sdvals[190] = t1503 + xi * (((-t22 + t95) + t243) + t1048);
  sdvals[191] = t1502 + xi * (((-t19 + t95) + t223) + t1049);
  sdvals[192] = t1497;
  sdvals[193] =
      ((((((((-t24 + t77) + t278) + t1044) + t1129) + t1203) + t1290) + t1330) +
       xi * t1621_tmp) -
      t619_tmp * 7614.0;
  sdvals[194] =
      ((((((((-t21 + t87) + t410) + t455) - t435) - t442) + t921) + t1045) +
       t1075) +
      t1489;
  sdvals[195] = t1471 + t1552;
  sdvals[196] =
      (((((((((((t1519_tmp - t254) + t582) + t956) + t1072) + t1141) + t1334) +
           t1349) +
          t1375) +
         t1468) +
        t619_tmp * 21060.0) -
       t1039_tmp * 36288.0) +
      xi * ((((((-t68 + t255) + t314) + t1090) + t1159) + t1247) + t1343);
  sdvals[197] =
      ((((((((((((t42 + t456) + t472) + t567) - t436) + t870) + t957) - t709) +
           t1131) +
          t1327) +
         t1335) +
        t1464) -
       t1039_tmp * 22032.0) +
      xi * ((((((-t48 + t272) + t457) + t475) - t718) + t1091) + t1129);
  sdvals[198] =
      (((((((((t280 + t892) + t1064) + t1145) + t1211) + t1217) + t1343) +
         t1363) +
        t1372) +
       b_t1621_tmp_tmp) -
      xi * ((((t291 + t1068) + t1151) + t1237) + t1343);
  sdvals[199] =
      (((((((((((((((-t66 + t309) + t497) + t510) - t513) + t1096) + t1150) +
               t1231) +
              t1234) +
             t1358) +
            t1377) +
           t9 * (t176 + t590)) -
          t1312_tmp * 46656.0) -
         t619_tmp * 28836.0) +
        t1039_tmp * 41472.0) -
       t8 * ((((t188 - t517) + t847) + t1148) + t1163)) -
      xi * ((((((((-t186 + t532) + t604) - t518) + t1150) - t1164) + t1167) +
             t1381) -
            s_sfvals_tmp);
  sdvals[200] =
      (((((((((((((((-t46 + t288) + t448) - t456) + t716) + t906) - t712) +
               t1235) +
              t1351) +
             t1367) +
            t1378) -
           t1422) -
          t618_tmp * 4860.0) +
         t1039_tmp * 42768.0) -
        t859_tmp * 23328.0) -
       xi * ((((((((-t127 + t308) + t719) + t722) - t732) + t1086) - t1165) +
              t1167) +
             t1351)) -
      t8 * ((((t129 + t579) + t721) - t720) + t1149);
  sdvals[201] = ((t1199 + t1592) + t8 * ((t843 + t1148) + t1149)) +
                xi * (((((t596 + t1150) + t1151) + t1248) + t1249) + t1356);
  sdvals[202] =
      (((((((((((((((t1609_tmp + t587) - t531) - t552) + t962) + t1101) +
                t1130) +
               t1239) +
              t1349) +
             t1352) +
            t1380) +
           t618_tmp * 25704.0) -
          t1038_tmp * 34992.0) +
         t619_tmp * 19278.0) +
        t9 * ((-t212 + t558) + t598)) +
       xi * ((((((((t1583_tmp + t606) + t811) - t816) + t1159) + t1166) +
               t1255) -
              t1256) +
             t1381)) +
      t8 * ((((l_sfvals_tmp - t612) - t815) + t1163) + t1164);
  sdvals[203] =
      (((((((((((((((t1610_tmp + t587) - t446) - t467) + t1100) + t1131) +
                t1176) +
               t1238) +
              t1348) +
             t1353) +
            t1380) +
           t618_tmp * 19278.0) +
          t619_tmp * 25704.0) -
         t1039_tmp * 34992.0) +
        t9 * ((-t153 + t473) + t598)) +
       xi * ((((((((t1582_tmp + t606) + t723) - t728) + t1158) + t1167) +
               t1254) -
              t1257) +
             t1381)) +
      t8 * ((((c_sfvals_tmp - t612) - t727) + t1162) + t1165);
  sdvals[204] =
      (((((((((t280 + t893) + t1065) + t1144) + t1210) + t1216) + t1343) +
         t1364) +
        t1371) -
       xi * ((((t291 + t1069) + t1150) + t1236) + t1343)) +
      t1061_tmp;
  sdvals[205] =
      (((((((((((((((-t66 + t288) + t533) - t541) + t804) + t907) - t800) +
               t1234) +
              t1351) +
             t1368) +
            t1377) -
           t1425) +
          t1038_tmp * 42768.0) -
         t858_tmp * 23328.0) -
        t619_tmp * 4860.0) -
       xi * ((((((((-t186 + t308) + t807) + t810) - t820) + t1087) - t1164) +
              t1166) +
             t1351)) -
      t8 * ((((t188 + t579) + t809) - t808) + t1148);
  sdvals[206] =
      (((((((((((((((-t46 + t309) + t412) + t425) - t428) + t1097) + t1151) +
               t1230) +
              t1235) +
             t1358) +
            t1378) +
           q_sfvals_tmp) -
          t618_tmp * 28836.0) +
         t1038_tmp * 41472.0) -
        t1311_tmp * 46656.0) -
       t8 * ((((t129 - t432) + t847) + t1149) + t1162)) -
      xi * ((((((((-t127 + t447) + t604) - t433) + t1151) - t1165) + t1166) +
             t1381) -
            t1060_tmp);
  sdvals[207] = t1470 + t1553;
  sdvals[208] =
      ((((((((((((t62 + t541) + t557) + t567) - t521) + t871) + t956) - t797) +
           t1130) +
          t1327) +
         t1334) +
        t1466) -
       t1038_tmp * 22032.0) +
      xi * ((((((-t68 + t272) + t542) + t560) - t806) + t1090) + t1128);
  sdvals[209] =
      (((((((((((t1522_tmp - t234) + t582) + t957) + t1073) + t1140) + t1335) +
           t1348) +
          t1375) +
         t1467) +
        t618_tmp * 21060.0) -
       t1038_tmp * 36288.0) +
      xi * ((((((-t48 + t235) + t314) + t1091) + t1158) + t1246) + t1343);
  sdvals[210] = t1496;
  sdvals[211] =
      ((((((((-t24 + t87) + t495) + t540) - t520) - t527) + t920) + t1044) +
       t1074) +
      t1491;
  sdvals[212] =
      ((((((((-t21 + t74) + t278) + t1045) + t1128) + t1202) + t1290) + t1329) +
       xi * r_sfvals_tmp) -
      t618_tmp * 7614.0;
  sdvals[213] = (((o_sfvals_tmp + t862) + t872) + t1272) + t1321;
  sdvals[214] =
      ((((((((((-t23 + t101) + t252) + t497) - t499) + t1082) + t1096) +
          t1290) +
         t1363) -
        t_sfvals_tmp) +
       t1038_tmp * 12960.0) -
      t619_tmp * 648.0;
  sdvals[215] =
      ((((((((((-t20 + t229) + t270) - t228) + t906) + t921) + t1083) + t1342) +
         t1364) +
        t1367) -
       t618_tmp * 2916.0) -
      m_sfvals_tmp;
  sdvals[216] = ((((t26 + t860) + t863) + t873) + t1272) + t1322;
  sdvals[217] =
      ((((((((((-t23 + t249) + t270) - t248) + t907) + t920) + t1082) + t1342) +
         t1363) +
        t1368) -
       t619_tmp * 2916.0) -
      f_sfvals_tmp;
  sdvals[218] =
      ((((((((((-t20 + t101) + t232) + t412) - t414) + t1083) + t1097) +
          t1290) +
         t1364) -
        j_sfvals_tmp) -
       t618_tmp * 648.0) +
      t1039_tmp * 12960.0;
  sdvals[219] =
      t1511 +
      (((((((t263 + t902) + t903) + t1052) + t1053) + t1334) + t1335) - t1337);
  sdvals[220] =
      (((((((((((((t59 + t518) + t575) - t500) - t503) + t941) + t1073) +
             t1118) +
            t14 * t353) +
           t1345) +
          t1352) +
         t1379) +
        t1503) -
       t1038_tmp * 27216.0) +
      xi * (((((((-t64 + t300) + t523) - t518) + t1087) + t1150) + t1242) +
            t1351);
  sdvals[221] =
      (((((((((((((t39 + t433) + t575) - t415) - t418) + t940) + t1072) +
             t1119) +
            t3 * t395) +
           t1344) +
          t1353) +
         t1379) +
        t1502) -
       t1039_tmp * 27216.0) +
      xi * (((((((-t44 + t300) + t438) - t433) + t1086) + t1151) + t1243) +
            t1351);
  sdvals[222] =
      ((t1359 +
        (((((((((t147 * zeta + t1096) + t1097) + t15 * t354) + t4 * t396) -
             t1132) -
            t1133) +
           t1354) +
          t1371) +
         t1372)) -
       xi * (((((t610 + t1166) + t1167) - t1258) - t1259) +
             t1309_tmp * 93312.0)) -
      t8 * ((-t616 + t1256) + t1257);
  sdvals[223] =
      ((t1180 -
        xi * (((((((((t14 * 15984.0 - t206) + t560) + t610) - t818) + t1159) +
                 t1166) -
                t1173) -
               t1258) +
              t1381)) -
       t9 * ((t613 - t396) + t822)) -
      t8 * (((((t14 * -38880.0 + t823) - t857) + t1257) + zeta * 15984.0) +
            t618_tmp * 93312.0);
  sdvals[224] =
      ((t1261 -
        xi * (((((((((t3 * 15984.0 - t147) + t475) + t610) - t730) + t1158) +
                 t1167) -
                t1172) -
               t1259) +
              t1381)) -
       t9 * ((t613 - t354) + t734)) -
      t8 * (((((eta * 15984.0 - t3 * 38880.0) + t735) - t857) + t1256) +
            t619_tmp * 93312.0);
  sdvals[225] =
      ((((((t1584_tmp + t911) + t1052) + t1053) + t1320) + t9 * t613) +
       t8 * ((-t856 + t1256) + t1257)) +
      xi * (((((t607 + t1150) + t1151) - t1168) - t1169) + t1356);
  b_t1621_tmp_tmp = t79_tmp * 7128.0;
  sdvals[226] =
      ((-xi * (((((t188 + t518) - t534) + t941) + t948) - b_t1621_tmp_tmp) +
        t10 * t392) +
       t8 * (((((t809 - t614) - t824) + t1163) + t1164) + zeta * 13284.0)) +
      t9 * ((t613 - t399) + t822);
  sdvals[227] =
      ((-xi * (((((t129 + t433) - t449) + t940) + t949) - b_t1621_tmp_tmp) +
        t8 * (((((eta * 13284.0 + t721) - t614) - t736) + t1162) + t1165)) +
       t10 * t350) +
      t9 * ((t613 - t357) + t734);
  b_t1621_tmp_tmp = t98 + t618_tmp * -432.0;
  sdvals[228] =
      ((t1359 + (b_t1621_tmp_tmp + t865)) - t8 * ((-t612 + t1148) + t1149)) +
      xi * ((-t591 + t948) + t949);
  f_sfvals_tmp = -t69 + t255;
  sdvals[229] =
      ((t1180 - t9 * ((t558 + t598) - t392)) - xi * (f_sfvals_tmp + t272)) +
      t8 * ((-t206 + t313) + t538);
  t1621_tmp = -t49 + t235;
  sdvals[230] =
      ((t1261 - t9 * ((t473 + t598) - t350)) - xi * (t1621_tmp + t272)) +
      t8 * ((-t147 + t313) + t453);
  j_sfvals_tmp = t8 * (t306 + t1249);
  sdvals[231] = (t1523 + j_sfvals_tmp) -
                xi * ((((t302 + t1068) + t1151) + t1343) - t1511_tmp);
  t_sfvals_tmp = t189 + t847;
  sdvals[232] =
      (t9 * t_sfvals_tmp - t8 * ((((t193 - t517) - t609) + t1148) + t1163)) +
      xi * ((((t65 - t251) + t583) + t916) + t941);
  sdvals[233] = (-t1430 - t8 * ((((t134 + t579) + t721) - t724) + t1149)) +
                xi * ((((t45 + t433) + t566) - t439) + t917);
  sdvals[234] =
      (((((b_t1621_tmp_tmp + t619_tmp * -4320.0) + t1097) + t1117) + t1279) +
       t1330) -
      xi * ((t272 + t1091) + t1129);
  sdvals[235] =
      -xi * (((((f_sfvals_tmp + t591) + t1090) + t1159) + t1249) + t1343) -
      t8 * ((t69 + t590) + t1149);
  sdvals[236] =
      -t8 * k_sfvals_tmp -
      xi * ((((((t3 * 4320.0 - t49) + t272) + t475) - t721) + t1091) + t1129);
  sdvals[237] = (t1584 - j_sfvals_tmp) +
                xi * ((((t310 + t1090) + t1167) - t1169) + t1356);
  sdvals[238] =
      (-t9 * t_sfvals_tmp +
       xi * ((((((((-t188 + t534) + t607) - t518) + t1150) + t1167) - t1168) -
              t1257) +
             t1381)) +
      t8 * ((((t199 - t538) - t614) + t1164) + t1257);
  sdvals[239] =
      (t1430 + t8 * ((((t140 + t590) + t735) - t736) + t1165)) +
      xi * ((((((((t3 * 13284.0 + t310) - t129) + t722) - t735) + t1086) +
              t1167) -
             t1169) +
            t1351);
  b_t1621_tmp_tmp = t8 * (t586 + t1162);
  sdvals[240] = (t1585 + b_t1621_tmp_tmp) +
                xi * ((((t310 + t1091) + t1166) - t1168) + t1356);
  sdvals[241] =
      (t1433 + t8 * ((((t199 + t590) + t823) - t824) + t1164)) +
      xi * ((((((((t14 * 13284.0 + t310) - t188) + t810) - t823) + t1087) +
              t1166) -
             t1168) +
            t1351);
  f_sfvals_tmp = t130 + t847;
  sdvals[242] =
      (-t9 * f_sfvals_tmp +
       xi * ((((((((-t129 + t449) + t607) - t433) + t1151) + t1166) - t1169) -
              t1256) +
             t1381)) +
      t8 * ((((t140 - t453) - t614) + t1165) + t1256);
  sdvals[243] = (t1524 - b_t1621_tmp_tmp) -
                xi * ((((t302 + t1069) + t1150) + t1343) - b_t1511_tmp);
  sdvals[244] = (-t1433 - t8 * ((((t193 + t579) + t809) - t812) + t1148)) +
                xi * ((((t65 + t518) + t566) - t524) + t916);
  sdvals[245] =
      (t9 * f_sfvals_tmp - t8 * ((((t134 - t432) - t609) + t1149) + t1162)) +
      xi * ((((t45 - t231) + t583) + t917) + t940);
  sdvals[246] =
      (((((((t95 + t892) + t893) + t1062) + t1063) + t1338) + t1363) + t1364) -
      xi * (((t1069 + t1343) + b_sfvals_tmp_tmp) + c_sfvals_tmp_tmp);
  sdvals[247] =
      t8 * ((i_sfvals_tmp + t517) + t1236) -
      xi * (((((((-t65 + t302) + t524) - t518) + t1087) + t1150) + t1351) -
            b_t1511_tmp);
  sdvals[248] =
      t8 * ((b_sfvals_tmp + t432) + t1237) -
      xi * (((((((-t45 + t302) + t439) - t433) + t1086) + t1151) + t1351) -
            t1511_tmp);
  sdvals[249] =
      ((((((t98 + t865) + t618_tmp * -4320.0) + t1096) + t1116) + t1279) +
       t1329) -
      xi * ((t272 + t1090) + t1128);
  sdvals[250] =
      -t8 * n_sfvals_tmp -
      xi * ((((((t14 * 4320.0 - t69) + t272) + t560) - t809) + t1090) + t1128);
  sdvals[251] =
      -xi * (((((t1621_tmp + t591) + t1091) + t1158) + t1248) + t1343) -
      t8 * ((t49 + t590) + t1148);
}

// tet_fek_35_ncoords - Obtain nodal coordinates in master element for
void tet_fek_35_ncoords(double natcoords[105])
{
  static const double dv[105]{0.0,
                              0.0,
                              0.0,
                              1.0,
                              0.0,
                              0.0,
                              0.0,
                              1.0,
                              0.0,
                              0.0,
                              0.0,
                              1.0,
                              0.1726731646460114,
                              0.0,
                              0.0,
                              0.5,
                              0.0,
                              0.0,
                              0.82732683535398854,
                              0.0,
                              0.0,
                              0.82732683535398854,
                              0.1726731646460114,
                              0.0,
                              0.5,
                              0.5,
                              0.0,
                              0.1726731646460114,
                              0.82732683535398854,
                              0.0,
                              0.0,
                              0.82732683535398854,
                              0.0,
                              0.0,
                              0.5,
                              0.0,
                              0.0,
                              0.1726731646460114,
                              0.0,
                              0.0,
                              0.0,
                              0.1726731646460114,
                              0.0,
                              0.0,
                              0.5,
                              0.0,
                              0.0,
                              0.82732683535398854,
                              0.82732683535398854,
                              0.0,
                              0.1726731646460114,
                              0.5,
                              0.0,
                              0.5,
                              0.1726731646460114,
                              0.0,
                              0.82732683535398854,
                              0.0,
                              0.82732683535398854,
                              0.1726731646460114,
                              0.0,
                              0.5,
                              0.5,
                              0.0,
                              0.1726731646460114,
                              0.82732683535398854,
                              0.2165423575799505,
                              0.2165423575799505,
                              0.0,
                              0.56691527366422811,
                              0.2165423575799505,
                              0.0,
                              0.2165423575799505,
                              0.56691527366422811,
                              0.0,
                              0.2165423575799505,
                              0.0,
                              0.2165423575799505,
                              0.56691527366422811,
                              0.0,
                              0.2165423575799505,
                              0.2165423575799505,
                              0.0,
                              0.56691527366422811,
                              0.56691527366422811,
                              0.2165423575799505,
                              0.2165423575799505,
                              0.2165423575799505,
                              0.56691527366422811,
                              0.2165423575799505,
                              0.2165423575799505,
                              0.2165423575799505,
                              0.56691527366422811,
                              0.0,
                              0.56691527366422811,
                              0.2165423575799505,
                              0.0,
                              0.2165423575799505,
                              0.2165423575799505,
                              0.0,
                              0.2165423575799505,
                              0.56691527366422811,
                              0.25,
                              0.25,
                              0.25};
  std::copy(&dv[0], &dv[105], &natcoords[0]);
}

// tet_fek_35_sfunc - Compute shape functions and their derivatives of
void tet_fek_35_sfunc(double xi, double eta, double zeta, double sfvals[35])
{
  double b_sfvals_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double h_sfvals_tmp;
  double sfvals_tmp;
  double t10;
  double t104;
  double t106;
  double t11;
  double t113;
  double t118;
  double t13;
  double t134;
  double t15;
  double t164;
  double t167;
  double t168;
  double t17;
  double t171;
  double t174;
  double t175;
  double t176;
  double t177;
  double t179;
  double t183;
  double t185;
  double t19;
  double t194;
  double t195;
  double t2;
  double t201;
  double t204;
  double t207;
  double t21;
  double t211;
  double t215;
  double t217;
  double t218;
  double t219;
  double t229;
  double t231;
  double t237;
  double t237_tmp;
  double t238;
  double t238_tmp;
  double t240;
  double t245;
  double t246;
  double t248;
  double t249;
  double t251;
  double t253;
  double t256;
  double t257;
  double t260;
  double t261;
  double t267;
  double t270;
  double t276;
  double t277;
  double t279;
  double t283;
  double t287;
  double t3;
  double t30;
  double t300;
  double t301;
  double t309;
  double t311;
  double t312;
  double t32;
  double t321;
  double t323;
  double t325;
  double t326;
  double t327;
  double t340;
  double t341;
  double t357;
  double t361;
  double t37;
  double t371;
  double t374;
  double t381;
  double t392;
  double t393;
  double t4;
  double t401;
  double t406;
  double t410;
  double t413;
  double t414;
  double t417;
  double t418;
  double t425;
  double t436;
  double t441;
  double t445;
  double t452;
  double t453;
  double t469;
  double t470;
  double t471;
  double t477;
  double t478;
  double t483;
  double t484;
  double t485;
  double t488;
  double t5;
  double t500;
  double t502;
  double t502_tmp;
  double t504;
  double t521;
  double t543;
  double t547;
  double t549_tmp;
  double t59;
  double t59_tmp;
  double t6;
  double t60;
  double t63;
  double t64;
  double t7;
  double t73;
  double t79;
  double t8;
  double t9;
  double t91;
  double t96;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = xi * xi;
  t6 = std::pow(xi, 3.0);
  t8 = zeta * zeta;
  t9 = std::pow(zeta, 3.0);
  t30 = zeta * 67.373437687474961;
  t32 = eta * 65.657086285343667;
  t37 = eta * 67.373437687474961;
  t59_tmp = eta * zeta;
  t59 = t59_tmp * -26.25011750146427;
  t63 = t59_tmp * -67.373437687474961;
  t73 = eta * 145.28427718855119;
  t79 = eta * 229.10022601928461;
  t96 = eta * 84.116481722423671;
  t104 = eta * 23.249222365196712;
  t113 = zeta * 23.249222365196712;
  t118 = eta * 14.368814527587491;
  t134 = t59_tmp * -205.85099989378821;
  t175 = zeta * 2.6691525181085458;
  t179 = t59_tmp * -37.618037932105409;
  t183 = eta * 5.7227573340218632;
  t194 = zeta * 5.7227573340218632;
  t207 = eta * 4.5154330894641381;
  t217 = eta * 1.8042953456490449;
  t218 = eta * 2.8531631229673859;
  t219 = eta * 3.3910614498252749;
  t229 = zeta * 1.8042953456490449;
  t231 = zeta * 3.3910614498252749;
  t245 = eta * 7.0334932383173427;
  t246 = eta * 7.0737191277545088;
  t248 = eta * 14.368813044422639;
  t260 = zeta * 7.0334932383173427;
  t261 = zeta * 7.0737191277545088;
  t401 = t59_tmp * -7.0737191277545088;
  t425 = t59_tmp * -2.6691525181085458;
  t4 = t2 * t2;
  t7 = t5 * t5;
  t10 = t8 * t8;
  t60 = t2 * 99.930618600980779;
  t64 = t8 * 99.930618600980779;
  t91 = t73 * zeta;
  t106 = t79 * zeta;
  t164 = t3 * 46.070182605043193;
  t167 = t3 * 107.3657060291079;
  t168 = eta * 0.27973069037276049 * zeta;
  t171 = t6 * 46.070182605043193;
  t174 = t9 * 46.070182605043193;
  t176 = t6 * 107.3657060291079;
  t177 = t9 * 107.3657060291079;
  t185 = t2 * 128.11599992694889;
  t195 = t8 * 128.11599992694889;
  t201 = eta * 92.996895101236518 * zeta;
  t204 = t3 * 64.326239441869518;
  t211 = t9 * 64.326239441869518;
  t215 = eta * 8.8804106812632924 * zeta;
  t237_tmp = eta * t8;
  t237 = t237_tmp * -26.25011750146427;
  t238_tmp = t2 * zeta;
  t238 = t238_tmp * -26.25011750146427;
  t240 = t2 * 20.021438096635251;
  t249 = eta * 14.701189828929479 * zeta;
  t251 = t8 * 20.021438096635251;
  t253 = t2 * 179.26559003425129;
  t256 = eta * 7.0737190486995374 * zeta;
  t257 = t2 * 130.61492496965261;
  t267 = t8 * 179.26559003425129;
  t270 = t8 * 130.61492496965261;
  t276 = t2 * 10.995390229586491;
  t277 = t217 * zeta;
  t279 = t218 * zeta;
  t283 = t219 * zeta;
  t287 = t8 * 10.995390229586491;
  t300 = t245 * zeta;
  t301 = t246 * zeta;
  t309 = t2 * 29.18472801709321;
  t311 = t248 * zeta;
  t312 = t2 * 10.09455540852143;
  t321 = eta * 2.9488833174153939 * zeta;
  t323 = t8 * 29.18472801709321;
  t325 = t8 * t73;
  t326 = t2 * (zeta * 145.28427718855119);
  t327 = t8 * 10.09455540852143;
  t340 = t8 * t79;
  t341 = t2 * (zeta * 229.10022601928461);
  t357 = t2 * 107.3657026044559;
  t361 = t3 * 74.666668593460642;
  t371 = t8 * 107.3657026044559;
  t374 = t9 * 74.666668593460642;
  t381 = t8 * 6.4484473380500944;
  t392 = t8 * t118;
  t393 = t2 * (zeta * 14.368814527587491);
  t406 = t3 * 8.1486066618426332;
  t410 = t3 * 3.30896076586349;
  t413 = t6 * 8.1486066618426332;
  t414 = t9 * 8.1486066618426332;
  t417 = t6 * 3.30896076586349;
  t418 = t9 * 3.30896076586349;
  t436 = t2 * 8.3262377903318434;
  t441 = t2 * 2.66915259696244;
  t445 = t8 * 8.3262377903318434;
  t452 = t8 * 2.66915259696244;
  t453 = t2 * 6.4484473380500944;
  t469 = t8 * t217;
  t470 = t2 * t229;
  t471 = t8 * t218;
  t477 = t2 * 0.40653155171807859;
  t483 = t8 * 0.40653155171807859;
  t484 = t8 * t248;
  t485 = t2 * (zeta * 14.368813044422639);
  t488 = t238_tmp * -92.996895101236518;
  t502_tmp = t2 * t8;
  t502 = t502_tmp * -128.11599992694889;
  t521 = t502_tmp * -8.3262377903318434;
  t11 = t4 * 14.0;
  t13 = t7 * 14.0;
  t15 = t10 * 14.0;
  t17 = t4 * 32.666666666666664;
  t19 = t7 * 32.666666666666664;
  t21 = t10 * 32.666666666666664;
  t478 = t8 * t240;
  t500 = t5 * (t118 * zeta);
  t504 = t8 * t309;
  t543 = (t215 + t485) + t237_tmp * -92.996895101236518;
  t547 =
      (t256 + t237_tmp * -7.0737191277545088) + t238_tmp * -7.0737191277545088;
  t549_tmp = t59_tmp * 7.0737190486995374;
  sfvals[0] =
      ((((((((((((((((eta * -10.0 + t2 * 30.0) - t3 * 35.0) + t8 * 30.0) -
                   t9 * 35.0) +
                  t11) +
                 t13) +
                t15) -
               zeta * 10.0) -
              t237_tmp * 118.9833257272132) +
             eta * t211) +
            t502_tmp * 100.652478883739) +
           (((((((((t32 + zeta * 65.657086285343667) -
                   t59_tmp * 254.89885997344351) +
                  t204) +
                 t211) +
                t237_tmp * 212.58008078265331) +
               t238_tmp * 212.58008078265331) -
              t2 * 118.9833257272132) -
             t8 * 118.9833257272132) -
            10.0) *
               xi) -
          t238_tmp * 118.9833257272132) +
         t32 * zeta) +
        t204 * zeta) +
       t6 * ((eta * 64.326239441869518 + zeta * 64.326239441869518) - 35.0)) +
      (t5 * (((((eta * -118.9833257272132 + t2 * 100.652478883739) +
                t8 * 100.652478883739) -
               zeta * 118.9833257272132) +
              t59_tmp * 212.58008078265331) +
             30.0) +
       1.0);
  sfvals_tmp = eta * 2.6691525181085458 + t168;
  b_sfvals_tmp = t237_tmp * 2.9488833174153939;
  c_sfvals_tmp = t238_tmp * 2.9488833174153939;
  sfvals[1] =
      ((t13 + t5 * (((((eta * 10.995390229586491 - t436) - t445) +
                      zeta * 10.995390229586491) -
                     t59_tmp * 5.3773547449303889) +
                    9.0)) -
       t6 * ((eta * 8.32623771147795 + zeta * 8.32623771147795) + 21.0)) +
      -xi * ((((((((sfvals_tmp + t175) - t441) - t452) +
                 t3 * 7.8853894675664522E-8) +
                t9 * 7.8853894675664522E-8) -
               b_sfvals_tmp) -
              c_sfvals_tmp) +
             1.0);
  d_sfvals_tmp = eta * t9;
  e_sfvals_tmp = t3 * zeta;
  f_sfvals_tmp = eta * t6;
  sfvals[2] = (((((((((((-eta + t2 * 9.0) - t3 * 21.0) + t11) + t425) + t521) -
                    xi * ((((sfvals_tmp - t276) + t3 * 8.32623771147795) +
                           t238_tmp * 5.3773547449303889) -
                          b_sfvals_tmp)) -
                   f_sfvals_tmp * 7.8853894675664522E-8) -
                  d_sfvals_tmp * 7.8853894675664522E-8) +
                 eta * t452) -
                e_sfvals_tmp * 8.32623771147795) +
               t276 * zeta) +
              t5 * ((eta * 2.66915259696244 + t321) - t436);
  sfvals_tmp = t6 * zeta;
  sfvals[3] = (((((((((((t8 * 9.0 - t9 * 21.0) + t15) + t425) + t521) - zeta) -
                    d_sfvals_tmp * 8.32623771147795) +
                   eta * t287) -
                  xi * (((((t168 + t175) - t287) + t9 * 8.32623771147795) +
                         t237_tmp * 5.3773547449303889) -
                        c_sfvals_tmp)) -
                 e_sfvals_tmp * 7.8853894675664522E-8) -
                sfvals_tmp * 7.8853894675664522E-8) +
               t441 * zeta) +
              t5 * ((t321 - t445) + zeta * 2.66915259696244);
  b_sfvals_tmp = t59_tmp * 206.9349565257794;
  sfvals[4] =
      ((-t19 -
        xi * (((((((((t30 + t37) - t60) - t64) + t3 * 46.070185890954292) +
                  t9 * 46.070185890954292) +
                 t325) +
                t326) -
               b_sfvals_tmp) -
              13.51300497744848)) -
       t6 * ((zeta * 114.7124807026612 + -76.026009954896963) +
             eta * 114.7124807026612)) +
      -t5 * (((((eta * -179.26559003425129 + t185) + t195) -
               zeta * 179.26559003425129) +
              t59_tmp * 263.305721226308) +
             56.872348265678767);
  sfvals[5] = ((t7 * 37.333333333333336 +
                t6 * ((eta * 74.666668593460642 + zeta * 74.666668593460642) -
                      74.666666666666671)) +
               (((((((((t237 + t238) + t245) + t249) + t260) + t381) -
                   t3 * 8.1486072430341032) -
                  t9 * 8.1486072430341032) +
                 t453) -
                5.333333333333333) *
                   xi) +
              t5 * (((((eta * -76.366828498444661 + t309) + t323) -
                      zeta * 76.366828498444661) +
                     t59_tmp * 56.565162609172667) +
                    42.666666666666664);
  sfvals[6] =
      ((-t19 +
        (((((((((t219 + t231) + t410) + t418) + t59_tmp * -11.966982160394579) +
             t471) +
            t2 * (zeta * 2.8531631229673859)) -
           t2 * 9.5203505715736174) -
          t8 * 9.5203505715736174) +
         2.820328355884854) *
            xi) -
       t6 * ((zeta * 15.95418933589491 + -54.640656711769708) +
             eta * 15.95418933589491)) +
      -t5 * (((((eta * 0.94987709137884835 - t240) - t251) +
               zeta * 0.94987709137884835) -
              t59_tmp * 32.969157710410322) +
             24.794318400987891);
  sfvals[7] = (-t5 * ((eta * 38.279934961616569 + t301) - t312) + eta * t171) +
              (((t183 - t3 * 3.3089605298550882) + t477) + t547) * xi;
  c_sfvals_tmp = t59_tmp * 1.8042953254844729;
  sfvals[8] =
      (eta * t413 +
       xi * (((((t207 + t406) - t2 * 17.99737308464011) - t469) - t470) +
             c_sfvals_tmp)) -
      t5 * ((eta * 17.99737308464011 - t2 * 53.6305466570186) + t277);
  g_sfvals_tmp = t8 * -t246;
  h_sfvals_tmp = t2 * -t261;
  sfvals[9] =
      (f_sfvals_tmp * -3.3089605298550882 +
       t5 * ((eta * 0.40653155171807859 + t312) + t401)) +
      xi *
          (((((t164 + t183) + t256) - t2 * 38.279934961616569) + g_sfvals_tmp) +
           h_sfvals_tmp);
  sfvals[10] =
      (((((((eta * 2.820328355884854 - t2 * 24.794318400987891) +
            t3 * 54.640656711769708) -
           t17) +
          t283) +
         t478) -
        xi * (((((t2 * 0.94987709137884835 - t219) + t3 * 15.95418933589491) -
                t238_tmp * 32.969157710410322) -
               t471) +
              t59_tmp * 11.966982160394579)) -
       t237_tmp * 9.5203505715736174) +
      ((((eta * t417 + eta * t418) +
         t5 * ((eta * -9.5203505715736174 + t240) + t279)) -
        t238_tmp * 0.94987709137884835) -
       e_sfvals_tmp * 15.95418933589491);
  sfvals[11] = (((((((((((eta * -5.333333333333333 + t2 * 42.666666666666664) -
                         t3 * 74.666666666666671) +
                        t4 * 37.333333333333336) +
                       t300) +
                      t504) -
                     f_sfvals_tmp * 8.1486072430341032) -
                    d_sfvals_tmp * 8.1486072430341032) +
                   eta * t381) +
                  (((((t237 + t245) + t249) + t361) - t2 * 76.366828498444661) +
                   t238_tmp * 56.565162609172667) *
                      xi) -
                 t238_tmp * 76.366828498444661) +
                t361 * zeta) +
               t5 * ((eta * 6.4484473380500944 + t59) + t309);
  sfvals[12] = (((((((eta * 13.51300497744848 - t2 * 56.872348265678767) +
                     t3 * 76.026009954896963) -
                    t17) +
                   t63) +
                  t502) -
                 t5 * ((eta * -99.930618600980779 + t91) + t185)) -
                f_sfvals_tmp * 46.070185890954292) +
               ((((d_sfvals_tmp * -46.070185890954292 + eta * t64) -
                  e_sfvals_tmp * 114.7124807026612) +
                 t253 * zeta) -
                xi * (((((t37 + t3 * 114.7124807026612) - t253) + t325) +
                       t238_tmp * 263.305721226308) -
                      b_sfvals_tmp));
  sfvals[13] =
      ((((((((t8 * -56.872348265678767 + t9 * 76.026009954896963) - t21) +
            t63) +
           t502) +
          zeta * 13.51300497744848) -
         t5 * ((t91 + t195) - zeta * 99.930618600980779)) -
        d_sfvals_tmp * 114.7124807026612) +
       eta * t267) +
      (((e_sfvals_tmp * -46.070185890954292 - sfvals_tmp * 46.070185890954292) +
        t60 * zeta) -
       xi * (((((t30 + t9 * 114.7124807026612) - t267) + t326) +
              t237_tmp * 263.305721226308) -
             b_sfvals_tmp));
  sfvals[14] =
      (((((((((((t8 * 42.666666666666664 - t9 * 74.666666666666671) +
                t10 * 37.333333333333336) +
               t300) +
              t504) -
             zeta * 5.333333333333333) -
            t237_tmp * 76.366828498444661) +
           eta * t374) +
          (((((t238 + t249) + t260) + t374) - t8 * 76.366828498444661) +
           t237_tmp * 56.565162609172667) *
              xi) -
         e_sfvals_tmp * 8.1486072430341032) -
        sfvals_tmp * 8.1486072430341032) +
       t453 * zeta) +
      t5 * ((t59 + t323) + zeta * 6.4484473380500944);
  sfvals[15] =
      (((((((t8 * -24.794318400987891 + t9 * 54.640656711769708) - t21) +
           t283) +
          t478) +
         zeta * 2.820328355884854) -
        t237_tmp * 0.94987709137884835) -
       d_sfvals_tmp * 15.95418933589491) +
      ((((t238_tmp * -9.5203505715736174 + t410 * zeta) + t417 * zeta) -
        xi * (((((t8 * 0.94987709137884835 - t231) +
                 eta * 11.966982160394579 * zeta) +
                t9 * 15.95418933589491) -
               t237_tmp * 32.969157710410322) -
              t238_tmp * 2.8531631229673859)) +
       t5 * ((t251 + t279) - zeta * 9.5203505715736174));
  sfvals[16] = (-t5 * ((t301 - t327) + zeta * 38.279934961616569) +
                (((t194 - t9 * 3.3089605298550882) + t483) + t547) * xi) +
               t171 * zeta;
  sfvals[17] =
      (-t5 * ((t8 * -53.6305466570186 + t277) + zeta * 17.99737308464011) +
       xi * (((((zeta * 4.5154330894641381 - t8 * 17.99737308464011) + t414) +
               c_sfvals_tmp) +
              t8 * -t217) +
             t2 * -t229)) +
      t413 * zeta;
  sfvals[18] = (xi * (((((t174 + t194) - t8 * 38.279934961616569) + t549_tmp) +
                       g_sfvals_tmp) +
                      h_sfvals_tmp) -
                sfvals_tmp * 3.3089605298550882) +
               t5 * ((t327 + t401) + zeta * 0.40653155171807859);
  b_sfvals_tmp = ((t183 * zeta + t8 * t312) + t5 * t401) +
                 -xi * ((t8 * t246 + t2 * t261) - t549_tmp);
  sfvals[19] =
      (((b_sfvals_tmp - d_sfvals_tmp * 3.3089605298550882) + eta * t483) -
       t238_tmp * 38.279934961616569) +
      t164 * zeta;
  sfvals[20] = ((((((-xi * ((t469 + t470) - c_sfvals_tmp) -
                     t237_tmp * 17.99737308464011) +
                    eta * t414) +
                   t502_tmp * 53.6305466570186) +
                  t5 * (t59_tmp * -1.8042953456490449)) -
                 t238_tmp * 17.99737308464011) +
                t207 * zeta) +
               t406 * zeta;
  sfvals[21] = (((b_sfvals_tmp - t237_tmp * 38.279934961616569) + eta * t174) -
                e_sfvals_tmp * 3.3089605298550882) +
               t477 * zeta;
  sfvals[22] =
      (eta * t176 +
       t5 * ((eta * -191.48218775153151 + t2 * 214.73141205821571) + t106)) +
      (((((t96 + t134) + t167) - t2 * 191.48218775153151) + t341) +
       t237_tmp * 121.73451787362551) *
          xi;
  sfvals[23] =
      (f_sfvals_tmp * -107.3657026044559 +
       ((((-t104 + t215) + t2 * 23.249222365196712) + t484) + t485) * xi) -
      t5 * ((eta * -130.61492496965261 + t201) + t357);
  sfvals[24] =
      xi * (((((-t104 + t257) - t3 * 107.3657026044559) + t484) + t488) +
            t59_tmp * 8.8804106812632924) +
      t5 * ((t104 + t311) - t357);
  sfvals[25] =
      ((((((zeta * 84.116481722423671 + t134) + t177) -
          t8 * 191.48218775153151) +
         t340) +
        t238_tmp * 121.73451787362551) *
           xi +
       t176 * zeta) +
      t5 * ((t8 * 214.73141205821571 + t106) - zeta * 191.48218775153151);
  sfvals[26] =
      (((((-t113 + t215) + t8 * 23.249222365196712) + t484) + t485) * xi -
       sfvals_tmp * 107.3657026044559) -
      t5 * ((t201 + t371) - zeta * 130.61492496965261);
  sfvals[27] = (((-t113 + t270) - t9 * 107.3657026044559) + t543) * xi +
               t5 * ((t113 + t311) - t371);
  sfvals_tmp = eta * t5 * zeta;
  sfvals[28] = ((t179 + t392) + t393) * xi + sfvals_tmp * 121.7345226732467;
  sfvals[29] = t500 + ((t179 + t238_tmp * 121.7345226732467) + t392) * xi;
  sfvals[30] = t500 + ((t179 + t237_tmp * 121.7345226732467) + t393) * xi;
  b_sfvals_tmp = (t59_tmp * -23.249222365196712 + t5 * t311) +
                 t502_tmp * -107.3657026044559;
  sfvals[31] = (((b_sfvals_tmp + t8 * t104) + ((t215 + t484) + t488) * xi) -
                e_sfvals_tmp * 107.3657026044559) +
               t257 * zeta;
  sfvals[32] = ((((((t237_tmp * -191.48218775153151 + eta * t177) +
                    t502_tmp * 214.73141205821571) +
                   ((t134 + t340) + t341) * xi) -
                  t238_tmp * 191.48218775153151) +
                 t96 * zeta) +
                t167 * zeta) +
               sfvals_tmp * 121.73451787362551;
  sfvals[33] =
      (((b_sfvals_tmp - d_sfvals_tmp * 107.3657026044559) + eta * t270) +
       t2 * t113) +
      t543 * xi;
  sfvals[34] =
      -xi * ((-(t59_tmp * 256.00000858306919) + t237_tmp * 256.00001144409231) +
             t238_tmp * 256.00001144409231) -
      sfvals_tmp * 256.00001144409231;
}

// tet_fek_35_sfunc - Compute shape functions and their derivatives of
void tet_fek_35_sfunc(double xi, double eta, double zeta, double sfvals[35],
                      double sdvals[105])
{
  double b_sfvals_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double h_sfvals_tmp;
  double i_sfvals_tmp;
  double j_sfvals_tmp;
  double k_sfvals_tmp;
  double sfvals_tmp;
  double sfvals_tmp_tmp;
  double t10;
  double t101;
  double t102;
  double t103;
  double t104;
  double t105;
  double t106;
  double t107;
  double t11;
  double t110;
  double t113;
  double t114;
  double t115;
  double t117;
  double t118;
  double t119;
  double t12;
  double t120;
  double t123;
  double t124;
  double t125;
  double t129;
  double t13;
  double t130;
  double t131;
  double t133;
  double t134;
  double t135;
  double t136;
  double t137;
  double t14;
  double t141;
  double t142;
  double t145;
  double t147;
  double t15;
  double t151;
  double t153;
  double t155;
  double t159;
  double t16;
  double t160;
  double t163;
  double t164;
  double t165;
  double t167;
  double t168;
  double t169;
  double t17;
  double t170;
  double t171;
  double t174;
  double t175;
  double t176;
  double t177;
  double t178;
  double t179;
  double t18;
  double t180;
  double t181;
  double t183;
  double t184;
  double t185;
  double t186;
  double t187;
  double t189;
  double t19;
  double t190;
  double t191;
  double t192;
  double t193;
  double t194;
  double t195;
  double t196;
  double t197;
  double t198;
  double t2;
  double t20;
  double t201;
  double t202;
  double t204;
  double t205;
  double t206;
  double t207;
  double t209;
  double t21;
  double t210;
  double t211;
  double t212;
  double t213;
  double t214;
  double t215;
  double t216;
  double t217;
  double t218;
  double t219;
  double t22;
  double t220;
  double t222;
  double t223;
  double t223_tmp;
  double t224;
  double t224_tmp;
  double t225;
  double t226;
  double t229;
  double t230;
  double t231;
  double t234;
  double t235;
  double t237;
  double t238;
  double t240;
  double t241;
  double t243;
  double t244;
  double t245;
  double t246;
  double t247;
  double t248;
  double t249;
  double t250;
  double t251;
  double t252;
  double t253;
  double t254;
  double t255;
  double t256;
  double t257;
  double t259;
  double t260;
  double t261;
  double t262;
  double t264;
  double t265;
  double t266;
  double t267;
  double t268;
  double t269;
  double t270;
  double t272;
  double t275;
  double t276;
  double t277;
  double t278;
  double t279;
  double t280;
  double t282;
  double t283;
  double t285;
  double t286;
  double t287;
  double t288;
  double t29;
  double t290;
  double t295;
  double t296;
  double t297;
  double t298;
  double t3;
  double t30;
  double t300;
  double t301;
  double t302;
  double t309;
  double t31;
  double t310;
  double t311;
  double t312;
  double t313;
  double t314;
  double t315;
  double t32;
  double t321;
  double t322;
  double t323;
  double t324;
  double t325;
  double t326;
  double t327;
  double t328;
  double t33;
  double t335;
  double t339;
  double t34;
  double t340;
  double t341;
  double t343;
  double t345;
  double t346;
  double t347;
  double t35;
  double t352;
  double t353;
  double t357;
  double t358;
  double t359;
  double t360;
  double t361;
  double t363;
  double t365;
  double t368;
  double t369;
  double t37;
  double t371;
  double t372;
  double t373;
  double t374;
  double t375;
  double t378;
  double t379;
  double t380;
  double t381;
  double t382;
  double t383;
  double t389;
  double t390;
  double t391;
  double t392;
  double t393;
  double t394;
  double t4;
  double t40;
  double t401;
  double t402;
  double t403;
  double t404;
  double t405;
  double t406;
  double t41;
  double t410;
  double t412;
  double t413;
  double t414;
  double t415;
  double t416;
  double t417;
  double t418;
  double t419;
  double t420;
  double t421;
  double t423;
  double t424;
  double t425;
  double t426;
  double t427;
  double t43;
  double t432;
  double t433;
  double t434;
  double t436;
  double t437;
  double t438;
  double t43_tmp;
  double t441;
  double t442;
  double t443;
  double t445;
  double t452;
  double t453;
  double t454;
  double t455;
  double t46;
  double t460;
  double t461;
  double t467;
  double t468;
  double t469;
  double t470;
  double t471;
  double t472;
  double t477;
  double t478;
  double t48;
  double t480;
  double t483;
  double t484;
  double t485;
  double t486;
  double t488;
  double t489;
  double t490;
  double t496;
  double t497;
  double t499;
  double t5;
  double t500;
  double t502;
  double t502_tmp;
  double t503;
  double t504;
  double t51;
  double t518;
  double t518_tmp;
  double t519;
  double t519_tmp;
  double t521;
  double t522;
  double t523;
  double t524;
  double t53;
  double t530;
  double t532;
  double t533;
  double t534;
  double t535;
  double t536;
  double t54;
  double t543;
  double t544;
  double t545;
  double t546;
  double t547;
  double t548;
  double t549_tmp;
  double t550;
  double t551;
  double t552;
  double t553;
  double t554;
  double t557;
  double t558;
  double t559;
  double t56;
  double t560;
  double t562;
  double t57;
  double t571;
  double t572;
  double t573;
  double t574;
  double t577;
  double t59;
  double t6;
  double t60;
  double t61;
  double t62;
  double t63;
  double t64;
  double t66;
  double t67;
  double t68;
  double t69;
  double t7;
  double t70;
  double t71;
  double t72;
  double t73;
  double t74;
  double t75;
  double t77;
  double t78;
  double t79;
  double t8;
  double t80;
  double t81;
  double t82;
  double t83;
  double t84;
  double t85;
  double t86;
  double t87;
  double t88;
  double t89;
  double t9;
  double t90;
  double t91;
  double t92;
  double t93;
  double t94;
  double t95;
  double t96;
  double t98;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = xi * xi;
  t6 = std::pow(xi, 3.0);
  t8 = zeta * zeta;
  t9 = std::pow(zeta, 3.0);
  t29 = eta * 199.86123720196159;
  t30 = zeta * 67.373437687474961;
  t31 = zeta * 199.86123720196159;
  t32 = eta * 65.657086285343667;
  t33 = zeta * 65.657086285343667;
  t34 = eta * 206.9349565257794;
  t35 = zeta * 206.9349565257794;
  t37 = eta * 67.373437687474961;
  t40 = eta * 205.85099989378821;
  t41 = zeta * 205.85099989378821;
  t43_tmp = eta * zeta;
  t43 = t43_tmp * 52.500235002928548;
  t51 = zeta * 20.189110817042859;
  t53 = t43_tmp * 512.0000228881845;
  t57 = t43_tmp * 526.61144245261607;
  t59 = t43_tmp * -26.25011750146427;
  t61 = eta * 40.0428761932705;
  t62 = eta * 214.73140520891181;
  t63 = t43_tmp * -67.373437687474961;
  t66 = eta * 237.9666514544264;
  t67 = zeta * 40.0428761932705;
  t68 = eta * 358.53118006850269;
  t69 = eta * 261.22984993930521;
  t70 = zeta * 214.73140520891181;
  t71 = zeta * 237.9666514544264;
  t72 = zeta * 358.53118006850269;
  t73 = eta * 145.28427718855119;
  t74 = zeta * 261.22984993930521;
  t75 = zeta * 145.28427718855119;
  t77 = eta * 37.618037932105409;
  t78 = zeta * 37.618037932105409;
  t79 = eta * 229.10022601928461;
  t80 = eta * 382.96437550306308;
  t81 = eta * 152.73365699688929;
  t82 = zeta * 229.10022601928461;
  t83 = eta * 256.23199985389772;
  t84 = eta * 1.8997541827576969;
  t85 = zeta * 382.96437550306308;
  t86 = eta * 20.189110817042859;
  t87 = zeta * 152.73365699688929;
  t88 = zeta * 256.23199985389772;
  t89 = zeta * 1.8997541827576969;
  t90 = zeta * 58.369456034186427;
  t92 = t43_tmp * 290.56855437710232;
  t93 = eta * 8.8804106812632924;
  t94 = zeta * 8.8804106812632924;
  t95 = eta * 19.040701143147231;
  t96 = eta * 84.116481722423671;
  t98 = zeta * 19.040701143147231;
  t101 = t43_tmp * 256.00000858306919;
  t102 = t43_tmp * 425.16016156530662;
  t103 = zeta * 84.116481722423671;
  t104 = eta * 23.249222365196712;
  t105 = eta * 46.498444730393423;
  t107 = t43_tmp * 458.20045203856932;
  t110 = eta * 14.701189828929479;
  t113 = zeta * 23.249222365196712;
  t114 = zeta * 46.498444730393423;
  t115 = t43_tmp * 185.993790202473;
  t117 = eta * 7.0737190486995374;
  t118 = eta * 14.368814527587491;
  t119 = eta * 16.65247558066369;
  t120 = zeta * 14.701189828929479;
  t123 = zeta * 7.0737190486995374;
  t124 = zeta * 14.368814527587491;
  t125 = zeta * 16.65247558066369;
  t129 = t43_tmp * 243.469035747251;
  t130 = eta * 35.994746169280212;
  t131 = eta * 0.27973069037276049;
  t133 = eta * 21.990780459172989;
  t134 = t43_tmp * -205.85099989378821;
  t135 = eta * 76.559869923233137;
  t136 = zeta * 35.994746169280212;
  t137 = zeta * 0.27973069037276049;
  t141 = zeta * 21.990780459172989;
  t142 = zeta * 76.559869923233137;
  t145 = t43_tmp * 243.46904534649329;
  t147 = eta * 92.996895101236518;
  t151 = eta * 58.369456034186427;
  t160 = t43_tmp * 5.7063262459347719;
  t163 = eta * 11.966982160394579;
  t165 = eta * 2.6691525181085458;
  t169 = zeta * 11.966982160394579;
  t175 = zeta * 2.6691525181085458;
  t179 = t43_tmp * -37.618037932105409;
  t181 = eta * 0.81306310343615729;
  t183 = eta * 5.7227573340218632;
  t190 = zeta * 0.81306310343615729;
  t191 = t43_tmp * 28.737626088845278;
  t192 = t43_tmp * -382.96437550306308;
  t194 = zeta * 5.7227573340218632;
  t197 = t43_tmp * -152.73365699688929;
  t202 = t43_tmp * -1.8997541827576969;
  t206 = eta * 5.3383051939248807;
  t207 = eta * 4.5154330894641381;
  t210 = t43_tmp * 113.13032521834531;
  t212 = zeta * 5.3383051939248807;
  t213 = zeta * 4.5154330894641381;
  t214 = eta * 1.8042953254844729;
  t216 = eta * 12.896894676100191;
  t217 = eta * 1.8042953456490449;
  t218 = eta * 2.8531631229673859;
  t219 = eta * 3.3910614498252749;
  t220 = t43_tmp * 65.938315420820643;
  t225 = zeta * 1.8042953254844729;
  t226 = zeta * 12.896894676100191;
  t229 = zeta * 1.8042953456490449;
  t230 = zeta * 2.8531631229673859;
  t231 = zeta * 3.3910614498252749;
  t245 = eta * 7.0334932383173427;
  t246 = eta * 7.0737191277545088;
  t248 = eta * 14.368813044422639;
  t259 = t43_tmp * 28.737629055174981;
  t260 = zeta * 7.0334932383173427;
  t261 = zeta * 7.0737191277545088;
  t264 = eta * 2.9488833174153939;
  t265 = zeta * 14.368813044422639;
  t269 = t43_tmp * -237.9666514544264;
  t272 = zeta * 2.9488833174153939;
  t278 = t43_tmp * 3.60859069129809;
  t285 = t43_tmp * -35.994746169280212;
  t286 = t43_tmp * -0.27973069037276049;
  t290 = t43_tmp * -76.559869923233137;
  t302 = t43_tmp * 14.147438255509019;
  t322 = t43_tmp * 5.8977666348307887;
  t328 = t43_tmp * 10.75470948986078;
  t335 = t43_tmp * -19.040701143147231;
  t401 = t43_tmp * -7.0737191277545088;
  t424 = t43_tmp * -11.966982160394579;
  t425 = t43_tmp * -2.6691525181085458;
  t4 = t2 * t2;
  t7 = t5 * t5;
  t10 = t8 * t8;
  t12 = t3 * 56.0;
  t14 = t6 * 56.0;
  t16 = t9 * 56.0;
  t18 = t3 * 130.66666666666666;
  t20 = t6 * 130.66666666666666;
  t22 = t9 * 130.66666666666666;
  t46 = t29 * zeta;
  t48 = t34 * zeta;
  t54 = t2 * 26.25011750146427;
  t56 = t8 * 26.25011750146427;
  t60 = t2 * 99.930618600980779;
  t64 = t8 * 99.930618600980779;
  t91 = t73 * zeta;
  t106 = t79 * zeta;
  t153 = t68 * zeta;
  t155 = t69 * zeta;
  t159 = t8 * 145.28427718855119;
  t164 = t3 * 46.070182605043193;
  t167 = t3 * 107.3657060291079;
  t168 = t131 * zeta;
  t170 = t133 * zeta;
  t171 = t6 * 46.070182605043193;
  t174 = t9 * 46.070182605043193;
  t176 = t6 * 107.3657060291079;
  t177 = t9 * 107.3657060291079;
  t178 = t2 * 229.10022601928461;
  t180 = t2 * 191.48218775153151;
  t184 = t8 * 229.10022601928461;
  t185 = t2 * 128.11599992694889;
  t186 = t2 * 256.23199985389772;
  t187 = t2 * 0.94987709137884835;
  t189 = t8 * 191.48218775153151;
  t193 = t2 * 20.189110817042859;
  t195 = t8 * 128.11599992694889;
  t196 = t8 * 256.23199985389772;
  t198 = t8 * 0.94987709137884835;
  t201 = t147 * zeta;
  t204 = t3 * 64.326239441869518;
  t205 = t8 * 20.189110817042859;
  t209 = t6 * 64.326239441869518;
  t211 = t9 * 64.326239441869518;
  t215 = t93 * zeta;
  t222 = t3 * 46.070185890954292;
  t223_tmp = eta * t8;
  t223 = t223_tmp * 256.00001144409231;
  t224_tmp = t2 * zeta;
  t224 = t224_tmp * 256.00001144409231;
  t234 = t6 * 46.070185890954292;
  t235 = t9 * 46.070185890954292;
  t237 = t223_tmp * -26.25011750146427;
  t238 = t224_tmp * -26.25011750146427;
  t240 = t2 * 20.021438096635251;
  t241 = t2 * 40.0428761932705;
  t243 = t105 * zeta;
  t244 = t3 * 114.7124807026612;
  t247 = t2 * 214.73140520891181;
  t249 = t110 * zeta;
  t250 = t2 * 118.9833257272132;
  t251 = t8 * 20.021438096635251;
  t252 = t8 * 40.0428761932705;
  t253 = t2 * 179.26559003425129;
  t254 = t6 * 114.7124807026612;
  t255 = t9 * 114.7124807026612;
  t256 = t117 * zeta;
  t257 = t2 * 130.61492496965261;
  t262 = t8 * 214.73140520891181;
  t266 = t8 * 118.9833257272132;
  t267 = t8 * 179.26559003425129;
  t268 = t2 * 145.28427718855119;
  t270 = t8 * 130.61492496965261;
  t275 = t216 * zeta;
  t276 = t2 * 10.995390229586491;
  t277 = t217 * zeta;
  t279 = t218 * zeta;
  t280 = t2 * 38.279934961616569;
  t282 = t8 * 17.99737308464011;
  t283 = t219 * zeta;
  t287 = t8 * 10.995390229586491;
  t288 = t8 * 38.279934961616569;
  t295 = t8 * t61;
  t296 = t2 * t67;
  t297 = t2 * 76.366828498444661;
  t298 = t3 * 8.1486072430341032;
  t300 = t245 * zeta;
  t301 = t246 * zeta;
  t309 = t2 * 29.18472801709321;
  t310 = t2 * 58.369456034186427;
  t311 = t248 * zeta;
  t312 = t2 * 10.09455540852143;
  t313 = t6 * 8.1486072430341032;
  t314 = t8 * 76.366828498444661;
  t315 = t9 * 8.1486072430341032;
  t321 = t264 * zeta;
  t323 = t8 * 29.18472801709321;
  t324 = t8 * 58.369456034186427;
  t325 = t8 * t73;
  t326 = t2 * t75;
  t327 = t8 * 10.09455540852143;
  t339 = t2 * 23.249222365196712;
  t340 = t8 * t79;
  t341 = t2 * t82;
  t343 = t181 * zeta;
  t345 = t223_tmp * 263.305721226308;
  t346 = t224_tmp * 263.305721226308;
  t347 = t8 * 23.249222365196712;
  t352 = t2 * 14.368814527587491;
  t353 = t2 * 16.65247558066369;
  t357 = t2 * 107.3657026044559;
  t358 = t3 * 107.3657026044559;
  t359 = t8 * t86;
  t360 = t2 * t51;
  t361 = t3 * 74.666668593460642;
  t363 = t8 * 14.368814527587491;
  t365 = t8 * 16.65247558066369;
  t368 = t6 * 107.3657026044559;
  t369 = t3 * 15.95418933589491;
  t371 = t8 * 107.3657026044559;
  t372 = t9 * 107.3657026044559;
  t373 = t6 * 74.666668593460642;
  t374 = t9 * 74.666668593460642;
  t375 = t206 * zeta;
  t378 = t6 * 15.95418933589491;
  t379 = t9 * 15.95418933589491;
  t380 = t2 * 17.99737308464011;
  t381 = t8 * 6.4484473380500944;
  t382 = t8 * 1.8042953456490449;
  t383 = t8 * 2.8531631229673859;
  t389 = t191 * xi;
  t390 = t2 * 7.0737191277545088;
  t391 = t2 * 14.368813044422639;
  t392 = t8 * t118;
  t393 = t2 * t124;
  t394 = t8 * 7.0737191277545088;
  t402 = t2 * 2.9488833174153939;
  t403 = t8 * 14.368813044422639;
  t404 = t223_tmp * -214.73140520891181;
  t405 = t224_tmp * -214.73140520891181;
  t406 = t3 * 8.1486066618426332;
  t410 = t3 * 3.30896076586349;
  t412 = t8 * 2.9488833174153939;
  t413 = t6 * 8.1486066618426332;
  t414 = t9 * 8.1486066618426332;
  t415 = t223_tmp * -145.28427718855119;
  t416 = t224_tmp * -145.28427718855119;
  t417 = t6 * 3.30896076586349;
  t418 = t9 * 3.30896076586349;
  t419 = t3 * 3.3089605298550882;
  t420 = t6 * 3.3089605298550882;
  t421 = t9 * 3.3089605298550882;
  t423 = t2 * 9.5203505715736174;
  t426 = t8 * 9.5203505715736174;
  t427 = t259 * xi;
  t432 = t223_tmp * -256.23199985389772;
  t433 = t224_tmp * -256.23199985389772;
  t434 = t3 * 8.32623771147795;
  t436 = t2 * 8.3262377903318434;
  t437 = t8 * t151;
  t438 = t2 * t90;
  t441 = t2 * 2.66915259696244;
  t442 = t6 * 8.32623771147795;
  t443 = t9 * 8.32623771147795;
  t445 = t8 * 8.3262377903318434;
  t452 = t8 * 2.66915259696244;
  t453 = t2 * 6.4484473380500944;
  t454 = t2 * 1.8042953456490449;
  t455 = t2 * 2.8531631229673859;
  t460 = t223_tmp * 32.969157710410322;
  t461 = t224_tmp * 32.969157710410322;
  t467 = t223_tmp * -16.65247558066369;
  t468 = t224_tmp * -16.65247558066369;
  t469 = t8 * t217;
  t470 = t2 * t229;
  t471 = t8 * t218;
  t472 = t2 * t230;
  t477 = t2 * 0.40653155171807859;
  t480 = t5 * t118;
  t483 = t8 * 0.40653155171807859;
  t484 = t8 * t248;
  t485 = t2 * t265;
  t486 = t5 * t124;
  t488 = t224_tmp * -92.996895101236518;
  t489 = t8 * t264;
  t490 = t2 * t272;
  t496 = t223_tmp * 5.3773547449303889;
  t497 = t224_tmp * 5.3773547449303889;
  t499 = t5 * t248;
  t502_tmp = t2 * t8;
  t502 = t502_tmp * -128.11599992694889;
  t503 = t5 * t265;
  t518_tmp = eta * t5;
  t518 = t518_tmp * -1.8042953456490449;
  t519_tmp = t5 * zeta;
  t519 = t519_tmp * -1.8042953456490449;
  t521 = t502_tmp * -8.3262377903318434;
  t522 = t3 * 7.8853894675664522E-8;
  t523 = t6 * 7.8853894675664522E-8;
  t524 = t9 * 7.8853894675664522E-8;
  t11 = t4 * 14.0;
  t13 = t7 * 14.0;
  t15 = t10 * 14.0;
  t17 = t4 * 32.666666666666664;
  t19 = t7 * 32.666666666666664;
  t21 = t10 * 32.666666666666664;
  t478 = t8 * t240;
  t500 = t5 * (t118 * zeta);
  t504 = t8 * t309;
  t530 = (t134 + t340) + t341;
  t533 = (t179 + t224_tmp * 121.7345226732467) + t392;
  t534 = (t179 + t223_tmp * 121.7345226732467) + t393;
  t536 = (t179 + t392) + t393;
  t543 = (t215 + t485) + t223_tmp * -92.996895101236518;
  t544 = (t215 + t484) + t488;
  t545 = -xi * ((-t214 + t278) + t454);
  t546 = -xi * ((-t225 + t278) + t382);
  t547 =
      (t256 + t223_tmp * -7.0737191277545088) + t224_tmp * -7.0737191277545088;
  t548 = (t214 * zeta + t223_tmp * -1.8042953456490449) +
         t224_tmp * -1.8042953456490449;
  t549_tmp = t43_tmp * 7.0737190486995374;
  t553 = (((-t104 + t215) + t339) + t484) + t485;
  t554 = (((-t113 + t215) + t347) + t484) + t485;
  t550 = t518_tmp * -7.0737191277545088 + -xi * ((-t117 + t302) + t390);
  t551 = t519_tmp * -7.0737191277545088 + -xi * ((-t123 + t302) + t394);
  t552 = -t302 * xi + t547;
  t557 =
      ((((t96 + t134) + t167) - t180) + t341) + t223_tmp * 121.73451787362551;
  t558 =
      ((((t103 + t134) + t177) - t189) + t340) + t224_tmp * 121.73451787362551;
  t559 =
      ((((t237 + t245) + t249) + t361) - t297) + t224_tmp * 56.565162609172667;
  t560 =
      ((((t238 + t249) + t260) + t374) - t314) + t223_tmp * 56.565162609172667;
  t562 = ((-t113 + t270) - t372) + t543;
  t571 = ((t194 - t421) + t483) + t547;
  t572 = ((t183 - t419) + t477) + t547;
  t573 = ((((((((t32 + t33) - t43_tmp * 254.89885997344351) + t204) + t211) +
             t223_tmp * 212.58008078265331) +
            t224_tmp * 212.58008078265331) -
           t250) -
          t266) -
         10.0;
  t574 = ((((((((t237 + t238) + t245) + t249) + t260) + t381) - t298) - t315) +
          t453) -
         5.333333333333333;
  t577 = ((((((((t219 + t231) + t410) + t418) + t424) + t471) + t472) - t423) -
          t426) +
         2.820328355884854;
  sfvals[0] =
      ((((((((((((((((eta * -10.0 + t2 * 30.0) - t3 * 35.0) + t8 * 30.0) -
                   t9 * 35.0) +
                  t11) +
                 t13) +
                t15) -
               zeta * 10.0) -
              t223_tmp * 118.9833257272132) +
             eta * t211) +
            t502_tmp * 100.652478883739) +
           t573 * xi) -
          t224_tmp * 118.9833257272132) +
         t32 * zeta) +
        t204 * zeta) +
       t6 * ((eta * 64.326239441869518 + zeta * 64.326239441869518) - 35.0)) +
      (t5 * (((((eta * -118.9833257272132 + t2 * 100.652478883739) +
                t8 * 100.652478883739) -
               zeta * 118.9833257272132) +
              t43_tmp * 212.58008078265331) +
             30.0) +
       1.0);
  sfvals_tmp = t165 + t168;
  b_sfvals_tmp = t223_tmp * 2.9488833174153939;
  c_sfvals_tmp = t224_tmp * 2.9488833174153939;
  sfvals[1] =
      ((t13 + t5 * (((((eta * 10.995390229586491 - t436) - t445) +
                      zeta * 10.995390229586491) -
                     t43_tmp * 5.3773547449303889) +
                    9.0)) -
       t6 * ((eta * 8.32623771147795 + zeta * 8.32623771147795) + 21.0)) +
      -xi * ((((((((sfvals_tmp + t175) - t441) - t452) + t522) + t524) -
               b_sfvals_tmp) -
              c_sfvals_tmp) +
             1.0);
  d_sfvals_tmp = eta * t9;
  e_sfvals_tmp = t3 * zeta;
  f_sfvals_tmp = eta * t6;
  sfvals[2] =
      (((((((((((-eta + t2 * 9.0) - t3 * 21.0) + t11) + t425) + t521) -
            xi * ((((sfvals_tmp - t276) + t434) + t497) - b_sfvals_tmp)) -
           f_sfvals_tmp * 7.8853894675664522E-8) -
          d_sfvals_tmp * 7.8853894675664522E-8) +
         eta * t452) -
        e_sfvals_tmp * 8.32623771147795) +
       t276 * zeta) +
      t5 * ((eta * 2.66915259696244 + t321) - t436);
  sfvals_tmp = t6 * zeta;
  sfvals[3] =
      (((((((((((t8 * 9.0 - t9 * 21.0) + t15) + t425) + t521) - zeta) -
            d_sfvals_tmp * 8.32623771147795) +
           eta * t287) -
          xi * (((((t168 + t175) - t287) + t443) + t496) - c_sfvals_tmp)) -
         e_sfvals_tmp * 7.8853894675664522E-8) -
        sfvals_tmp * 7.8853894675664522E-8) +
       t441 * zeta) +
      t5 * ((t321 - t445) + zeta * 2.66915259696244);
  b_sfvals_tmp = t43_tmp * 206.9349565257794;
  sfvals[4] =
      ((-t19 -
        xi * (((((((((t30 + t37) - t60) - t64) + t222) + t235) + t325) + t326) -
               b_sfvals_tmp) -
              13.51300497744848)) -
       t6 * ((zeta * 114.7124807026612 + -76.026009954896963) +
             eta * 114.7124807026612)) +
      -t5 * (((((eta * -179.26559003425129 + t185) + t195) -
               zeta * 179.26559003425129) +
              t43_tmp * 263.305721226308) +
             56.872348265678767);
  sfvals[5] = ((t7 * 37.333333333333336 +
                t6 * ((eta * 74.666668593460642 + zeta * 74.666668593460642) -
                      74.666666666666671)) +
               t574 * xi) +
              t5 * (((((eta * -76.366828498444661 + t309) + t323) -
                      zeta * 76.366828498444661) +
                     t43_tmp * 56.565162609172667) +
                    42.666666666666664);
  sfvals[6] = ((-t19 + t577 * xi) -
               t6 * ((zeta * 15.95418933589491 + -54.640656711769708) +
                     eta * 15.95418933589491)) +
              -t5 * (((((eta * 0.94987709137884835 - t240) - t251) +
                       zeta * 0.94987709137884835) -
                      t43_tmp * 32.969157710410322) +
                     24.794318400987891);
  sfvals[7] = (-t5 * ((eta * 38.279934961616569 + t301) - t312) + eta * t171) +
              t572 * xi;
  c_sfvals_tmp = t43_tmp * 1.8042953254844729;
  g_sfvals_tmp = (t207 + t406) - t380;
  sfvals[8] =
      (eta * t413 + xi * (((g_sfvals_tmp - t469) - t470) + c_sfvals_tmp)) -
      t5 * ((eta * 17.99737308464011 - t2 * 53.6305466570186) + t277);
  h_sfvals_tmp = t8 * -t246;
  i_sfvals_tmp = t2 * -t261;
  j_sfvals_tmp = t164 + t183;
  sfvals[9] =
      (f_sfvals_tmp * -3.3089605298550882 +
       t5 * ((eta * 0.40653155171807859 + t312) + t401)) +
      xi * ((((j_sfvals_tmp + t256) - t280) + h_sfvals_tmp) + i_sfvals_tmp);
  sfvals[10] = (((((((eta * 2.820328355884854 - t2 * 24.794318400987891) +
                     t3 * 54.640656711769708) -
                    t17) +
                   t283) +
                  t478) -
                 xi * (((((t187 - t219) + t369) - t461) - t471) +
                       t43_tmp * 11.966982160394579)) -
                t223_tmp * 9.5203505715736174) +
               ((((eta * t417 + eta * t418) +
                  t5 * ((eta * -9.5203505715736174 + t240) + t279)) -
                 t224_tmp * 0.94987709137884835) -
                e_sfvals_tmp * 15.95418933589491);
  sfvals[11] = (((((((((((eta * -5.333333333333333 + t2 * 42.666666666666664) -
                         t3 * 74.666666666666671) +
                        t4 * 37.333333333333336) +
                       t300) +
                      t504) -
                     f_sfvals_tmp * 8.1486072430341032) -
                    d_sfvals_tmp * 8.1486072430341032) +
                   eta * t381) +
                  t559 * xi) -
                 t224_tmp * 76.366828498444661) +
                t361 * zeta) +
               t5 * ((eta * 6.4484473380500944 + t59) + t309);
  sfvals[12] = (((((((eta * 13.51300497744848 - t2 * 56.872348265678767) +
                     t3 * 76.026009954896963) -
                    t17) +
                   t63) +
                  t502) -
                 t5 * ((eta * -99.930618600980779 + t91) + t185)) -
                f_sfvals_tmp * 46.070185890954292) +
               ((((d_sfvals_tmp * -46.070185890954292 + eta * t64) -
                  e_sfvals_tmp * 114.7124807026612) +
                 t253 * zeta) -
                xi * (((((t37 + t244) - t253) + t325) + t346) - b_sfvals_tmp));
  sfvals[13] =
      ((((((((t8 * -56.872348265678767 + t9 * 76.026009954896963) - t21) +
            t63) +
           t502) +
          zeta * 13.51300497744848) -
         t5 * ((t91 + t195) - zeta * 99.930618600980779)) -
        d_sfvals_tmp * 114.7124807026612) +
       eta * t267) +
      (((e_sfvals_tmp * -46.070185890954292 - sfvals_tmp * 46.070185890954292) +
        t60 * zeta) -
       xi * (((((t30 + t255) - t267) + t326) + t345) - b_sfvals_tmp));
  sfvals[14] = (((((((((((t8 * 42.666666666666664 - t9 * 74.666666666666671) +
                         t10 * 37.333333333333336) +
                        t300) +
                       t504) -
                      zeta * 5.333333333333333) -
                     t223_tmp * 76.366828498444661) +
                    eta * t374) +
                   t560 * xi) -
                  e_sfvals_tmp * 8.1486072430341032) -
                 sfvals_tmp * 8.1486072430341032) +
                t453 * zeta) +
               t5 * ((t59 + t323) + zeta * 6.4484473380500944);
  sfvals[15] =
      (((((((t8 * -24.794318400987891 + t9 * 54.640656711769708) - t21) +
           t283) +
          t478) +
         zeta * 2.820328355884854) -
        t223_tmp * 0.94987709137884835) -
       d_sfvals_tmp * 15.95418933589491) +
      ((((t224_tmp * -9.5203505715736174 + t410 * zeta) + t417 * zeta) -
        xi * (((((t198 - t231) + t163 * zeta) + t379) - t460) -
              t224_tmp * 2.8531631229673859)) +
       t5 * ((t251 + t279) - zeta * 9.5203505715736174));
  sfvals[16] = (-t5 * ((t301 - t327) + zeta * 38.279934961616569) + t571 * xi) +
               t171 * zeta;
  b_sfvals_tmp = (t213 - t282) + t414;
  sfvals[17] =
      (-t5 * ((t8 * -53.6305466570186 + t277) + zeta * 17.99737308464011) +
       xi * (((b_sfvals_tmp + c_sfvals_tmp) + t8 * -t217) + t2 * -t229)) +
      t413 * zeta;
  sfvals_tmp_tmp = t174 + t194;
  k_sfvals_tmp = sfvals_tmp_tmp - t288;
  sfvals[18] =
      (xi * (((k_sfvals_tmp + t549_tmp) + h_sfvals_tmp) + i_sfvals_tmp) -
       sfvals_tmp * 3.3089605298550882) +
      t5 * ((t327 + t401) + zeta * 0.40653155171807859);
  h_sfvals_tmp = ((t183 * zeta + t8 * t312) + t5 * t401) +
                 -xi * ((t8 * t246 + t2 * t261) - t549_tmp);
  sfvals[19] =
      (((h_sfvals_tmp - d_sfvals_tmp * 3.3089605298550882) + eta * t483) -
       t224_tmp * 38.279934961616569) +
      t164 * zeta;
  sfvals[20] = ((((((-xi * ((t469 + t470) - c_sfvals_tmp) -
                     t223_tmp * 17.99737308464011) +
                    eta * t414) +
                   t502_tmp * 53.6305466570186) +
                  t5 * (t43_tmp * -1.8042953456490449)) -
                 t224_tmp * 17.99737308464011) +
                t207 * zeta) +
               t406 * zeta;
  sfvals[21] = (((h_sfvals_tmp - t223_tmp * 38.279934961616569) + eta * t174) -
                e_sfvals_tmp * 3.3089605298550882) +
               t477 * zeta;
  sfvals[22] =
      (eta * t176 +
       t5 * ((eta * -191.48218775153151 + t2 * 214.73141205821571) + t106)) +
      t557 * xi;
  sfvals[23] = (f_sfvals_tmp * -107.3657026044559 + t553 * xi) -
               t5 * ((eta * -130.61492496965261 + t201) + t357);
  c_sfvals_tmp = (-t104 + t257) - t358;
  sfvals[24] =
      xi * (((c_sfvals_tmp + t484) + t488) + t43_tmp * 8.8804106812632924) +
      t5 * ((t104 + t311) - t357);
  sfvals[25] =
      (t558 * xi + t176 * zeta) +
      t5 * ((t8 * 214.73141205821571 + t106) - zeta * 191.48218775153151);
  sfvals[26] = (t554 * xi - sfvals_tmp * 107.3657026044559) -
               t5 * ((t201 + t371) - zeta * 130.61492496965261);
  sfvals[27] = t562 * xi + t5 * ((t113 + t311) - t371);
  sfvals_tmp = t518_tmp * zeta;
  sfvals[28] = t536 * xi + sfvals_tmp * 121.7345226732467;
  sfvals[29] = t500 + t533 * xi;
  sfvals[30] = t500 + t534 * xi;
  f_sfvals_tmp = (t43_tmp * -23.249222365196712 + t5 * t311) +
                 t502_tmp * -107.3657026044559;
  sfvals[31] = (((f_sfvals_tmp + t8 * t104) + t544 * xi) -
                e_sfvals_tmp * 107.3657026044559) +
               t257 * zeta;
  sfvals[32] = ((((((t223_tmp * -191.48218775153151 + eta * t177) +
                    t502_tmp * 214.73141205821571) +
                   t530 * xi) -
                  t224_tmp * 191.48218775153151) +
                 t96 * zeta) +
                t167 * zeta) +
               sfvals_tmp * 121.73451787362551;
  sfvals[33] =
      (((f_sfvals_tmp - d_sfvals_tmp * 107.3657026044559) + eta * t270) +
       t2 * t113) +
      t543 * xi;
  sfvals[34] = -xi * ((-t101 + t223) + t224) - sfvals_tmp * 256.00001144409231;
  i_sfvals_tmp = t94 + t191;
  t532 = (i_sfvals_tmp - t8 * 92.996895101236518) * xi;
  d_sfvals_tmp = t93 + t191;
  t535 = (d_sfvals_tmp - t2 * 92.996895101236518) * xi;
  sdvals[0] =
      ((t14 + t573) +
       t5 * ((eta * 192.97871832560861 + zeta * 192.97871832560861) - 105.0)) +
      xi *
          (((((t2 * 201.3049577674781 + t8 * 201.3049577674781) + t102) - t66) -
            t71) +
           60.0);
  sdvals[1] =
      (((((((((eta * 60.0 - t2 * 105.0) + t12) + t33) + t209) + t211) + t269) -
         t266) +
        xi * (((((t2 * 192.97871832560861 + t8 * 212.58008078265331) + t102) -
                t66) -
               zeta * 254.89885997344351) +
              65.657086285343667)) +
       t223_tmp * 201.3049577674781) +
      ((t224_tmp * 192.97871832560861 +
        t5 * ((eta * 201.3049577674781 + zeta * 212.58008078265331) -
              118.9833257272132)) -
       10.0);
  sdvals[2] =
      (((((((((t8 * -105.0 + t16) + t32) + t204) + t209) + t269) - t250) +
         zeta * 60.0) +
        xi * (((((eta * -254.89885997344351 + t2 * 212.58008078265331) +
                 t8 * 192.97871832560861) +
                t102) -
               t71) +
              65.657086285343667)) +
       t223_tmp * 192.97871832560861) +
      ((t224_tmp * 201.3049577674781 +
        t5 * ((eta * 212.58008078265331 + zeta * 201.3049577674781) -
              118.9833257272132)) -
       10.0);
  sdvals[3] =
      ((t14 +
        (((((((((-t165 + t286) - t175) + t441) + t452) + t489) + t490) - t522) -
          t524) -
         1.0)) -
       t5 * ((eta * 24.97871313443385 + zeta * 24.97871313443385) + 63.0)) +
      xi * (((((t133 + t141) - t328) - t353) - t365) + 18.0);
  sdvals[4] =
      (-t442 - t5 * ((t119 + zeta * 5.3773547449303889) - 10.995390229586491)) -
      xi * (((((t2 * 2.3656168402699361E-7 + t137) - t206) - t322) - t412) +
            2.6691525181085458);
  sdvals[5] =
      (-t442 - t5 * ((eta * 5.3773547449303889 + t125) - 10.995390229586491)) +
      xi * (((((t8 * -2.3656168402699361E-7 + t212) - t131) + t322) + t402) -
            2.6691525181085458);
  h_sfvals_tmp = t276 - t165;
  sdvals[6] = (((((h_sfvals_tmp + t286) + t489) - t434) - t497) -
               t518_tmp * 2.3656168402699361E-7) +
              xi * ((t206 + t322) - t353);
  sdvals[7] =
      (((((((((((eta * 18.0 - t2 * 63.0) + t12) + t170) - t175) + t452) +
            t467) -
           t523) -
          t524) -
         xi * (((((t2 * 24.97871313443385 - t133) + t137) + t328) - t412) +
               2.6691525181085458)) -
        t224_tmp * 24.97871313443385) +
       t5 * ((-t119 + t272) + 2.66915259696244)) -
      1.0;
  sdvals[8] = (((((h_sfvals_tmp + t375) + t468) - t434) -
                t223_tmp * 2.3656168402699361E-7) +
               t5 * t264) -
              xi * ((t2 * 5.3773547449303889 + t131) - t322);
  sdvals[9] = ((((((t286 + t287) - t175) + t490) - t443) - t496) -
               t519_tmp * 2.3656168402699361E-7) +
              xi * ((t212 + t322) - t365);
  sdvals[10] = ((((((t287 - t175) + t375) + t467) - t443) + t5 * t272) -
                t224_tmp * 2.3656168402699361E-7) -
               xi * ((t8 * 5.3773547449303889 + t137) - t322);
  sdvals[11] =
      (((((((((((t8 * -63.0 + t16) + t170) - t165) + t441) + t468) - t522) -
           t523) +
          zeta * 18.0) -
         xi * (((((t8 * 24.97871313443385 + t131) - t141) + t328) - t402) +
               2.6691525181085458)) -
        t223_tmp * 24.97871313443385) +
       t5 * ((-t125 + t264) + 2.66915259696244)) -
      1.0;
  h_sfvals_tmp = -t30 + t48;
  sdvals[12] =
      ((-t20 +
        ((((((((h_sfvals_tmp - t37) + t60) + t64) - t222) - t235) + t415) +
          t416) +
         13.51300497744848)) -
       t5 * ((zeta * 344.1374421079837 + -228.0780298646909) +
             eta * 344.1374421079837)) -
      xi * (((((t57 - t68) - t72) + t186) + t196) + 113.7446965313575);
  sdvals[13] =
      (-t254 - xi * (((((t2 * 138.2105576728629 - t29) - t35) + t92) + t159) +
                     67.373437687474961)) -
      t5 * ((t83 + zeta * 263.305721226308) - 179.26559003425129);
  sdvals[14] =
      (-t254 - xi * (((((t8 * 138.2105576728629 - t31) - t34) + t92) + t268) +
                     67.373437687474961)) -
      t5 * ((eta * 263.305721226308 + t88) - 179.26559003425129);
  sdvals[15] =
      ((t6 * 149.33333333333334 + t574) +
       xi * (((((-t81 - t87) + t210) + t310) + t324) + 85.333333333333329)) +
      t5 * ((eta * 224.00000578038191 + zeta * 224.00000578038191) - 224.0);
  sdvals[16] =
      (t373 + t5 * ((t151 + zeta * 56.565162609172667) - 76.366828498444661)) +
      xi * (((((t2 * -24.44582172910231 - t43) - t56) + t120) + t216) +
            7.0334932383173427);
  sdvals[17] =
      (t373 + t5 * ((eta * 56.565162609172667 + t90) - 76.366828498444661)) +
      xi * (((((t8 * -24.44582172910231 - t43) - t54) + t110) + t226) +
            7.0334932383173427);
  sdvals[18] =
      ((-t20 + t577) - t5 * ((zeta * 47.862568007684722 + -163.9219701353091) +
                             eta * 47.862568007684722)) +
      xi * (((((-t84 - t89) + t220) + t241) + t252) - 49.588636801975788);
  sdvals[19] =
      (-t378 + t5 * ((t61 + zeta * 32.969157710410322) - 0.94987709137884835)) +
      xi * (((((t2 * 9.9268822975904687 + t160) - t95) - t169) + t383) +
            3.3910614498252749);
  sdvals[20] =
      (-t378 + t5 * ((eta * 32.969157710410322 + t67) - 0.94987709137884835)) +
      xi * (((((t8 * 9.9268822975904687 + t160) - t98) - t163) + t455) +
            3.3910614498252749);
  sdvals[21] =
      (t572 + t518_tmp * 138.21054781512959) - xi * ((t135 - t193) + t302);
  sdvals[22] =
      (t171 - xi * (((((t2 * 9.926881589565264 - t123) - t181) + t302) + t394) -
                    5.7227573340218632)) -
      t5 * ((-t86 + t261) + 38.279934961616569);
  sdvals[23] = t550;
  sdvals[24] = ((g_sfvals_tmp + t548) + t518_tmp * 24.4458199855279) -
               xi * ((t2 * -107.2610933140372 + t130) + t278);
  sdvals[25] =
      (t413 - t5 * ((eta * -107.2610933140372 + t229) + 17.99737308464011)) +
      xi * (((t2 * 24.4458199855279 - t130) + ((t225 - t278) - t382)) +
            4.5154330894641381);
  sdvals[26] = t518 + t545;
  sdvals[27] = (((j_sfvals_tmp - t280) + t547) - t518_tmp * 9.926881589565264) +
               xi * ((t181 + t193) - t302);
  sdvals[28] =
      (-t420 +
       xi * (((t2 * 138.21054781512959 - t135) + ((t123 - t302) - t394)) +
             5.7227573340218632)) +
      t5 * ((t86 - t261) + 0.40653155171807859);
  sdvals[29] = t550;
  sdvals[30] = ((((((t219 - t187) + t424) - t369) + t461) + t471) +
                t518_tmp * 9.9268822975904687) +
               xi * ((t160 - t95) + t241);
  sdvals[31] =
      ((((((((((eta * -49.588636801975788 + t2 * 163.9219701353091) - t18) +
              t202) +
             t231) +
            t295) +
           t417) +
          t418) -
         t426) -
        xi * (((((t2 * 47.862568007684722 + t84) + t169) - t220) - t383) -
              3.3910614498252749)) -
       t224_tmp * 47.862568007684722) +
      (t5 * ((t61 + t230) - 9.5203505715736174) + 2.820328355884854);
  sdvals[32] = ((((((t219 + t296) - t187) + t335) - t369) +
                 t223_tmp * 9.9268822975904687) +
                t5 * t218) +
               xi * ((t2 * 32.969157710410322 + t160) - t163);
  sdvals[33] =
      (t559 - t518_tmp * 24.44582172910231) + xi * ((-t43 + t216) + t310);
  sdvals[34] =
      (((((((((((eta * 85.333333333333329 - t2 * 224.0) +
                t3 * 149.33333333333334) +
               t197) +
              t260) +
             t381) -
            t313) -
           t315) +
          t437) +
         t224_tmp * 224.00000578038191) +
        t5 * ((-(zeta * 26.25011750146427) + t151) + 6.4484473380500944)) +
       xi * (((((t2 * 224.00000578038191 - t56) + t120) - t81) + t210) +
             7.0334932383173427)) -
      5.333333333333333;
  sdvals[35] = ((((((t245 + t275) + t361) - t297) + t438) +
                 xi * ((t2 * 56.565162609172667 - t43) + t110)) -
                t518_tmp * 26.25011750146427) -
               t223_tmp * 24.44582172910231;
  sdvals[36] = ((((((t48 - t37) + t253) - t244) + t415) - t346) -
                t518_tmp * 138.2105576728629) -
               xi * ((-t29 + t92) + t186);
  sdvals[37] =
      ((((((((((eta * -113.7446965313575 + t2 * 228.0780298646909) - t18) -
              t30) +
             t64) +
            t153) -
           t234) -
          t235) +
         t432) -
        xi * (((((t2 * 344.1374421079837 - t35) + t57) - t68) + t159) +
              67.373437687474961)) -
       t224_tmp * 344.1374421079837) +
      (-t5 * ((t75 + t83) - 99.930618600980779) + 13.51300497744848);
  sdvals[38] = ((((((t46 - t37) + t253) - t244) + t433) -
                 t518_tmp * 145.28427718855119) -
                t223_tmp * 138.2105576728629) -
               xi * ((t2 * 263.305721226308 - t34) + t92);
  sdvals[39] = (((((h_sfvals_tmp + t267) - t255) + t416) - t345) -
                t519_tmp * 138.2105576728629) -
               xi * ((-t31 + t92) + t196);
  sdvals[40] = ((((((-t30 + t46) + t267) - t255) + t432) -
                 t224_tmp * 138.2105576728629) -
                t519_tmp * 145.28427718855119) -
               xi * ((t8 * 263.305721226308 - t35) + t92);
  sdvals[41] =
      ((((((((((t8 * 228.0780298646909 - t22) - t37) + t60) + t153) - t222) -
           t234) +
          t433) -
         zeta * 113.7446965313575) -
        t223_tmp * 344.1374421079837) -
       xi * (((((t8 * 344.1374421079837 - t34) + t57) - t72) + t268) +
             67.373437687474961)) +
      (-t5 * ((t73 + t88) - 99.930618600980779) + 13.51300497744848);
  sdvals[42] =
      (t560 - t519_tmp * 24.44582172910231) + xi * ((-t43 + t226) + t324);
  sdvals[43] = ((((((t260 + t275) + t374) - t314) + t437) +
                 xi * ((t8 * 56.565162609172667 - t43) + t120)) -
                t224_tmp * 24.44582172910231) -
               t519_tmp * 26.25011750146427;
  sdvals[44] =
      (((((((((((t8 * -224.0 + t9 * 149.33333333333334) + t197) + t245) -
              t298) -
             t313) +
            t438) +
           t453) +
          zeta * 85.333333333333329) +
         t223_tmp * 224.00000578038191) +
        t5 * ((-(eta * 26.25011750146427) + t90) + 6.4484473380500944)) +
       xi * (((((t8 * 224.00000578038191 - t54) + t110) - t87) + t210) +
             7.0334932383173427)) -
      5.333333333333333;
  sdvals[45] = ((((((t231 - t198) + t424) - t379) + t460) + t472) +
                t519_tmp * 9.9268822975904687) +
               xi * ((t160 - t98) + t252);
  sdvals[46] = ((((((t231 + t295) - t198) + t335) - t379) + t5 * t230) +
                t224_tmp * 9.9268822975904687) +
               xi * ((t8 * 32.969157710410322 + t160) - t169);
  sdvals[47] =
      ((((((((((t8 * 163.9219701353091 - t22) + t202) + t219) + t296) + t410) +
           t417) -
          t423) -
         zeta * 49.588636801975788) -
        t223_tmp * 47.862568007684722) +
       t5 * ((t67 + t218) - 9.5203505715736174)) +
      (xi * (((((t8 * -47.862568007684722 - t89) + t220) - t163) + t455) +
             3.3910614498252749) +
       2.820328355884854);
  sdvals[48] =
      (t571 + t519_tmp * 138.21054781512959) - xi * ((t142 - t205) + t302);
  sdvals[49] = t551;
  sdvals[50] =
      (t171 - xi * (((((t8 * 9.926881589565264 - t117) - t190) + t302) + t390) -
                    5.7227573340218632)) -
      t5 * ((-t51 + t246) + 38.279934961616569);
  sdvals[51] = ((b_sfvals_tmp + t548) + t519_tmp * 24.4458199855279) -
               xi * ((t8 * -107.2610933140372 + t136) + t278);
  sdvals[52] = t519 + t546;
  sdvals[53] =
      (t413 - t5 * ((t217 - zeta * 107.2610933140372) + 17.99737308464011)) +
      xi * (((((t8 * 24.4458199855279 - t136) + t214) - t278) - t454) +
            4.5154330894641381);
  sdvals[54] = ((k_sfvals_tmp + t547) - t519_tmp * 9.926881589565264) +
               xi * ((t190 + t205) - t302);
  sdvals[55] = t551;
  sdvals[56] =
      (-t420 + t5 * ((t51 - t246) + 0.40653155171807859)) +
      xi * (((t8 * 138.21054781512959 - t142) + ((t117 - t302) - t390)) +
            5.7227573340218632);
  sdvals[57] = t552;
  sdvals[58] = (((((t194 + t290) + t359) - t421) + t483) + t551) +
               t224_tmp * 138.21054781512959;
  sdvals[59] = ((((j_sfvals_tmp + t343) + t360) - t280) + t550) -
               t223_tmp * 9.926881589565264;
  sdvals[60] = t548 - t278 * xi;
  sdvals[61] = ((((((t213 + t285) - t282) + t414) + t519) + t546) +
                t223_tmp * 107.2610933140372) +
               t224_tmp * 24.4458199855279;
  sdvals[62] = ((((((t207 + t285) + t406) - t380) + t518) + t545) +
                t223_tmp * 24.4458199855279) +
               t224_tmp * 107.2610933140372;
  sdvals[63] = t552;
  sdvals[64] = ((((sfvals_tmp_tmp + t343) + t359) - t288) + t551) -
               t224_tmp * 9.926881589565264;
  sdvals[65] = (((((t183 + t290) + t360) - t419) + t477) + t550) +
               t223_tmp * 138.21054781512959;
  sdvals[66] = (t557 + t518_tmp * 322.09711808732362) +
               xi * ((t2 * 429.46282411643142 + t107) - t80);
  sdvals[67] =
      (t176 + t5 * ((eta * 429.46282411643142 + t82) - 191.48218775153151)) +
      xi * (((((t2 * 322.09711808732362 + t8 * 121.73451787362551) - t41) +
              t107) -
             t80) +
            84.116481722423671);
  sdvals[68] = t5 * t79 + xi * ((-t40 + t129) + t178);
  sdvals[69] =
      (t553 - t518_tmp * 322.09710781336759) - xi * ((-t69 + t115) + t247);
  sdvals[70] =
      (-t368 + xi * ((((t94 + t105) + t191) + t403) - 23.249222365196712)) -
      t5 * ((t62 + zeta * 92.996895101236518) - 130.61492496965261);
  sdvals[71] = t518_tmp * -92.996895101236518 + xi * (d_sfvals_tmp + t391);
  sdvals[72] = (c_sfvals_tmp + t544) + xi * ((t105 + t191) - t247);
  sdvals[73] =
      -xi * (((((t2 * 322.09710781336759 - t69) - t94) + t115) - t403) +
             23.249222365196712) +
      t5 * ((-t62 + t265) + 23.249222365196712);
  sdvals[74] = t499 + t535;
  sdvals[75] = (t558 + t519_tmp * 322.09711808732362) +
               xi * ((t8 * 429.46282411643142 + t107) - t85);
  sdvals[76] = t5 * t82 + xi * ((-t41 + t129) + t184);
  sdvals[77] =
      (t176 + t5 * ((t79 + zeta * 429.46282411643142) - 191.48218775153151)) +
      xi * (((((t2 * 121.73451787362551 + t8 * 322.09711808732362) - t40) +
              t107) -
             t85) +
            84.116481722423671);
  sdvals[78] =
      (t554 - t519_tmp * 322.09710781336759) - xi * ((-t74 + t115) + t262);
  sdvals[79] = t519_tmp * -92.996895101236518 + xi * (i_sfvals_tmp + t403);
  sdvals[80] =
      (-t368 + xi * ((((t93 + t114) + t191) + t391) - 23.249222365196712)) -
      t5 * ((t70 + t147) - 130.61492496965261);
  sdvals[81] = t562 + xi * ((t114 + t191) - t262);
  sdvals[82] = t503 + t532;
  sdvals[83] =
      xi * (((((t8 * -322.09710781336759 + t74) + t93) - t115) + t391) -
            23.249222365196712) +
      t5 * ((-t70 + t248) + 23.249222365196712);
  sdvals[84] = t536 + t145 * xi;
  sdvals[85] = t519_tmp * 121.7345226732467 + xi * ((-t78 + t259) + t363);
  sdvals[86] = t518_tmp * 121.7345226732467 + xi * ((-t77 + t259) + t352);
  sdvals[87] = t427 + t533;
  sdvals[88] = t486 + xi * ((-t78 + t145) + t363);
  sdvals[89] = t480 + xi * ((t2 * 121.7345226732467 - t77) + t259);
  sdvals[90] = t427 + t534;
  sdvals[91] = t486 + xi * ((t8 * 121.7345226732467 - t78) + t259);
  sdvals[92] = t480 + xi * ((-t77 + t145) + t352);
  sdvals[93] = t389 + t544;
  sdvals[94] = (((((t155 - t113) + t347) + t404) + t503) -
                t224_tmp * 322.09710781336759) +
               xi * ((t94 - t115) + t403);
  sdvals[95] = (((((-t104 + t243) + t257) + t405) - t358) + t499) + t535;
  sdvals[96] = t530 + t129 * xi;
  sdvals[97] =
      ((((((t103 + t177) + t192) - t189) + t223_tmp * 429.46282411643142) +
        t224_tmp * 322.09711808732362) +
       t519_tmp * 121.73451787362551) +
      xi * ((-t41 + t107) + t184);
  sdvals[98] =
      ((((((t96 + t167) + t192) - t180) + t518_tmp * 121.73451787362551) +
        t223_tmp * 322.09711808732362) +
       t224_tmp * 429.46282411643142) +
      xi * ((-t40 + t107) + t178);
  sdvals[99] = t389 + t543;
  sdvals[100] = (((((-t113 + t243) + t270) + t404) - t372) + t503) + t532;
  sdvals[101] = (((((t155 - t104) + t339) + t405) + t499) -
                 t223_tmp * 322.09710781336759) +
                xi * ((t93 - t115) + t391);
  sdvals[102] = ((t101 - t223) - t224) - t53 * xi;
  sdvals[103] =
      t519_tmp * -256.00001144409231 -
      xi * ((t8 * 256.00001144409231 + t53) - zeta * 256.00000858306919);
  sdvals[104] =
      t518_tmp * -256.00001144409231 -
      xi * ((eta * -256.00000858306919 + t2 * 256.00001144409231) + t53);
}

// tet_gl_20_ncoords - Obtain nodal coordinates in master element for
void tet_gl_20_ncoords(double natcoords[60])
{
  static const double dv[60]{0.0,
                             0.0,
                             0.0,
                             1.0,
                             0.0,
                             0.0,
                             0.0,
                             1.0,
                             0.0,
                             0.0,
                             0.0,
                             1.0,
                             0.276393202250021,
                             0.0,
                             0.0,
                             0.72360679774997894,
                             0.0,
                             0.0,
                             0.72360679774997894,
                             0.276393202250021,
                             0.0,
                             0.276393202250021,
                             0.72360679774997894,
                             0.0,
                             0.0,
                             0.72360679774997894,
                             0.0,
                             0.0,
                             0.276393202250021,
                             0.0,
                             0.0,
                             0.0,
                             0.276393202250021,
                             0.0,
                             0.0,
                             0.72360679774997894,
                             0.72360679774997894,
                             0.0,
                             0.276393202250021,
                             0.276393202250021,
                             0.0,
                             0.72360679774997894,
                             0.0,
                             0.72360679774997894,
                             0.276393202250021,
                             0.0,
                             0.276393202250021,
                             0.72360679774997894,
                             0.33333333333333331,
                             0.33333333333333331,
                             0.0,
                             0.33333333333333331,
                             0.0,
                             0.33333333333333331,
                             0.33333333333333331,
                             0.33333333333333331,
                             0.33333333333333331,
                             0.0,
                             0.33333333333333331,
                             0.33333333333333331};
  std::copy(&dv[0], &dv[60], &natcoords[0]);
}

// tet_gl_20_sfunc - Compute shape functions and their derivatives of
void tet_gl_20_sfunc(double xi, double eta, double zeta, double sfvals[20])
{
  double b_sfvals_tmp;
  double c_sfvals_tmp;
  double sfvals_tmp;
  double t10;
  double t100;
  double t11;
  double t111;
  double t114;
  double t116;
  double t118;
  double t12;
  double t124;
  double t126;
  double t132;
  double t134;
  double t135;
  double t136;
  double t14;
  double t140;
  double t141;
  double t142;
  double t143;
  double t144;
  double t145;
  double t2;
  double t29;
  double t31;
  double t32;
  double t36;
  double t4;
  double t41;
  double t42;
  double t5;
  double t6;
  double t7;
  double t72;
  double t73;
  double t8;
  double t95;
  double t99;
  t2 = eta * zeta;
  t4 = eta * 5.0;
  t5 = eta * eta;
  t6 = std::pow(eta, 3.0);
  t7 = xi * xi;
  t8 = std::pow(xi, 3.0);
  t10 = zeta * 5.0;
  t11 = zeta * zeta;
  t12 = std::pow(zeta, 3.0);
  t95 = zeta * 21.180339887498949;
  t111 = eta * 1.180339887498949;
  t114 = zeta * 1.180339887498949;
  t14 = t2 * 5.0;
  t29 = t4 * t5;
  t31 = t8 * 5.0;
  t32 = t10 * t11;
  t36 = t2 * 27.0;
  t41 = t2 * zeta;
  t42 = eta * t2;
  t72 = t2 * -zeta;
  t73 = t2 * -eta;
  t99 = t2 * 21.180339887498949;
  t100 = t2 * 26.180339887498949;
  t116 = t2 * 3.819660112501051;
  t118 = t2 * 1.180339887498949;
  t124 = t5 * 1.9098300562505259;
  t126 = t11 * 1.9098300562505259;
  t132 = t5 * 13.090169943749469;
  t134 = t11 * 13.090169943749469;
  t135 = t41 * 13.090169943749469;
  t136 = t42 * 13.090169943749469;
  t140 = t41 * 1.9098300562505259;
  t141 = t42 * 1.9098300562505259;
  t142 = t7 * (zeta * 1.9098300562505259);
  t143 = t7 * (eta * 13.090169943749469);
  t144 = t7 * (zeta * 13.090169943749469);
  t145 = t7 * (eta * 1.9098300562505259);
  sfvals[0] =
      (((((((((((eta * -6.0 + t2 * 21.0) + t5 * 10.0) - t6 * 5.0) +
              t11 * 10.0) -
             t12 * 5.0) -
            t31) -
           t41 * 16.0) -
          t42 * 16.0) -
         zeta * 6.0) -
        xi * (((((-(eta * 21.0) - zeta * 21.0) + t2 * 33.0) + t5 * 16.0) +
               t11 * 16.0) +
              6.0)) -
       t7 * ((zeta * 16.0 + -10.0) + eta * 16.0)) +
      1.0;
  sfvals[1] = (t31 - t7 * ((eta + zeta) + 5.0)) +
              (((-t11 + ((eta - t2) - t5)) + zeta) + 1.0) * xi;
  sfvals_tmp = eta * t7;
  sfvals[2] = ((((((eta + t2) - t5 * 5.0) + t29) + t72) + t73) - sfvals_tmp) -
              xi * ((t2 + t5) - eta);
  b_sfvals_tmp = zeta * t7;
  sfvals[3] =
      ((((((t2 - t11 * 5.0) + t32) + t72) + t73) + zeta) - b_sfvals_tmp) -
      xi * ((t2 + t11) - zeta);
  c_sfvals_tmp = t100 - eta * 21.180339887498949;
  sfvals[4] =
      (t7 * ((eta * 24.270509831248422 + zeta * 24.270509831248422) -
             19.270509831248422) +
       t31 * 2.23606797749979) +
      ((((c_sfvals_tmp - t95) + t132) + t134) + 8.0901699437494745) * xi;
  sfvals[5] =
      (t8 * 2.23606797749979 * -5.0 +
       (((((t111 + t114) + t116) + t124) + t126) - 3.0901699437494741) * xi) -
      t7 * ((zeta * 9.2705098312484235 + -14.27050983124842) +
            eta * 9.2705098312484235);
  sfvals[6] = t143 - xi * (t4 - t124);
  sfvals[7] = t145 - xi * (t4 - t132);
  sfvals[8] = ((((((eta * -3.0901699437494741 + t5 * 14.27050983124842) -
                   t42 * 9.2705098312484235) +
                  t118) +
                 t140) +
                t145) -
               t6 * 2.23606797749979 * 5.0) +
              ((t111 + t116) - t5 * 9.2705098312484235) * xi;
  sfvals[9] = ((((((eta * 8.0901699437494745 - t5 * 19.270509831248422) +
                   t42 * 24.270509831248422) +
                  t29 * 2.23606797749979) -
                 t99) +
                t135) +
               t143) +
              (c_sfvals_tmp + t5 * 24.270509831248422) * xi;
  sfvals[10] = ((((((t11 * -19.270509831248422 + t41 * 24.270509831248422) +
                    t32 * 2.23606797749979) -
                   t99) +
                  t136) +
                 t144) +
                zeta * 8.0901699437494745) +
               ((t100 - t95) + t11 * 24.270509831248422) * xi;
  sfvals[11] =
      ((((((t11 * 14.27050983124842 - t41 * 9.2705098312484235) + t118) +
          t141) +
         t142) -
        zeta * 3.0901699437494741) -
       t12 * 2.23606797749979 * 5.0) +
      ((t114 + t116) - t11 * 9.2705098312484235) * xi;
  sfvals[12] = t144 - xi * (t10 - t126);
  sfvals[13] = t142 - xi * (t10 - t134);
  sfvals[14] = (-t14 + t136) + t140;
  sfvals[15] = (-t14 + t135) + t141;
  sfvals[16] = sfvals_tmp * -27.0 - xi * ((t36 - eta * 27.0) + t5 * 27.0);
  sfvals[17] = b_sfvals_tmp * -27.0 - xi * ((t36 - zeta * 27.0) + t11 * 27.0);
  sfvals[18] = t36 * xi;
  sfvals[19] = ((t36 - t41 * 27.0) - t42 * 27.0) - t2 * xi * 27.0;
}

// tet_gl_20_sfunc - Compute shape functions and their derivatives of
void tet_gl_20_sfunc(double xi, double eta, double zeta, double sfvals[20],
                     double sdvals[60])
{
  double sfvals_tmp;
  double t10;
  double t100;
  double t103;
  double t104;
  double t11;
  double t110;
  double t111;
  double t113;
  double t114;
  double t116;
  double t118;
  double t12;
  double t121;
  double t122;
  double t124;
  double t125;
  double t126;
  double t13;
  double t130;
  double t131;
  double t132;
  double t133;
  double t134;
  double t135;
  double t136;
  double t14;
  double t140;
  double t141;
  double t142;
  double t143;
  double t144;
  double t145;
  double t146;
  double t147;
  double t148;
  double t149;
  double t154;
  double t154_tmp;
  double t155;
  double t156;
  double t157;
  double t158;
  double t159;
  double t160;
  double t161;
  double t162;
  double t163;
  double t164;
  double t165;
  double t18;
  double t19;
  double t2;
  double t20;
  double t21;
  double t25;
  double t26;
  double t27;
  double t28;
  double t29;
  double t3;
  double t31;
  double t32;
  double t36;
  double t37;
  double t38;
  double t39;
  double t4;
  double t41;
  double t42;
  double t5;
  double t50;
  double t51;
  double t52;
  double t54;
  double t55;
  double t56;
  double t58;
  double t59;
  double t6;
  double t60;
  double t7;
  double t71;
  double t72;
  double t73;
  double t74;
  double t8;
  double t83;
  double t84;
  double t85;
  double t89;
  double t9;
  double t91;
  double t92;
  double t93;
  double t94;
  double t95;
  double t96;
  double t97;
  double t98;
  double t99;
  t2 = eta * zeta;
  t3 = eta * 2.0;
  t4 = eta * 5.0;
  t5 = eta * eta;
  t6 = std::pow(eta, 3.0);
  t7 = xi * xi;
  t8 = std::pow(xi, 3.0);
  t9 = zeta * 2.0;
  t10 = zeta * 5.0;
  t11 = zeta * zeta;
  t12 = std::pow(zeta, 3.0);
  t18 = eta * 21.0;
  t19 = eta * 27.0;
  t20 = eta * 32.0;
  t21 = eta * 54.0;
  t25 = zeta * 21.0;
  t26 = zeta * 27.0;
  t27 = zeta * 32.0;
  t28 = zeta * 54.0;
  t91 = eta * 18.541019662496851;
  t92 = zeta * 18.541019662496851;
  t93 = eta * 21.180339887498949;
  t94 = eta * 26.180339887498949;
  t95 = zeta * 21.180339887498949;
  t96 = zeta * 26.180339887498949;
  t97 = eta * 48.541019662496844;
  t98 = zeta * 48.541019662496844;
  t110 = eta * 3.819660112501051;
  t111 = eta * 1.180339887498949;
  t113 = zeta * 3.819660112501051;
  t114 = zeta * 1.180339887498949;
  t13 = t2 * 2.0;
  t14 = t2 * 5.0;
  t29 = t4 * t5;
  t31 = t8 * 5.0;
  t32 = t10 * t11;
  t36 = t2 * 27.0;
  t37 = t2 * 32.0;
  t38 = t2 * 33.0;
  t39 = t2 * 54.0;
  t41 = t2 * zeta;
  t42 = eta * t2;
  t50 = t5 * 15.0;
  t51 = t5 * 16.0;
  t52 = t5 * 27.0;
  t58 = t11 * 15.0;
  t59 = t11 * 16.0;
  t60 = t11 * 27.0;
  t72 = t2 * -zeta;
  t73 = t2 * -eta;
  t83 = -xi * ((t3 + zeta) - 1.0);
  t84 = -xi * ((eta + t9) - 1.0);
  t99 = t2 * 21.180339887498949;
  t100 = t2 * 26.180339887498949;
  t103 = t2 * 48.541019662496844;
  t104 = t2 * 18.541019662496851;
  t116 = t2 * 3.819660112501051;
  t118 = t2 * 1.180339887498949;
  t121 = t94 * xi;
  t122 = t96 * xi;
  t124 = t5 * 1.9098300562505259;
  t126 = t11 * 1.9098300562505259;
  t130 = t110 * xi;
  t131 = t113 * xi;
  t132 = t5 * 13.090169943749469;
  t134 = t11 * 13.090169943749469;
  t54 = t7 * 15.0;
  t55 = t7 * 16.0;
  t56 = t7 * 27.0;
  t71 = -t19 * xi;
  t74 = -t26 * xi;
  t85 = (eta - t2) - t5;
  t125 = t7 * 1.9098300562505259;
  t133 = t7 * 13.090169943749469;
  t135 = t41 * 13.090169943749469;
  t136 = t42 * 13.090169943749469;
  t140 = t41 * 1.9098300562505259;
  t141 = t42 * 1.9098300562505259;
  t142 = t7 * (zeta * 1.9098300562505259);
  t143 = t7 * (eta * 13.090169943749469);
  t144 = t7 * (zeta * 13.090169943749469);
  t145 = t7 * (eta * 1.9098300562505259);
  t146 = -t4 + t132;
  t147 = -t10 + t134;
  t148 = -t4 + t124;
  t149 = -t10 + t126;
  t154_tmp = t100 - t93;
  t154 = t154_tmp + t5 * 24.270509831248422;
  t155 = (t100 - t95) + t11 * 24.270509831248422;
  t164 = (((t154_tmp - t95) + t132) + t134) + 8.0901699437494745;
  t165 = ((((t111 + t114) + t116) + t124) + t126) - 3.0901699437494741;
  t89 = ((-t11 + t85) + zeta) + 1.0;
  t156 = (t111 + t116) - t5 * 9.2705098312484235;
  t157 = (t114 + t116) - t11 * 9.2705098312484235;
  sfvals[0] = (((((((((((eta * -6.0 + t2 * 21.0) + t5 * 10.0) - t6 * 5.0) +
                      t11 * 10.0) -
                     t12 * 5.0) -
                    t31) -
                   t41 * 16.0) -
                  t42 * 16.0) -
                 zeta * 6.0) -
                xi * (((((-t18 - t25) + t38) + t51) + t59) + 6.0)) -
               t7 * ((zeta * 16.0 + -10.0) + eta * 16.0)) +
              1.0;
  sfvals[1] = (t31 - t7 * ((eta + zeta) + 5.0)) + t89 * xi;
  t154_tmp = eta * t7;
  sfvals[2] = ((((((eta + t2) - t5 * 5.0) + t29) + t72) + t73) - t154_tmp) -
              xi * ((t2 + t5) - eta);
  sfvals_tmp = zeta * t7;
  sfvals[3] = ((((((t2 - t11 * 5.0) + t32) + t72) + t73) + zeta) - sfvals_tmp) -
              xi * ((t2 + t11) - zeta);
  sfvals[4] = (t7 * ((eta * 24.270509831248422 + zeta * 24.270509831248422) -
                     19.270509831248422) +
               t31 * 2.23606797749979) +
              t164 * xi;
  sfvals[5] = (t8 * 2.23606797749979 * -5.0 + t165 * xi) -
              t7 * ((zeta * 9.2705098312484235 + -14.27050983124842) +
                    eta * 9.2705098312484235);
  sfvals[6] = t143 - xi * (t4 - t124);
  sfvals[7] = t145 - xi * (t4 - t132);
  sfvals[8] = ((((((eta * -3.0901699437494741 + t5 * 14.27050983124842) -
                   t42 * 9.2705098312484235) +
                  t118) +
                 t140) +
                t145) -
               t6 * 2.23606797749979 * 5.0) +
              t156 * xi;
  sfvals[9] = ((((((eta * 8.0901699437494745 - t5 * 19.270509831248422) +
                   t42 * 24.270509831248422) +
                  t29 * 2.23606797749979) -
                 t99) +
                t135) +
               t143) +
              t154 * xi;
  sfvals[10] = ((((((t11 * -19.270509831248422 + t41 * 24.270509831248422) +
                    t32 * 2.23606797749979) -
                   t99) +
                  t136) +
                 t144) +
                zeta * 8.0901699437494745) +
               t155 * xi;
  sfvals[11] =
      ((((((t11 * 14.27050983124842 - t41 * 9.2705098312484235) + t118) +
          t141) +
         t142) -
        zeta * 3.0901699437494741) -
       t12 * 2.23606797749979 * 5.0) +
      t157 * xi;
  sfvals[12] = t144 - xi * (t10 - t126);
  sfvals[13] = t142 - xi * (t10 - t134);
  sfvals[14] = (-t14 + t136) + t140;
  sfvals[15] = (-t14 + t135) + t141;
  sfvals[16] = t154_tmp * -27.0 - xi * ((t36 - t19) + t52);
  sfvals[17] = sfvals_tmp * -27.0 - xi * ((t36 - t26) + t60);
  sfvals[18] = t36 * xi;
  sfvals[19] = ((t36 - t41 * 27.0) - t42 * 27.0) - t2 * xi * 27.0;
  t158 = t7 * 24.270509831248422 + ((t94 + t96) - 21.180339887498949) * xi;
  t159 = t122 + t155;
  t160 = t121 + t154;
  t161 = -(t7 * 9.2705098312484235) + ((t110 + t113) + 1.180339887498949) * xi;
  t162 = t130 + t156;
  t163 = t131 + t157;
  sdvals[0] = (-t54 + (((((t18 + t25) - t38) - t51) - t59) - 6.0)) -
              xi * ((t20 + t27) - 20.0);
  sdvals[1] = ((((((eta * 20.0 + t25) - t50) - t37) - t55) - t59) -
               xi * ((t20 + zeta * 33.0) - 21.0)) -
              6.0;
  sdvals[2] = ((((((t18 - t58) - t37) - t51) - t55) + zeta * 20.0) -
               xi * ((eta * 33.0 + t27) - 21.0)) -
              6.0;
  sdvals[3] = (t54 + t89) - xi * ((t3 + t9) + 10.0);
  sdvals[4] = -t7 + t83;
  sdvals[5] = -t7 + t84;
  sdvals[6] = t85 - t3 * xi;
  sdvals[7] = ((((((eta * -10.0 - t13) + t50) - t7) - t11) + t83) + zeta) + 1.0;
  t154_tmp = (eta - t13) - t5;
  sdvals[8] = t154_tmp - eta * xi;
  sdvals[9] = ((-t2 - t11) + zeta) - t9 * xi;
  sdvals[10] = ((-t13 - t11) + zeta) - zeta * xi;
  sdvals[11] = ((((t154_tmp - t7) + t58) + t84) - zeta * 10.0) + 1.0;
  sdvals[12] =
      (t164 + xi * ((t97 + t98) - 38.541019662496844)) + 2.23606797749979 * t54;
  sdvals[13] = t158;
  sdvals[14] = t158;
  sdvals[15] = (t165 - t7 * 2.23606797749979 * 15.0) -
               xi * ((t91 + t92) - 28.541019662496851);
  sdvals[16] = t161;
  sdvals[17] = t161;
  sdvals[18] = t121 + t148;
  sdvals[19] = t133 + xi * (t110 - 5.0);
  sdvals[20] = 0.0;
  sdvals[21] = t130 + t146;
  sdvals[22] = t125 + xi * (t94 - 5.0);
  sdvals[23] = 0.0;
  sdvals[24] = t162;
  sdvals[25] = ((((((eta * 28.541019662496851 + t114) - t104) + t125) + t126) +
                 xi * ((-t91 + t113) + 1.180339887498949)) -
                t5 * 2.23606797749979 * 15.0) -
               3.0901699437494741;
  sdvals[26] = t162;
  sdvals[27] = t160;
  sdvals[28] =
      ((((((eta * -38.541019662496844 + 2.23606797749979 * t50) + t103) - t95) +
         t133) +
        t134) +
       xi * ((t96 + t97) - 21.180339887498949)) +
      8.0901699437494745;
  sdvals[29] = t160;
  sdvals[30] = t159;
  sdvals[31] = t159;
  sdvals[32] = ((((((2.23606797749979 * t58 + t103) - t93) + t132) + t133) -
                 zeta * 38.541019662496844) +
                xi * ((t94 + t98) - 21.180339887498949)) +
               8.0901699437494745;
  sdvals[33] = t163;
  sdvals[34] = t163;
  sdvals[35] = ((((((t111 - t104) + t124) + t125) + zeta * 28.541019662496851) +
                 xi * ((-t92 + t110) + 1.180339887498949)) -
                t11 * 2.23606797749979 * 15.0) -
               3.0901699437494741;
  sdvals[36] = t122 + t149;
  sdvals[37] = 0.0;
  sdvals[38] = t133 + xi * (t113 - 5.0);
  sdvals[39] = t131 + t147;
  sdvals[40] = 0.0;
  sdvals[41] = t125 + xi * (t96 - 5.0);
  sdvals[42] = 0.0;
  sdvals[43] = t100 + t149;
  sdvals[44] = t116 + t146;
  sdvals[45] = 0.0;
  sdvals[46] = t116 + t147;
  sdvals[47] = t100 + t148;
  sdvals[48] = ((t19 - t36) - t52) - t21 * xi;
  sdvals[49] = -t56 - xi * ((t21 + t26) - 27.0);
  sdvals[50] = t71;
  sdvals[51] = ((t26 - t36) - t60) - t28 * xi;
  sdvals[52] = t74;
  sdvals[53] = -t56 - xi * ((t19 + t28) - 27.0);
  sdvals[54] = t36;
  sdvals[55] = t26 * xi;
  sdvals[56] = t19 * xi;
  sdvals[57] = -t36;
  sdvals[58] = ((t26 - t39) - t60) + t74;
  sdvals[59] = ((t19 - t39) - t52) + t71;
}

// tet_gl_35_ncoords - Obtain nodal coordinates in master element for
void tet_gl_35_ncoords(double natcoords[105])
{
  static const double dv[105]{0.0,
                              0.0,
                              0.0,
                              1.0,
                              0.0,
                              0.0,
                              0.0,
                              1.0,
                              0.0,
                              0.0,
                              0.0,
                              1.0,
                              0.1726731646460114,
                              0.0,
                              0.0,
                              0.5,
                              0.0,
                              0.0,
                              0.82732683535398854,
                              0.0,
                              0.0,
                              0.82732683535398854,
                              0.1726731646460114,
                              0.0,
                              0.5,
                              0.5,
                              0.0,
                              0.1726731646460114,
                              0.82732683535398854,
                              0.0,
                              0.0,
                              0.82732683535398854,
                              0.0,
                              0.0,
                              0.5,
                              0.0,
                              0.0,
                              0.1726731646460114,
                              0.0,
                              0.0,
                              0.0,
                              0.1726731646460114,
                              0.0,
                              0.0,
                              0.5,
                              0.0,
                              0.0,
                              0.82732683535398854,
                              0.82732683535398854,
                              0.0,
                              0.1726731646460114,
                              0.5,
                              0.0,
                              0.5,
                              0.1726731646460114,
                              0.0,
                              0.82732683535398854,
                              0.0,
                              0.82732683535398854,
                              0.1726731646460114,
                              0.0,
                              0.5,
                              0.5,
                              0.0,
                              0.1726731646460114,
                              0.82732683535398854,
                              0.2073451756635909,
                              0.2073451756635909,
                              0.0,
                              0.58530964867281821,
                              0.2073451756635909,
                              0.0,
                              0.2073451756635909,
                              0.58530964867281821,
                              0.0,
                              0.2073451756635909,
                              0.0,
                              0.2073451756635909,
                              0.58530964867281821,
                              0.0,
                              0.2073451756635909,
                              0.2073451756635909,
                              0.0,
                              0.58530964867281821,
                              0.58530964867281821,
                              0.2073451756635909,
                              0.2073451756635909,
                              0.2073451756635909,
                              0.58530964867281821,
                              0.2073451756635909,
                              0.2073451756635909,
                              0.2073451756635909,
                              0.58530964867281821,
                              0.0,
                              0.58530964867281821,
                              0.2073451756635909,
                              0.0,
                              0.2073451756635909,
                              0.2073451756635909,
                              0.0,
                              0.2073451756635909,
                              0.58530964867281821,
                              0.25,
                              0.25,
                              0.25};
  std::copy(&dv[0], &dv[105], &natcoords[0]);
}

// tet_gl_35_sfunc - Compute shape functions and their derivatives of
void tet_gl_35_sfunc(double xi, double eta, double zeta, double sfvals[35])
{
  double b_sfvals_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double sfvals_tmp;
  double t10;
  double t100;
  double t105;
  double t107;
  double t108;
  double t113;
  double t117;
  double t125;
  double t130;
  double t132;
  double t133;
  double t14;
  double t141;
  double t142;
  double t147;
  double t159;
  double t16;
  double t169;
  double t18;
  double t188;
  double t199;
  double t2;
  double t206;
  double t207;
  double t208;
  double t21;
  double t214;
  double t219;
  double t23;
  double t230;
  double t234;
  double t235;
  double t241;
  double t244;
  double t245;
  double t248;
  double t250;
  double t251;
  double t253;
  double t257;
  double t262;
  double t263;
  double t268;
  double t271;
  double t277;
  double t277_tmp;
  double t278;
  double t281;
  double t287;
  double t289;
  double t290;
  double t291;
  double t295;
  double t3;
  double t302;
  double t303;
  double t305;
  double t311;
  double t314;
  double t326;
  double t328;
  double t329;
  double t330;
  double t344;
  double t346;
  double t347;
  double t352;
  double t359;
  double t368;
  double t372;
  double t378;
  double t384;
  double t39;
  double t392;
  double t394;
  double t399;
  double t4;
  double t40;
  double t410;
  double t411;
  double t415;
  double t42;
  double t423;
  double t424;
  double t435;
  double t436;
  double t456;
  double t457;
  double t461;
  double t464;
  double t465;
  double t467;
  double t48;
  double t49;
  double t496;
  double t497;
  double t5;
  double t500;
  double t500_tmp;
  double t501;
  double t501_tmp;
  double t51;
  double t514;
  double t515;
  double t52;
  double t523;
  double t524;
  double t53;
  double t530;
  double t535;
  double t536_tmp;
  double t537;
  double t538;
  double t540;
  double t543;
  double t548;
  double t551;
  double t564;
  double t565;
  double t572;
  double t59;
  double t6;
  double t64;
  double t67;
  double t7;
  double t74;
  double t8;
  double t82;
  double t9;
  double t92;
  double t93;
  double t94;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = xi * xi;
  t6 = std::pow(xi, 3.0);
  t8 = zeta * zeta;
  t9 = std::pow(zeta, 3.0);
  t92 = eta * 69.69079963456926;
  t93 = eta * 228.2228509519735;
  t94 = zeta * 69.69079963456926;
  t100 = eta * 105.1418142421649;
  t105 = zeta * 105.1418142421649;
  t107 = eta * 156.674541823985;
  t108 = eta * 3.2640033791765219;
  t113 = zeta * 3.2640033791765219;
  t117 = eta * 66.614378277661473;
  t125 = eta * 21.800647943630331;
  t133 = zeta * 21.800647943630331;
  t141 = eta * 17.9392224676436;
  t142 = eta * 48.838209405489671;
  t147 = zeta * 48.838209405489671;
  t159 = eta * 123.0810367098085;
  t169 = eta * 3.7786526819777;
  t207 = zeta * 10.159913607515961;
  t208 = eta * 1.966192512129403;
  t234 = eta * 6.6126421934609754;
  t241 = eta * 2.7312403651288508;
  t244 = zeta * 6.6126421934609754;
  t251 = zeta * 2.7312403651288508;
  t253 = eta * 7.8326771551833918;
  t263 = zeta * 7.8326771551833918;
  t268 = eta * 1.554680651355633;
  t277_tmp = eta * zeta;
  t277 = t277_tmp * -69.69079963456926;
  t295 = t277_tmp * -206.4222030083431;
  t302 = eta * 10.159913607515961;
  t326 = t277_tmp * -21.392607231738559;
  t330 = t277_tmp * -39.739870411273927;
  t415 = t277_tmp * -1.554680651355633;
  t435 = t277_tmp * -10.159913607515961;
  t4 = t2 * t2;
  t7 = t5 * t5;
  t10 = t8 * t8;
  t21 = eta * 2.6457513110645907;
  t23 = 2.6457513110645907 * zeta;
  t40 = t3 * 74.666666666666671;
  t49 = t9 * 74.666666666666671;
  t51 = t2 * 2.6457513110645907;
  t52 = t8 * 2.6457513110645907;
  t130 = t107 * zeta;
  t132 = t108 * zeta;
  t188 = t93 * zeta;
  t199 = t2 * 133.0743258427749;
  t206 = eta * 9.7812773945774687 * zeta;
  t214 = t8 * 133.0743258427749;
  t219 = t3 * 65.260129588726073;
  t230 = t9 * 65.260129588726073;
  t235 = t2 * 105.01600406261041;
  t245 = t8 * 105.01600406261041;
  t248 = eta * 3.3856217223385241 * zeta;
  t250 = t2 * 183.77325438263631;
  t257 = t8 * 183.77325438263631;
  t262 = eta * 87.202591774521338 * zeta;
  t271 = t141 * zeta;
  t278 = t2 * 126.94246218579531;
  t281 = eta * 7.4712305928644973 * zeta;
  t287 = t8 * 126.94246218579531;
  t289 = t2 * 105.1418142421649;
  t290 = t2 * 210.28362848432991;
  t291 = t3 * 105.1418142421649;
  t303 = t8 * 105.1418142421649;
  t305 = t9 * 105.1418142421649;
  t311 = t8 * 30.720691139872361;
  t314 = t268 * zeta;
  t328 = t8 * t93;
  t329 = t2 * (zeta * 228.2228509519735);
  t344 = eta * t207;
  t346 = t8 * t107;
  t347 = t2 * (zeta * 156.674541823985);
  t352 = eta * 6.0313730334031144 * zeta;
  t359 = t208 * zeta;
  t368 = t3 * 48.838209405489671;
  t372 = t9 * 48.838209405489671;
  t378 = eta * 3.8614254759867381 * zeta;
  t384 = t2 * 21.634023469080709;
  t392 = t8 * 21.634023469080709;
  t394 = t253 * zeta;
  t399 = t2 * 30.720691139872361;
  t410 = t8 * t141;
  t411 = t2 * (zeta * 17.9392224676436);
  t423 = t8 * t159;
  t424 = t2 * (zeta * 123.0810367098085);
  t436 = t2 * 13.440302373694159;
  t456 = t3 * 6.6126421934609754;
  t457 = t2 * 4.1132983716109166;
  t461 = t3 * 2.7312403651288508;
  t464 = t9 * 6.6126421934609754;
  t465 = t8 * 4.1132983716109166;
  t467 = t9 * 2.7312403651288508;
  t496 = t8 * t268;
  t497 = t2 * (zeta * 1.554680651355633);
  t500_tmp = eta * t8;
  t500 = t500_tmp * -21.392607231738559;
  t501_tmp = t2 * zeta;
  t501 = t501_tmp * -21.392607231738559;
  t514 = t8 * t302;
  t515 = t2 * t207;
  t523 = t8 * t208;
  t524 = t2 * (zeta * 1.966192512129403);
  t536_tmp = t2 * t8;
  t538 = t500_tmp * -10.159913607515961;
  t540 = t536_tmp * -133.0743258427749;
  t551 = t5 * t435;
  t14 = t4 * 14.0;
  t16 = t7 * 14.0;
  t18 = t10 * 14.0;
  t39 = t4 * 32.666666666666664;
  t42 = t7 * 32.666666666666664;
  t48 = t10 * 32.666666666666664;
  t82 = t8 * t51 * 3.5;
  t530 = t5 * (t159 * zeta);
  t535 = t8 * t384;
  t537 = t2 * t311;
  t543 = t5 * t271;
  t548 = t8 * t436;
  t564 = (t378 + t411) + t500_tmp * -87.202591774521338;
  t565 = (t378 + t410) + t501_tmp * -87.202591774521338;
  t572 = -xi * ((t435 + t514) + t515);
  t53 = t21 * zeta;
  t59 = t21 * 2.3333333333333335;
  t64 = t23 * 2.3333333333333335;
  t67 = -t21 * zeta;
  t74 = t53 * 2.3333333333333335;
  sfvals[0] =
      ((((((((((((((((eta * -10.0 + t2 * 30.0) - t3 * 35.0) + t8 * 30.0) -
                   t9 * 35.0) +
                  t14) +
                 t16) +
                t18) -
               zeta * 10.0) -
              t500_tmp * 120.8745078663875) +
             eta * t230) +
            t536_tmp * 102.5202591774521) +
           (((((((((t117 + zeta * 66.614378277661473) + t219) + t230) -
                 t277_tmp * 263.65489663256568) -
                t2 * 120.8745078663875) -
               t8 * 120.8745078663875) +
              t500_tmp * 220.33202097703341) +
             t501_tmp * 220.33202097703341) -
            10.0) *
               xi) -
          t501_tmp * 120.8745078663875) +
         t117 * zeta) +
        t219 * zeta) +
       t5 * (((((eta * -120.8745078663875 + t2 * 102.5202591774521) +
                t8 * 102.5202591774521) -
               zeta * 120.8745078663875) +
              t277_tmp * 220.33202097703341) +
             30.0)) +
      (t6 * ((eta * 65.260129588726073 + zeta * 65.260129588726073) - 35.0) +
       1.0);
  sfvals_tmp = t500_tmp * 6.0313730334031144;
  b_sfvals_tmp = t501_tmp * 6.0313730334031144;
  sfvals[1] =
      ((t16 + t5 * (((((t21 * 4.5 + t23 * 4.5) - t51 * 3.5) - t52 * 3.5) -
                     t277_tmp * 3.2287565553229531) +
                    9.0)) -
       xi *
           (((((((t21 + t23) + t248) - sfvals_tmp) + t2 * -2.6457513110645907) +
              t8 * -2.6457513110645907) -
             b_sfvals_tmp) +
            1.0)) -
      t6 * ((t21 * 3.5 + t23 * 3.5) + 21.0);
  c_sfvals_tmp = t2 * t23;
  d_sfvals_tmp = t8 * t21;
  sfvals[2] = (((((((((-eta + t2 * 9.0) - t3 * 21.0) + t14) + t67) - t82) +
                  c_sfvals_tmp * 4.5) -
                 t3 * t23 * 3.5) +
                d_sfvals_tmp) -
               xi * (((((t21 + t3 * 9.260129588726068) - t51 * 4.5) + t248) +
                      t501_tmp * 3.2287565553229531) -
                     sfvals_tmp)) +
              t5 * ((t21 - t51 * 3.5) + t352);
  sfvals[3] = (((((((((t8 * 9.0 - t9 * 21.0) + t18) + t67) - t82) - zeta) +
                  c_sfvals_tmp) +
                 d_sfvals_tmp * 4.5) -
                t9 * t21 * 3.5) -
               xi * (((((t23 + t9 * 9.260129588726068) - t52 * 4.5) + t248) +
                      t500_tmp * 3.2287565553229531) -
                     b_sfvals_tmp)) +
              t5 * ((t23 - t52 * 3.5) + t352);
  sfvals_tmp = t277_tmp * 220.19192173273689;
  sfvals[4] =
      ((-t42 - t6 * ((zeta * 116.9027831039519 + -76.026009954896963) +
                     eta * 116.9027831039519)) +
       -t5 * (((((eta * -183.77325438263631 + t199) + t214) -
                zeta * 183.77325438263631) +
               t277_tmp * 276.30856529306573) +
              56.872348265678767)) +
      -xi *
          (((((((((t92 + t94) - t235) - t245) + t346) + t347) + t368) + t372) -
            sfvals_tmp) -
           13.51300497744848);
  sfvals[5] =
      ((t7 * 37.333333333333336 +
        (((((((((t206 + t253) + t263) + t457) + t465) + t500) + t501) - t456) -
          t464) -
         5.333333333333333) *
            xi) +
       t5 * (((((eta * -77.166010488516719 + t311) + t399) -
               zeta * 77.166010488516719) +
              t277_tmp * 59.886701628389083) +
             42.666666666666664)) +
      t6 * ((eta * 74.666666666666671 + zeta * 74.666666666666671) -
            74.666666666666671);
  sfvals[6] = ((-t42 - t6 * ((zeta * 13.76388356271481 + -54.640656711769708) +
                             eta * 13.76388356271481)) +
               xi * (((((((((t108 + t113) - t281) + t461) + t467) -
                         t2 * 8.8155721001902254) -
                        t8 * 8.8155721001902254) -
                       t523) -
                      t524) +
                     2.820328355884854)) +
              -t5 * (((((eta * 3.0131247939101931 - t384) - t392) +
                       zeta * 3.0131247939101931) -
                      t277_tmp * 33.108133330645472) +
                     24.794318400987891);
  sfvals[7] =
      (t6 * t142 -
       xi * (((((-t59 + t435) + t461) + t2 * 0.621851004803674) + t514) +
             t515)) -
      t5 * ((eta * 41.498624153858572 + t344) - t436);
  sfvals[8] =
      (t6 * t234 -
       xi * (((((-t169 + t415) + t2 * 15.72462820877201) + t496) + t497) -
             t456)) -
      t5 * ((eta * 15.72462820877201 - t2 * 50.558617720255278) + t314);
  b_sfvals_tmp = eta * t6;
  c_sfvals_tmp = t2 * -t207;
  d_sfvals_tmp = t302 * zeta;
  sfvals[9] =
      (b_sfvals_tmp * -2.7312403651288508 -
       t5 * ((eta * 0.621851004803674 + t344) - t436)) +
      xi * (((((t59 + t368) - t2 * 41.498624153858572) + t538) + c_sfvals_tmp) +
            d_sfvals_tmp);
  e_sfvals_tmp = t3 * zeta;
  sfvals[10] = (((((((((eta * 2.820328355884854 - t2 * 24.794318400987891) +
                       t3 * 54.640656711769708) -
                      t39) +
                     t132) +
                    t9 * t241) +
                   t535) -
                  t500_tmp * 8.8155721001902254) +
                 t6 * t241) -
                t501_tmp * 3.0131247939101931) +
               ((e_sfvals_tmp * -13.76388356271481 -
                 xi * (((((-t108 + t281) + t2 * 3.0131247939101931) +
                         t3 * 13.76388356271481) -
                        t501_tmp * 33.108133330645472) +
                       t523)) -
                t5 * ((eta * 8.8155721001902254 + t359) - t384));
  f_sfvals_tmp = eta * t9;
  sfvals[11] = (((((((((((eta * -5.333333333333333 + t2 * 42.666666666666664) +
                         t4 * 37.333333333333336) -
                        t40) +
                       t394) +
                      t537) -
                     b_sfvals_tmp * 6.6126421934609754) -
                    f_sfvals_tmp * 6.6126421934609754) +
                   eta * t465) +
                  (((((t40 + t206) + t253) - t2 * 77.166010488516719) +
                    t501_tmp * 59.886701628389083) +
                   t500) *
                      xi) -
                 t501_tmp * 77.166010488516719) +
                t40 * zeta) +
               t5 * ((eta * 4.1132983716109166 + t326) + t399);
  sfvals[12] = ((((((((eta * 13.51300497744848 - t2 * 56.872348265678767) +
                      t3 * 76.026009954896963) -
                     t39) +
                    t277) +
                   t540) -
                  b_sfvals_tmp * 48.838209405489671) -
                 f_sfvals_tmp * 48.838209405489671) +
                eta * t245) +
               (((e_sfvals_tmp * -116.9027831039519 + t250 * zeta) -
                 xi * (((((t92 - t250) + t3 * 116.9027831039519) + t346) +
                        t501_tmp * 276.30856529306573) -
                       sfvals_tmp)) -
                t5 * ((eta * -105.01600406261041 + t130) + t199));
  g_sfvals_tmp = t6 * zeta;
  sfvals[13] =
      ((((((((t8 * -56.872348265678767 + t9 * 76.026009954896963) - t48) +
            t277) +
           t540) +
          zeta * 13.51300497744848) -
         t5 * ((t130 + t214) - zeta * 105.01600406261041)) -
        f_sfvals_tmp * 116.9027831039519) +
       eta * t257) +
      (((e_sfvals_tmp * -48.838209405489671 -
         g_sfvals_tmp * 48.838209405489671) +
        t235 * zeta) -
       xi * (((((t94 - t257) + t9 * 116.9027831039519) + t347) +
              t500_tmp * 276.30856529306573) -
             sfvals_tmp));
  sfvals[14] =
      (((((((((((t8 * 42.666666666666664 + t10 * 37.333333333333336) - t49) +
               t394) +
              t537) -
             zeta * 5.333333333333333) -
            t500_tmp * 77.166010488516719) +
           eta * t49) +
          (((((t49 + t206) + t263) - t8 * 77.166010488516719) +
            t500_tmp * 59.886701628389083) +
           t501) *
              xi) -
         e_sfvals_tmp * 6.6126421934609754) -
        g_sfvals_tmp * 6.6126421934609754) +
       t457 * zeta) +
      t5 * ((t311 + t326) + zeta * 4.1132983716109166);
  sfvals[15] =
      (((((((((t8 * -24.794318400987891 + t9 * 54.640656711769708) - t48) +
             t132) +
            t3 * t251) +
           t535) +
          zeta * 2.820328355884854) -
         t500_tmp * 3.0131247939101931) -
        f_sfvals_tmp * 13.76388356271481) +
       t6 * t251) +
      ((t501_tmp * -8.8155721001902254 -
        xi * (((((-t113 + t281) + t8 * 3.0131247939101931) -
                t500_tmp * 33.108133330645472) +
               t9 * 13.76388356271481) +
              t524)) -
       t5 * ((t359 - t392) + zeta * 8.8155721001902254));
  sfvals_tmp = t344 - t8 * 13.440302373694159;
  sfvals[16] =
      (-t5 * (sfvals_tmp + zeta * 41.498624153858572) + t6 * t147) -
      xi * (((((-t64 + t435) + t467) + t8 * 0.621851004803674) + t514) + t515);
  sfvals[17] =
      (t6 * t244 -
       xi * (((((-(zeta * 3.7786526819777) + t415) + t8 * 15.72462820877201) +
               t496) +
              t497) -
             t464)) -
      t5 * ((t8 * -50.558617720255278 + t314) + zeta * 15.72462820877201);
  sfvals[18] =
      (g_sfvals_tmp * -2.7312403651288508 -
       t5 * (sfvals_tmp + zeta * 0.621851004803674)) +
      xi * (((((t64 + t372) - t8 * 41.498624153858572) + t538) + c_sfvals_tmp) +
            d_sfvals_tmp);
  sfvals[19] = ((((((t74 + t3 * t147) + t548) + t551) + t572) -
                 t500_tmp * 0.621851004803674) -
                f_sfvals_tmp * 2.7312403651288508) -
               t501_tmp * 41.498624153858572;
  sfvals[20] = ((((((t9 * t234 + t3 * t244) - t500_tmp * 15.72462820877201) +
                   t536_tmp * 50.558617720255278) +
                  t5 * t415) -
                 t501_tmp * 15.72462820877201) +
                t169 * zeta) -
               xi * ((t415 + t496) + t497);
  sfvals[21] = ((((((t74 + t9 * t142) + t548) + t551) + t572) -
                 t500_tmp * 41.498624153858572) -
                t501_tmp * 0.621851004803674) -
               e_sfvals_tmp * 2.7312403651288508;
  sfvals[22] =
      (t5 * ((eta * -188.48298054069949 + t188) + t290) + t6 * t100) +
      (((((t21 * 31.5 + t291) + t295) + t329) - t2 * 188.48298054069949) +
       t423) *
          xi;
  sfvals[23] =
      (b_sfvals_tmp * -105.1418142421649 +
       ((((-t125 + t2 * 21.800647943630331) + t378) + t410) + t411) * xi) -
      t5 * ((eta * -126.94246218579531 + t262) + t289);
  sfvals[24] =
      (((-t125 + t278) - t291) + t565) * xi + t5 * ((t125 + t271) - t289);
  sfvals[25] =
      (t5 * ((t188 + t8 * 210.28362848432991) - zeta * 188.48298054069949) +
       t6 * t105) +
      (((((t23 * 31.5 + t295) + t305) + t328) - t8 * 188.48298054069949) +
       t424) *
          xi;
  sfvals[26] =
      (((((-t133 + t8 * 21.800647943630331) + t378) + t410) + t411) * xi -
       g_sfvals_tmp * 105.1418142421649) -
      t5 * ((t262 + t303) - zeta * 126.94246218579531);
  sfvals[27] =
      (((-t133 + t287) - t305) + t564) * xi + t5 * ((t133 + t271) - t303);
  sfvals_tmp = t330 + t410;
  sfvals[28] = t530 + (sfvals_tmp + t411) * xi;
  sfvals[29] = t543 + (sfvals_tmp + t424) * xi;
  sfvals[30] = t543 + ((t330 + t411) + t423) * xi;
  sfvals_tmp =
      (t277_tmp * -21.800647943630331 + t536_tmp * -105.1418142421649) + t543;
  sfvals[31] = (((sfvals_tmp + t8 * t125) + t565 * xi) -
                e_sfvals_tmp * 105.1418142421649) +
               t278 * zeta;
  sfvals[32] = ((((((t53 * 31.5 + t9 * t100) + t3 * t105) + t530) -
                  t500_tmp * 188.48298054069949) +
                 t8 * t290) +
                ((t295 + t328) + t329) * xi) -
               t501_tmp * 188.48298054069949;
  sfvals[33] = (((sfvals_tmp - f_sfvals_tmp * 105.1418142421649) + eta * t287) +
                t2 * t133) +
               t564 * xi;
  sfvals[34] =
      -xi * ((t8 * (eta * 256.0) + t2 * (zeta * 256.0)) - t277_tmp * 256.0) -
      eta * t5 * zeta * 256.0;
}

// tet_gl_35_sfunc - Compute shape functions and their derivatives of
void tet_gl_35_sfunc(double xi, double eta, double zeta, double sfvals[35],
                     double sdvals[105])
{
  double b_sfvals_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double g_sfvals_tmp;
  double h_sfvals_tmp;
  double i_sfvals_tmp;
  double j_sfvals_tmp;
  double k_sfvals_tmp;
  double sfvals_tmp;
  double t10;
  double t100;
  double t101;
  double t102;
  double t103;
  double t104;
  double t105;
  double t106;
  double t107;
  double t108;
  double t109;
  double t110;
  double t111;
  double t112;
  double t113;
  double t114;
  double t115;
  double t116;
  double t117;
  double t118;
  double t119;
  double t12;
  double t120;
  double t121;
  double t122;
  double t123;
  double t124;
  double t125;
  double t126;
  double t127;
  double t129;
  double t13;
  double t130;
  double t131;
  double t132;
  double t133;
  double t134;
  double t136;
  double t138;
  double t14;
  double t140;
  double t141;
  double t142;
  double t144;
  double t146;
  double t147;
  double t148;
  double t149;
  double t15;
  double t150;
  double t151;
  double t153;
  double t154;
  double t155;
  double t156;
  double t158;
  double t159;
  double t16;
  double t161;
  double t163;
  double t165;
  double t166;
  double t169;
  double t17;
  double t170;
  double t171;
  double t175;
  double t176;
  double t18;
  double t184;
  double t188;
  double t189;
  double t19;
  double t190;
  double t191;
  double t192;
  double t193;
  double t194;
  double t196;
  double t197;
  double t199;
  double t2;
  double t200;
  double t201;
  double t202;
  double t203;
  double t206;
  double t207;
  double t208;
  double t209;
  double t21;
  double t210;
  double t213;
  double t214;
  double t215;
  double t216;
  double t219;
  double t22;
  double t220;
  double t221;
  double t223;
  double t224;
  double t225;
  double t226;
  double t228;
  double t229;
  double t23;
  double t230;
  double t231;
  double t232;
  double t234;
  double t235;
  double t236;
  double t237;
  double t24;
  double t240;
  double t241;
  double t244;
  double t245;
  double t247;
  double t248;
  double t249;
  double t25;
  double t250;
  double t251;
  double t253;
  double t254;
  double t256;
  double t257;
  double t25_tmp;
  double t261;
  double t262;
  double t263;
  double t264;
  double t266;
  double t267;
  double t268;
  double t269;
  double t27;
  double t270;
  double t271;
  double t272;
  double t275;
  double t276;
  double t277;
  double t278;
  double t28;
  double t280;
  double t281;
  double t282;
  double t283;
  double t285;
  double t287;
  double t289;
  double t290;
  double t291;
  double t294;
  double t295;
  double t296;
  double t297;
  double t3;
  double t30;
  double t301;
  double t302;
  double t303;
  double t304;
  double t305;
  double t306;
  double t307;
  double t31;
  double t311;
  double t314;
  double t315;
  double t317;
  double t323;
  double t326;
  double t328;
  double t329;
  double t330;
  double t332;
  double t337;
  double t340;
  double t341;
  double t344;
  double t345;
  double t346;
  double t347;
  double t348;
  double t352;
  double t353;
  double t354;
  double t354_tmp;
  double t355;
  double t355_tmp;
  double t359;
  double t360;
  double t361;
  double t364;
  double t367;
  double t368;
  double t370;
  double t371;
  double t372;
  double t374;
  double t375;
  double t376;
  double t378;
  double t379;
  double t38;
  double t380;
  double t382;
  double t384;
  double t385;
  double t386;
  double t39;
  double t392;
  double t393;
  double t394;
  double t395;
  double t396;
  double t399;
  double t4;
  double t40;
  double t407;
  double t41;
  double t410;
  double t411;
  double t415;
  double t42;
  double t420;
  double t421;
  double t422;
  double t423;
  double t424;
  double t425;
  double t426;
  double t427;
  double t428;
  double t429;
  double t43;
  double t430;
  double t432;
  double t433;
  double t434;
  double t435;
  double t436;
  double t437;
  double t438;
  double t439;
  double t44;
  double t441;
  double t442;
  double t443;
  double t448;
  double t450;
  double t455;
  double t456;
  double t457;
  double t458;
  double t461;
  double t462;
  double t463;
  double t464;
  double t465;
  double t466;
  double t467;
  double t468;
  double t47;
  double t471;
  double t472;
  double t473;
  double t474;
  double t475;
  double t476;
  double t477;
  double t478;
  double t479;
  double t48;
  double t487;
  double t489;
  double t49;
  double t495;
  double t496;
  double t497;
  double t499;
  double t5;
  double t50;
  double t500;
  double t501;
  double t505;
  double t51;
  double t512;
  double t514;
  double t515;
  double t517;
  double t518;
  double t52;
  double t523;
  double t524;
  double t525;
  double t526;
  double t53;
  double t530;
  double t535;
  double t536_tmp;
  double t537;
  double t538;
  double t54;
  double t540;
  double t541;
  double t542;
  double t543;
  double t548;
  double t549;
  double t549_tmp;
  double t550;
  double t550_tmp;
  double t551;
  double t552;
  double t557;
  double t557_tmp;
  double t558;
  double t558_tmp;
  double t559;
  double t560;
  double t560_tmp;
  double t562;
  double t564;
  double t565;
  double t568;
  double t569;
  double t570;
  double t571;
  double t572;
  double t576;
  double t577;
  double t578;
  double t579;
  double t580;
  double t581;
  double t582;
  double t583;
  double t584;
  double t59;
  double t591;
  double t592;
  double t597;
  double t598;
  double t6;
  double t64;
  double t67;
  double t68;
  double t7;
  double t72;
  double t73;
  double t74;
  double t77;
  double t78;
  double t79;
  double t8;
  double t80;
  double t81;
  double t82;
  double t85;
  double t86;
  double t87;
  double t88;
  double t89;
  double t9;
  double t90;
  double t91;
  double t92;
  double t93;
  double t94;
  double t95;
  double t96;
  double t97;
  double t98;
  double t99;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = xi * xi;
  t6 = std::pow(xi, 3.0);
  t8 = zeta * zeta;
  t9 = std::pow(zeta, 3.0);
  t12 = eta * 256.0;
  t13 = zeta * 256.0;
  t25_tmp = eta * zeta;
  t25 = t25_tmp * 512.0;
  t85 = eta * 315.42544272649479;
  t86 = zeta * 315.42544272649479;
  t87 = eta * 367.54650876527251;
  t88 = eta * 376.96596108139909;
  t89 = zeta * 220.19192173273689;
  t90 = zeta * 367.54650876527251;
  t91 = zeta * 376.96596108139909;
  t92 = eta * 69.69079963456926;
  t93 = eta * 228.2228509519735;
  t94 = zeta * 69.69079963456926;
  t95 = eta * 253.88492437159061;
  t96 = zeta * 228.2228509519735;
  t97 = eta * 206.4222030083431;
  t98 = eta * 82.997248307717143;
  t99 = zeta * 253.88492437159061;
  t100 = eta * 105.1418142421649;
  t101 = eta * 210.28362848432991;
  t102 = zeta * 206.4222030083431;
  t103 = eta * 61.441382279744722;
  t104 = zeta * 82.997248307717143;
  t105 = zeta * 105.1418142421649;
  t106 = zeta * 210.28362848432991;
  t107 = eta * 156.674541823985;
  t108 = eta * 3.2640033791765219;
  t109 = eta * 266.14865168554968;
  t110 = zeta * 61.441382279744722;
  t111 = eta * 146.514628216469;
  t112 = zeta * 156.674541823985;
  t113 = zeta * 3.2640033791765219;
  t114 = eta * 154.33202097703341;
  t115 = zeta * 266.14865168554968;
  t116 = eta * 241.74901573277509;
  t117 = eta * 66.614378277661473;
  t118 = zeta * 146.514628216469;
  t119 = zeta * 154.33202097703341;
  t120 = zeta * 241.74901573277509;
  t121 = zeta * 66.614378277661473;
  t122 = eta * 210.0320081252209;
  t123 = zeta * 210.0320081252209;
  t124 = eta * 220.19192173273689;
  t125 = eta * 21.800647943630331;
  t126 = eta * 43.601295887260669;
  t127 = eta * 87.202591774521338;
  t129 = eta * 26.880604747388311;
  t131 = t25_tmp * 313.34908364797;
  t133 = zeta * 21.800647943630331;
  t134 = zeta * 43.601295887260669;
  t136 = t25_tmp * 552.61713058613134;
  t138 = zeta * 26.880604747388311;
  t140 = t25_tmp * 440.66404195406687;
  t141 = eta * 17.9392224676436;
  t142 = eta * 48.838209405489671;
  t144 = eta * 31.449256417544021;
  t146 = zeta * 17.9392224676436;
  t147 = zeta * 48.838209405489671;
  t148 = zeta * 31.449256417544021;
  t149 = eta * 7.4712305928644973;
  t151 = eta * 19.837926580382931;
  t153 = zeta * 7.4712305928644973;
  t154 = eta * 17.631144200380451;
  t155 = zeta * 19.837926580382931;
  t156 = eta * 43.268046938161419;
  t159 = eta * 123.0810367098085;
  t163 = t25_tmp * 174.4051835490427;
  t165 = zeta * 17.631144200380451;
  t166 = zeta * 43.268046938161419;
  t169 = eta * 3.7786526819777;
  t170 = zeta * 123.0810367098085;
  t171 = eta * 9.7812773945774687;
  t175 = zeta * 3.7786526819777;
  t176 = zeta * 9.7812773945774687;
  t189 = t25_tmp * 456.44570190394688;
  t190 = eta * 39.739870411273927;
  t191 = eta * 3.3856217223385241;
  t194 = zeta * 39.739870411273927;
  t196 = t25_tmp * 246.16207341961709;
  t197 = zeta * 3.3856217223385241;
  t201 = eta * 6.0313730334031144;
  t202 = zeta * 6.026249587820387;
  t207 = zeta * 10.159913607515961;
  t208 = eta * 1.966192512129403;
  t216 = zeta * 6.0313730334031144;
  t221 = zeta * 1.966192512129403;
  t224 = eta * 8.193721095386552;
  t228 = t25_tmp * 42.785214463477118;
  t229 = t25_tmp * -154.33202097703341;
  t232 = t25_tmp * -241.74901573277509;
  t234 = eta * 6.6126421934609754;
  t236 = eta * 8.226596743221835;
  t237 = zeta * 8.193721095386552;
  t240 = eta * 3.8614254759867381;
  t241 = eta * 2.7312403651288508;
  t244 = zeta * 6.6126421934609754;
  t247 = zeta * 8.226596743221835;
  t249 = zeta * 3.8614254759867381;
  t251 = zeta * 2.7312403651288508;
  t253 = eta * 7.8326771551833918;
  t256 = t25_tmp * 20.319827215031911;
  t263 = zeta * 7.8326771551833918;
  t266 = t25_tmp * -376.96596108139909;
  t267 = t25_tmp * 66.216266661290931;
  t268 = eta * 1.554680651355633;
  t269 = zeta * 1.554680651355633;
  t270 = t25_tmp * 119.7734032567782;
  t272 = t25_tmp * 35.878444935287192;
  t277 = t25_tmp * -69.69079963456926;
  t285 = eta * 1.2437020096073479;
  t294 = zeta * 1.2437020096073479;
  t295 = t25_tmp * -206.4222030083431;
  t296 = eta * 6.026249587820387;
  t302 = eta * 10.159913607515961;
  t306 = t25_tmp * -82.997248307717143;
  t315 = t25_tmp * 3.1093613027112661;
  t326 = t25_tmp * -21.392607231738559;
  t330 = t25_tmp * -39.739870411273927;
  t332 = t25_tmp * -3.3856217223385241;
  t353 = t25_tmp * 12.062746066806231;
  t360 = t25_tmp * 3.9323850242588061;
  t364 = t25_tmp * 6.4575131106459063;
  t374 = t25_tmp * -31.449256417544021;
  t382 = t25_tmp * -7.4712305928644973;
  t395 = t25_tmp * -17.631144200380451;
  t415 = t25_tmp * -1.554680651355633;
  t425 = t25_tmp * -1.2437020096073479;
  t432 = t25_tmp * -6.026249587820387;
  t435 = t25_tmp * -10.159913607515961;
  t4 = t2 * t2;
  t7 = t5 * t5;
  t10 = t8 * t8;
  t15 = t3 * 56.0;
  t17 = t6 * 56.0;
  t19 = t9 * 56.0;
  t21 = eta * 2.6457513110645907;
  t22 = t2 * 224.0;
  t23 = 2.6457513110645907 * zeta;
  t24 = t8 * 224.0;
  t40 = t3 * 74.666666666666671;
  t41 = t3 * 130.66666666666666;
  t43 = t6 * 74.666666666666671;
  t44 = t6 * 130.66666666666666;
  t49 = t9 * 74.666666666666671;
  t50 = t9 * 130.66666666666666;
  t51 = t2 * 2.6457513110645907;
  t52 = t8 * 2.6457513110645907;
  t77 = t3 * 2.6457513110645907 * -3.5;
  t79 = t9 * 2.6457513110645907 * -3.5;
  t81 = t6 * 2.6457513110645907 * -3.5;
  t130 = t107 * zeta;
  t132 = t108 * zeta;
  t150 = t122 * zeta;
  t158 = eta * t89;
  t161 = t87 * zeta;
  t184 = t2 * 315.42544272649479;
  t188 = t93 * zeta;
  t192 = t8 * 315.42544272649479;
  t193 = t95 * zeta;
  t199 = t2 * 133.0743258427749;
  t200 = t2 * 266.14865168554968;
  t203 = t8 * 61.441382279744722;
  t206 = t171 * zeta;
  t209 = t2 * 146.514628216469;
  t210 = t8 * 156.674541823985;
  t213 = t2 * 77.166010488516719;
  t214 = t8 * 133.0743258427749;
  t215 = t8 * 266.14865168554968;
  t219 = t3 * 65.260129588726073;
  t220 = t2 * 120.8745078663875;
  t223 = t8 * 146.514628216469;
  t225 = t8 * 77.166010488516719;
  t226 = t6 * 65.260129588726073;
  t230 = t9 * 65.260129588726073;
  t231 = t8 * 120.8745078663875;
  t235 = t2 * 105.01600406261041;
  t245 = t8 * 105.01600406261041;
  t248 = t191 * zeta;
  t250 = t2 * 183.77325438263631;
  t254 = t2 * 188.48298054069949;
  t257 = t8 * 183.77325438263631;
  t261 = t126 * zeta;
  t262 = t127 * zeta;
  t264 = t8 * 188.48298054069949;
  t271 = t141 * zeta;
  t275 = t2 * 228.2228509519735;
  t276 = t3 * 116.9027831039519;
  t278 = t2 * 126.94246218579531;
  t280 = t6 * 116.9027831039519;
  t281 = t149 * zeta;
  t282 = t8 * 228.2228509519735;
  t283 = t9 * 116.9027831039519;
  t287 = t8 * 126.94246218579531;
  t289 = t2 * 105.1418142421649;
  t290 = t2 * 210.28362848432991;
  t291 = t3 * 105.1418142421649;
  t297 = t2 * 61.441382279744722;
  t301 = t6 * 105.1418142421649;
  t303 = t8 * 105.1418142421649;
  t304 = t8 * 210.28362848432991;
  t305 = t9 * 105.1418142421649;
  t307 = t2 * 156.674541823985;
  t311 = t8 * 30.720691139872361;
  t314 = t268 * zeta;
  t317 = t2 * 21.392607231738559;
  t323 = t8 * 21.392607231738559;
  t328 = t8 * t93;
  t329 = t2 * t96;
  t337 = t2 * 21.800647943630331;
  t340 = t8 * t103;
  t341 = t2 * t110;
  t344 = eta * t207;
  t345 = t2 * 26.880604747388311;
  t346 = t8 * t107;
  t347 = t2 * t112;
  t348 = t8 * 21.800647943630331;
  t352 = t201 * zeta;
  t354_tmp = eta * t8;
  t354 = t354_tmp * 276.30856529306573;
  t355_tmp = t2 * zeta;
  t355 = t355_tmp * 276.30856529306573;
  t359 = t208 * zeta;
  t361 = t8 * 26.880604747388311;
  t367 = t2 * 17.9392224676436;
  t368 = t3 * 48.838209405489671;
  t370 = t6 * 48.838209405489671;
  t371 = t8 * 17.9392224676436;
  t372 = t9 * 48.838209405489671;
  t375 = t2 * 19.837926580382931;
  t376 = t236 * zeta;
  t378 = t240 * zeta;
  t379 = t196 * xi;
  t380 = t8 * 19.837926580382931;
  t384 = t2 * 21.634023469080709;
  t385 = t2 * 43.268046938161419;
  t386 = t2 * 123.0810367098085;
  t392 = t8 * 21.634023469080709;
  t393 = t8 * 43.268046938161419;
  t394 = t253 * zeta;
  t396 = t8 * 123.0810367098085;
  t399 = t2 * 30.720691139872361;
  t407 = t8 * 1.554680651355633;
  t410 = t8 * t141;
  t411 = t2 * t146;
  t420 = t8 * t156;
  t421 = t2 * t166;
  t422 = t2 * 3.0131247939101931;
  t423 = t8 * t159;
  t424 = t2 * t170;
  t426 = t2 * 10.159913607515961;
  t427 = t354_tmp * -210.28362848432991;
  t428 = t355_tmp * -210.28362848432991;
  t429 = t2 * 6.0313730334031144;
  t430 = t8 * 3.0131247939101931;
  t433 = t8 * 10.159913607515961;
  t434 = t2 * 1.966192512129403;
  t436 = t2 * 13.440302373694159;
  t437 = t354_tmp * -156.674541823985;
  t438 = t355_tmp * -156.674541823985;
  t439 = t8 * 6.0313730334031144;
  t441 = t354_tmp * -266.14865168554968;
  t442 = t355_tmp * -266.14865168554968;
  t443 = t8 * 1.966192512129403;
  t448 = t272 * xi;
  t450 = t2 * 8.193721095386552;
  t455 = t2 * 15.72462820877201;
  t456 = t3 * 6.6126421934609754;
  t457 = t2 * 4.1132983716109166;
  t458 = t8 * 8.193721095386552;
  t461 = t3 * 2.7312403651288508;
  t462 = t6 * 6.6126421934609754;
  t463 = t8 * 15.72462820877201;
  t464 = t9 * 6.6126421934609754;
  t465 = t8 * 4.1132983716109166;
  t466 = t6 * 2.7312403651288508;
  t467 = t9 * 2.7312403651288508;
  t468 = t2 * 8.8155721001902254;
  t471 = t3 * 13.76388356271481;
  t472 = t8 * 8.8155721001902254;
  t473 = t8 * t129;
  t474 = t2 * t138;
  t475 = t354_tmp * 33.108133330645472;
  t476 = t355_tmp * 33.108133330645472;
  t477 = t2 * 1.554680651355633;
  t478 = t6 * 13.76388356271481;
  t479 = t9 * 13.76388356271481;
  t487 = t2 * 0.621851004803674;
  t489 = t8 * 0.621851004803674;
  t495 = t5 * t141;
  t496 = t8 * t268;
  t497 = t2 * t269;
  t499 = t5 * t146;
  t500 = t354_tmp * -21.392607231738559;
  t501 = t355_tmp * -21.392607231738559;
  t505 = t5 * t159;
  t512 = t5 * t170;
  t514 = t8 * t302;
  t515 = t2 * t207;
  t517 = t8 * t201;
  t518 = t2 * t216;
  t523 = t8 * t208;
  t524 = t2 * t221;
  t525 = t354_tmp * 3.2287565553229531;
  t526 = t355_tmp * 3.2287565553229531;
  t536_tmp = t2 * t8;
  t538 = t354_tmp * -10.159913607515961;
  t540 = t536_tmp * -133.0743258427749;
  t541 = t354_tmp * -1.966192512129403;
  t542 = t355_tmp * -1.966192512129403;
  t549_tmp = eta * t5;
  t549 = t549_tmp * -1.554680651355633;
  t550_tmp = t5 * zeta;
  t550 = t550_tmp * -1.554680651355633;
  t551 = t5 * t435;
  t14 = t4 * 14.0;
  t16 = t7 * 14.0;
  t18 = t10 * 14.0;
  t39 = t4 * 32.666666666666664;
  t42 = t7 * 32.666666666666664;
  t48 = t10 * 32.666666666666664;
  t78 = t51 * 4.5;
  t80 = t52 * 4.5;
  t82 = t8 * t51 * 3.5;
  t530 = t5 * (t159 * zeta);
  t535 = t8 * t384;
  t537 = t2 * t311;
  t543 = t5 * t271;
  t548 = t8 * t436;
  t552 = (t295 + t328) + t329;
  t559 = (t330 + t411) + t423;
  t560_tmp = t330 + t410;
  t560 = t560_tmp + t424;
  t562 = t560_tmp + t411;
  t564 = (t378 + t411) + t354_tmp * -87.202591774521338;
  t565 = (t378 + t410) + t355_tmp * -87.202591774521338;
  t568 = -xi * ((t315 - t268) + t477);
  t569 = -xi * ((t315 - t269) + t407);
  t570 = (t314 + t354_tmp * -1.554680651355633) + t355_tmp * -1.554680651355633;
  t571 = (t344 + t538) + t355_tmp * -10.159913607515961;
  t572 = -xi * ((t435 + t514) + t515);
  t579 = (((-t125 + t337) + t378) + t410) + t411;
  t580 = (((-t133 + t348) + t378) + t410) + t411;
  t27 = t21 * 2.0;
  t28 = t21 * 7.0;
  t30 = t23 * 2.0;
  t31 = t23 * 7.0;
  t38 = t21 * 9.0;
  t47 = t23 * 9.0;
  t53 = t21 * zeta;
  t59 = t21 * 2.3333333333333335;
  t64 = t23 * 2.3333333333333335;
  t72 = t21 * 31.5;
  t73 = t23 * 31.5;
  t576 = t549_tmp * -10.159913607515961 + -xi * ((t256 - t302) + t426);
  t577 = t550_tmp * -10.159913607515961 + -xi * ((t256 - t207) + t433);
  t578 = -t256 * xi + t571;
  t583 =
      ((((t40 + t206) + t253) - t213) + t355_tmp * 59.886701628389083) + t500;
  t584 =
      ((((t49 + t206) + t263) - t225) + t354_tmp * 59.886701628389083) + t501;
  t591 = ((-t133 + t287) - t305) + t564;
  t592 = ((-t125 + t278) - t291) + t565;
  t597 = ((((((((t117 + t121) + t219) + t230) - t25_tmp * 263.65489663256568) -
             t220) -
            t231) +
           t354_tmp * 220.33202097703341) +
          t355_tmp * 220.33202097703341) -
         10.0;
  t598 = ((((((((t206 + t253) + t263) + t457) + t465) + t500) + t501) - t456) -
          t464) -
         5.333333333333333;
  t54 = t27 * zeta;
  t67 = -t21 * zeta;
  t68 = t38 * zeta;
  t74 = t53 * 2.3333333333333335;
  t557_tmp = t240 + t272;
  t557 = (t557_tmp - t2 * 87.202591774521338) * xi;
  t558_tmp = t249 + t272;
  t558 = (t558_tmp - t8 * 87.202591774521338) * xi;
  t581 = ((((t72 + t291) + t295) + t329) - t254) + t423;
  t582 = ((((t73 + t295) + t305) + t328) - t264) + t424;
  sfvals[0] =
      ((((((((((((((((eta * -10.0 + t2 * 30.0) - t3 * 35.0) + t8 * 30.0) -
                   t9 * 35.0) +
                  t14) +
                 t16) +
                t18) -
               zeta * 10.0) -
              t354_tmp * 120.8745078663875) +
             eta * t230) +
            t536_tmp * 102.5202591774521) +
           t597 * xi) -
          t355_tmp * 120.8745078663875) +
         t117 * zeta) +
        t219 * zeta) +
       t5 * (((((eta * -120.8745078663875 + t2 * 102.5202591774521) +
                t8 * 102.5202591774521) -
               zeta * 120.8745078663875) +
              t25_tmp * 220.33202097703341) +
             30.0)) +
      (t6 * ((eta * 65.260129588726073 + zeta * 65.260129588726073) - 35.0) +
       1.0);
  sfvals_tmp = t354_tmp * 6.0313730334031144;
  b_sfvals_tmp = t355_tmp * 6.0313730334031144;
  sfvals[1] =
      ((t16 + t5 * (((((t21 * 4.5 + t23 * 4.5) - t51 * 3.5) - t52 * 3.5) -
                     t25_tmp * 3.2287565553229531) +
                    9.0)) -
       xi *
           (((((((t21 + t23) + t248) - sfvals_tmp) + t2 * -2.6457513110645907) +
              t8 * -2.6457513110645907) -
             b_sfvals_tmp) +
            1.0)) -
      t6 * ((t21 * 3.5 + t23 * 3.5) + 21.0);
  c_sfvals_tmp = t2 * t23;
  d_sfvals_tmp = t8 * t21;
  sfvals[2] = (((((((((-eta + t2 * 9.0) - t3 * 21.0) + t14) + t67) - t82) +
                  c_sfvals_tmp * 4.5) -
                 t3 * t23 * 3.5) +
                d_sfvals_tmp) -
               xi * (((((t21 + t3 * 9.260129588726068) - t78) + t248) + t526) -
                     sfvals_tmp)) +
              t5 * ((t21 - t51 * 3.5) + t352);
  sfvals[3] = (((((((((t8 * 9.0 - t9 * 21.0) + t18) + t67) - t82) - zeta) +
                  c_sfvals_tmp) +
                 d_sfvals_tmp * 4.5) -
                t9 * t21 * 3.5) -
               xi * (((((t23 + t9 * 9.260129588726068) - t80) + t248) + t525) -
                     b_sfvals_tmp)) +
              t5 * ((t23 - t52 * 3.5) + t352);
  sfvals_tmp = t25_tmp * 220.19192173273689;
  sfvals[4] =
      ((-t42 - t6 * ((zeta * 116.9027831039519 + -76.026009954896963) +
                     eta * 116.9027831039519)) +
       -t5 * (((((eta * -183.77325438263631 + t199) + t214) -
                zeta * 183.77325438263631) +
               t25_tmp * 276.30856529306573) +
              56.872348265678767)) +
      -xi *
          (((((((((t92 + t94) - t235) - t245) + t346) + t347) + t368) + t372) -
            sfvals_tmp) -
           13.51300497744848);
  sfvals[5] = ((t7 * 37.333333333333336 + t598 * xi) +
               t5 * (((((eta * -77.166010488516719 + t311) + t399) -
                       zeta * 77.166010488516719) +
                      t25_tmp * 59.886701628389083) +
                     42.666666666666664)) +
              t6 * ((eta * 74.666666666666671 + zeta * 74.666666666666671) -
                    74.666666666666671);
  b_sfvals_tmp = t108 + t113;
  sfvals[6] =
      ((-t42 - t6 * ((zeta * 13.76388356271481 + -54.640656711769708) +
                     eta * 13.76388356271481)) +
       xi * ((((((((b_sfvals_tmp - t281) + t461) + t467) - t468) - t472) -
               t523) -
              t524) +
             2.820328355884854)) +
      -t5 * (((((eta * 3.0131247939101931 - t384) - t392) +
               zeta * 3.0131247939101931) -
              t25_tmp * 33.108133330645472) +
             24.794318400987891);
  sfvals[7] =
      (t6 * t142 - xi * (((((-t59 + t435) + t461) + t487) + t514) + t515)) -
      t5 * ((eta * 41.498624153858572 + t344) - t436);
  sfvals[8] =
      (t6 * t234 - xi * (((((-t169 + t415) + t455) + t496) + t497) - t456)) -
      t5 * ((eta * 15.72462820877201 - t2 * 50.558617720255278) + t314);
  e_sfvals_tmp = eta * t6;
  f_sfvals_tmp = t2 * -t207;
  g_sfvals_tmp = t302 * zeta;
  h_sfvals_tmp = (t59 + t368) - t2 * 41.498624153858572;
  sfvals[9] = (e_sfvals_tmp * -2.7312403651288508 -
               t5 * ((eta * 0.621851004803674 + t344) - t436)) +
              xi * (((h_sfvals_tmp + t538) + f_sfvals_tmp) + g_sfvals_tmp);
  i_sfvals_tmp = t3 * zeta;
  sfvals[10] = (((((((((eta * 2.820328355884854 - t2 * 24.794318400987891) +
                       t3 * 54.640656711769708) -
                      t39) +
                     t132) +
                    t9 * t241) +
                   t535) -
                  t354_tmp * 8.8155721001902254) +
                 t6 * t241) -
                t355_tmp * 3.0131247939101931) +
               ((i_sfvals_tmp * -13.76388356271481 -
                 xi * (((((-t108 + t281) + t422) + t471) - t476) + t523)) -
                t5 * ((eta * 8.8155721001902254 + t359) - t384));
  t560_tmp = eta * t9;
  sfvals[11] = (((((((((((eta * -5.333333333333333 + t2 * 42.666666666666664) +
                         t4 * 37.333333333333336) -
                        t40) +
                       t394) +
                      t537) -
                     e_sfvals_tmp * 6.6126421934609754) -
                    t560_tmp * 6.6126421934609754) +
                   eta * t465) +
                  t583 * xi) -
                 t355_tmp * 77.166010488516719) +
                t40 * zeta) +
               t5 * ((eta * 4.1132983716109166 + t326) + t399);
  sfvals[12] = ((((((((eta * 13.51300497744848 - t2 * 56.872348265678767) +
                      t3 * 76.026009954896963) -
                     t39) +
                    t277) +
                   t540) -
                  e_sfvals_tmp * 48.838209405489671) -
                 t560_tmp * 48.838209405489671) +
                eta * t245) +
               (((i_sfvals_tmp * -116.9027831039519 + t250 * zeta) -
                 xi * (((((t92 - t250) + t276) + t346) + t355) - sfvals_tmp)) -
                t5 * ((eta * -105.01600406261041 + t130) + t199));
  j_sfvals_tmp = t6 * zeta;
  sfvals[13] =
      ((((((((t8 * -56.872348265678767 + t9 * 76.026009954896963) - t48) +
            t277) +
           t540) +
          zeta * 13.51300497744848) -
         t5 * ((t130 + t214) - zeta * 105.01600406261041)) -
        t560_tmp * 116.9027831039519) +
       eta * t257) +
      (((i_sfvals_tmp * -48.838209405489671 -
         j_sfvals_tmp * 48.838209405489671) +
        t235 * zeta) -
       xi * (((((t94 - t257) + t283) + t347) + t354) - sfvals_tmp));
  sfvals[14] =
      (((((((((((t8 * 42.666666666666664 + t10 * 37.333333333333336) - t49) +
               t394) +
              t537) -
             zeta * 5.333333333333333) -
            t354_tmp * 77.166010488516719) +
           eta * t49) +
          t584 * xi) -
         i_sfvals_tmp * 6.6126421934609754) -
        j_sfvals_tmp * 6.6126421934609754) +
       t457 * zeta) +
      t5 * ((t311 + t326) + zeta * 4.1132983716109166);
  sfvals[15] =
      (((((((((t8 * -24.794318400987891 + t9 * 54.640656711769708) - t48) +
             t132) +
            t3 * t251) +
           t535) +
          zeta * 2.820328355884854) -
         t354_tmp * 3.0131247939101931) -
        t560_tmp * 13.76388356271481) +
       t6 * t251) +
      ((t355_tmp * -8.8155721001902254 -
        xi * (((((-t113 + t281) + t430) - t475) + t479) + t524)) -
       t5 * ((t359 - t392) + zeta * 8.8155721001902254));
  sfvals_tmp = t344 - t8 * 13.440302373694159;
  sfvals[16] = (-t5 * (sfvals_tmp + zeta * 41.498624153858572) + t6 * t147) -
               xi * (((((-t64 + t435) + t467) + t489) + t514) + t515);
  sfvals[17] =
      (t6 * t244 - xi * (((((-t175 + t415) + t463) + t496) + t497) - t464)) -
      t5 * ((t8 * -50.558617720255278 + t314) + zeta * 15.72462820877201);
  k_sfvals_tmp = (t64 + t372) - t8 * 41.498624153858572;
  sfvals[18] = (j_sfvals_tmp * -2.7312403651288508 -
                t5 * (sfvals_tmp + zeta * 0.621851004803674)) +
               xi * (((k_sfvals_tmp + t538) + f_sfvals_tmp) + g_sfvals_tmp);
  sfvals[19] = ((((((t74 + t3 * t147) + t548) + t551) + t572) -
                 t354_tmp * 0.621851004803674) -
                t560_tmp * 2.7312403651288508) -
               t355_tmp * 41.498624153858572;
  sfvals[20] = ((((((t9 * t234 + t3 * t244) - t354_tmp * 15.72462820877201) +
                   t536_tmp * 50.558617720255278) +
                  t5 * t415) -
                 t355_tmp * 15.72462820877201) +
                t169 * zeta) -
               xi * ((t415 + t496) + t497);
  sfvals[21] = ((((((t74 + t9 * t142) + t548) + t551) + t572) -
                 t354_tmp * 41.498624153858572) -
                t355_tmp * 0.621851004803674) -
               i_sfvals_tmp * 2.7312403651288508;
  sfvals[22] = (t5 * ((eta * -188.48298054069949 + t188) + t290) + t6 * t100) +
               t581 * xi;
  sfvals[23] = (e_sfvals_tmp * -105.1418142421649 + t579 * xi) -
               t5 * ((eta * -126.94246218579531 + t262) + t289);
  sfvals[24] = t592 * xi + t5 * ((t125 + t271) - t289);
  sfvals[25] = (t5 * ((t188 + t304) - zeta * 188.48298054069949) + t6 * t105) +
               t582 * xi;
  sfvals[26] = (t580 * xi - j_sfvals_tmp * 105.1418142421649) -
               t5 * ((t262 + t303) - zeta * 126.94246218579531);
  sfvals[27] = t591 * xi + t5 * ((t133 + t271) - t303);
  sfvals[28] = t530 + t562 * xi;
  sfvals[29] = t543 + t560 * xi;
  sfvals[30] = t543 + t559 * xi;
  sfvals_tmp =
      (t25_tmp * -21.800647943630331 + t536_tmp * -105.1418142421649) + t543;
  sfvals[31] = (((sfvals_tmp + t8 * t125) + t565 * xi) -
                i_sfvals_tmp * 105.1418142421649) +
               t278 * zeta;
  sfvals[32] = ((((((t53 * 31.5 + t9 * t100) + t3 * t105) + t530) -
                  t354_tmp * 188.48298054069949) +
                 t8 * t290) +
                t552 * xi) -
               t355_tmp * 188.48298054069949;
  sfvals[33] =
      (((sfvals_tmp - t560_tmp * 105.1418142421649) + eta * t287) + t2 * t133) +
      t564 * xi;
  sfvals[34] =
      -xi * ((t8 * t12 + t2 * t13) - t25_tmp * 256.0) - t549_tmp * zeta * 256.0;
  sdvals[0] =
      ((t17 + t597) +
       xi * (((((t2 * 205.04051835490429 + t8 * 205.04051835490429) + t140) -
               t116) -
              t120) +
             60.0)) +
      t5 * ((eta * 195.78038876617819 + zeta * 195.78038876617819) - 105.0);
  sdvals[1] =
      (((((((((eta * 60.0 - t2 * 105.0) + t15) + t121) + t226) + t230) + t232) -
         t231) +
        t354_tmp * 205.04051835490429) +
       xi * (((((t2 * 195.78038876617819 + t8 * 220.33202097703341) + t140) -
               t116) -
              zeta * 263.65489663256568) +
             66.614378277661473)) +
      ((t355_tmp * 195.78038876617819 +
        t5 * ((eta * 205.04051835490429 + zeta * 220.33202097703341) -
              120.8745078663875)) -
       10.0);
  sdvals[2] =
      (((((((((t8 * -105.0 + t19) + t117) + t219) + t226) + t232) - t220) +
         zeta * 60.0) +
        xi * (((((eta * -263.65489663256568 + t2 * 220.33202097703341) +
                 t8 * 195.78038876617819) +
                t140) -
               t120) +
              66.614378277661473)) +
       t354_tmp * 195.78038876617819) +
      ((t355_tmp * 205.04051835490429 +
        t5 * ((eta * 220.33202097703341 + zeta * 205.04051835490429) -
              120.8745078663875)) -
       10.0);
  sdvals[3] =
      ((t17 + (((((((-t21 - t23) + t51) + t52) + t332) + t517) + t518) - 1.0)) +
       xi * (((((t38 + t47) - t51 * 7.0) - t52 * 7.0) - t364) + 18.0)) -
      t5 * ((t21 * 10.5 + t23 * 10.5) + 63.0);
  sdvals[4] =
      (t81 + xi * ((((t27 - 2.6457513110645907) - t197) + t353) + t439)) -
      t5 * ((t28 - 11.905880899790658) + zeta * 3.2287565553229531);
  sdvals[5] =
      (t81 + xi * ((((t30 - 2.6457513110645907) - t191) + t353) + t429)) -
      t5 * ((eta * 3.2287565553229531 + t31) - 11.905880899790658);
  sdvals[6] = (((((-t21 + t77) + t78) + t332) + t517) - t526) +
              xi * ((t27 - t51 * 7.0) + t353);
  j_sfvals_tmp = d_sfvals_tmp * 7.0;
  sdvals[7] =
      (((((((((eta * 18.0 - t2 * 63.0) + t15) - t23) + t52) + t68) -
          xi * (((((2.6457513110645907 - t38) + t51 * 10.5) + t197) + t364) -
                t439)) -
         c_sfvals_tmp * 10.5) -
        j_sfvals_tmp) +
       t5 * ((2.6457513110645907 - t28) + t216)) -
      1.0;
  t560_tmp = c_sfvals_tmp * 7.0;
  sdvals[8] = (((((-t21 + t54) + t77) + t78) - t560_tmp) + t5 * t201) -
              xi * ((t2 * 3.2287565553229531 + t191) - t353);
  sdvals[9] = (((((-t23 + t79) + t80) + t332) + t518) - t525) +
              xi * ((t30 - t52 * 7.0) + t353);
  sdvals[10] = (((((-t23 + t54) + t79) + t80) - j_sfvals_tmp) + t5 * t216) -
               xi * ((t8 * 3.2287565553229531 + t197) - t353);
  sdvals[11] =
      (((((((((t8 * -63.0 + t19) - t21) + t51) + t68) + zeta * 18.0) -
          xi * (((((2.6457513110645907 - t47) + t52 * 10.5) + t191) + t364) -
                t429)) -
         t560_tmp) -
        d_sfvals_tmp * 10.5) +
       t5 * ((2.6457513110645907 - t31) + t201)) -
      1.0;
  sdvals[12] =
      ((-t44 +
        (((((((((-t92 - t94) + t158) + t235) + t245) + t437) + t438) - t368) -
          t372) +
         13.51300497744848)) -
       xi * (((((-t87 - t90) + t136) + t200) + t215) + 113.7446965313575)) -
      t5 * ((zeta * 350.70834931185561 + -228.0780298646909) +
            eta * 350.70834931185561);
  sdvals[13] =
      (-t280 - t5 * ((t109 + zeta * 276.30856529306573) - 183.77325438263631)) -
      xi * (((((-t89 - t122) + t131) + t209) + t210) + 69.69079963456926);
  sdvals[14] =
      (-t280 - t5 * ((eta * 276.30856529306573 + t115) - 183.77325438263631)) -
      xi * (((((-t123 - t124) + t131) + t223) + t307) + 69.69079963456926);
  sdvals[15] =
      ((t6 * 149.33333333333334 + t598) +
       xi * (((((-t114 - t119) + t203) + t270) + t297) + 85.333333333333329)) +
      t5 * ((eta * 224.0 + zeta * 224.0) - 224.0);
  sdvals[16] = (t43 + xi * (((((t176 - t228) + t236) - t375) - t323) +
                            7.8326771551833918)) +
               t5 * ((t103 + zeta * 59.886701628389083) - 77.166010488516719);
  sdvals[17] =
      (t43 + t5 * ((eta * 59.886701628389083 + t110) - 77.166010488516719)) +
      xi * (((((t171 - t228) + t247) - t380) - t317) + 7.8326771551833918);
  sdvals[18] =
      ((-t44 +
        ((((((((b_sfvals_tmp + t382) + t461) + t467) - t468) - t472) + t541) +
          t542) +
         2.820328355884854)) -
       t5 * ((zeta * 41.291650688144429 + -163.9219701353091) +
             eta * 41.291650688144429)) +
      xi * (((((t267 - t202) + t385) + t393) - t296) - 49.588636801975788);
  sdvals[19] = (-t478 - xi * (((((t153 + t154) + t360) + t443) - t450) -
                              3.2640033791765219)) +
               t5 * ((t156 + zeta * 33.108133330645472) - 3.0131247939101931);
  sdvals[20] = (-t478 - xi * (((((t149 + t165) + t360) + t434) - t458) -
                              3.2640033791765219)) +
               t5 * ((eta * 33.108133330645472 + t166) - 3.0131247939101931);
  sdvals[21] =
      ((((t59 - t461) - t487) + t571) + t5 * t111) - xi * ((t98 + t256) - t345);
  j_sfvals_tmp = -t129 + t207;
  sdvals[22] =
      (t370 - t5 * (j_sfvals_tmp + 41.498624153858572)) -
      xi * (((((t256 + -6.1734197258173786) + t285) - t207) + t433) + t450);
  sdvals[23] = t576;
  sdvals[24] = ((((t169 + t456) - t455) + t570) -
                xi * ((t2 * -101.1172354405106 + t144) + t315)) +
               t5 * t151;
  sdvals[25] =
      (t462 - t5 * ((eta * -101.1172354405106 + t269) + 15.72462820877201)) +
      xi * (((-t144 + t375) + ((t269 - t315) - t407)) + 3.7786526819777);
  sdvals[26] = t549 + t568;
  sdvals[27] = ((h_sfvals_tmp + t571) - t549_tmp * 8.193721095386552) -
               xi * ((t256 + t285) - t345);
  sdvals[28] = (-t466 + xi * (((6.1734197258173786 - t98) + t209) +
                              ((t207 - t256) - t433))) -
               t5 * (j_sfvals_tmp + 0.621851004803674);
  sdvals[29] = t576;
  sdvals[30] = ((((((t108 + t382) + t476) - t422) - t471) + t541) + t5 * t224) -
               xi * ((t154 + t360) - t385);
  sdvals[31] =
      ((((((((((eta * -49.588636801975788 + t2 * 163.9219701353091) - t41) +
              t113) +
             t420) +
            t432) +
           t466) +
          t467) -
         t472) -
        t5 * ((-t156 + t221) + 8.8155721001902254)) -
       t355_tmp * 41.291650688144429) +
      (-xi * (((((t2 * 41.291650688144429 + t153) - t267) + t296) + t443) -
              3.2640033791765219) +
       2.820328355884854);
  sdvals[32] = ((((((t108 + t395) + t421) + t8 * t224) - t422) - t471) -
                t549_tmp * 1.966192512129403) -
               xi * ((t2 * -33.108133330645472 + t149) + t360);
  sdvals[33] =
      (t583 - t549_tmp * 19.837926580382931) + xi * ((t236 + t297) - t228);
  sdvals[34] =
      (((((((((((eta * 85.333333333333329 + t3 * 149.33333333333334) - t22) +
               t229) +
              t263) +
             t340) +
            t465) -
           t462) -
          t464) +
         xi * (((((t22 + t176) - t114) + t270) - t323) + 7.8326771551833918)) +
        t22 * zeta) +
       t5 * ((t103 - zeta * 21.392607231738559) + 4.1132983716109166)) -
      5.333333333333333;
  sdvals[35] = ((((((t40 + t253) - t213) + t341) + t376) -
                 t549_tmp * 21.392607231738559) -
                t354_tmp * 19.837926580382931) +
               xi * ((t2 * 59.886701628389083 + t171) - t228);
  sdvals[36] = ((((((-t92 + t158) + t250) - t276) + t437) - t355) -
                t549_tmp * 146.514628216469) -
               xi * ((-t122 + t131) + t200);
  sdvals[37] =
      ((((((((((eta * -113.7446965313575 + t2 * 228.0780298646909) - t41) -
              t94) +
             t161) +
            t245) +
           t441) -
          t370) -
         t372) -
        t5 * ((t109 + t112) - 105.01600406261041)) -
       t355_tmp * 350.70834931185561) +
      (-xi * (((((t2 * 350.70834931185561 - t87) - t89) + t136) + t210) +
              69.69079963456926) +
       13.51300497744848);
  sdvals[38] = ((((((-t92 + t150) + t250) - t276) + t442) -
                 xi * ((t2 * 276.30856529306573 - t124) + t131)) -
                t549_tmp * 156.674541823985) -
               t354_tmp * 146.514628216469;
  sdvals[39] = ((((((-t94 + t158) + t257) - t283) + t438) - t354) -
                t550_tmp * 146.514628216469) -
               xi * ((-t123 + t131) + t215);
  sdvals[40] = ((((((t150 - t94) + t257) - t283) + t441) -
                 xi * ((t8 * 276.30856529306573 - t89) + t131)) -
                t355_tmp * 146.514628216469) -
               t550_tmp * 156.674541823985;
  sdvals[41] =
      ((((((((((t8 * 228.0780298646909 - t50) - t92) + t161) + t235) + t442) -
           t368) -
          t370) -
         zeta * 113.7446965313575) -
        t5 * ((t107 + t115) - 105.01600406261041)) -
       t354_tmp * 350.70834931185561) +
      (-xi * (((((t8 * 350.70834931185561 - t90) - t124) + t136) + t307) +
              69.69079963456926) +
       13.51300497744848);
  sdvals[42] =
      (t584 - t550_tmp * 19.837926580382931) + xi * ((t203 + t247) - t228);
  sdvals[43] = ((((((t49 + t263) - t225) + t340) + t376) -
                 t355_tmp * 19.837926580382931) -
                t550_tmp * 21.392607231738559) +
               xi * ((t8 * 59.886701628389083 + t176) - t228);
  sdvals[44] =
      (((((((((((t9 * 149.33333333333334 - t24) + t229) + t253) + t341) +
             t457) -
            t456) -
           t462) +
          zeta * 85.333333333333329) +
         xi * (((((t24 + t171) - t119) + t270) - t317) + 7.8326771551833918)) +
        eta * t24) +
       t5 * ((t110 - eta * 21.392607231738559) + 4.1132983716109166)) -
      5.333333333333333;
  sdvals[45] = ((((((t113 + t382) + t475) - t430) - t479) + t542) + t5 * t237) -
               xi * ((t165 + t360) - t393);
  sdvals[46] = ((((((t113 + t395) + t420) + t2 * t237) - t430) - t479) -
                xi * ((t8 * -33.108133330645472 + t153) + t360)) -
               t550_tmp * 1.966192512129403;
  sdvals[47] =
      ((((((((((t8 * 163.9219701353091 - t50) + t108) + t421) + t432) + t461) +
           t466) -
          t468) -
         zeta * 49.588636801975788) -
        t5 * ((-t166 + t208) + 8.8155721001902254)) -
       t354_tmp * 41.291650688144429) +
      (-xi * (((((t8 * 41.291650688144429 + t149) + t202) - t267) + t434) -
              3.2640033791765219) +
       2.820328355884854);
  sdvals[48] = ((((t64 - t467) - t489) + t571) + t5 * t118) -
               xi * ((t104 + t256) - t361);
  sdvals[49] = t577;
  j_sfvals_tmp = -t138 + t302;
  sdvals[50] =
      (t370 - t5 * (j_sfvals_tmp + 41.498624153858572)) -
      xi * (((((t256 + -6.1734197258173786) + t294) - t302) + t426) + t458);
  sdvals[51] = ((((t175 + t464) - t463) + t570) -
                xi * ((t8 * -101.1172354405106 + t148) + t315)) +
               t5 * t155;
  sdvals[52] = t550 + t569;
  sdvals[53] =
      (t462 - t5 * ((t268 - zeta * 101.1172354405106) + 15.72462820877201)) +
      xi * (((-t148 + t380) + ((t268 - t315) - t477)) + 3.7786526819777);
  sdvals[54] = ((k_sfvals_tmp + t571) - t550_tmp * 8.193721095386552) -
               xi * ((t256 + t294) - t361);
  sdvals[55] = t577;
  sdvals[56] = (-t466 + xi * (((6.1734197258173786 - t104) + t223) +
                              ((t302 - t256) - t426))) -
               t5 * (j_sfvals_tmp + 0.621851004803674);
  sdvals[57] = t578;
  sdvals[58] = (((((t64 + t306) + t2 * t118) + t473) - t467) - t489) + t577;
  sdvals[59] =
      (((h_sfvals_tmp + t425) + t474) + t576) - t354_tmp * 8.193721095386552;
  sdvals[60] = t570 - t315 * xi;
  sdvals[61] = ((((((t175 + t374) + t2 * t155) + t464) - t463) + t550) + t569) +
               t354_tmp * 101.1172354405106;
  sdvals[62] = ((((((t169 + t374) + t8 * t151) + t456) - t455) + t549) + t568) +
               t355_tmp * 101.1172354405106;
  sdvals[63] = t578;
  sdvals[64] =
      (((k_sfvals_tmp + t425) + t473) + t577) - t355_tmp * 8.193721095386552;
  sdvals[65] = (((((t59 + t306) + t8 * t111) + t474) - t461) - t487) + t576;
  sdvals[66] =
      (t581 + t5 * t85) + xi * ((t2 * 420.56725696865982 - t88) + t189);
  sdvals[67] =
      (t301 + t5 * ((eta * 420.56725696865982 + t96) - 188.48298054069949)) +
      xi * (((((83.3411662985346 - t88) - t102) + t184) + t189) + t396);
  sdvals[68] = t5 * t93 + xi * ((-t97 + t196) + t275);
  sdvals[69] =
      (t579 - t549_tmp * 315.42544272649479) - xi * ((-t95 + t163) + t290);
  sdvals[70] =
      (-t301 + xi * ((((t126 + t249) + t272) + t371) - 21.800647943630331)) -
      t5 * ((t101 + zeta * 87.202591774521338) - 126.94246218579531);
  sdvals[71] = t549_tmp * -87.202591774521338 + xi * (t557_tmp + t367);
  sdvals[72] = t592 + xi * ((t126 + t272) - t290);
  sdvals[73] =
      xi * (((((t95 - t184) + t249) - t163) + t371) - 21.800647943630331) +
      t5 * ((t146 - t101) + 21.800647943630331);
  sdvals[74] = t495 + t557;
  sdvals[75] =
      (t582 + t5 * t86) + xi * ((t8 * 420.56725696865982 - t91) + t189);
  sdvals[76] = t5 * t96 + xi * ((-t102 + t196) + t282);
  sdvals[77] =
      (t301 + t5 * ((t93 + zeta * 420.56725696865982) - 188.48298054069949)) +
      xi * (((((83.3411662985346 - t91) - t97) + t189) + t192) + t386);
  sdvals[78] =
      (t580 - t550_tmp * 315.42544272649479) - xi * ((-t99 + t163) + t304);
  sdvals[79] = t550_tmp * -87.202591774521338 + xi * (t558_tmp + t371);
  sdvals[80] =
      (-t301 + xi * ((((t134 + t240) + t272) + t367) - 21.800647943630331)) -
      t5 * ((t106 + t127) - 126.94246218579531);
  sdvals[81] = t591 + xi * ((t134 + t272) - t304);
  sdvals[82] = t499 + t558;
  sdvals[83] =
      xi * (((((t99 - t192) + t240) - t163) + t367) - 21.800647943630331) +
      t5 * ((t141 - t106) + 21.800647943630331);
  sdvals[84] = t379 + t562;
  j_sfvals_tmp = t272 - t194;
  sdvals[85] = t512 + xi * (j_sfvals_tmp + t371);
  t560_tmp = t272 - t190;
  sdvals[86] = t505 + xi * (t560_tmp + t367);
  sdvals[87] = t448 + t560;
  sdvals[88] = t499 + xi * ((t196 - t194) + t371);
  sdvals[89] = t495 + xi * (t560_tmp + t386);
  sdvals[90] = t448 + t559;
  sdvals[91] = t499 + xi * (j_sfvals_tmp + t396);
  sdvals[92] = t495 + xi * ((t196 - t190) + t367);
  sdvals[93] = t448 + t565;
  sdvals[94] = (((((t193 - t133) + t348) + t427) + t499) -
                t355_tmp * 315.42544272649479) +
               xi * ((t249 - t163) + t371);
  sdvals[95] = (((((-t125 + t261) + t278) - t291) + t428) + t495) + t557;
  sdvals[96] = t379 + t552;
  sdvals[97] = ((((((t73 + t2 * t86) + t266) + t305) - t264) + t512) +
                t354_tmp * 420.56725696865982) +
               xi * ((-t102 + t189) + t282);
  sdvals[98] = ((((((t72 + t8 * t85) + t266) + t291) - t254) + t505) +
                t355_tmp * 420.56725696865982) +
               xi * ((-t97 + t189) + t275);
  sdvals[99] = t448 + t564;
  sdvals[100] = (((((-t133 + t261) + t287) - t305) + t427) + t499) + t558;
  sdvals[101] = (((((t193 - t125) + t337) + t428) + t495) -
                 t354_tmp * 315.42544272649479) +
                xi * ((t240 - t163) + t367);
  sdvals[102] =
      ((t12 * zeta + t354_tmp * -256.0) + t355_tmp * -256.0) - t25 * xi;
  sdvals[103] = t550_tmp * -256.0 - xi * ((t8 * 256.0 - t13) + t25);
  sdvals[104] = t549_tmp * -256.0 - xi * ((t2 * 256.0 - t12) + t25);
}

// tri_10_ncoords - Obtain nodal coordinates in master element for tri_10
void tri_10_ncoords(double natcoords[20])
{
  static const double dv[20]{0.0,
                             0.0,
                             1.0,
                             0.0,
                             0.0,
                             1.0,
                             0.33333333333333331,
                             0.0,
                             0.66666666666666663,
                             0.0,
                             0.66666666666666663,
                             0.33333333333333331,
                             0.33333333333333331,
                             0.66666666666666663,
                             0.0,
                             0.66666666666666663,
                             0.0,
                             0.33333333333333331,
                             0.33333333333333331,
                             0.33333333333333331};
  std::copy(&dv[0], &dv[20], &natcoords[0]);
}

// tri_10_sfunc - Compute shape functions and their derivatives of tri_10
void tri_10_sfunc(double xi, double eta, double sfvals[10])
{
  double sfvals_tmp;
  double t12;
  double t15;
  double t16;
  double t17;
  double t2;
  double t24;
  double t25;
  double t26;
  double t27;
  double t29;
  double t3;
  double t36;
  double t4;
  double t5;
  double t8;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t4 = xi * xi;
  t5 = std::pow(xi, 3.0);
  t8 = eta * 27.0;
  t15 = eta * 4.5;
  t16 = eta * 13.5;
  t17 = eta * 22.5;
  t12 = t2 * 27.0;
  t24 = t3 * 4.5;
  t25 = t2 * 13.5;
  t26 = t3 * 13.5;
  t27 = t5 * 4.5;
  t29 = t5 * 13.5;
  t36 = t4 * t16;
  sfvals[0] = (((((eta * -5.5 + t2 * 9.0) - t24) - t27) -
                xi * ((-(eta * 18.0) + t25) + 5.5)) -
               t4 * (t16 - 9.0)) +
              1.0;
  sfvals[1] = (t4 * -4.5 + t27) + xi;
  sfvals[2] = (eta - t2 * 4.5) + t24;
  sfvals[3] = (t29 + t4 * (t8 - 22.5)) + ((-t17 + t25) + 9.0) * xi;
  sfvals[4] = (-t29 + (t15 - 4.5) * xi) - t4 * (t16 - 18.0);
  sfvals[5] = t36 - t15 * xi;
  sfvals_tmp = (-t15 + t25) * xi;
  sfvals[6] = sfvals_tmp;
  sfvals[7] = ((t2 * 18.0 - t15) - t26) - sfvals_tmp;
  sfvals[8] = (((t2 * -22.5 + eta * 9.0) + t26) + t36) + (t12 - t17) * xi;
  sfvals[9] = -xi * (-t8 + t12) - eta * t4 * 27.0;
}

// tri_10_sfunc - Compute shape functions and their derivatives of tri_10
void tri_10_sfunc(double xi, double eta, double sfvals[10], double sdvals[20])
{
  double sfvals_tmp;
  double t12;
  double t13;
  double t14;
  double t15;
  double t16;
  double t17;
  double t18;
  double t2;
  double t24;
  double t25;
  double t26;
  double t27;
  double t28;
  double t29;
  double t3;
  double t31;
  double t33;
  double t36;
  double t39;
  double t4;
  double t40_tmp;
  double t42;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t4 = xi * xi;
  t5 = std::pow(xi, 3.0);
  t6 = eta * 9.0;
  t7 = eta * 18.0;
  t8 = eta * 27.0;
  t9 = eta * 54.0;
  t15 = eta * 4.5;
  t16 = eta * 13.5;
  t17 = eta * 22.5;
  t18 = xi * 4.5;
  t12 = t2 * 27.0;
  t13 = t4 * 27.0;
  t14 = t8 * xi;
  t24 = t3 * 4.5;
  t25 = t2 * 13.5;
  t26 = t3 * 13.5;
  t27 = t5 * 4.5;
  t28 = t4 * 13.5;
  t29 = t5 * 13.5;
  t31 = t2 * 40.5;
  t33 = t4 * 40.5;
  t36 = t4 * t16;
  t39 = t12 - t17;
  t40_tmp = -t15 + t25;
  t42 = (-t17 + t25) + 9.0;
  sfvals[0] =
      (((((eta * -5.5 + t2 * 9.0) - t24) - t27) - xi * ((-t7 + t25) + 5.5)) -
       t4 * (t16 - 9.0)) +
      1.0;
  sfvals[1] = (t4 * -4.5 + t27) + xi;
  sfvals[2] = (eta - t2 * 4.5) + t24;
  sfvals[3] = (t29 + t4 * (t8 - 22.5)) + t42 * xi;
  sfvals[4] = (-t29 + (t15 - 4.5) * xi) - t4 * (t16 - 18.0);
  sfvals[5] = t36 - t15 * xi;
  sfvals_tmp = t40_tmp * xi;
  sfvals[6] = sfvals_tmp;
  sfvals[7] = ((t2 * 18.0 - t15) - t26) - sfvals_tmp;
  sfvals[8] = (((t2 * -22.5 + t6) + t26) + t36) + t39 * xi;
  sfvals[9] = -xi * (-t8 + t12) - eta * t4 * 27.0;
  sfvals_tmp = (-t28 + -xi * (t8 - 18.0)) + ((t7 - t25) - 5.5);
  sdvals[0] = sfvals_tmp;
  sdvals[1] = sfvals_tmp;
  sdvals[2] = (t28 - 9.0 * xi) + 1.0;
  sdvals[3] = 0.0;
  sdvals[4] = 0.0;
  sdvals[5] = (-t6 + t25) + 1.0;
  sdvals[6] = (t33 + t42) + xi * (t9 - 45.0);
  sdvals[7] = t13 + (t8 - 22.5) * xi;
  sdvals[8] = (-t33 + (t15 - 4.5)) - xi * (t8 - 36.0);
  sdvals[9] = t18 - t28;
  sdvals[10] = t14 - t15;
  sdvals[11] = -t18 + t28;
  sdvals[12] = t40_tmp;
  sfvals_tmp = xi * (t8 - 4.5);
  sdvals[13] = sfvals_tmp;
  sdvals[14] = t15 - t25;
  sdvals[15] = ((eta * 36.0 - t31) - sfvals_tmp) - 4.5;
  sdvals[16] = t14 + t39;
  sdvals[17] = (((eta * -45.0 + t28) + t31) + xi * (t9 - 22.5)) + 9.0;
  sdvals[18] = (t8 - t12) - t9 * xi;
  sdvals[19] = -t13 - xi * (t9 - 27.0);
}

// tri_15_ncoords - Obtain nodal coordinates in master element for tri_15
void tri_15_ncoords(double natcoords[30])
{
  static const double dv[30]{0.0,  0.0,  1.0,  0.0,  0.0,  1.0,  0.25, 0.0,
                             0.5,  0.0,  0.75, 0.0,  0.75, 0.25, 0.5,  0.5,
                             0.25, 0.75, 0.0,  0.75, 0.0,  0.5,  0.0,  0.25,
                             0.25, 0.25, 0.5,  0.25, 0.25, 0.5};
  std::copy(&dv[0], &dv[30], &natcoords[0]);
}

// tri_15_sfunc - Compute shape functions and their derivatives of tri_15
void tri_15_sfunc(double xi, double eta, double sfvals[15])
{
  double sfvals_tmp;
  double t10;
  double t11;
  double t15;
  double t16;
  double t24;
  double t25;
  double t27;
  double t3;
  double t38;
  double t4;
  double t41;
  double t42;
  double t5;
  double t51;
  double t53;
  double t54;
  double t6;
  double t62;
  double t67;
  double t68;
  double t7;
  double t70;
  double t8;
  double t89;
  double t9;
  t3 = eta * eta;
  t4 = std::pow(eta, 3.0);
  t6 = xi * xi;
  t7 = std::pow(xi, 3.0);
  t9 = eta * 16.0;
  t10 = eta * 28.0;
  t11 = eta * 32.0;
  t15 = eta * 96.0;
  t16 = eta * 128.0;
  t27 = eta * 5.333333333333333;
  t51 = eta * 42.666666666666664;
  t53 = eta * 69.333333333333329;
  t5 = t3 * t3;
  t8 = t6 * t6;
  t24 = t3 * 16.0;
  t25 = t3 * 32.0;
  t38 = t3 * 64.0;
  t41 = t3 * 128.0;
  t42 = t4 * 128.0;
  t67 = t4 * 42.666666666666664;
  t54 = t5 * 10.666666666666666;
  t62 = t8 * 10.666666666666666;
  t68 = t5 * 42.666666666666664;
  t70 = t8 * 42.666666666666664;
  t89 = t6 * (-t9 + t38);
  sfvals[0] =
      (((((((eta * -8.3333333333333339 + t3 * 23.333333333333332) -
            t4 * 26.666666666666668) +
           t54) +
          t62) +
         (((eta * 46.666666666666664 - t3 * 80.0) + t67) - 8.3333333333333339) *
             xi) +
        t6 * ((eta * -80.0 + t38) + 23.333333333333332)) +
       t7 * (t51 - 26.666666666666668)) +
      1.0;
  sfvals[1] = ((t6 * 7.333333333333333 - t7 * 16.0) + t62) - xi;
  sfvals[2] = ((-eta + t3 * 7.333333333333333) - t4 * 16.0) + t54;
  sfvals[3] = ((-t70 - t6 * ((-(eta * 192.0) + t41) + 69.333333333333329)) -
               t7 * (((t16 - 16.0) - 64.0) - 16.0)) +
              xi * (((t3 * 96.0 - t53) - t67) + 16.0);
  sfvals[4] = ((t8 * 64.0 + t6 * ((eta * -144.0 + t38) + 76.0)) -
               xi * ((-t10 + t24) + 12.0)) +
              t7 * (((t16 - 16.0) - 64.0) - 48.0);
  sfvals[5] = ((-t70 + t6 * (t11 - 37.333333333333336)) -
               t7 * (t51 - 74.666666666666671)) -
              xi * (t27 - 5.333333333333333);
  sfvals[6] = (eta * t6 * -32.0 + t7 * t51) + t27 * xi;
  sfvals[7] = t89 + (eta * 4.0 - t24) * xi;
  sfvals_tmp = ((t27 - t25) + t67) * xi;
  sfvals[8] = sfvals_tmp;
  sfvals[9] =
      (((t3 * -37.333333333333336 + t4 * 74.666666666666671) + t27) - t68) -
      sfvals_tmp;
  sfvals[10] = ((((eta * -12.0 + t3 * 76.0) + t5 * 64.0) - t42) + t89) +
               ((t10 + t42) - t3 * 144.0) * xi;
  sfvals_tmp = eta * t7;
  sfvals[11] = (((((t3 * -69.333333333333329 + t4 * 96.0) + t9) - t68) +
                 t6 * (t15 - t41)) -
                sfvals_tmp * 42.666666666666664) -
               xi * ((t42 - t3 * 192.0) + t53);
  sfvals[12] = (t7 * t16 + ((t15 + t42) - t3 * 224.0) * xi) -
               t6 * (eta * 224.0 - t3 * 256.0);
  sfvals[13] =
      (-t6 * (-(eta * 160.0) + t41) - sfvals_tmp * 128.0) + (-t11 + t25) * xi;
  sfvals[14] = -t6 * (-t11 + t41) - xi * ((t11 + t42) - t3 * 160.0);
}

// tri_15_sfunc - Compute shape functions and their derivatives of tri_15
void tri_15_sfunc(double xi, double eta, double sfvals[15], double sdvals[30])
{
  double b_sfvals_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double sfvals_tmp;
  double t10;
  double t100;
  double t101;
  double t11;
  double t14;
  double t15;
  double t16;
  double t18;
  double t19;
  double t20;
  double t21;
  double t22;
  double t23;
  double t24;
  double t25;
  double t26;
  double t27;
  double t3;
  double t35;
  double t38;
  double t4;
  double t41;
  double t42;
  double t44;
  double t45;
  double t46;
  double t47;
  double t48;
  double t49;
  double t5;
  double t51;
  double t53;
  double t54;
  double t6;
  double t62;
  double t67;
  double t68;
  double t69;
  double t7;
  double t70;
  double t74;
  double t77;
  double t8;
  double t80;
  double t82;
  double t84;
  double t85;
  double t87;
  double t89;
  double t9;
  double t92;
  double t95;
  double t96;
  t3 = eta * eta;
  t4 = std::pow(eta, 3.0);
  t6 = xi * xi;
  t7 = std::pow(xi, 3.0);
  t9 = eta * 16.0;
  t10 = eta * 28.0;
  t11 = eta * 32.0;
  t14 = eta * 64.0;
  t15 = eta * 96.0;
  t16 = eta * 128.0;
  t18 = eta * 192.0;
  t19 = eta * 256.0;
  t20 = eta * 288.0;
  t21 = eta * 320.0;
  t22 = eta * 384.0;
  t23 = eta * 448.0;
  t27 = eta * 5.333333333333333;
  t35 = xi * 5.333333333333333;
  t51 = eta * 42.666666666666664;
  t53 = eta * 69.333333333333329;
  t5 = t3 * t3;
  t8 = t6 * t6;
  t24 = t3 * 16.0;
  t25 = t3 * 32.0;
  t26 = t6 * 32.0;
  t38 = t3 * 64.0;
  t41 = t3 * 128.0;
  t42 = t4 * 128.0;
  t44 = t3 * 160.0;
  t45 = t3 * 192.0;
  t46 = t3 * 224.0;
  t47 = t3 * 256.0;
  t48 = t3 * 384.0;
  t49 = t7 * 128.0;
  t67 = t4 * 42.666666666666664;
  t69 = t7 * 42.666666666666664;
  t74 = t4 * 170.66666666666666;
  t77 = t7 * 170.66666666666666;
  t54 = t5 * 10.666666666666666;
  t62 = t8 * 10.666666666666666;
  t68 = t5 * 42.666666666666664;
  t70 = t8 * 42.666666666666664;
  t82 = -t11 + t25;
  t84 = -t11 + t41;
  t85 = t6 * (t16 - 16.0);
  t80 = eta * 4.0 - t24;
  t87 = t84 * xi;
  t89 = t6 * (-t9 + t38);
  t92 = (t10 + t42) - t3 * 144.0;
  t95 = (t15 + t42) - t46;
  t96 = (t27 - t25) + t67;
  t100 = ((eta * 46.666666666666664 - t3 * 80.0) + t67) - 8.3333333333333339;
  sfvals[0] = (((((((eta * -8.3333333333333339 + t3 * 23.333333333333332) -
                    t4 * 26.666666666666668) +
                   t54) +
                  t62) +
                 t100 * xi) +
                t6 * ((eta * -80.0 + t38) + 23.333333333333332)) +
               t7 * (t51 - 26.666666666666668)) +
              1.0;
  sfvals[1] = ((t6 * 7.333333333333333 - t7 * 16.0) + t62) - xi;
  sfvals[2] = ((-eta + t3 * 7.333333333333333) - t4 * 16.0) + t54;
  sfvals_tmp = ((t3 * 96.0 - t53) - t67) + 16.0;
  b_sfvals_tmp = (-t18 + t41) + 69.333333333333329;
  sfvals[3] =
      ((-t70 - t6 * b_sfvals_tmp) - t7 * (((t16 - 16.0) - 64.0) - 16.0)) +
      xi * sfvals_tmp;
  sfvals[4] = ((t8 * 64.0 + t6 * ((eta * -144.0 + t38) + 76.0)) -
               xi * ((-t10 + t24) + 12.0)) +
              t7 * (((t16 - 16.0) - 64.0) - 48.0);
  sfvals[5] = ((-t70 + t6 * (t11 - 37.333333333333336)) -
               t7 * (t51 - 74.666666666666671)) -
              xi * (t27 - 5.333333333333333);
  c_sfvals_tmp = eta * t6;
  sfvals[6] = (c_sfvals_tmp * -32.0 + t7 * t51) + t27 * xi;
  sfvals[7] = t89 + t80 * xi;
  d_sfvals_tmp = t96 * xi;
  sfvals[8] = d_sfvals_tmp;
  sfvals[9] =
      (((t3 * -37.333333333333336 + t4 * 74.666666666666671) + t27) - t68) -
      d_sfvals_tmp;
  sfvals[10] =
      ((((eta * -12.0 + t3 * 76.0) + t5 * 64.0) - t42) + t89) + t92 * xi;
  d_sfvals_tmp = eta * t7;
  sfvals[11] = (((((t3 * -69.333333333333329 + t4 * 96.0) + t9) - t68) +
                 t6 * (t15 - t41)) -
                d_sfvals_tmp * 42.666666666666664) -
               xi * ((t42 - t45) + t53);
  sfvals[12] = (t7 * t16 + t95 * xi) - t6 * (eta * 224.0 - t47);
  e_sfvals_tmp = -(eta * 160.0) + t41;
  sfvals[13] = (-t6 * e_sfvals_tmp - d_sfvals_tmp * 128.0) + t82 * xi;
  sfvals[14] = -t6 * t84 - xi * ((t11 + t42) - t44);
  t101 = ((t69 + t6 * ((t16 - 16.0) - 64.0)) +
          (e_sfvals_tmp + 46.666666666666664) * xi) +
         t100;
  sdvals[0] = t101;
  sdvals[1] = t101;
  sdvals[2] = ((t6 * -48.0 + t69) + 14.666666666666666 * xi) - 1.0;
  sdvals[3] = 0.0;
  sdvals[4] = 0.0;
  sdvals[5] = ((eta * 14.666666666666666 - t3 * 48.0) + t67) - 1.0;
  sdvals[6] = ((-t77 + sfvals_tmp) - xi * ((-t22 + t47) + 138.66666666666666)) -
              t6 * (t22 - 288.0);
  sdvals[7] = (-t49 - xi * b_sfvals_tmp) - t6 * (t19 - 192.0);
  sdvals[8] =
      ((t7 * 256.0 + ((t10 - t24) - 12.0)) + xi * ((-t20 + t41) + 152.0)) +
      t6 * (t22 - 384.0);
  sdvals[9] = (t49 + t6 * (((t16 - 16.0) - 64.0) - 64.0)) - xi * (t11 - 28.0);
  sdvals[10] = ((-t77 + (-t27 + 5.333333333333333)) -
                t6 * (((t16 - 16.0) - 64.0) - 144.0)) +
               xi * (t14 - 74.666666666666671);
  sdvals[11] = (t26 - t35) - t69;
  sdvals[12] = (t27 + t6 * t16) - t14 * xi;
  sdvals[13] = (-t26 + t35) + t69;
  sdvals[14] = t80 + t87;
  sdvals[15] = t85 - xi * (t11 - 4.0);
  sdvals[16] = t96;
  e_sfvals_tmp = xi * ((-t14 + t41) + 5.333333333333333);
  sdvals[17] = e_sfvals_tmp;
  sdvals[18] = (t25 - t27) - t67;
  sdvals[19] = (((eta * -74.666666666666671 + t46) - t74) - e_sfvals_tmp) +
               5.333333333333333;
  sdvals[20] = t87 + t92;
  sdvals[21] = ((((eta * 152.0 + t4 * 256.0) - t48) + t85) +
                xi * ((-t20 + t48) + 28.0)) -
               12.0;
  sdvals[22] = (((t45 - t42) - t53) + xi * (t18 - t47)) - c_sfvals_tmp * 128.0;
  sdvals[23] = (((((eta * -138.66666666666666 + t3 * 288.0) - t69) - t74) -
                 xi * ((-t22 + t48) + 69.333333333333329)) -
                t6 * (t19 - 96.0)) +
               16.0;
  sdvals[24] = (t95 + t6 * t22) + xi * (t3 * 512.0 - t23);
  sdvals[25] = (t49 + xi * ((-t23 + t48) + 96.0)) + t6 * (eta * 512.0 - 224.0);
  sdvals[26] = (t82 + xi * (t21 - t47)) - c_sfvals_tmp * 384.0;
  sdvals[27] = (-t49 - t6 * (t19 - 160.0)) + xi * (t14 - 32.0);
  sdvals[28] = ((-t11 + t44) - t42) - xi * (-t14 + t47);
  sdvals[29] = -xi * ((-t21 + t48) + 32.0) - t6 * (t19 - 32.0);
}

// tri_21_ncoords - Obtain nodal coordinates in master element for tri_21
void tri_21_ncoords(double natcoords[42])
{
  static const double dv[42]{
      0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.2, 0.0, 0.4, 0.0, 0.6, 0.0, 0.8, 0.0,
      0.8, 0.2, 0.6, 0.4, 0.4, 0.6, 0.2, 0.8, 0.0, 0.8, 0.0, 0.6, 0.0, 0.4,
      0.0, 0.2, 0.2, 0.2, 0.4, 0.2, 0.6, 0.2, 0.4, 0.4, 0.2, 0.6, 0.2, 0.4};
  std::copy(&dv[0], &dv[42], &natcoords[0]);
}

// tri_21_sfunc - Compute shape functions and their derivatives of tri_21
void tri_21_sfunc(double xi, double eta, double sfvals[21])
{
  double b_sfvals_tmp;
  double sfvals_tmp;
  double t10;
  double t100;
  double t101;
  double t102;
  double t105;
  double t11;
  double t111;
  double t119;
  double t123;
  double t124;
  double t136;
  double t137;
  double t138;
  double t139;
  double t14;
  double t140;
  double t15;
  double t152;
  double t155;
  double t157;
  double t166;
  double t177;
  double t178;
  double t183;
  double t198;
  double t2;
  double t25;
  double t27;
  double t28;
  double t3;
  double t4;
  double t41;
  double t49;
  double t5;
  double t50;
  double t6;
  double t60;
  double t66;
  double t68;
  double t7;
  double t70;
  double t76;
  double t8;
  double t85;
  double t87;
  double t88;
  double t9;
  double t94;
  double t95;
  double t96;
  double t98;
  double t99;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = std::pow(eta, 5.0);
  t6 = xi * xi;
  t7 = std::pow(xi, 3.0);
  t9 = std::pow(xi, 5.0);
  t10 = eta * 25.0;
  t11 = eta * 125.0;
  t14 = eta * 6.25;
  t15 = eta * 4.166666666666667;
  t25 = eta * 37.5;
  t27 = eta * 41.666666666666664;
  t28 = eta * 31.25;
  t41 = eta * 156.25;
  t49 = eta * 781.25;
  t50 = eta * 520.83333333333326;
  t66 = eta * 97.916666666666671;
  t68 = eta * 57.291666666666671;
  t70 = eta * 160.41666666666671;
  t76 = eta * 130.20833333333329;
  t119 = eta * 739.58333333333326;
  t4 = t2 * t2;
  t8 = t6 * t6;
  t60 = t2 * 20.833333333333332;
  t85 = t2 * 312.5;
  t87 = t2 * 156.25;
  t88 = t3 * 156.25;
  t94 = t2 * 1562.5;
  t95 = t3 * 1562.5;
  t96 = t2 * 781.25;
  t98 = t3 * 781.25;
  t99 = t2 * 520.83333333333326;
  t101 = t3 * 520.83333333333326;
  t105 = t2 * 1093.75;
  t111 = t2 * 1718.75;
  t123 = t3 * 52.083333333333336;
  t124 = t5 * 26.041666666666668;
  t136 = t2 * 260.41666666666669;
  t137 = t3 * 260.41666666666669;
  t138 = t5 * 260.41666666666669;
  t140 = t5 * 130.20833333333329;
  t152 = t9 * 26.041666666666668;
  t155 = t9 * 260.41666666666669;
  t157 = t9 * 130.20833333333329;
  t166 = t2 * 739.58333333333326;
  t100 = t4 * 781.25;
  t102 = t4 * 520.83333333333326;
  t139 = t4 * 130.20833333333329;
  t177 = eta * t8 * -520.83333333333326;
  t178 = t8 * t76;
  t183 = -t41 + t96;
  t198 = t6 * ((eta * 20.833333333333332 - t87) + t137);
  sfvals[0] = (((((((((eta * -11.416666666666666 + t2 * 46.875) -
                      t3 * 88.541666666666671) +
                     t4 * 78.125) -
                    t124) -
                   t152) -
                  t7 * ((-(eta * 312.5) + t136) + 88.541666666666671)) -
                 t8 * (t76 - 78.125)) -
                xi * ((((-(eta * 93.75) - t3 * 312.5) + t2 * 265.625) + t139) +
                      11.416666666666666)) -
               t6 * (((eta * 265.625 - t2 * 468.75) + t137) - 46.875)) +
              1.0;
  sfvals[1] = (((t6 * -10.416666666666666 + t7 * 36.458333333333336) -
                t8 * 52.083333333333336) +
               t152) +
              xi;
  sfvals[2] = (((eta - t2 * 10.416666666666666) + t3 * 36.458333333333336) -
               t4 * 52.083333333333336) +
              t124;
  sfvals[3] =
      (((t157 + t7 * ((-(eta * 1093.75) + t96) + 369.79166666666669)) +
        t6 * (((t101 + t119) - t105) - 160.41666666666671)) +
       ((((-t70 + t139) - t3 * 364.58333333333331) + t2 * 369.79166666666669) +
        25.0) *
           xi) +
      t8 * (t50 - 364.58333333333331);
  sfvals[4] = (((-t155 + (((-(t2 * 125.0) + t66) + t123) - 25.0) * xi) -
                t7 * ((eta * -1406.25 + t96) + 614.58333333333326)) -
               t6 * (((t119 - t96) + t137) - 222.91666666666671)) -
              t8 * (t49 - 677.08333333333326);
  sfvals[5] = (((t155 + t7 * ((-t49 + t136) + 510.41666666666669)) +
                ((-t25 + t60) + 16.666666666666668) * xi) -
               t6 * ((eta * -322.91666666666669 + t87) + 162.5)) +
              t8 * (t50 - 625.0);
  sfvals[6] = (((-t157 + (t14 - 6.25) * xi) - t6 * (t68 - 63.541666666666671)) +
               t7 * (t41 - 213.54166666666671)) -
              t8 * (t76 - 286.45833333333331);
  sfvals[7] = ((t178 - eta * t7 * 156.25) + t6 * t68) - t14 * xi;
  sfvals_tmp = t7 * (eta * 52.083333333333336 - t136);
  sfvals[8] = (t6 * (t28 - t87) - sfvals_tmp) + (-t15 + t60) * xi;
  sfvals[9] = t198 - xi * ((t15 - t2 * 31.25) + t123);
  b_sfvals_tmp = (((-t14 - t88) + t2 * 57.291666666666671) + t139) * xi;
  sfvals[10] = b_sfvals_tmp;
  sfvals[11] = ((((t2 * 63.541666666666671 - t3 * 213.54166666666671) +
                  t4 * 286.45833333333331) -
                 t14) -
                t140) -
               b_sfvals_tmp;
  sfvals[12] =
      (((((eta * 16.666666666666668 - t2 * 162.5) + t3 * 510.41666666666669) -
         t4 * 625.0) +
        t138) +
       t198) +
      (((-t25 + t102) - t98) + t2 * 322.91666666666669) * xi;
  sfvals[13] = ((((((t2 * 222.91666666666671 - t3 * 614.58333333333326) +
                    t4 * 677.08333333333326) -
                   t10) -
                  t138) +
                 sfvals_tmp) +
                xi * (((t66 - t100) + t3 * 1406.25) - t166)) -
               t6 * ((t11 + t98) - t96);
  sfvals[14] = (((((((t2 * -160.41666666666671 + t3 * 369.79166666666669) -
                     t4 * 364.58333333333331) +
                    t10) +
                   t140) +
                  t178) +
                 (((t102 - t70) - t3 * 1093.75) + t166) * xi) -
                t7 * (eta * 364.58333333333331 - t99)) +
               t6 * ((eta * 369.79166666666669 + t98) - t105);
  sfvals[15] = ((t177 - t6 * ((eta * 979.16666666666674 - t2 * 2500.0) + t95)) -
                xi * (((-(eta * 250.0) - t3 * 1250.0) + t102) +
                      t2 * 979.16666666666674)) +
               t7 * (eta * 1250.0 - t94);
  sfvals[16] = ((t7 * (-(eta * 1562.5) + t94) + t8 * t49) +
                t6 * ((eta * 906.25 + t98) - t111)) -
               xi * ((t11 + t88) - t2 * 281.25);
  sfvals[17] = ((t177 + (t27 - t2 * 41.666666666666664) * xi) -
                t6 * (eta * 354.16666666666669 - t85)) +
               t7 * (eta * 833.33333333333326 - t99);
  sfvals[18] = (-t7 * t183 + ((t28 - t2 * 187.5) + t88) * xi) -
               t6 * ((eta * 187.5 + t98) - t105);
  sfvals[19] =
      -t6 * ((t27 + t101) - t85) +
      (((t27 + t3 * 833.33333333333326) - t2 * 354.16666666666669) - t102) * xi;
  sfvals[20] = (t7 * t183 + (((-t11 + t100) + t2 * 906.25) - t95) * xi) +
               t6 * ((eta * 281.25 + t95) - t111);
}

// tri_21_sfunc - Compute shape functions and their derivatives of tri_21
void tri_21_sfunc(double xi, double eta, double sfvals[21], double sdvals[42])
{
  double b_sfvals_tmp;
  double sfvals_tmp;
  double t10;
  double t100;
  double t101;
  double t102;
  double t104;
  double t105;
  double t107;
  double t108;
  double t109;
  double t11;
  double t110;
  double t111;
  double t112;
  double t113;
  double t114;
  double t119;
  double t12;
  double t123;
  double t124;
  double t125;
  double t128;
  double t13;
  double t136;
  double t137;
  double t138;
  double t139;
  double t14;
  double t140;
  double t15;
  double t150;
  double t151;
  double t152;
  double t153;
  double t155;
  double t156;
  double t157;
  double t166;
  double t170;
  double t171;
  double t173;
  double t174;
  double t175;
  double t177;
  double t178;
  double t179;
  double t179_tmp;
  double t181;
  double t182;
  double t183;
  double t186;
  double t189;
  double t19;
  double t192;
  double t193;
  double t195;
  double t196;
  double t198;
  double t2;
  double t20;
  double t202;
  double t203;
  double t204;
  double t206;
  double t207;
  double t208;
  double t21;
  double t210;
  double t212;
  double t25;
  double t26;
  double t27;
  double t28;
  double t29;
  double t3;
  double t30;
  double t31;
  double t34;
  double t35;
  double t36;
  double t37;
  double t4;
  double t40;
  double t41;
  double t42;
  double t44;
  double t45;
  double t47;
  double t48;
  double t49;
  double t5;
  double t50;
  double t51;
  double t52;
  double t53;
  double t54;
  double t55;
  double t56;
  double t57;
  double t59;
  double t6;
  double t60;
  double t66;
  double t67;
  double t68;
  double t7;
  double t70;
  double t76;
  double t8;
  double t82;
  double t85;
  double t86;
  double t87;
  double t88;
  double t89;
  double t9;
  double t91;
  double t94;
  double t95;
  double t96;
  double t97;
  double t98;
  double t99;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = std::pow(eta, 5.0);
  t6 = xi * xi;
  t7 = std::pow(xi, 3.0);
  t9 = std::pow(xi, 5.0);
  t10 = eta * 25.0;
  t11 = eta * 125.0;
  t12 = eta * 250.0;
  t13 = eta * 375.0;
  t14 = eta * 6.25;
  t15 = eta * 4.166666666666667;
  t19 = eta * 625.0;
  t20 = eta * 3125.0;
  t21 = xi * 6.25;
  t25 = eta * 37.5;
  t26 = eta * 62.5;
  t27 = eta * 41.666666666666664;
  t28 = eta * 31.25;
  t29 = eta * 20.833333333333332;
  t30 = eta * 83.333333333333329;
  t31 = eta * 93.75;
  t40 = eta * 312.5;
  t41 = eta * 156.25;
  t42 = eta * 562.5;
  t44 = eta * 468.75;
  t45 = eta * 708.33333333333326;
  t47 = eta * 1562.5;
  t48 = eta * 1041.666666666667;
  t49 = eta * 781.25;
  t50 = eta * 520.83333333333326;
  t51 = eta * 1812.5;
  t52 = eta * 645.83333333333326;
  t53 = eta * 2187.5;
  t54 = eta * 1093.75;
  t55 = eta * 1958.333333333333;
  t56 = eta * 2083.333333333333;
  t57 = eta * 3437.5;
  t66 = eta * 97.916666666666671;
  t67 = eta * 114.5833333333333;
  t68 = eta * 57.291666666666671;
  t70 = eta * 160.41666666666671;
  t76 = eta * 130.20833333333329;
  t82 = eta * 1479.166666666667;
  t119 = eta * 739.58333333333326;
  t4 = t2 * t2;
  t8 = t6 * t6;
  t34 = t2 * 625.0;
  t35 = t3 * 1250.0;
  t36 = t2 * 2500.0;
  t37 = t3 * 3125.0;
  t59 = t2 * 31.25;
  t60 = t2 * 20.833333333333332;
  t85 = t2 * 312.5;
  t86 = t3 * 312.5;
  t87 = t2 * 156.25;
  t88 = t3 * 156.25;
  t89 = t2 * 281.25;
  t91 = t2 * 468.75;
  t94 = t2 * 1562.5;
  t95 = t3 * 1562.5;
  t96 = t2 * 781.25;
  t97 = t3 * 1041.666666666667;
  t98 = t3 * 781.25;
  t99 = t2 * 520.83333333333326;
  t101 = t3 * 520.83333333333326;
  t104 = t2 * 2187.5;
  t105 = t2 * 1093.75;
  t107 = t3 * 1406.25;
  t108 = t2 * 979.16666666666674;
  t109 = t3 * 2083.333333333333;
  t110 = t2 * 3437.5;
  t111 = t2 * 1718.75;
  t112 = t7 * 156.25;
  t123 = t3 * 52.083333333333336;
  t124 = t5 * 26.041666666666668;
  t125 = t2 * 57.291666666666671;
  t128 = t2 * 265.625;
  t136 = t2 * 260.41666666666669;
  t137 = t3 * 260.41666666666669;
  t138 = t5 * 260.41666666666669;
  t140 = t5 * 130.20833333333329;
  t150 = t2 * 4687.5;
  t151 = t2 * 2343.75;
  t152 = t9 * 26.041666666666668;
  t153 = t6 * 57.291666666666671;
  t155 = t9 * 260.41666666666669;
  t157 = t9 * 130.20833333333329;
  t166 = t2 * 739.58333333333326;
  t175 = t7 * t50;
  t179_tmp = eta * t7;
  t179 = t179_tmp * -2083.333333333333;
  t100 = t4 * 781.25;
  t102 = t4 * 520.83333333333326;
  t113 = t8 * 781.25;
  t114 = t8 * 520.83333333333326;
  t139 = t4 * 130.20833333333329;
  t156 = t8 * 130.20833333333329;
  t170 = t4 * 1302.083333333333;
  t171 = t4 * 651.04166666666674;
  t173 = t8 * 1302.083333333333;
  t174 = t8 * 651.04166666666674;
  t177 = eta * t8 * -520.83333333333326;
  t178 = t8 * t76;
  t181 = -t15 + t60;
  t183 = -t41 + t96;
  t186 = (-t25 + t60) + 16.666666666666668;
  t182 = t27 - t2 * 41.666666666666664;
  t189 = (t28 - t2 * 187.5) + t88;
  t192 = (t27 + t101) - t85;
  t193 = t6 * ((-t40 + t96) + 20.833333333333332);
  t196 = ((-(t2 * 125.0) + t66) + t123) - 25.0;
  t202 = ((-t11 + t100) + t2 * 906.25) - t95;
  t203 = ((t101 + t119) - t105) - 160.41666666666671;
  t206 = ((-t14 - t88) + t125) + t139;
  t207 = ((-t25 + t102) - t98) + t2 * 322.91666666666669;
  t208 = ((t102 - t70) - t3 * 1093.75) + t166;
  t210 = (((-t70 + t139) - t3 * 364.58333333333331) + t2 * 369.79166666666669) +
         25.0;
  t195 = t192 * xi;
  t198 = t6 * ((t29 - t87) + t137);
  t204 = ((t27 + t3 * 833.33333333333326) - t2 * 354.16666666666669) - t102;
  sfvals[0] = (((((((((eta * -11.416666666666666 + t2 * 46.875) -
                      t3 * 88.541666666666671) +
                     t4 * 78.125) -
                    t124) -
                   t152) -
                  t7 * ((-t40 + t136) + 88.541666666666671)) -
                 t8 * (t76 - 78.125)) -
                xi * ((((-t31 - t86) + t128) + t139) + 11.416666666666666)) -
               t6 * (((eta * 265.625 - t91) + t137) - 46.875)) +
              1.0;
  sfvals[1] = (((t6 * -10.416666666666666 + t7 * 36.458333333333336) -
                t8 * 52.083333333333336) +
               t152) +
              xi;
  sfvals[2] = (((eta - t2 * 10.416666666666666) + t3 * 36.458333333333336) -
               t4 * 52.083333333333336) +
              t124;
  sfvals[3] = (((t157 + t7 * ((-t54 + t96) + 369.79166666666669)) + t6 * t203) +
               t210 * xi) +
              t8 * (t50 - 364.58333333333331);
  sfvals[4] = (((-t155 + t196 * xi) -
                t7 * ((eta * -1406.25 + t96) + 614.58333333333326)) -
               t6 * (((t119 - t96) + t137) - 222.91666666666671)) -
              t8 * (t49 - 677.08333333333326);
  sfvals[5] =
      (((t155 + t7 * ((-t49 + t136) + 510.41666666666669)) + t186 * xi) -
       t6 * ((eta * -322.91666666666669 + t87) + 162.5)) +
      t8 * (t50 - 625.0);
  sfvals[6] = (((-t157 + (t14 - 6.25) * xi) - t6 * (t68 - 63.541666666666671)) +
               t7 * (t41 - 213.54166666666671)) -
              t8 * (t76 - 286.45833333333331);
  sfvals[7] = ((t178 - t179_tmp * 156.25) + t6 * t68) - t14 * xi;
  sfvals_tmp = t7 * (eta * 52.083333333333336 - t136);
  sfvals[8] = (t6 * (t28 - t87) - sfvals_tmp) + t181 * xi;
  sfvals[9] = t198 - xi * ((t15 - t59) + t123);
  b_sfvals_tmp = t206 * xi;
  sfvals[10] = b_sfvals_tmp;
  sfvals[11] = ((((t2 * 63.541666666666671 - t3 * 213.54166666666671) +
                  t4 * 286.45833333333331) -
                 t14) -
                t140) -
               b_sfvals_tmp;
  sfvals[12] =
      (((((eta * 16.666666666666668 - t2 * 162.5) + t3 * 510.41666666666669) -
         t4 * 625.0) +
        t138) +
       t198) +
      t207 * xi;
  sfvals[13] = ((((((t2 * 222.91666666666671 - t3 * 614.58333333333326) +
                    t4 * 677.08333333333326) -
                   t10) -
                  t138) +
                 sfvals_tmp) +
                xi * (((t66 - t100) + t107) - t166)) -
               t6 * ((t11 + t98) - t96);
  sfvals[14] = (((((((t2 * -160.41666666666671 + t3 * 369.79166666666669) -
                     t4 * 364.58333333333331) +
                    t10) +
                   t140) +
                  t178) +
                 t208 * xi) -
                t7 * (eta * 364.58333333333331 - t99)) +
               t6 * ((eta * 369.79166666666669 + t98) - t105);
  sfvals[15] = ((t177 - t6 * ((eta * 979.16666666666674 - t36) + t95)) -
                xi * (((-t12 - t35) + t102) + t108)) +
               t7 * (eta * 1250.0 - t94);
  sfvals[16] =
      ((t7 * (-t47 + t94) + t8 * t49) + t6 * ((eta * 906.25 + t98) - t111)) -
      xi * ((t11 + t88) - t89);
  sfvals[17] = ((t177 + t182 * xi) - t6 * (eta * 354.16666666666669 - t85)) +
               t7 * (eta * 833.33333333333326 - t99);
  sfvals[18] = (-t7 * t183 + t189 * xi) - t6 * ((eta * 187.5 + t98) - t105);
  sfvals[19] = -t6 * t192 + t204 * xi;
  sfvals[20] = (t7 * t183 + t202 * xi) + t6 * ((eta * 281.25 + t95) - t111);
  t212 = (((-t156 + -t7 * (t50 - 312.5)) +
           -t6 * ((-(eta * 937.5) + t96) + 265.625)) +
          (((-(eta * 531.25) + t2 * 937.5) - t101) + 93.75) * xi) +
         ((((t31 + t86) - t128) - t139) - 11.416666666666666);
  sdvals[0] = t212;
  sdvals[1] = t212;
  sdvals[2] = (((t6 * 109.375 - t7 * 208.33333333333334) + t156) +
               -20.833333333333332 * xi) +
              1.0;
  sdvals[3] = 0.0;
  sdvals[4] = 0.0;
  sdvals[5] = (((t2 * 109.375 - t3 * 208.33333333333334) - t29) + t139) + 1.0;
  sdvals[6] = (((t174 + t210) + t6 * ((eta * -3281.25 + t151) + 1109.375)) +
               xi * (((t82 + t97) - t104) - 320.83333333333331)) +
              t7 * (t56 - 1458.333333333333);
  sdvals[7] = ((t114 + t6 * ((-t53 + t94) + 739.58333333333326)) + t203 * xi) +
              t7 * (t47 - 1093.75);
  sdvals[8] = (((-t173 + t196) - t6 * ((eta * -4218.75 + t151) + 1843.75)) -
               xi * (((t82 + t101) - t94) - 445.83333333333331)) -
              t7 * (t20 - 2708.333333333333);
  sdvals[9] = ((-t113 - t6 * ((-t47 + t96) + 739.58333333333326)) +
               xi * ((-t12 + t87) + 97.916666666666671)) -
              t7 * (t47 - 1406.25);
  sdvals[10] = (((t173 + t186) + t6 * ((eta * -2343.75 + t96) + 1531.25)) -
                xi * ((-t52 + t85) + 325.0)) +
               t7 * (t56 - 2500.0);
  sdvals[11] =
      ((t114 + t7 * (t50 - 781.25)) - t6 * (t40 - 322.91666666666669)) +
      xi * (t27 - 37.5);
  sdvals[12] = ((((t14 - 6.25) - t174) + t6 * (t44 - 640.625)) -
                t7 * (t50 - 1145.833333333333)) -
               xi * (t67 - 127.0833333333333);
  sdvals[13] = ((t21 + t112) - t153) - t156;
  sdvals[14] = ((-t14 + t175) - eta * t6 * 468.75) + t67 * xi;
  sdvals[15] = ((-t21 - t112) + t153) + t156;
  t179_tmp = t6 * t183;
  sdvals[16] = (t181 + xi * (t26 - t85)) + t179_tmp;
  sfvals_tmp = t7 * (t50 - 52.083333333333336);
  sdvals[17] =
      (-t6 * (t40 - 31.25) + sfvals_tmp) + xi * (t27 - 4.166666666666667);
  sdvals[18] = ((-t15 + t59) - t123) + t195;
  sdvals[19] = t193 - xi * ((-t26 + t87) + 4.166666666666667);
  sdvals[20] = t206;
  b_sfvals_tmp = xi * (((t67 + t101) - t91) - 6.25);
  sdvals[21] = b_sfvals_tmp;
  sdvals[22] = ((t14 + t88) - t125) - t139;
  sdvals[23] =
      ((((eta * 127.0833333333333 - t2 * 640.625) + t3 * 1145.833333333333) -
        t171) -
       b_sfvals_tmp) -
      6.25;
  sdvals[24] = t195 + t207;
  sdvals[25] =
      (((((eta * -325.0 + t2 * 1531.25) - t3 * 2500.0) + t170) + t193) -
       xi * (((-t52 - t109) + t151) + 37.5)) +
      16.666666666666668;
  sdvals[26] =
      ((((t66 + t107) - t100) - t166) - t179_tmp) - xi * ((t12 + t95) - t94);
  sdvals[27] =
      ((((((eta * 445.83333333333331 - t2 * 1843.75) + t3 * 2708.333333333333) -
          t170) -
         t6 * ((-t47 + t151) + 125.0)) +
        xi * (((t2 * 4218.75 - t37) - t82) + 97.916666666666671)) -
       sfvals_tmp) -
      25.0;
  sdvals[28] = ((t175 + t208) + t6 * (-t54 + t94)) + xi * ((t95 + t119) - t104);
  t179_tmp = -t53 + t151;
  sdvals[29] = (((((((eta * -320.83333333333331 + t2 * 1109.375) -
                     t3 * 1458.333333333333) +
                    t156) +
                   t171) +
                  t6 * (t179_tmp + 369.79166666666669)) +
                 t7 * (t48 - 364.58333333333331)) -
                xi * (((t2 * 3281.25 - t82) - t109) + 160.41666666666671)) +
               25.0;
  sdvals[30] =
      ((t179 + (((t12 + t35) - t102) - t108)) + t6 * (eta * 3750.0 - t150)) -
      xi * ((t2 * -5000.0 + t37) + t55);
  sdvals[31] = ((-t114 - t6 * ((eta * -5000.0 + t150) + 979.16666666666674)) -
                t7 * (t20 - 1250.0)) +
               xi * (((t2 * 3750.0 - t55) - t109) + 250.0);
  sdvals[32] =
      ((((-t11 + t89) - t88) + t7 * t20) - t6 * (eta * 4687.5 - t150)) +
      xi * ((t51 + t95) - t110);
  sdvals[33] =
      ((t113 + t6 * ((-t57 + t151) + 906.25)) - xi * ((-t42 + t91) + 125.0)) +
      t7 * (t20 - 1562.5);
  sdvals[34] = ((t179 + t182) + xi * (t34 - t45)) + t6 * (eta * 2500.0 - t94);
  sdvals[35] = ((-t114 + t6 * (t19 - 354.16666666666669)) -
                t7 * (t48 - 833.33333333333326)) -
               xi * (t30 - 41.666666666666664);
  sfvals_tmp = t6 * (-t44 + t151);
  sdvals[36] = (t189 - sfvals_tmp) - xi * ((t13 + t95) - t104);
  b_sfvals_tmp = t7 * (t47 - 156.25);
  sdvals[37] =
      (-t6 * (t179_tmp + 187.5) + xi * ((-t13 + t91) + 31.25)) - b_sfvals_tmp;
  sdvals[38] = t204 - xi * ((t30 - t34) + t97);
  sdvals[39] = -t6 * ((-t19 + t94) + 41.666666666666664) +
               xi * (((t36 - t45) - t109) + 41.666666666666664);
  sdvals[40] = (t202 + sfvals_tmp) + xi * ((t37 + t42) - t110);
  sdvals[41] = (t6 * ((-t57 + t150) + 281.25) + b_sfvals_tmp) -
               xi * (((-t51 - t37) + t150) + 125.0);
}

// tri_28_ncoords - Obtain nodal coordinates in master element for tri_28
void tri_28_ncoords(double natcoords[56])
{
  static const double dv[56]{0.0,
                             0.0,
                             1.0,
                             0.0,
                             0.0,
                             1.0,
                             0.16666666666666671,
                             0.0,
                             0.33333333333333331,
                             0.0,
                             0.5,
                             0.0,
                             0.66666666666666663,
                             0.0,
                             0.83333333333333337,
                             0.0,
                             0.83333333333333337,
                             0.16666666666666671,
                             0.66666666666666663,
                             0.33333333333333331,
                             0.5,
                             0.5,
                             0.33333333333333331,
                             0.66666666666666663,
                             0.16666666666666671,
                             0.83333333333333337,
                             0.0,
                             0.83333333333333337,
                             0.0,
                             0.66666666666666663,
                             0.0,
                             0.5,
                             0.0,
                             0.33333333333333331,
                             0.0,
                             0.16666666666666671,
                             0.16666666666666671,
                             0.16666666666666671,
                             0.33333333333333331,
                             0.16666666666666671,
                             0.5,
                             0.16666666666666671,
                             0.66666666666666663,
                             0.16666666666666671,
                             0.5,
                             0.33333333333333331,
                             0.33333333333333331,
                             0.5,
                             0.16666666666666671,
                             0.66666666666666663,
                             0.16666666666666671,
                             0.5,
                             0.16666666666666671,
                             0.33333333333333331,
                             0.33333333333333331,
                             0.33333333333333331};
  std::copy(&dv[0], &dv[56], &natcoords[0]);
}

// tri_28_sfunc - Compute shape functions and their derivatives of tri_28
void tri_28_sfunc(double xi, double eta, double sfvals[28])
{
  double b_sfvals_tmp;
  double sfvals_tmp;
  double t10;
  double t11;
  double t12;
  double t132;
  double t133;
  double t134;
  double t135;
  double t136;
  double t137;
  double t138;
  double t139;
  double t14;
  double t146;
  double t15;
  double t152;
  double t153;
  double t154;
  double t155;
  double t156;
  double t160;
  double t170;
  double t171;
  double t172;
  double t173;
  double t174;
  double t176;
  double t178;
  double t180;
  double t181;
  double t183;
  double t184;
  double t190;
  double t192;
  double t196;
  double t200;
  double t202;
  double t203;
  double t210;
  double t24;
  double t26;
  double t262;
  double t263;
  double t264;
  double t28;
  double t284;
  double t29;
  double t293;
  double t294;
  double t3;
  double t315;
  double t32;
  double t334;
  double t342;
  double t346;
  double t35;
  double t350;
  double t36;
  double t365;
  double t4;
  double t46;
  double t49;
  double t5;
  double t56;
  double t6;
  double t64;
  double t7;
  double t8;
  double t81;
  double t84;
  double t87;
  double t89;
  double t9;
  double t97;
  t3 = eta * eta;
  t4 = std::pow(eta, 3.0);
  t6 = std::pow(eta, 5.0);
  t8 = xi * xi;
  t9 = std::pow(xi, 3.0);
  t11 = std::pow(xi, 5.0);
  t14 = eta * 36.0;
  t15 = eta * 54.0;
  t24 = eta * 148.0;
  t26 = eta * 180.0;
  t28 = eta * 360.0;
  t29 = eta * 378.0;
  t35 = eta * 4.5;
  t36 = eta * 7.2;
  t46 = eta * 648.0;
  t49 = eta * 972.0;
  t56 = eta * 1944.0;
  t64 = eta * 3888.0;
  t97 = eta * 49.5;
  t200 = eta * 256.5;
  t202 = eta * 313.2;
  t203 = eta * 388.8;
  t5 = t3 * t3;
  t7 = std::pow(t3, 3.0);
  t10 = t8 * t8;
  t12 = std::pow(t8, 3.0);
  t32 = t3 * 27.0;
  t81 = t4 * 72.0;
  t87 = t4 * 216.0;
  t89 = t3 * 297.0;
  t132 = t3 * 594.0;
  t133 = t3 * 648.0;
  t134 = t4 * 648.0;
  t136 = t3 * 972.0;
  t137 = t4 * 972.0;
  t146 = t4 * 1296.0;
  t152 = t3 * 1836.0;
  t153 = t3 * 1944.0;
  t154 = t4 * 1944.0;
  t156 = t6 * 1944.0;
  t160 = t3 * 2484.0;
  t170 = t3 * 3888.0;
  t171 = t4 * 3888.0;
  t173 = t6 * 3888.0;
  t174 = t3 * 3996.0;
  t176 = t3 * 4671.0;
  t178 = t3 * 5022.0;
  t180 = t3 * 5184.0;
  t181 = t4 * 5184.0;
  t183 = t3 * 5832.0;
  t190 = t3 * 7776.0;
  t262 = t3 * 11232.0;
  t263 = t3 * 11664.0;
  t264 = t4 * 11664.0;
  t293 = t6 * 388.8;
  t84 = t5 * 162.0;
  t135 = t5 * 648.0;
  t138 = t5 * 972.0;
  t139 = t7 * 972.0;
  t155 = t5 * 1944.0;
  t172 = t5 * 3888.0;
  t184 = t5 * 5832.0;
  t192 = t5 * 7776.0;
  t196 = t12 * 972.0;
  t210 = t7 * 64.8;
  t284 = t12 * 64.8;
  t294 = t7 * 388.8;
  t315 = t12 * 388.8;
  t334 = -(eta * 162.0) + t136;
  t342 = t10 * t334;
  t346 = -t10 * (-t46 + t170);
  t350 = (eta * 216.0 + t171) - t153;
  t365 = t8 * (((-(eta * 27.0) + t89) + t138) - t137);
  sfvals[0] =
      (((((((((((eta * -14.7 + t3 * 81.2) - t4 * 220.5) + t5 * 315.0) -
              t6 * 226.8) +
             t210) +
            t284) +
           t8 *
               ((((eta * -661.5 + t3 * 1890.0) - t4 * 2268.0) + t138) + 81.2)) +
          t10 * ((-(eta * 1134.0) + t136) + 315.0)) -
         xi * (((((t5 * 1134.0 - t4 * 1260.0) - eta * 162.4) + t3 * 661.5) -
                t293) +
               14.7)) +
        t9 * (((eta * 1260.0 - t3 * 2268.0) + t146) - 220.5)) +
       t11 * (t203 - 226.8)) +
      1.0;
  sfvals[1] =
      ((((t8 * 13.7 - t9 * 67.5) + t10 * 153.0) - t11 * 162.0) + t284) - xi;
  sfvals[2] =
      ((((-eta + t3 * 13.7) - t4 * 67.5) + t5 * 153.0) - t6 * 162.0) + t210;
  sfvals[3] =
      ((((-t315 +
          xi * (((((t3 * 1044.0 + t5 * 1296.0) - t4 * 1674.0) - t202) - t293) +
                36.0)) -
         t10 * ((-(eta * 5184.0) + t170) + 1674.0)) +
        t9 * (((-(eta * 5022.0) + t190) - t171) + 1044.0)) -
       t11 * (((t56 - 162.0) - 972.0) - 162.0)) -
      t8 * ((((-(eta * 2088.0) + t155) + t178) - t181) + 313.2);
  sfvals[4] =
      ((((t196 + t9 * (((eta * 7884.0 - t3 * 9720.0) + t171) - 2074.5)) +
         t10 * ((eta * -9396.0 + t183) + 3699.0)) +
        t11 * (t64 - 3078.0)) +
       t8 * ((((eta * -2610.0 - t4 * 3564.0) + t138) + t176) + 526.5)) -
      xi * ((((t84 - t4 * 486.0) - t200) + t3 * 535.5) + 45.0);
  sfvals[5] =
      ((((t12 * -1296.0 - t9 * (((eta * 6120.0 + t146) - t180) - 2232.0)) +
         (((-t24 + t3 * 180.0) - t81) + 40.0) * xi) -
        t10 * ((eta * -8424.0 + t170) + 4356.0)) -
       t11 * (t64 - 3888.0)) +
      t8 * (((eta * 1692.0 + t134) - t152) - 508.0);
  sfvals[6] = ((((t196 + t8 * ((eta * -598.5 + t89) + 297.0)) -
                 t9 * ((eta * -2376.0 + t136) + 1381.5)) +
                t10 * ((eta * -3726.0 + t136) + 2889.0)) -
               xi * ((t32 - t97) + 22.5)) +
              t11 * (((t56 - 162.0) - 972.0) - 1620.0);
  sfvals[7] = ((((-t315 - t9 * (t29 - 468.0)) + t8 * (eta * 90.0 - 97.2)) +
                t10 * (t46 - 1026.0)) -
               t11 * (t203 - 1036.8)) -
              xi * (t36 - 7.2);
  sfvals[8] =
      (((eta * t8 * -90.0 - eta * t10 * 648.0) + t9 * t29) + t11 * t203) +
      t36 * xi;
  sfvals[9] = ((t342 - t9 * t334) + t8 * (t89 - t97)) - xi * (t32 - t35);
  sfvals_tmp = t9 * ((eta * 72.0 + t146) - t133);
  sfvals[10] = (((eta * 4.0 - t3 * 36.0) + t81) * xi + sfvals_tmp) -
               t8 * ((t3 * -324.0 + t14) + t134);
  sfvals[11] = t365 + xi * (((t35 + t4 * 162.0) - t84) - t3 * 49.5);
  b_sfvals_tmp = ((((t36 + t4 * 378.0) - t3 * 90.0) - t135) + t293) * xi;
  sfvals[12] = b_sfvals_tmp;
  sfvals[13] =
      (((((t3 * -97.2 + t4 * 468.0) - t5 * 1026.0) + t6 * 1036.8) + t36) -
       t294) -
      b_sfvals_tmp;
  sfvals[14] =
      ((((((eta * -22.5 - t4 * 1381.5) + t5 * 2889.0) - t6 * 2754.0) + t89) +
        t139) +
       t365) +
      ((((t97 + t156) + t4 * 2376.0) - t5 * 3726.0) - t3 * 598.5) * xi;
  sfvals[15] =
      (((((((eta * 40.0 - t3 * 508.0) + t4 * 2232.0) - t5 * 4356.0) -
          t7 * 1296.0) +
         t173) -
        xi * ((((t24 - t3 * 1692.0) + t173) + t4 * 6120.0) - t5 * 8424.0)) -
       t8 * (((-t26 + t152) + t172) - t181)) -
      sfvals_tmp;
  sfvals[16] =
      ((((((((eta * -45.0 + t3 * 526.5) - t4 * 2074.5) + t5 * 3699.0) -
           t6 * 3078.0) +
          t139) +
         t342) -
        t8 * (((eta * 535.5 + t4 * 9720.0) - t176) - t184)) +
       ((((t173 + t4 * 7884.0) + t200) - t3 * 2610.0) - t5 * 9396.0) * xi) +
      t9 * ((t3 * -3564.0 + eta * 486.0) + t171);
  sfvals_tmp = eta * t11;
  sfvals[17] =
      (((((((((t3 * -313.2 + t4 * 1044.0) - t5 * 1674.0) + t6 * 1296.0) + t14) -
           t294) +
          t10 * (eta * 1296.0 - t153)) -
         sfvals_tmp * 388.8) -
        xi * ((((t156 - t3 * 2088.0) + t4 * 5022.0) - t5 * 5184.0) + t202)) -
       t9 * ((eta * 1674.0 + t171) - t180)) +
      t8 * (((eta * 1044.0 + t4 * 7776.0) - t172) - t178);
  sfvals[18] =
      (((-t8 * (((eta * 3078.0 - t3 * 12852.0) + t4 * 17496.0) - t192) -
         t10 * (eta * 5832.0 - t190)) +
        t9 * ((eta * 6426.0 + t264) - t3 * 17496.0)) +
       t11 * t56) +
      ((((eta * 540.0 + t156) + t4 * 6426.0) - t3 * 3078.0) - t184) * xi;
  sfvals[19] = (((t10 * (eta * 10368.0 - t263) - sfvals_tmp * 3888.0) -
                 t9 * ((eta * 9612.0 - t3 * 21384.0) + t264)) +
                (((-t28 + t135) + t3 * 1332.0) - t4 * 1620.0) * xi) +
               t8 * (((eta * 3492.0 - t172) + t264) - t262);
  sfvals[20] = (((-t8 * ((eta * 2016.0 + t154) - t174) +
                  t9 * ((eta * 7020.0 - t3 * 11016.0) + t171)) +
                 t11 * t64) +
                ((t26 + t87) - t3 * 396.0) * xi) -
               t10 * (eta * 9072.0 - t190);
  sfvals[21] =
      (((-t8 * (-t46 + t132) - t10 * (-t64 + t153)) - sfvals_tmp * 1944.0) +
       (-t15 + t3 * 54.0) * xi) -
      t9 * (eta * 2538.0 - t153);
  sfvals[22] = ((t346 + t8 * ((t28 + t154) - t160)) -
                t9 * ((t3 * -6480.0 + t49) + t171)) -
               xi * ((t14 + t87) - t3 * 252.0);
  sfvals[23] = (-t9 * t350 + (((-t14 + t3 * 360.0) + t135) - t137) * xi) +
               t8 * (((eta * 252.0 + t4 * 6480.0) - t160) - t172);
  sfvals[24] = -t8 * (((-t15 + t132) + t155) - t154) -
               xi * ((((t15 + t156) + t4 * 2538.0) - t133) - t172);
  sfvals[25] =
      (-t8 * (((eta * 396.0 + t4 * 11016.0) - t174) - t192) + t9 * t350) +
      ((((t26 + t173) + t4 * 7020.0) - t3 * 2016.0) - t5 * 9072.0) * xi;
  sfvals[26] =
      ((t346 + t8 * (((eta * 1332.0 + t4 * 21384.0) - t5 * 11664.0) - t262)) -
       xi * ((((t28 - t3 * 3492.0) + t173) + t4 * 9612.0) - t5 * 10368.0)) -
      t9 * ((eta * 1620.0 + t264) - t263);
  sfvals[27] = ((-t8 * (((eta * 1107.0 - t3 * 8748.0) + t4 * 13608.0) - t184) +
                 t10 * (-t49 + t183)) +
                (((eta * 135.0 + t154) - t138) - t3 * 1107.0) * xi) +
               t9 * ((t3 * -13608.0 + t56) + t264);
}

// tri_28_sfunc - Compute shape functions and their derivatives of tri_28
void tri_28_sfunc(double xi, double eta, double sfvals[28], double sdvals[56])
{
  double b_sfvals_tmp;
  double c_sfvals_tmp;
  double d_sfvals_tmp;
  double e_sfvals_tmp;
  double f_sfvals_tmp;
  double sfvals_tmp;
  double sfvals_tmp_tmp;
  double t10;
  double t11;
  double t117;
  double t118;
  double t119;
  double t12;
  double t120;
  double t121;
  double t122;
  double t123;
  double t124;
  double t125;
  double t132;
  double t133;
  double t134;
  double t135;
  double t136;
  double t137;
  double t138;
  double t139;
  double t14;
  double t143;
  double t144;
  double t145;
  double t146;
  double t15;
  double t151;
  double t152;
  double t153;
  double t154;
  double t155;
  double t156;
  double t158;
  double t160;
  double t161;
  double t162;
  double t164;
  double t166;
  double t167;
  double t170;
  double t171;
  double t172;
  double t173;
  double t174;
  double t176;
  double t177;
  double t178;
  double t179;
  double t180;
  double t181;
  double t182;
  double t183;
  double t184;
  double t185;
  double t186;
  double t19;
  double t190;
  double t191;
  double t192;
  double t194;
  double t195;
  double t196;
  double t197;
  double t198;
  double t199;
  double t200;
  double t201;
  double t202;
  double t203;
  double t21;
  double t210;
  double t22;
  double t24;
  double t252;
  double t254;
  double t256;
  double t257;
  double t258;
  double t259;
  double t26;
  double t260;
  double t261;
  double t262;
  double t263;
  double t264;
  double t265;
  double t266;
  double t267;
  double t268;
  double t269;
  double t270;
  double t271;
  double t272;
  double t273;
  double t274;
  double t275;
  double t276;
  double t277;
  double t278;
  double t279;
  double t28;
  double t280;
  double t281;
  double t282;
  double t283;
  double t284;
  double t29;
  double t290;
  double t292;
  double t293;
  double t294;
  double t3;
  double t30;
  double t31;
  double t314;
  double t315;
  double t32;
  double t322;
  double t325;
  double t332;
  double t334;
  double t335;
  double t336;
  double t339;
  double t341;
  double t342;
  double t345;
  double t346;
  double t348;
  double t349;
  double t35;
  double t350;
  double t351;
  double t356;
  double t359;
  double t36;
  double t360;
  double t362;
  double t363;
  double t364;
  double t365;
  double t372;
  double t373;
  double t374;
  double t378;
  double t380;
  double t383;
  double t4;
  double t45;
  double t46;
  double t47;
  double t48;
  double t49;
  double t5;
  double t50;
  double t51;
  double t52;
  double t53;
  double t54;
  double t56;
  double t57;
  double t58;
  double t59;
  double t6;
  double t60;
  double t61;
  double t62;
  double t64;
  double t65;
  double t66;
  double t68;
  double t69;
  double t7;
  double t70;
  double t71;
  double t72;
  double t73;
  double t74;
  double t75;
  double t76;
  double t77;
  double t78;
  double t8;
  double t81;
  double t82;
  double t84;
  double t86;
  double t87;
  double t88;
  double t89;
  double t9;
  double t91;
  double t93;
  double t94;
  double t95;
  double t97;
  t3 = eta * eta;
  t4 = std::pow(eta, 3.0);
  t6 = std::pow(eta, 5.0);
  t8 = xi * xi;
  t9 = std::pow(xi, 3.0);
  t11 = std::pow(xi, 5.0);
  t14 = eta * 36.0;
  t15 = eta * 54.0;
  t19 = eta * 72.0;
  t21 = eta * 99.0;
  t22 = eta * 108.0;
  t24 = eta * 148.0;
  t26 = eta * 180.0;
  t28 = eta * 360.0;
  t29 = eta * 378.0;
  t30 = eta * 486.0;
  t31 = eta * 504.0;
  t35 = eta * 4.5;
  t36 = eta * 7.2;
  t45 = eta * 594.0;
  t46 = eta * 648.0;
  t47 = eta * 720.0;
  t48 = eta * 792.0;
  t49 = eta * 972.0;
  t50 = eta * 1071.0;
  t51 = eta * 1134.0;
  t52 = eta * 1188.0;
  t53 = eta * 1197.0;
  t54 = eta * 1296.0;
  t56 = eta * 1944.0;
  t57 = eta * 2088.0;
  t58 = eta * 2214.0;
  t59 = eta * 2592.0;
  t60 = eta * 2664.0;
  t61 = eta * 3384.0;
  t62 = eta * 3672.0;
  t64 = eta * 3888.0;
  t65 = eta * 4032.0;
  t66 = eta * 4176.0;
  t68 = eta * 4968.0;
  t69 = eta * 5022.0;
  t70 = eta * 5184.0;
  t71 = eta * 5220.0;
  t72 = eta * 5832.0;
  t73 = eta * 6156.0;
  t74 = eta * 6984.0;
  t75 = eta * 7128.0;
  t76 = eta * 7776.0;
  t77 = eta * 7992.0;
  t78 = xi * 7.2;
  t97 = eta * 49.5;
  t117 = eta * 9342.0;
  t118 = eta * 9720.0;
  t119 = eta * 10044.0;
  t120 = eta * 10368.0;
  t121 = eta * 11664.0;
  t122 = eta * 15552.0;
  t123 = eta * 19440.0;
  t124 = eta * 22464.0;
  t125 = eta * 23328.0;
  t200 = eta * 256.5;
  t201 = eta * 162.4;
  t202 = eta * 313.2;
  t203 = eta * 388.8;
  t5 = t3 * t3;
  t7 = std::pow(t3, 3.0);
  t10 = t8 * t8;
  t12 = std::pow(t8, 3.0);
  t32 = t3 * 27.0;
  t81 = t4 * 72.0;
  t82 = t3 * 90.0;
  t86 = t3 * 216.0;
  t87 = t4 * 216.0;
  t88 = t3 * 252.0;
  t89 = t3 * 297.0;
  t91 = t4 * 378.0;
  t93 = t4 * 486.0;
  t94 = t8 * 90.0;
  t95 = t9 * 378.0;
  t132 = t3 * 594.0;
  t133 = t3 * 648.0;
  t134 = t4 * 648.0;
  t136 = t3 * 972.0;
  t137 = t4 * 972.0;
  t144 = t3 * 1188.0;
  t145 = t4 * 1260.0;
  t146 = t4 * 1296.0;
  t151 = t3 * 1692.0;
  t152 = t3 * 1836.0;
  t153 = t3 * 1944.0;
  t154 = t4 * 1944.0;
  t156 = t6 * 1944.0;
  t158 = t3 * 2088.0;
  t160 = t3 * 2484.0;
  t161 = t4 * 2538.0;
  t162 = t4 * 2592.0;
  t164 = t3 * 2916.0;
  t166 = t3 * 3492.0;
  t167 = t3 * 3672.0;
  t170 = t3 * 3888.0;
  t171 = t4 * 3888.0;
  t173 = t6 * 3888.0;
  t174 = t3 * 3996.0;
  t176 = t3 * 4671.0;
  t177 = t3 * 4968.0;
  t178 = t3 * 5022.0;
  t179 = t4 * 5022.0;
  t180 = t3 * 5184.0;
  t181 = t4 * 5184.0;
  t183 = t3 * 5832.0;
  t185 = t6 * 5832.0;
  t186 = t4 * 6120.0;
  t190 = t3 * 7776.0;
  t191 = t4 * 7776.0;
  t194 = t3 * 7992.0;
  t197 = t11 * 1944.0;
  t198 = t11 * 3888.0;
  t199 = t11 * 5832.0;
  t254 = t3 * 9342.0;
  t256 = t4 * 9612.0;
  t258 = t3 * 10044.0;
  t259 = t4 * 10368.0;
  t261 = t3 * 10692.0;
  t262 = t3 * 11232.0;
  t263 = t3 * 11664.0;
  t264 = t4 * 11664.0;
  t266 = t3 * 15552.0;
  t267 = t4 * 15552.0;
  t269 = t3 * 17496.0;
  t270 = t3 * 19440.0;
  t272 = t3 * 22464.0;
  t273 = t3 * 23328.0;
  t274 = t4 * 23328.0;
  t275 = t3 * 29160.0;
  t276 = t3 * 31104.0;
  t277 = t4 * 31104.0;
  t278 = t3 * 33048.0;
  t279 = t3 * 34992.0;
  t280 = t4 * 34992.0;
  t281 = t3 * 40824.0;
  t282 = t3 * 52488.0;
  t283 = t3 * 64152.0;
  t290 = t3 * 535.5;
  t292 = t3 * 661.5;
  t293 = t6 * 388.8;
  t314 = t11 * 388.8;
  t322 = t6 * 2332.8;
  t325 = t11 * 2332.8;
  t84 = t5 * 162.0;
  t135 = t5 * 648.0;
  t138 = t5 * 972.0;
  t139 = t7 * 972.0;
  t143 = t5 * 1134.0;
  t155 = t5 * 1944.0;
  t172 = t5 * 3888.0;
  t182 = t5 * 5184.0;
  t184 = t5 * 5832.0;
  t192 = t5 * 7776.0;
  t195 = t10 * 648.0;
  t196 = t12 * 972.0;
  t210 = t7 * 64.8;
  t252 = t5 * 8424.0;
  t257 = t5 * 9720.0;
  t260 = t5 * 10368.0;
  t265 = t5 * 11664.0;
  t268 = t5 * 15552.0;
  t271 = t5 * 19440.0;
  t284 = t12 * 64.8;
  t294 = t7 * 388.8;
  t315 = t12 * 388.8;
  t332 = -t15 + t3 * 54.0;
  t334 = -(eta * 162.0) + t136;
  t335 = t10 * (t56 - 162.0);
  t336 = -t46 + t170;
  t339 = -t10 * (t76 - 648.0);
  t341 = (eta * 4.0 - t3 * 36.0) + t81;
  t342 = t10 * t334;
  t345 = t9 * t336;
  t346 = -t10 * t336;
  t348 = (t26 + t87) - t3 * 396.0;
  t350 = (eta * 216.0 + t171) - t153;
  t351 = ((-t24 + t3 * 180.0) - t81) + 40.0;
  t356 = ((-t14 + t3 * 360.0) + t135) - t137;
  t359 = ((-t15 + t132) + t155) - t154;
  t362 = ((-t28 + t135) + t3 * 1332.0) - t4 * 1620.0;
  t349 = t9 * (t59 - t266);
  t360 = t8 * (((t45 + t171) - t164) - 27.0);
  t363 = ((eta * 135.0 + t154) - t138) - t3 * 1107.0;
  t364 = t359 * xi;
  t365 = t8 * (((-(eta * 27.0) + t89) + t138) - t137);
  t372 = (((t36 + t91) - t82) - t135) + t293;
  t373 = (((eta * 540.0 + t156) + t4 * 6426.0) - t3 * 3078.0) - t184;
  t374 = (((t26 + t173) + t4 * 7020.0) - t3 * 2016.0) - t5 * 9072.0;
  t378 = (((t97 + t156) + t4 * 2376.0) - t5 * 3726.0) - t3 * 598.5;
  t380 = (((t173 + t4 * 7884.0) + t200) - t3 * 2610.0) - t5 * 9396.0;
  sfvals[0] = (((((((((((eta * -14.7 + t3 * 81.2) - t4 * 220.5) + t5 * 315.0) -
                      t6 * 226.8) +
                     t210) +
                    t284) +
                   t8 * ((((eta * -661.5 + t3 * 1890.0) - t4 * 2268.0) + t138) +
                         81.2)) +
                  t10 * ((-t51 + t136) + 315.0)) -
                 xi * (((((t143 - t145) - t201) + t292) - t293) + 14.7)) +
                t9 * (((eta * 1260.0 - t3 * 2268.0) + t146) - 220.5)) +
               t11 * (t203 - 226.8)) +
              1.0;
  sfvals[1] =
      ((((t8 * 13.7 - t9 * 67.5) + t10 * 153.0) - t11 * 162.0) + t284) - xi;
  sfvals[2] =
      ((((-eta + t3 * 13.7) - t4 * 67.5) + t5 * 153.0) - t6 * 162.0) + t210;
  sfvals_tmp =
      ((((t3 * 1044.0 + t5 * 1296.0) - t4 * 1674.0) - t202) - t293) + 36.0;
  b_sfvals_tmp = (((-t57 + t155) + t178) - t181) + 313.2;
  sfvals[3] = ((((-t315 + xi * sfvals_tmp) - t10 * ((-t70 + t170) + 1674.0)) +
                t9 * (((-t69 + t190) - t171) + 1044.0)) -
               t11 * (((t56 - 162.0) - 972.0) - 162.0)) -
              t8 * b_sfvals_tmp;
  sfvals[4] =
      ((((t196 + t9 * (((eta * 7884.0 - t3 * 9720.0) + t171) - 2074.5)) +
         t10 * ((eta * -9396.0 + t183) + 3699.0)) +
        t11 * (t64 - 3078.0)) +
       t8 * ((((eta * -2610.0 - t4 * 3564.0) + t138) + t176) + 526.5)) -
      xi * ((((t84 - t93) - t200) + t290) + 45.0);
  sfvals[5] =
      ((((t12 * -1296.0 - t9 * (((eta * 6120.0 + t146) - t180) - 2232.0)) +
         t351 * xi) -
        t10 * ((eta * -8424.0 + t170) + 4356.0)) -
       t11 * (t64 - 3888.0)) +
      t8 * (((eta * 1692.0 + t134) - t152) - 508.0);
  sfvals[6] = ((((t196 + t8 * ((eta * -598.5 + t89) + 297.0)) -
                 t9 * ((eta * -2376.0 + t136) + 1381.5)) +
                t10 * ((eta * -3726.0 + t136) + 2889.0)) -
               xi * ((t32 - t97) + 22.5)) +
              t11 * (((t56 - 162.0) - 972.0) - 1620.0);
  sfvals[7] = ((((-t315 - t9 * (t29 - 468.0)) + t8 * (eta * 90.0 - 97.2)) +
                t10 * (t46 - 1026.0)) -
               t11 * (t203 - 1036.8)) -
              xi * (t36 - 7.2);
  c_sfvals_tmp = eta * t10;
  sfvals[8] =
      (((eta * t8 * -90.0 - c_sfvals_tmp * 648.0) + t9 * t29) + t11 * t203) +
      t36 * xi;
  sfvals[9] = ((t342 - t9 * t334) + t8 * (t89 - t97)) - xi * (t32 - t35);
  sfvals_tmp_tmp = (t19 + t146) - t133;
  d_sfvals_tmp = t9 * sfvals_tmp_tmp;
  sfvals[10] = (t341 * xi + d_sfvals_tmp) - t8 * ((t3 * -324.0 + t14) + t134);
  e_sfvals_tmp = ((t35 + t4 * 162.0) - t84) - t3 * 49.5;
  sfvals[11] = t365 + xi * e_sfvals_tmp;
  f_sfvals_tmp = t372 * xi;
  sfvals[12] = f_sfvals_tmp;
  sfvals[13] =
      (((((t3 * -97.2 + t4 * 468.0) - t5 * 1026.0) + t6 * 1036.8) + t36) -
       t294) -
      f_sfvals_tmp;
  sfvals[14] =
      ((((((eta * -22.5 - t4 * 1381.5) + t5 * 2889.0) - t6 * 2754.0) + t89) +
        t139) +
       t365) +
      t378 * xi;
  sfvals[15] = (((((((eta * 40.0 - t3 * 508.0) + t4 * 2232.0) - t5 * 4356.0) -
                   t7 * 1296.0) +
                  t173) -
                 xi * ((((t24 - t151) + t173) + t186) - t252)) -
                t8 * (((-t26 + t152) + t172) - t181)) -
               d_sfvals_tmp;
  sfvals[16] = ((((((((eta * -45.0 + t3 * 526.5) - t4 * 2074.5) + t5 * 3699.0) -
                    t6 * 3078.0) +
                   t139) +
                  t342) -
                 t8 * (((eta * 535.5 + t4 * 9720.0) - t176) - t184)) +
                t380 * xi) +
               t9 * ((t3 * -3564.0 + t30) + t171);
  d_sfvals_tmp = eta * t11;
  sfvals[17] =
      (((((((((t3 * -313.2 + t4 * 1044.0) - t5 * 1674.0) + t6 * 1296.0) + t14) -
           t294) +
          t10 * (t54 - t153)) -
         d_sfvals_tmp * 388.8) -
        xi * ((((t156 - t158) + t179) - t182) + t202)) -
       t9 * ((eta * 1674.0 + t171) - t180)) +
      t8 * (((eta * 1044.0 + t191) - t172) - t178);
  sfvals[18] =
      (((-t8 * (((eta * 3078.0 - t3 * 12852.0) + t4 * 17496.0) - t192) -
         t10 * (t72 - t190)) +
        t9 * ((eta * 6426.0 + t264) - t269)) +
       t11 * t56) +
      t373 * xi;
  sfvals[19] = (((t10 * (t120 - t263) - d_sfvals_tmp * 3888.0) -
                 t9 * ((eta * 9612.0 - t3 * 21384.0) + t264)) +
                t362 * xi) +
               t8 * (((eta * 3492.0 - t172) + t264) - t262);
  sfvals[20] = (((-t8 * ((eta * 2016.0 + t154) - t174) +
                  t9 * ((eta * 7020.0 - t3 * 11016.0) + t171)) +
                 t11 * t64) +
                t348 * xi) -
               t10 * (eta * 9072.0 - t190);
  sfvals[21] =
      (((-t8 * (-t46 + t132) - t10 * (-t64 + t153)) - d_sfvals_tmp * 1944.0) +
       t332 * xi) -
      t9 * (eta * 2538.0 - t153);
  sfvals[22] = ((t346 + t8 * ((t28 + t154) - t160)) -
                t9 * ((t3 * -6480.0 + t49) + t171)) -
               xi * ((t14 + t87) - t88);
  sfvals[23] = (-t9 * t350 + t356 * xi) +
               t8 * (((eta * 252.0 + t4 * 6480.0) - t160) - t172);
  sfvals[24] = -t8 * t359 - xi * ((((t15 + t156) + t161) - t133) - t172);
  sfvals[25] =
      (-t8 * (((eta * 396.0 + t4 * 11016.0) - t174) - t192) + t9 * t350) +
      t374 * xi;
  sfvals[26] = ((t346 + t8 * (((eta * 1332.0 + t4 * 21384.0) - t265) - t262)) -
                xi * ((((t28 - t166) + t173) + t256) - t260)) -
               t9 * ((eta * 1620.0 + t264) - t263);
  sfvals[27] = ((-t8 * (((eta * 1107.0 - t3 * 8748.0) + t4 * 13608.0) - t184) +
                 t10 * (-t49 + t183)) +
                t363 * xi) +
               t9 * ((t3 * -13608.0 + t56) + t264);
  t383 = ((((t314 + t10 * ((t56 - 162.0) - 972.0)) +
            t9 * ((-(eta * 4536.0) + t170) + 1260.0)) +
           t8 * (((eta * 3780.0 + t171) - t3 * 6804.0) - 661.5)) +
          ((((-(eta * 1323.0) + t155) + t3 * 3780.0) - t4 * 4536.0) + 162.4) *
              xi) +
         (((((t145 + t201) - t143) + t293) - t292) - 14.7);
  sdvals[0] = t383;
  sdvals[1] = t383;
  sdvals[2] =
      ((((t8 * -202.5 + t9 * 612.0) - t10 * 810.0) + t314) + 27.4 * xi) - 1.0;
  sdvals[3] = 0.0;
  sdvals[4] = 0.0;
  sdvals[5] =
      ((((eta * 27.4 - t3 * 202.5) + t4 * 612.0) - t5 * 810.0) + t293) - 1.0;
  sdvals[6] = ((((-t325 + sfvals_tmp) -
                 t8 * (((eta * 15066.0 + t264) - t273) - 3132.0)) -
                t9 * ((eta * -20736.0 + t266) + 6696.0)) -
               t10 * (t118 - 6480.0)) -
              xi * ((((-t66 + t172) + t258) - t259) + 626.4);
  sdvals[7] = (((-t197 - t9 * ((-t122 + t263) + 5022.0)) +
                t8 * (((-t119 - t191) + t266) + 2088.0)) -
               t10 * (t76 - 5184.0)) -
              xi * b_sfvals_tmp;
  sdvals[8] = ((((t199 + ((((t93 - t84) + t200) - t290) - 45.0)) +
                 xi * ((((t4 * -7128.0 - t71) + t155) + t254) + 1053.0)) +
                t9 * ((eta * -37584.0 + t273) + 14796.0)) +
               t10 * (t123 - 15390.0)) +
              t8 * (((eta * 23652.0 + t264) - t275) - 6223.5);
  sdvals[9] =
      (((t198 + t9 * ((-t123 + t263) + 7884.0)) + t10 * (t121 - 9396.0)) -
       t8 * (((-t117 - t171) + t261) + 2610.0)) +
      xi * (((t3 * 1458.0 - t50) - t134) + 256.5);
  sdvals[10] =
      ((((t11 * -7776.0 + t351) - t9 * ((eta * -33696.0 + t266) + 17424.0)) +
        xi * (((t61 + t146) - t167) - 1016.0)) -
       t10 * (t123 - 19440.0)) -
      t8 * (((eta * 18360.0 + t171) - t266) - 6696.0);
  sdvals[11] =
      (((-t198 + t8 * ((-t62 + t153) + 1692.0)) - xi * ((-t28 + t86) + 148.0)) -
       t9 * ((-t120 + t170) + 6120.0)) -
      t10 * (t76 - 8424.0);
  sdvals[12] =
      ((((t199 + ((-t32 + t97) - 22.5)) + xi * ((-t53 + t132) + 594.0)) +
        t9 * ((eta * -14904.0 + t170) + 11556.0)) -
       t8 * ((-t75 + t164) + 4144.5)) +
      t10 * (t118 - 13770.0);
  sdvals[13] =
      (((t197 + t8 * (t45 - 598.5)) - t9 * (((t56 - 162.0) - 972.0) - 1242.0)) +
       t10 * (((t56 - 162.0) - 972.0) - 2592.0)) -
      xi * (t15 - 49.5);
  sdvals[14] =
      (((((-t36 + 7.2) - t325) - t8 * (t51 - 1404.0)) + t9 * (t59 - 4104.0)) -
       t10 * (((t56 - 162.0) - 972.0) - 4050.0)) +
      xi * (t26 - 194.4);
  sdvals[15] = (((-t78 + t94) - t95) + t195) - t314;
  sdvals[16] = (((t36 - eta * t9 * 2592.0) + t8 * t51) + t10 * t56) - t26 * xi;
  sdvals[17] = (((t78 - t94) + t95) - t195) + t314;
  sdvals[18] = (((t35 - t32) + t345) + t8 * (t30 - t164)) + xi * (-t21 + t132);
  sdvals[19] =
      ((t335 - t9 * (t56 - 162.0)) + t8 * (t45 - 49.5)) - xi * (t15 - 4.5);
  sfvals_tmp = t8 * t350;
  sdvals[20] = (t341 + sfvals_tmp) - xi * sfvals_tmp_tmp;
  f_sfvals_tmp = t9 * ((-t54 + t170) + 72.0);
  sdvals[21] =
      (-t8 * ((-t46 + t153) + 36.0) + xi * ((-t19 + t86) + 4.0)) + f_sfvals_tmp;
  sdvals[22] = e_sfvals_tmp + t364;
  sdvals[23] = t360 + xi * (((t3 * 486.0 - t21) - t134) + 4.5);
  sdvals[24] = t372;
  d_sfvals_tmp = xi * ((((-t26 + t3 * 1134.0) + t155) - t162) + 7.2);
  sdvals[25] = d_sfvals_tmp;
  sdvals[26] = (((t82 - t36) - t91) + t135) - t293;
  sdvals[27] = (((((eta * -194.4 + t3 * 1404.0) - t4 * 4104.0) + t182) - t322) -
                d_sfvals_tmp) +
               7.2;
  sdvals[28] = t364 + t378;
  sdvals[29] =
      ((((((t3 * -4144.5 + t4 * 11556.0) - t5 * 13770.0) + t45) + t185) +
        t360) +
       xi * ((((t3 * 7128.0 - t4 * 14904.0) - t53) + t257) + 49.5)) -
      22.5;
  sdvals[30] = (((((-t24 + t151) - t173) - t186) + t252) - sfvals_tmp) -
               xi * (((-t28 + t167) + t192) - t259);
  sdvals[31] =
      (((((((eta * -1016.0 + t3 * 6696.0) - t4 * 17424.0) - t6 * 7776.0) +
          t271) -
         xi * ((((t3 * 18360.0 - t4 * 33696.0) - t61) + t271) + 148.0)) -
        f_sfvals_tmp) +
       t8 * (((-t62 + t266) - t267) + 180.0)) +
      40.0;
  sdvals[32] = ((t345 + t380) + xi * (((t4 * -19440.0 - t50) + t254) + t265)) +
               t8 * ((eta * 1458.0 + t264) - t261);
  sdvals[33] =
      ((((((((eta * 1053.0 - t3 * 6223.5) + t4 * 14796.0) - t5 * 15390.0) +
           t185) +
          t335) +
         t9 * ((-t75 + t263) + 486.0)) +
        t8 * (((t117 + t274) - t275) - 535.5)) +
       xi * ((((t3 * 23652.0 - t4 * 37584.0) - t71) + t271) + 256.5)) -
      45.0;
  sdvals[34] =
      (((((((t158 + t182) - t156) - t179) - t202) + t9 * (t70 - t190)) -
        c_sfvals_tmp * 1944.0) +
       xi * (((t57 - t192) + t267) - t258)) -
      t8 * ((t69 + t264) - t266);
  sdvals[35] =
      (((((((((eta * -626.4 + t3 * 3132.0) - t4 * 6696.0) + t5 * 6480.0) -
            t314) -
           t322) -
          xi * ((((t3 * 15066.0 - t4 * 20736.0) - t66) + t257) + 313.2)) -
         t9 * ((-t120 + t263) + 1674.0)) +
        t8 * (((-t119 + t273) - t267) + 1044.0)) -
       t10 * (t64 - 1296.0)) +
      36.0;
  sdvals[36] = (((t373 + t9 * (-t125 + t276)) + t10 * t118) +
                xi * (((t3 * 25704.0 - t73) + t268) - t280)) +
               t8 * ((eta * 19278.0 + t280) - t282);
  sdvals[37] = (((t197 + t9 * ((eta * -34992.0 + t279) + 6426.0)) +
                 t10 * (t122 - 5832.0)) +
                xi * ((((t3 * 19278.0 - t73) + t257) - t274) + 540.0)) +
               t8 * (((eta * 25704.0 + t277) - t282) - 3078.0);
  sdvals[38] = (((t362 - c_sfvals_tmp * 19440.0) -
                 t8 * ((eta * 28836.0 + t280) - t283)) +
                xi * (((t74 - t192) + t274) - t272)) +
               t9 * (eta * 41472.0 - t3 * 46656.0);
  sdvals[39] = (((-t198 - t9 * ((eta * -42768.0 + t279) + 9612.0)) +
                 t8 * (((-t124 + t279) - t267) + 3492.0)) -
                t10 * (t125 - 10368.0)) -
               xi * (((t3 * 4860.0 - t60) - t162) + 360.0);
  sdvals[40] = (((t348 + t10 * t123) - t9 * (eta * 36288.0 - t276)) +
                t8 * ((eta * 21060.0 + t264) - t278)) -
               xi * ((t65 + t171) - t194);
  sdvals[41] = (((t198 + xi * ((-t48 + t133) + 180.0)) +
                 t9 * ((eta * -22032.0 + t263) + 7020.0)) -
                t8 * ((-t77 + t183) + 2016.0)) +
               t10 * (t122 - 9072.0);
  sdvals[42] = (((t332 + t9 * (t122 - t190)) + xi * (t54 - t144)) -
                c_sfvals_tmp * 9720.0) -
               t8 * (eta * 7614.0 - t183);
  sdvals[43] = (((-t197 - t8 * (t52 - 648.0)) + t9 * (t64 - 2538.0)) -
                t10 * (t64 - 3888.0)) +
               xi * (t22 - 54.0);
  sdvals[44] =
      ((((-t14 + t88) - t87) + t349) - t8 * ((eta * 2916.0 + t264) - t270)) +
      xi * ((t47 + t171) - t177);
  sdvals[45] = ((t339 + t8 * ((-t68 + t183) + 360.0)) -
                t9 * ((eta * -12960.0 + t263) + 972.0)) -
               xi * ((-t31 + t133) + 36.0);
  sfvals_tmp = t8 * ((t46 - t183) + t264);
  sdvals[46] =
      (t356 + xi * (((t4 * 12960.0 + t31) - t177) - t192)) - sfvals_tmp;
  f_sfvals_tmp = (-t64 + t263) + 216.0;
  sdvals[47] = (-t9 * f_sfvals_tmp + t8 * (((-t68 + t270) - t267) + 252.0)) +
               xi * (((t47 + t162) - t164) - 36.0);
  sdvals[48] = ((((-t15 + t133) + t172) - t156) - t161) +
               xi * (((t22 + t171) - t144) - t172);
  sdvals[49] = t8 * (((-t52 + t183) - t191) + 54.0) -
               xi * ((((t3 * 7614.0 - t54) + t257) - t267) + 54.0);
  sdvals[50] =
      (t374 + xi * (((t4 * -22032.0 - t48) + t194) + t268)) + sfvals_tmp;
  sdvals[51] = (t9 * f_sfvals_tmp + t8 * (((t77 + t277) - t278) - 396.0)) +
               xi * ((((t3 * 21060.0 - t4 * 36288.0) - t65) + t271) + 180.0);
  sdvals[52] = ((t349 + ((((-t28 + t166) - t173) + t260) - t256)) +
                xi * (((t4 * 42768.0 - t5 * 23328.0) + t60) - t272)) -
               t8 * ((eta * 4860.0 + t280) - t279);
  sdvals[53] = ((t339 - t9 * ((-t125 + t279) + 1620.0)) -
                xi * ((((t3 * 28836.0 - t4 * 41472.0) - t74) + t271) + 360.0)) +
               t8 * (((t4 * -46656.0 - t124) + t283) + 1332.0);
  sdvals[54] = ((t363 + t9 * (-t64 + t273)) +
                xi * (((t4 * -27216.0 - t58) + t265) + t269)) +
               t8 * ((t72 + t280) - t281);
  sdvals[55] = ((t9 * ((eta * -27216.0 + t279) + 1944.0) +
                 xi * (((-t58 + t183) - t171) + 135.0)) +
                t10 * (t121 - 972.0)) +
               t8 * (((eta * 17496.0 + t274) - t281) - 1107.0);
}

// tri_3_ncoords - Obtain nodal coordinates in master element for tri_3
void tri_3_ncoords(double natcoords[6])
{
  static const signed char b_iv[6]{0, 0, 1, 0, 0, 1};
  for (int i{0}; i < 6; i++) {
    natcoords[i] = b_iv[i];
  }
}

// tri_3_sfunc - Compute shape functions and their derivatives of tri_3
static inline void tri_3_sfunc(double xi, double eta, double sfvals[3])
{
  sfvals[0] = -xi + (1.0 - eta);
  sfvals[1] = xi;
  sfvals[2] = eta;
}

// tri_3_sfunc - Compute shape functions and their derivatives of tri_3
void tri_3_sfunc(double xi, double eta, double sfvals[3], double sdvals[6])
{
  static const signed char b_iv[6]{-1, -1, 1, 0, 0, 1};
  sfvals[0] = -xi + (1.0 - eta);
  sfvals[1] = xi;
  sfvals[2] = eta;
  for (int i{0}; i < 6; i++) {
    sdvals[i] = b_iv[i];
  }
}

// tri_6_ncoords - Obtain nodal coordinates in master element for tri_6
void tri_6_ncoords(double natcoords[12])
{
  static const double dv[12]{0.0, 0.0, 1.0, 0.0, 0.0, 1.0,
                             0.5, 0.0, 0.5, 0.5, 0.0, 0.5};
  std::copy(&dv[0], &dv[12], &natcoords[0]);
}

// tri_6_sfunc - Compute shape functions and their derivatives of tri_6
void tri_6_sfunc(double xi, double eta, double sfvals[6])
{
  double sfvals_tmp;
  double t2;
  double t3;
  double t5;
  double t8;
  double t9;
  t2 = eta * 4.0;
  t3 = eta * eta;
  t5 = xi * xi;
  t8 = t3 * 2.0;
  t9 = t5 * 2.0;
  sfvals[0] = (((eta * -3.0 + t8) + t9) + (t2 - 3.0) * xi) + 1.0;
  sfvals[1] = t9 - xi;
  sfvals[2] = -eta + t8;
  sfvals[3] = t5 * -4.0 - xi * ((t2 - 3.0) - 1.0);
  sfvals_tmp = t2 * xi;
  sfvals[4] = sfvals_tmp;
  sfvals[5] = (t2 - t3 * 4.0) - sfvals_tmp;
}

// tri_6_sfunc - Compute shape functions and their derivatives of tri_6
void tri_6_sfunc(double xi, double eta, double sfvals[6], double sdvals[12])
{
  double sfvals_tmp;
  double t2;
  double t3;
  double t4;
  double t5;
  double t8;
  double t9;
  t2 = eta * 4.0;
  t3 = eta * eta;
  t4 = xi * 4.0;
  t5 = xi * xi;
  t8 = t3 * 2.0;
  t9 = t5 * 2.0;
  sfvals[0] = (((eta * -3.0 + t8) + t9) + (t2 - 3.0) * xi) + 1.0;
  sfvals[1] = t9 - xi;
  sfvals[2] = -eta + t8;
  sfvals[3] = t5 * -4.0 - xi * ((t2 - 3.0) - 1.0);
  sfvals_tmp = t2 * xi;
  sfvals[4] = sfvals_tmp;
  sfvals[5] = (t2 - t3 * 4.0) - sfvals_tmp;
  sfvals_tmp = t4 + (t2 - 3.0);
  sdvals[0] = sfvals_tmp;
  sdvals[1] = sfvals_tmp;
  sdvals[2] = t4 - 1.0;
  sdvals[3] = 0.0;
  sdvals[4] = 0.0;
  sdvals[5] = t2 - 1.0;
  sdvals[6] = (-t2 + 4.0) - 8.0 * xi;
  sdvals[7] = -t4;
  sdvals[8] = eta * 4.0;
  sdvals[9] = xi * 4.0;
  sdvals[10] = -t2;
  sdvals[11] = (eta * -8.0 - t4) + 4.0;
}

// tri_fek_15_ncoords - Obtain nodal coordinates in master element for
void tri_fek_15_ncoords(double natcoords[30])
{
  static const double dv[30]{0.0,
                             0.0,
                             1.0,
                             0.0,
                             0.0,
                             1.0,
                             0.1726731580702271,
                             0.0,
                             0.5,
                             0.0,
                             0.82732683075390212,
                             0.0,
                             0.82732683820448272,
                             0.17267316179551739,
                             0.5,
                             0.5,
                             0.17267316179551739,
                             0.82732683820448272,
                             0.0,
                             0.82732683535970819,
                             0.0,
                             0.5,
                             0.0,
                             0.17267316552080769,
                             0.2165423575799505,
                             0.21654236130524079,
                             0.56691527366422811,
                             0.21654236503053109,
                             0.21654236503053109,
                             0.56691527366422811};
  std::copy(&dv[0], &dv[30], &natcoords[0]);
}

// tri_fek_15_sfunc - Compute shape functions and their derivatives of
void tri_fek_15_sfunc(double xi, double eta, double sfvals[15])
{
  double sfvals_tmp;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = xi * xi;
  t6 = std::pow(xi, 3.0);
  t4 = t2 * t2;
  t7 = t5 * t5;
  sfvals[0] = ((((eta * -9.99999997065184 + t2 * 29.999999876443749) -
                 t3 * 34.999999834768367) +
                t4 * 13.999999928976459) +
               t7 * 14.00000061099419) +
              (((t6 * (eta * 64.326240355586762 - 35.000001371023266) +
                 (((eta * 65.657086733831548 + t3 * 64.326239040280072) -
                   t2 * 118.98332555300919) -
                  10.000000227266) *
                     xi) +
                t5 * ((eta * -118.9833270405354 + t2 * 100.65247885589621) +
                      30.000000987295081)) +
               1.0);
  sfvals[1] = ((t7 * 13.999999515758841 +
                (((-(eta * 2.66915259326103) + t2 * 2.6691520084772291) +
                  t3 * 5.0655270788988256E-7) -
                 0.99999992176890706) *
                    xi) -
               t6 * (eta * 8.3262385889289252 + 20.99999911717607)) +
              t5 * ((eta * 10.99539092686223 - t2 * 8.3262374152585821) +
                    8.99999952318614);
  sfvals_tmp = eta * t6;
  sfvals[2] = ((((eta * -1.000000006163611 + t2 * 9.0000000261243382) -
                 t3 * 21.000000035227739) +
                t4 * 14.000000015267011) +
               sfvals_tmp * 3.5311773678704662E-7) +
              (t5 * (eta * 2.669152254921999 - t2 * 8.3262377365015183) -
               xi * ((eta * 2.6691526018761249 - t2 * 10.9953907691365) +
                     t3 * 8.32623825722872));
  sfvals[3] = ((t7 * -32.66666689620714 +
                (((-(eta * 67.37343663413661) + t2 * 99.930616063047822) -
                  t3 * 46.070184426177441) +
                 13.513004997266229) *
                    xi) +
               t6 * (76.026010338843165 - eta * 114.71247878438351)) +
              -t5 * ((eta * -179.26558696768271 + t2 * 128.11599631435379) +
                     56.872348439902261);
  sfvals[4] = ((t7 * 37.33333310799469 +
                t6 * (eta * 74.66666479127538 - 74.666665798756867)) +
               (((eta * 7.0334914079706774 + t2 * 6.4484498741441652) -
                 t3 * 8.1486082137324232) -
                5.3333330683824176) *
                   xi) +
              t5 * ((eta * -76.366822713631137 + t2 * 29.18472346954827) +
                    42.6666657591446);
  sfvals[5] = ((t7 * -32.666666338540587 +
                (((eta * 3.3910618415802021 + t3 * 3.30896052274144) -
                  t2 * 9.5203505844727339) +
                 2.820328220151092) *
                    xi) -
               t5 * ((eta * 0.9498780889532179 - t2 * 20.02143815953583) +
                     24.794317829723571)) +
              t6 * (54.640655948113057 - eta * 15.95418870174618);
  sfvals[6] = (-t5 * (eta * 38.279935217607623 - t2 * 10.094554544440889) +
               sfvals_tmp * 46.0701830588826) +
              ((eta * 5.7227571238932189 - t3 * 3.3089619900123068) +
               t2 * 0.40653316316559313) *
                  xi;
  sfvals[7] = (sfvals_tmp * 8.1486087058664829 +
               ((-(t2 * 17.9973757997027) + eta * 4.5154339230597351) +
                t3 * 8.1486087058664829) *
                   xi) -
              t5 * (eta * 17.9973757997027 - t2 * 53.630550094838867);
  sfvals[8] = (sfvals_tmp * -3.308961665534107 +
               ((eta * 5.7227573781081444 + t3 * 46.0701833833608) -
                t2 * 38.279935796300748) *
                   xi) +
              t5 * (eta * 0.40653258447246859 + t2 * 10.094555193397291);
  sfvals[9] = ((((eta * 2.8203283739419209 - t2 * 24.794318476984891) +
                 t3 * 54.640656813361232) -
                t4 * 32.66666671031826) +
               sfvals_tmp * 3.308960617326318) +
              (-t5 * (eta * 9.52035055096242 - t2 * 20.021437939268768) -
               xi * ((t3 * 15.9541893883758 - eta * 3.3910615596941822) +
                     t2 * 0.94987715253559157));
  sfvals[10] = (((eta * -5.33333337455031 + t2 * 42.666666839878957) -
                 t3 * 74.666666897784708) +
                t4 * 37.333333432456058) +
               ((t5 * (eta * 6.4484485169566828 + t2 * 29.184725559374641) -
                 sfvals_tmp * 8.1486077445187259) +
                ((t3 * 74.666666736349413 + eta * 7.0334926021123527) -
                 t2 * 76.366825996784044) *
                    xi);
  sfvals[11] = ((((eta * 13.51300497742384 - t2 * 56.872348265462151) +
                  t3 * 76.026009954419578) -
                 t4 * 32.666666666381261) -
                sfvals_tmp * 46.070184680045188) +
               (t5 * (eta * 99.93061654127132 - t2 * 128.11599691638949) -
                xi * ((eta * 67.373436838649965 - t2 * 179.26558738560871) +
                      t3 * 114.71247890272561));
  sfvals[12] = (sfvals_tmp * 107.3657037460065 +
                ((eta * 84.116480733647336 + t3 * 107.3657037460065) -
                 t2 * 191.48218447965391) *
                    xi) -
               t5 * (eta * 191.48218447965391 - t2 * 214.73140749201309);
  sfvals[13] = (t5 * (eta * 130.61492447526439 - t2 * 107.36570032135459) -
                sfvals_tmp * 107.36570260445581) +
               ((-(eta * 23.249221870808569) + t2 * 23.249219587707358) +
                t3 * 2.2831012060986469E-6) *
                   xi;
  sfvals[14] = (sfvals_tmp * 1.1415506004681411E-6 -
                xi * ((eta * 23.249222765165111 - t2 * 130.61492651117149) +
                      t3 * 107.3657037460064)) +
               t5 * (eta * 23.24922162361451 - t2 * 107.36570260445581);
}

// tri_fek_15_sfunc - Compute shape functions and their derivatives of
void tri_fek_15_sfunc(double xi, double eta, double sfvals[15],
                      double sdvals[30])
{
  double sfvals_tmp;
  double t12;
  double t16;
  double t2;
  double t20;
  double t21;
  double t24;
  double t3;
  double t32;
  double t37;
  double t38;
  double t4;
  double t40;
  double t43;
  double t5;
  double t51;
  double t53;
  double t6;
  double t63;
  double t7;
  double t77;
  double t78;
  double t8;
  double t80;
  double t81;
  double t85;
  double t86;
  double t87;
  double t88;
  double t89;
  double t90;
  double t91;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = xi * xi;
  t6 = std::pow(xi, 3.0);
  t8 = eta * 35.99475159940539;
  t12 = eta * 382.96436895930782;
  t16 = eta * 67.373436838649965;
  t20 = eta * 23.249222765165111;
  t24 = eta * 2.6691526018761249;
  t32 = eta * 3.3910615596941822;
  t4 = t2 * t2;
  t7 = t5 * t5;
  t21 = t3 * 15.9541893883758;
  t37 = t2 * 130.61492651117149;
  t38 = t3 * 107.3657037460064;
  t40 = t2 * 179.26558738560871;
  t43 = t2 * 10.9953907691365;
  t51 = t3 * 114.71247890272561;
  t53 = t3 * 8.32623825722872;
  t63 = t2 * 0.94987715253559157;
  t86 = (-(eta * 23.249221870808569) + t2 * 23.249219587707358) +
        t3 * 2.2831012060986469E-6;
  t91 = ((-(eta * 2.66915259326103) + t2 * 2.6691520084772291) +
         t3 * 5.0655270788988256E-7) -
        0.99999992176890706;
  t77 = (-(t2 * 17.9973757997027) + eta * 4.5154339230597351) +
        t3 * 8.1486087058664829;
  t78 = (eta * 84.116480733647336 + t3 * 107.3657037460065) -
        t2 * 191.48218447965391;
  t80 = (t3 * 74.666666736349413 + eta * 7.0334926021123527) -
        t2 * 76.366825996784044;
  t81 = (eta * 5.7227573781081444 + t3 * 46.0701833833608) -
        t2 * 38.279935796300748;
  t85 = (eta * 5.7227571238932189 - t3 * 3.3089619900123068) +
        t2 * 0.40653316316559313;
  t87 = ((eta * 65.657086733831548 + t3 * 64.326239040280072) -
         t2 * 118.98332555300919) -
        10.000000227266;
  t88 = ((-(eta * 67.37343663413661) + t2 * 99.930616063047822) -
         t3 * 46.070184426177441) +
        13.513004997266229;
  t89 = ((eta * 3.3910618415802021 + t3 * 3.30896052274144) -
         t2 * 9.5203505844727339) +
        2.820328220151092;
  t90 = ((eta * 7.0334914079706774 + t2 * 6.4484498741441652) -
         t3 * 8.1486082137324232) -
        5.3333330683824176;
  sfvals[0] =
      ((((eta * -9.99999997065184 + t2 * 29.999999876443749) -
         t3 * 34.999999834768367) +
        t4 * 13.999999928976459) +
       t7 * 14.00000061099419) +
      (((t6 * (eta * 64.326240355586762 - 35.000001371023266) + t87 * xi) +
        t5 * ((eta * -118.9833270405354 + t2 * 100.65247885589621) +
              30.000000987295081)) +
       1.0);
  sfvals[1] = ((t7 * 13.999999515758841 + t91 * xi) -
               t6 * (eta * 8.3262385889289252 + 20.99999911717607)) +
              t5 * ((eta * 10.99539092686223 - t2 * 8.3262374152585821) +
                    8.99999952318614);
  sfvals_tmp = eta * t6;
  sfvals[2] = ((((eta * -1.000000006163611 + t2 * 9.0000000261243382) -
                 t3 * 21.000000035227739) +
                t4 * 14.000000015267011) +
               sfvals_tmp * 3.5311773678704662E-7) +
              (t5 * (eta * 2.669152254921999 - t2 * 8.3262377365015183) -
               xi * ((t24 - t43) + t53));
  sfvals[3] = ((t7 * -32.66666689620714 + t88 * xi) +
               t6 * (76.026010338843165 - eta * 114.71247878438351)) +
              -t5 * ((eta * -179.26558696768271 + t2 * 128.11599631435379) +
                     56.872348439902261);
  sfvals[4] = ((t7 * 37.33333310799469 +
                t6 * (eta * 74.66666479127538 - 74.666665798756867)) +
               t90 * xi) +
              t5 * ((eta * -76.366822713631137 + t2 * 29.18472346954827) +
                    42.6666657591446);
  sfvals[5] = ((t7 * -32.666666338540587 + t89 * xi) -
               t5 * ((eta * 0.9498780889532179 - t2 * 20.02143815953583) +
                     24.794317829723571)) +
              t6 * (54.640655948113057 - eta * 15.95418870174618);
  sfvals[6] = (-t5 * (eta * 38.279935217607623 - t2 * 10.094554544440889) +
               sfvals_tmp * 46.0701830588826) +
              t85 * xi;
  sfvals[7] = (sfvals_tmp * 8.1486087058664829 + t77 * xi) -
              t5 * (eta * 17.9973757997027 - t2 * 53.630550094838867);
  sfvals[8] = (sfvals_tmp * -3.308961665534107 + t81 * xi) +
              t5 * (eta * 0.40653258447246859 + t2 * 10.094555193397291);
  sfvals[9] = ((((eta * 2.8203283739419209 - t2 * 24.794318476984891) +
                 t3 * 54.640656813361232) -
                t4 * 32.66666671031826) +
               sfvals_tmp * 3.308960617326318) +
              (-t5 * (eta * 9.52035055096242 - t2 * 20.021437939268768) -
               xi * ((t21 - t32) + t63));
  sfvals[10] = (((eta * -5.33333337455031 + t2 * 42.666666839878957) -
                 t3 * 74.666666897784708) +
                t4 * 37.333333432456058) +
               ((t5 * (eta * 6.4484485169566828 + t2 * 29.184725559374641) -
                 sfvals_tmp * 8.1486077445187259) +
                t80 * xi);
  sfvals[11] = ((((eta * 13.51300497742384 - t2 * 56.872348265462151) +
                  t3 * 76.026009954419578) -
                 t4 * 32.666666666381261) -
                sfvals_tmp * 46.070184680045188) +
               (t5 * (eta * 99.93061654127132 - t2 * 128.11599691638949) -
                xi * ((t16 - t40) + t51));
  sfvals[12] = (sfvals_tmp * 107.3657037460065 + t78 * xi) -
               t5 * (eta * 191.48218447965391 - t2 * 214.73140749201309);
  sfvals[13] = (t5 * (eta * 130.61492447526439 - t2 * 107.36570032135459) -
                sfvals_tmp * 107.36570260445581) +
               t86 * xi;
  sfvals[14] = (sfvals_tmp * 1.1415506004681411E-6 - xi * ((t20 - t37) + t38)) +
               t5 * (eta * 23.24922162361451 - t2 * 107.36570260445581);
  sdvals[0] = ((t6 * 56.000002443976761 + t87) +
               t5 * (eta * 192.9787210667603 - 105.00000411306981)) +
              xi * ((eta * -237.96665408107069 + t2 * 201.30495771179241) +
                    60.000001974590162);
  sdvals[1] = ((((eta * 59.9999997528875 - t2 * 104.99999950430509) +
                 t3 * 55.99999971590583) +
                t6 * 64.326240355586762) +
               (t5 * (eta * 201.30495771179241 - 118.9833270405354) +
                xi * ((eta * -237.9666511060185 + t2 * 192.9787171208402) +
                      65.657086733831548))) -
              9.99999997065184;
  sdvals[2] = ((t6 * 55.999998063035363 + t91) -
               t5 * (eta * 24.978715766786781 + 62.999997351528222)) +
              xi * ((eta * 21.99078185372446 - t2 * 16.652474830517161) +
                    17.999999046372281);
  sdvals[3] = (t6 * -8.3262385889289252 +
               t5 * (10.99539092686223 - eta * 16.652474830517161)) +
              xi * ((eta * 5.3383040169544582 + t2 * 1.519658123669648E-6) -
                    2.66915259326103);
  sfvals_tmp = eta * t5;
  sdvals[4] = (((t43 - t24) - t53) + sfvals_tmp * 1.05935321036114E-6) +
              xi * (eta * 5.3383045098439981 - t2 * 16.65247547300304);
  sdvals[5] = ((((eta * 18.00000005224868 - t2 * 63.000000105683213) +
                 t3 * 56.000000061068043) +
                t6 * 3.5311773678704662E-7) +
               (-xi * ((eta * -21.990781538273 + t2 * 24.97871477168616) +
                       2.6691526018761249) +
                t5 * (2.669152254921999 - eta * 16.65247547300304))) -
              1.000000006163611;
  sdvals[6] = ((t6 * -130.66666758482859 + t88) -
               xi * ((eta * -358.53117393536547 + t2 * 256.23199262870759) +
                     113.74469687980449)) +
              t5 * (228.07803101652951 - eta * 344.13743635315041);
  sdvals[7] = (t6 * -114.71247878438351 +
               t5 * (179.26558696768271 - eta * 256.23199262870759)) +
              -xi * ((eta * -199.86123212609559 + t2 * 138.2105532785323) +
                     67.37343663413661);
  sdvals[8] = ((t6 * 149.33333243197879 + t90) +
               xi * ((eta * -152.7336454272623 + t2 * 58.369446939096548) +
                     85.3333315182892)) +
              t5 * (eta * 223.9999943738261 - 223.9999973962706);
  sdvals[9] = (t6 * 74.66666479127538 +
               xi * ((eta * 12.89689974828833 - t2 * 24.44582464119727) +
                     7.0334914079706774)) +
              t5 * (eta * 58.369446939096548 - 76.366822713631137);
  sdvals[10] = ((t6 * -130.66666535416229 + t89) -
                xi * ((eta * 1.899756177906436 - t2 * 40.042876319071667) +
                      49.588635659447142)) +
               t5 * (163.92196784433921 - eta * 47.862566105238542);
  sdvals[11] = (t6 * -15.95418870174618 +
                t5 * (eta * 40.042876319071667 - 0.9498780889532179)) +
               xi * ((eta * -19.040701168945471 + t2 * 9.92688156822432) +
                     3.3910618415802021);
  sdvals[12] =
      (t85 - xi * (eta * 76.559870435215245 - t2 * 20.189109088881779)) +
      sfvals_tmp * 138.21054917664779;
  sdvals[13] = (t6 * 46.0701830588826 +
                t5 * (eta * 20.189109088881779 - 38.279935217607623)) +
               xi * ((eta * 0.81306632633118625 - t2 * 9.92688597003692) +
                     5.7227571238932189);
  sdvals[14] = (t77 + sfvals_tmp * 24.445826117599449) +
               xi * (t2 * 107.26110018967771 - t8);
  sdvals[15] = (t6 * 8.1486087058664829 +
                t5 * (eta * 107.26110018967771 - 17.9973757997027)) +
               xi * ((t2 * 24.445826117599449 - t8) + 4.5154339230597351);
  sdvals[16] = (t81 - sfvals_tmp * 9.9268849966023218) +
               xi * (eta * 0.8130651689449373 + t2 * 20.189110386794582);
  sdvals[17] = (t6 * -3.308961665534107 +
                xi * ((eta * -76.5598715926015 + t2 * 138.21055015008241) +
                      5.7227573781081444)) +
               t5 * (eta * 20.189110386794582 + 0.40653258447246859);
  sdvals[18] = (((t32 - t21) - t63) + sfvals_tmp * 9.9268818519789548) -
               xi * (eta * 19.040701101924839 - t2 * 40.042875878537536);
  sdvals[19] = ((((eta * -49.58863695396979 + t2 * 163.9219704400837) -
                  t3 * 130.666666841273) +
                 t6 * 3.308960617326318) +
                (-xi * ((eta * 1.8997543050711829 + t2 * 47.862568165127392) -
                        3.3910615596941822) +
                 t5 * (eta * 40.042875878537536 - 9.52035055096242))) +
               2.8203283739419209;
  sdvals[20] =
      (t80 + xi * (eta * 12.896897033913371 + t2 * 58.369451118749282)) -
      sfvals_tmp * 24.44582323355618;
  sdvals[21] = ((((eta * 85.333333679757914 - t2 * 224.00000069335411) +
                  t3 * 149.3333337298242) -
                 t6 * 8.1486077445187259) +
                (t5 * (eta * 58.369451118749282 + 6.4484485169566828) +
                 xi * ((eta * -152.73365199356809 + t2 * 224.00000020904821) +
                       7.0334926021123527))) -
               5.33333337455031;
  sdvals[22] = (((-t16 + t40) - t51) - sfvals_tmp * 138.21055404013561) +
               xi * (eta * 199.86123308254261 - t2 * 256.231993832779);
  sdvals[23] = ((((eta * -113.7446965309243 + t2 * 228.07802986325871) -
                  t3 * 130.666666665525) -
                 t6 * 46.070184680045188) +
                (-xi * ((eta * -358.53117477121748 + t2 * 344.13743670817672) +
                        67.373436838649965) +
                 t5 * (99.93061654127132 - eta * 256.231993832779))) +
               13.51300497742384;
  sdvals[24] = (t78 + xi * (t2 * 429.46281498402612 - t12)) +
               sfvals_tmp * 322.09711123801958;
  sdvals[25] = (t6 * 107.3657037460065 +
                xi * ((t2 * 322.09711123801958 - t12) + 84.116480733647336)) +
               t5 * (eta * 429.46281498402612 - 191.48218447965391);
  sdvals[26] =
      (t86 + xi * (eta * 261.22984895052872 - t2 * 214.73140064270919)) -
      sfvals_tmp * 322.09710781336742;
  sdvals[27] = (t6 * -107.36570260445581 +
                t5 * (130.61492447526439 - eta * 214.73140064270919)) +
               xi * ((eta * 46.498439175414717 + t2 * 6.8493036182959423E-6) -
                     23.249221870808569);
  sdvals[28] = (((-t20 + t37) - t38) + sfvals_tmp * 3.4246518014044239E-6) +
               xi * (eta * 46.498443247229019 - t2 * 214.73140520891161);
  sdvals[29] = (t6 * 1.1415506004681411E-6 +
                t5 * (23.24922162361451 - eta * 214.73140520891161)) +
               -xi * ((eta * -261.229853022343 + t2 * 322.09711123801918) +
                      23.249222765165111);
}

// tri_fek_21_ncoords - Obtain nodal coordinates in master element for
void tri_fek_21_ncoords(double natcoords[42])
{
  static const double dv[42]{0.0,
                             0.0,
                             1.0,
                             0.0,
                             0.0,
                             1.0,
                             0.1174723392341675,
                             0.0,
                             0.35738423767012,
                             0.0,
                             0.642615755810622,
                             0.0,
                             0.88252765424657453,
                             0.0,
                             0.88252766076583256,
                             0.1174723392341675,
                             0.642615755810622,
                             0.357384244189378,
                             0.35738424478786052,
                             0.64261575521213943,
                             0.1174723392341675,
                             0.88252766076583256,
                             0.0,
                             0.88252765424657453,
                             0.0,
                             0.642615755810622,
                             0.0,
                             0.35738423767012,
                             0.0,
                             0.1174723392341675,
                             0.14801946903502289,
                             0.14801946903502289,
                             0.42082552725652977,
                             0.15834891548694061,
                             0.703961065410696,
                             0.14801946903502289,
                             0.42082554725652971,
                             0.42082552725652977,
                             0.14801946903502289,
                             0.703961065410696,
                             0.15834891548694061,
                             0.42082554725652971};
  std::copy(&dv[0], &dv[42], &natcoords[0]);
}

// tri_fek_21_sfunc - Compute shape functions and their derivatives of
void tri_fek_21_sfunc(double xi, double eta, double sfvals[21])
{
  double sfvals_tmp;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = std::pow(eta, 5.0);
  t6 = xi * xi;
  t7 = std::pow(xi, 3.0);
  t9 = std::pow(xi, 5.0);
  t4 = t2 * t2;
  t8 = t6 * t6;
  sfvals[0] = ((((((eta * -14.99999996093378 + t2 * 70.000000043594426) -
                   t3 * 140.00000069119289) +
                  t4 * 126.00000118660719) -
                 t5 * 42.000000578074953) +
                (t9 * -42.000000578074953 -
                 t6 * (((eta * 501.03836594588762 - t2 * 979.2384142321639) +
                        t3 * 567.46562017083636) -
                       70.000000043594426))) +
               (-t7 * ((eta * -615.91204519235646 + t2 * 567.46562682499621) +
                       140.00000069119289) +
                t8 * (126.00000118660719 - eta * 259.350432608497))) +
              (-xi * ((((-(eta * 158.47675323169219) + t4 * 259.3504259543372) +
                        t2 * 501.0383602766729) -
                       t3 * 615.912032868982) +
                      14.99999996093378) +
               1.0);
  sfvals[1] = ((t9 * 41.999996744751463 +
                t7 * ((eta * 85.4896695594327 - t2 * 49.936086496039259) +
                      55.999994971562742)) +
               -t6 * (((eta * 41.404815986822911 - t2 * 37.31057321815981) +
                       t3 * 1.1713318154662049) +
                      13.9999986831593)) +
              (-t8 * (eta * 49.3504265093239 + 83.999992941885282) +
               ((((eta * 5.2655724470594807 + t3 * 1.17133699076664) -
                  t4 * 0.58566903271396931) -
                 t2 * 5.8512403112366034) +
                0.99999990873039446) *
                   xi);
  sfvals_tmp = eta * t8;
  sfvals[2] = (((((eta * 0.99999990873039446 - t2 * 13.9999986831593) +
                  t3 * 55.999994971562742) -
                 t4 * 83.999992941885282) +
                t5 * 41.999996744751463) +
               (t7 * (eta * 1.171338936250347 - t2 * 1.171345087298086) -
                t6 * ((eta * 5.8512432633420781 - t2 * 37.310596177734048) +
                      t3 * 49.936106568217468))) +
              (sfvals_tmp * -0.58566901725445342 +
               (((eta * 5.2655734330098491 + t3 * 85.489683895937034) -
                 t2 * 41.404824627705331) -
                t4 * 49.350433184761137) *
                   xi);
  sfvals[3] = ((t9 * 100.0722138247298 +
                ((((t2 * 432.09689290318221 - eta * 165.53165630672831) +
                   t4 * 168.87506281297121) -
                  t3 * 455.72313144010189) +
                 20.28283203067684) *
                    xi) +
               t7 * ((eta * -1093.745456707268 + t2 * 876.047007761566) +
                     299.68786372166522)) +
              (t8 * (eta * 503.724012222635 - 288.46092311906341) +
               t6 * (((eta * 758.25292771841168 - t2 * 1260.94822700582) +
                      t3 * 641.27027217663192) -
                     131.5819864580084));
  sfvals[4] = ((t9 * -121.16746050312111 -
                t6 * (((eta * 345.53784249318568 - t2 * 347.431653622072) +
                       t3 * 96.490494851178525) -
                      98.4982376625818)) +
               ((((eta * 22.984068642502891 + t4 * 31.626785689213641) -
                  t3 * 52.512698294878938) +
                 t2 * 5.9742187127844231) -
                8.0723747496220071) *
                   xi) +
              (-t7 * ((eta * -729.18722046838968 + t2 * 418.07263639737079) +
                      289.45744183702578) +
               t8 * (320.19903942718707 - eta * 411.1228163600997));
  sfvals[5] = (((t9 * 121.1674595220625 +
                 ((((eta * 4.3123102982361914 + t3 * 35.280277206286293) -
                    t2 * 35.038119035572748) -
                   t4 * 9.0438378107945585) +
                  4.48936934184483) *
                     xi) +
                t8 * (eta * 194.7144862177235 - 285.63825840592062)) +
               -t7 * ((eta * 227.24900532948541 + t2 * 14.744022856687319) -
                      220.33588286127019)) +
              t6 * (((eta * 36.294584087297487 + t2 * 125.2963091978737) -
                     t3 * 97.334887363142926) -
                    60.354453319256983);
  sfvals[6] = (((t9 * -100.07220901034781 -
                 xi * ((((eta * 9.7574705142608167 + t3 * 8.283033119707266) -
                         t2 * 20.6808809158801) -
                        t4 * 0.059449288784265218) +
                       2.6998265706962861)) +
                t8 * (eta * 3.362940043690628 + 211.90013385307509)) +
               -t7 * ((eta * 73.549998627191727 - t2 * 138.1268855895085) +
                      146.56629902627949)) +
              t6 * (((eta * 59.661697317285572 - t2 * 124.8580947822738) +
                     t3 * 34.751185824254406) +
                    37.438200754248463);
  sfvals[7] = ((sfvals_tmp * 168.8750641653038 +
                (((-(t2 * 3.8115266118404421) - eta * 6.9929879354500288) +
                  t3 * 8.0452381998915747) +
                 t4 * 0.059449686339120858) *
                    xi) +
               t6 * ((eta * 78.177879204274376 + t2 * 3.5312016284685912) -
                     t3 * 34.513406789988778)) +
              -t7 * (eta * 219.77712360339709 - t2 * 34.2299973222599);
  sfvals[8] = ((t6 * ((eta * 38.19683453567891 - t2 * 164.02313793713921) +
                      t3 * 61.159538200408868) +
                sfvals_tmp * 31.626785739127421) +
               (((-(eta * 3.9015528921734441) + t2 * 16.539686149758889) +
                 t3 * 0.89507485045248036) -
                t4 * 9.0438386535819753) *
                   xi) +
              -t7 * (eta * 73.994442101093085 - t2 * 222.9976218462748);
  sfvals[9] = ((t6 * ((eta * 16.539683375822719 - t2 * 164.02311934846031) +
                      t3 * 222.99760789847451) -
                sfvals_tmp * 9.0438390209894948) +
               (((t2 * 38.196832699950562 + t4 * 31.62678644092809) -
                 eta * 3.9015526060694552) -
                t3 * 73.994441243849664) *
                   xi) +
              t7 * (eta * 0.89507768875444382 + t2 * 61.1595234376381);
  sfvals[10] = (sfvals_tmp * 0.0594497062682195 +
                t6 * ((eta * -3.8115218172848242 + t2 * 3.531164804550972) +
                      t3 * 34.230028932840327)) +
               (t7 * (eta * 8.0452348138553678 - t2 * 34.513384301883271) -
                xi * (((t3 * 219.77714320924181 - t2 * 78.177891422146445) -
                       t4 * 168.87507294402059) +
                      eta * 6.9929893470511049));
  sfvals[11] = (((((eta * -2.6998265706962861 + t2 * 37.438200754248463) -
                   t3 * 146.56629902627949) +
                  t4 * 211.90013385307509) -
                 t5 * 100.07220901034781) +
                ((sfvals_tmp * 0.059449220453796657 +
                  t6 * ((eta * 20.680886082046751 - t2 * 124.8581354105028) +
                        t3 * 138.12692168679979)) -
                 xi * (((eta * 9.7574724278917913 - t2 * 59.661714239606852) +
                        t3 * 73.5500273661704) -
                       t4 * 3.3629537739789779))) +
               -t7 * (eta * 8.2830363039124748 - t2 * 34.751208122926933);
  sfvals[12] = (((((eta * 4.48936934184483 - t2 * 60.354453319256983) +
                   t3 * 220.33588286127019) -
                  t4 * 285.63825840592062) +
                 t5 * 121.1674595220625) +
                ((sfvals_tmp * -9.0438373770265414 +
                  (((eta * 4.3123121299698246 + t4 * 194.71447113380921) +
                    t2 * 36.294567342544347) -
                   t3 * 227.24897533255159) *
                      xi) -
                 t6 * ((eta * 35.038122559562566 - t2 * 125.29633973252039) +
                       t3 * 14.744051869972671))) +
               t7 * (eta * 35.280278464774462 - t2 * 97.334900858745925);
  sfvals[13] = (((((eta * -8.0723747496220071 + t2 * 98.4982376625818) -
                   t3 * 289.45744183702578) +
                  t4 * 320.19903942718707) -
                 t5 * 121.16746050312111) +
                ((sfvals_tmp * 31.626786409990419 +
                  (((eta * 22.984066639874129 + t3 * 729.18719012966551) -
                    t4 * 411.12280127618533) -
                   t2 * 345.53782523574722) *
                      xi) +
                 t6 * ((eta * 5.974223733109298 + t2 * 347.43161911110519) -
                       t3 * 418.07260507499558))) +
               -t7 * (eta * 52.512702033351843 + t2 * 96.490477891940969);
  sfvals[14] = ((((((eta * 20.28283203067684 - t2 * 131.5819864580084) +
                    t3 * 299.68786372166522) -
                   t4 * 288.46092311906341) +
                  t5 * 100.0722138247298) +
                 sfvals_tmp * 168.8750715180154) +
                (((-(eta * 165.531655671499) + t4 * 503.723998492346) +
                  t2 * 758.25291463129508) -
                 t3 * 1093.745430525091) *
                    xi) +
               (t6 * ((eta * 432.09689893053269 - t2 * 1260.9482161229371) +
                      t3 * 876.04698893770114) -
                t7 * (eta * 455.72314680772593 - t2 * 641.27027578810021));
  sfvals[15] = ((sfvals_tmp * -412.44742060142181 +
                 (((eta * 203.7175142733243 + t3 * 1004.795367380717) -
                   t2 * 796.065492393157) -
                  t4 * 412.44738926088382) *
                     xi) -
                t6 * ((eta * 796.06551909468533 - t2 * 2024.637859421618) +
                      t3 * 1252.389265741308)) +
               t7 * (eta * 1004.795425422783 - t2 * 1252.3892970818461);
  sfvals[16] = ((sfvals_tmp * 480.478701368921 -
                 xi * (((t3 * 38.656864441892587 - t2 * 114.9523599108952) +
                        eta * 58.766509099728218) +
                       t4 * 17.5289863692744)) +
                t6 * ((eta * 539.24521586815956 - t2 * 1017.143284128235) +
                      t3 * 462.94974017936221)) +
               -t7 * (eta * 960.95740813735233 - t2 * 960.95742791755754);
  sfvals[17] = ((sfvals_tmp * -412.44737653928109 +
                 (((t4 * 15.0470457728708 + eta * 23.816927190137161) -
                   t3 * 30.09409634718623) -
                  t2 * 8.7698766158217314) *
                     xi) +
                t7 * (eta * 644.994169783548 - t2 * 397.40029868232182)) +
               t6 * ((eta * -256.36372043440412 + t2 * 202.4526648129922) +
                     t3 * 30.09412362983015);
  sfvals[18] = (-t6 * ((eta * 106.1921467733297 - t2 * 698.02432520425771) +
                       t3 * 533.065669561202) -
                sfvals_tmp * 17.528986545024448) +
               (t7 * (eta * 108.7728077454023 - t2 * 533.065668124395) +
                (((-(t2 * 106.19214799746121) + eta * 14.948325572951889) +
                  t3 * 108.7728104063407) -
                 t4 * 17.52898798183136) *
                    xi);
  sfvals[19] = ((sfvals_tmp * 15.0470457728708 +
                 (((eta * 23.816931829146689 + t3 * 644.99423710362942) -
                   t2 * 256.36376105295938) -
                  t4 * 412.44740787981681) *
                     xi) -
                t7 * (eta * 30.094087069166889 - t2 * 30.0940609487558)) +
               -t6 * ((eta * 8.7698905328506118 - t2 * 202.45277275163161) +
                      t3 * 397.40039270393191);
  sfvals[20] = ((t6 * ((eta * 114.9523580487364 - t2 * 1017.14327917978) +
                       t3 * 960.95742504393706) -
                 sfvals_tmp * 17.52898780608146) +
                (((t2 * 539.2452152301305 - eta * 58.766508887052467) +
                  t4 * 480.47870136891868) -
                 t3 * 960.95740771199667) *
                    xi) +
               -t7 * (eta * 38.656861355602437 - t2 * 462.94973586893678);
}

// tri_fek_21_sfunc - Compute shape functions and their derivatives of
void tri_fek_21_sfunc(double xi, double eta, double sfvals[21],
                      double sdvals[42])
{
  double sfvals_tmp;
  double t105;
  double t106;
  double t118;
  double t12;
  double t133;
  double t135;
  double t137;
  double t138;
  double t139;
  double t14;
  double t140;
  double t141;
  double t142;
  double t144;
  double t145;
  double t147;
  double t148;
  double t149;
  double t150;
  double t152;
  double t153;
  double t155;
  double t17;
  double t19;
  double t2;
  double t3;
  double t32;
  double t34;
  double t38;
  double t4;
  double t5;
  double t50;
  double t51;
  double t58;
  double t6;
  double t61;
  double t69;
  double t7;
  double t72;
  double t76;
  double t78;
  double t8;
  double t9;
  double t90;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = std::pow(eta, 5.0);
  t6 = xi * xi;
  t7 = std::pow(xi, 3.0);
  t9 = std::pow(xi, 5.0);
  t12 = eta * 158.47675323169219;
  t19 = eta * 9.7574705142608167;
  t32 = eta * 9.7574724278917913;
  t34 = eta * 58.766509099728218;
  t72 = eta * 6.9929893470511049;
  t4 = t2 * t2;
  t8 = t6 * t6;
  t14 = t3 * 38.656864441892587;
  t17 = t2 * 114.9523599108952;
  t50 = t2 * 501.0383602766729;
  t51 = t3 * 219.77714320924181;
  t58 = t2 * 78.177891422146445;
  t61 = t2 * 59.661714239606852;
  t76 = t3 * 615.912032868982;
  t78 = t3 * 8.283033119707266;
  t90 = t2 * 20.6808809158801;
  t105 = t3 * 73.5500273661704;
  t38 = t4 * 259.3504259543372;
  t69 = t4 * 168.87507294402059;
  t106 = t4 * 17.5289863692744;
  t118 = t4 * 3.3629537739789779;
  t133 = t4 * 0.059449288784265218;
  t135 = ((-(eta * 165.531655671499) + t4 * 503.723998492346) +
          t2 * 758.25291463129508) -
         t3 * 1093.745430525091;
  t138 = ((eta * 4.3123121299698246 + t4 * 194.71447113380921) +
          t2 * 36.294567342544347) -
         t3 * 227.24897533255159;
  t139 = ((t2 * 539.2452152301305 - eta * 58.766508887052467) +
          t4 * 480.47870136891868) -
         t3 * 960.95740771199667;
  t144 = ((t4 * 15.0470457728708 + eta * 23.816927190137161) -
          t3 * 30.09409634718623) -
         t2 * 8.7698766158217314;
  t145 = ((t2 * 38.196832699950562 + t4 * 31.62678644092809) -
          eta * 3.9015526060694552) -
         t3 * 73.994441243849664;
  t149 = ((-(t2 * 3.8115266118404421) - eta * 6.9929879354500288) +
          t3 * 8.0452381998915747) +
         t4 * 0.059449686339120858;
  t150 = (((t2 * 432.09689290318221 - eta * 165.53165630672831) +
           t4 * 168.87506281297121) -
          t3 * 455.72313144010189) +
         20.28283203067684;
  t153 = (((eta * 22.984068642502891 + t4 * 31.626785689213641) -
           t3 * 52.512698294878938) +
          t2 * 5.9742187127844231) -
         8.0723747496220071;
  t137 = ((eta * 203.7175142733243 + t3 * 1004.795367380717) -
          t2 * 796.065492393157) -
         t4 * 412.44738926088382;
  t140 = ((eta * 22.984066639874129 + t3 * 729.18719012966551) -
          t4 * 411.12280127618533) -
         t2 * 345.53782523574722;
  t141 = ((eta * 23.816931829146689 + t3 * 644.99423710362942) -
          t2 * 256.36376105295938) -
         t4 * 412.44740787981681;
  t142 = ((-(t2 * 106.19214799746121) + eta * 14.948325572951889) +
          t3 * 108.7728104063407) -
         t4 * 17.52898798183136;
  t147 = ((eta * 5.2655734330098491 + t3 * 85.489683895937034) -
          t2 * 41.404824627705331) -
         t4 * 49.350433184761137;
  t148 = ((-(eta * 3.9015528921734441) + t2 * 16.539686149758889) +
          t3 * 0.89507485045248036) -
         t4 * 9.0438386535819753;
  t152 = (((eta * 4.3123102982361914 + t3 * 35.280277206286293) -
           t2 * 35.038119035572748) -
          t4 * 9.0438378107945585) +
         4.48936934184483;
  t155 = (((eta * 5.2655724470594807 + t3 * 1.17133699076664) -
           t4 * 0.58566903271396931) -
          t2 * 5.8512403112366034) +
         0.99999990873039446;
  sfvals[0] = ((((((eta * -14.99999996093378 + t2 * 70.000000043594426) -
                   t3 * 140.00000069119289) +
                  t4 * 126.00000118660719) -
                 t5 * 42.000000578074953) +
                (t9 * -42.000000578074953 -
                 t6 * (((eta * 501.03836594588762 - t2 * 979.2384142321639) +
                        t3 * 567.46562017083636) -
                       70.000000043594426))) +
               (-t7 * ((eta * -615.91204519235646 + t2 * 567.46562682499621) +
                       140.00000069119289) +
                t8 * (126.00000118660719 - eta * 259.350432608497))) +
              (-xi * ((((-t12 + t38) + t50) - t76) + 14.99999996093378) + 1.0);
  sfvals[1] = ((t9 * 41.999996744751463 +
                t7 * ((eta * 85.4896695594327 - t2 * 49.936086496039259) +
                      55.999994971562742)) +
               -t6 * (((eta * 41.404815986822911 - t2 * 37.31057321815981) +
                       t3 * 1.1713318154662049) +
                      13.9999986831593)) +
              (-t8 * (eta * 49.3504265093239 + 83.999992941885282) + t155 * xi);
  sfvals_tmp = eta * t8;
  sfvals[2] = (((((eta * 0.99999990873039446 - t2 * 13.9999986831593) +
                  t3 * 55.999994971562742) -
                 t4 * 83.999992941885282) +
                t5 * 41.999996744751463) +
               (t7 * (eta * 1.171338936250347 - t2 * 1.171345087298086) -
                t6 * ((eta * 5.8512432633420781 - t2 * 37.310596177734048) +
                      t3 * 49.936106568217468))) +
              (sfvals_tmp * -0.58566901725445342 + t147 * xi);
  sfvals[3] = ((t9 * 100.0722138247298 + t150 * xi) +
               t7 * ((eta * -1093.745456707268 + t2 * 876.047007761566) +
                     299.68786372166522)) +
              (t8 * (eta * 503.724012222635 - 288.46092311906341) +
               t6 * (((eta * 758.25292771841168 - t2 * 1260.94822700582) +
                      t3 * 641.27027217663192) -
                     131.5819864580084));
  sfvals[4] = ((t9 * -121.16746050312111 -
                t6 * (((eta * 345.53784249318568 - t2 * 347.431653622072) +
                       t3 * 96.490494851178525) -
                      98.4982376625818)) +
               t153 * xi) +
              (-t7 * ((eta * -729.18722046838968 + t2 * 418.07263639737079) +
                      289.45744183702578) +
               t8 * (320.19903942718707 - eta * 411.1228163600997));
  sfvals[5] = (((t9 * 121.1674595220625 + t152 * xi) +
                t8 * (eta * 194.7144862177235 - 285.63825840592062)) +
               -t7 * ((eta * 227.24900532948541 + t2 * 14.744022856687319) -
                      220.33588286127019)) +
              t6 * (((eta * 36.294584087297487 + t2 * 125.2963091978737) -
                     t3 * 97.334887363142926) -
                    60.354453319256983);
  sfvals[6] = (((t9 * -100.07220901034781 -
                 xi * ((((t19 + t78) - t90) - t133) + 2.6998265706962861)) +
                t8 * (eta * 3.362940043690628 + 211.90013385307509)) +
               -t7 * ((eta * 73.549998627191727 - t2 * 138.1268855895085) +
                      146.56629902627949)) +
              t6 * (((eta * 59.661697317285572 - t2 * 124.8580947822738) +
                     t3 * 34.751185824254406) +
                    37.438200754248463);
  sfvals[7] = ((sfvals_tmp * 168.8750641653038 + t149 * xi) +
               t6 * ((eta * 78.177879204274376 + t2 * 3.5312016284685912) -
                     t3 * 34.513406789988778)) +
              -t7 * (eta * 219.77712360339709 - t2 * 34.2299973222599);
  sfvals[8] = ((t6 * ((eta * 38.19683453567891 - t2 * 164.02313793713921) +
                      t3 * 61.159538200408868) +
                sfvals_tmp * 31.626785739127421) +
               t148 * xi) +
              -t7 * (eta * 73.994442101093085 - t2 * 222.9976218462748);
  sfvals[9] = ((t6 * ((eta * 16.539683375822719 - t2 * 164.02311934846031) +
                      t3 * 222.99760789847451) -
                sfvals_tmp * 9.0438390209894948) +
               t145 * xi) +
              t7 * (eta * 0.89507768875444382 + t2 * 61.1595234376381);
  sfvals[10] = (sfvals_tmp * 0.0594497062682195 +
                t6 * ((eta * -3.8115218172848242 + t2 * 3.531164804550972) +
                      t3 * 34.230028932840327)) +
               (t7 * (eta * 8.0452348138553678 - t2 * 34.513384301883271) -
                xi * (((t51 - t58) - t69) + t72));
  sfvals[11] = (((((eta * -2.6998265706962861 + t2 * 37.438200754248463) -
                   t3 * 146.56629902627949) +
                  t4 * 211.90013385307509) -
                 t5 * 100.07220901034781) +
                ((sfvals_tmp * 0.059449220453796657 +
                  t6 * ((eta * 20.680886082046751 - t2 * 124.8581354105028) +
                        t3 * 138.12692168679979)) -
                 xi * (((t32 - t61) + t105) - t118))) +
               -t7 * (eta * 8.2830363039124748 - t2 * 34.751208122926933);
  sfvals[12] = (((((eta * 4.48936934184483 - t2 * 60.354453319256983) +
                   t3 * 220.33588286127019) -
                  t4 * 285.63825840592062) +
                 t5 * 121.1674595220625) +
                ((sfvals_tmp * -9.0438373770265414 + t138 * xi) -
                 t6 * ((eta * 35.038122559562566 - t2 * 125.29633973252039) +
                       t3 * 14.744051869972671))) +
               t7 * (eta * 35.280278464774462 - t2 * 97.334900858745925);
  sfvals[13] = (((((eta * -8.0723747496220071 + t2 * 98.4982376625818) -
                   t3 * 289.45744183702578) +
                  t4 * 320.19903942718707) -
                 t5 * 121.16746050312111) +
                ((sfvals_tmp * 31.626786409990419 + t140 * xi) +
                 t6 * ((eta * 5.974223733109298 + t2 * 347.43161911110519) -
                       t3 * 418.07260507499558))) +
               -t7 * (eta * 52.512702033351843 + t2 * 96.490477891940969);
  sfvals[14] = ((((((eta * 20.28283203067684 - t2 * 131.5819864580084) +
                    t3 * 299.68786372166522) -
                   t4 * 288.46092311906341) +
                  t5 * 100.0722138247298) +
                 sfvals_tmp * 168.8750715180154) +
                t135 * xi) +
               (t6 * ((eta * 432.09689893053269 - t2 * 1260.9482161229371) +
                      t3 * 876.04698893770114) -
                t7 * (eta * 455.72314680772593 - t2 * 641.27027578810021));
  sfvals[15] = ((sfvals_tmp * -412.44742060142181 + t137 * xi) -
                t6 * ((eta * 796.06551909468533 - t2 * 2024.637859421618) +
                      t3 * 1252.389265741308)) +
               t7 * (eta * 1004.795425422783 - t2 * 1252.3892970818461);
  sfvals[16] =
      ((sfvals_tmp * 480.478701368921 - xi * (((t14 - t17) + t34) + t106)) +
       t6 * ((eta * 539.24521586815956 - t2 * 1017.143284128235) +
             t3 * 462.94974017936221)) +
      -t7 * (eta * 960.95740813735233 - t2 * 960.95742791755754);
  sfvals[17] = ((sfvals_tmp * -412.44737653928109 + t144 * xi) +
                t7 * (eta * 644.994169783548 - t2 * 397.40029868232182)) +
               t6 * ((eta * -256.36372043440412 + t2 * 202.4526648129922) +
                     t3 * 30.09412362983015);
  sfvals[18] =
      (-t6 * ((eta * 106.1921467733297 - t2 * 698.02432520425771) +
              t3 * 533.065669561202) -
       sfvals_tmp * 17.528986545024448) +
      (t7 * (eta * 108.7728077454023 - t2 * 533.065668124395) + t142 * xi);
  sfvals[19] = ((sfvals_tmp * 15.0470457728708 + t141 * xi) -
                t7 * (eta * 30.094087069166889 - t2 * 30.0940609487558)) +
               -t6 * ((eta * 8.7698905328506118 - t2 * 202.45277275163161) +
                      t3 * 397.40039270393191);
  sfvals[20] = ((t6 * ((eta * 114.9523580487364 - t2 * 1017.14327917978) +
                       t3 * 960.95742504393706) -
                 sfvals_tmp * 17.52898780608146) +
                t139 * xi) +
               -t7 * (eta * 38.656861355602437 - t2 * 462.94973586893678);
  sdvals[0] = ((t8 * -210.0000028903747 +
                ((((t12 - t38) + t76) - t50) - 14.99999996093378)) -
               t6 * ((eta * -1847.736135577069 + t2 * 1702.3968804749891) +
                     420.00000207357863)) +
              (-xi * (((eta * 1002.076731891775 - t2 * 1958.476828464328) +
                       t3 * 1134.9312403416729) -
                      140.00000008718891) +
               t7 * (504.0000047464286 - eta * 1037.401730433988));
  sdvals[1] =
      ((((((eta * 140.00000008718891 - t2 * 420.00000207357863) +
           t3 * 504.0000047464286) -
          t4 * 210.0000028903747) -
         t8 * 259.350432608497) +
        -t6 * ((eta * -1958.476828464328 + t2 * 1702.396860512509) +
               501.03836594588762)) +
       -xi * (((eta * 1002.076720553346 - t2 * 1847.7360986069459) +
               t3 * 1037.401703817349) -
              158.47675323169219)) +
      (t7 * (615.91204519235646 - eta * 1134.931253649992) - 14.99999996093378);
  sdvals[2] = ((t8 * 209.99998372375731 + t155) -
               xi * (((eta * 82.809631973645821 - t2 * 74.62114643631962) +
                      t3 * 2.34266363093241) +
                     27.9999973663186)) +
              (-t7 * (eta * 197.40170603729561 + 335.99997176754113) +
               t6 * ((eta * 256.46900867829811 - t2 * 149.80825948811781) +
                     167.99998491468821));
  sdvals[3] = ((t8 * -49.3504265093239 +
                t7 * (85.4896695594327 - eta * 99.872172992078518)) +
               -t6 * ((eta * -74.62114643631962 + t2 * 3.5139954463986149) +
                      41.404815986822911)) +
              -xi * (((eta * 11.70248062247321 - t2 * 3.5140109722999191) +
                      t3 * 2.3426761308558768) -
                     5.2655724470594807);
  sfvals_tmp = eta * t7;
  sdvals[4] = ((t147 - xi * ((eta * 11.70248652668416 - t2 * 74.6211923554681) +
                             t3 * 99.872213136434937)) -
               sfvals_tmp * 2.3426760690178141) +
              t6 * (eta * 3.51401680875104 - t2 * 3.514035261894259);
  sdvals[5] = ((((((eta * -27.9999973663186 + t2 * 167.99998491468821) -
                   t3 * 335.99997176754113) +
                  t4 * 209.99998372375731) -
                 t8 * 0.58566901725445342) +
                t7 * (1.171338936250347 - eta * 2.3426901745961728)) +
               -xi * (((eta * 82.809649255410662 - t2 * 256.46905168781109) +
                       t3 * 197.4017327390446) -
                      5.2655734330098491)) +
              (-t6 * ((eta * -74.6211923554681 + t2 * 149.8083197046524) +
                      5.8512432633420781) +
               0.99999990873039446);
  sdvals[6] = (((t8 * 500.361069123649 + t150) +
                t6 * ((eta * -3281.2363701218019 + t2 * 2628.1410232846979) +
                      899.06359116499561)) +
               t7 * (eta * 2014.89604889054 - 1153.8436924762541)) +
              xi * (((eta * 1516.5058554368229 - t2 * 2521.89645401164) +
                     t3 * 1282.5405443532641) -
                    263.16397291601692);
  sdvals[7] = (t8 * 503.724012222635 +
               t6 * ((eta * -2521.89645401164 + t2 * 1923.8108165298961) +
                     758.25292771841168)) +
              (xi * (((eta * 864.1937858063643 - t2 * 1367.1693943203061) +
                      t3 * 675.50025125188472) -
                     165.53165630672831) +
               t7 * (eta * 1752.0940155231319 - 1093.745456707268));
  sdvals[8] = ((t8 * -605.83730251560542 + t153) -
               xi * (((eta * 691.07568498637147 - t2 * 694.86330724414393) +
                      t3 * 192.980989702357) -
                     196.9964753251636)) +
              (-t6 * ((eta * -2187.5616614051692 + t2 * 1254.217909192113) +
                      868.37232551107729) +
               t7 * (1280.7961577087481 - eta * 1644.491265440399));
  sdvals[9] = ((t8 * -411.1228163600997 -
                t6 * ((eta * -694.86330724414393 + t2 * 289.47148455353562) +
                      345.53784249318568)) +
               xi * (((eta * 11.94843742556885 - t2 * 157.53809488463679) +
                      t3 * 126.50714275685461) +
                     22.984068642502891)) +
              t7 * (729.18722046838968 - eta * 836.14527279474169);
  sdvals[10] = (((t8 * 605.8372976103127 + t152) +
                 t7 * (eta * 778.85794487089413 - 1142.553033623682)) +
                xi * (((eta * 72.589168174594974 + t2 * 250.59261839574751) -
                       t3 * 194.66977472628591) -
                      120.708906638514)) +
               -t6 * ((eta * 681.74701598845627 + t2 * 44.232068570061969) -
                      661.00764858381058);
  sdvals[11] = ((t8 * 194.7144862177235 +
                 t6 * ((eta * 250.59261839574751 - t2 * 292.00466208942879) +
                       36.294584087297487)) +
                -xi * (((eta * 70.0762380711455 - t2 * 105.8408316188589) +
                        t3 * 36.175351243178227) -
                       4.3123102982361914)) +
               -t7 * (eta * 29.48804571337465 + 227.24900532948541);
  sdvals[12] = (((t8 * -500.36104505173881 +
                  ((((-t19 + t90) - t78) + t133) - 2.6998265706962861)) +
                 t7 * (eta * 13.45176017476251 + 847.60053541230025)) +
                -t6 * ((eta * 220.64999588157519 - t2 * 414.38065676852551) +
                       439.6988970788384)) +
               xi * (((eta * 119.3233946345711 - t2 * 249.71618956454759) +
                      t3 * 69.502371648508827) +
                     74.876401508496926);
  sdvals[13] = ((t8 * 3.362940043690628 +
                 t6 * ((eta * -249.71618956454759 + t2 * 104.25355747276321) +
                       59.661697317285572)) +
                xi * (((eta * 41.361761831760212 - t2 * 24.8490993591218) +
                       t3 * 0.2377971551370609) -
                      9.7574705142608167)) +
               t7 * (eta * 276.253771179017 - 73.549998627191727);
  sdvals[14] = ((t149 + sfvals_tmp * 675.5002566612153) +
                xi * ((eta * 156.35575840854881 + t2 * 7.0624032569371824) -
                      t3 * 69.026813579977556)) +
               -t6 * (eta * 659.3313708101914 - t2 * 102.6899919667797);
  sdvals[15] = ((t8 * 168.8750641653038 +
                 t6 * ((eta * 7.0624032569371824 - t2 * 103.54022036996631) +
                       78.177879204274376)) +
                -xi * (((eta * 7.6230532236808841 - t2 * 24.135714599674731) -
                        t3 * 0.23779874535648349) +
                       6.9929879354500288)) +
               t7 * (eta * 68.4599946445198 - 219.77712360339709);
  sdvals[16] =
      ((t148 + xi * ((eta * 76.39366907135782 - t2 * 328.04627587427842) +
                     t3 * 122.31907640081771)) +
       sfvals_tmp * 126.5071429565097) +
      -t6 * (eta * 221.98332630327931 - t2 * 668.99286553882428);
  sdvals[17] = ((t8 * 31.626785739127421 +
                 t6 * ((eta * -328.04627587427842 + t2 * 183.47861460122661) +
                       38.19683453567891)) +
                xi * (((eta * 33.079372299517772 + t2 * 2.6852245513574409) -
                       t3 * 36.1753546143279) -
                      3.9015528921734441)) +
               t7 * (eta * 445.99524369254948 - 73.994442101093085);
  sdvals[18] = ((t145 - sfvals_tmp * 36.175356083957979) +
                xi * ((eta * 33.079366751645438 - t2 * 328.04623869692062) +
                      t3 * 445.99521579694908)) +
               t6 * (eta * 2.685233066263331 + t2 * 183.47857031291429);
  sdvals[19] = ((t8 * -9.0438390209894948 +
                 t7 * (eta * 122.3190468752762 + 0.89507768875444382)) +
                t6 * ((eta * -328.04623869692062 + t2 * 668.99282369542368) +
                      16.539683375822719)) +
               xi * (((eta * 76.393665399901124 - t2 * 221.983323731549) +
                      t3 * 126.5071457637124) -
                     3.9015526060694552);
  sdvals[20] = (((((t58 + t69) - t51) - t72) + sfvals_tmp * 0.237798825072878) +
                t6 * (eta * 24.1357044415661 - t2 * 103.5401529056498)) +
               xi * ((eta * -7.6230436345696484 + t2 * 7.0623296091019441) +
                     t3 * 68.460057865680653);
  sdvals[21] = ((t8 * 0.0594497062682195 +
                 t6 * ((eta * 7.0623296091019441 + t2 * 102.690086798521) -
                       3.8115218172848242)) +
                xi * (((eta * 156.35578284429289 - t2 * 659.33142962772547) +
                       t3 * 675.50029177608224) -
                      6.9929893470511049)) +
               t7 * (8.0452348138553678 - eta * 69.026768603766541);
  sdvals[22] =
      (((((t61 - t32) + t118) - t105) + sfvals_tmp * 0.23779688181518671) +
       xi * ((eta * 41.361772164093509 - t2 * 249.71627082100551) +
             t3 * 276.25384337359969)) +
      -t6 * (eta * 24.849108911737432 - t2 * 104.25362436878081);
  sdvals[23] = (((((eta * 74.876401508496926 - t2 * 439.6988970788384) +
                   t3 * 847.60053541230025) -
                  t4 * 500.36104505173881) +
                 t8 * 0.059449220453796657) +
                (t7 * (eta * 69.502416245853865 - 8.2830363039124748) +
                 t6 * ((eta * -249.71627082100551 + t2 * 414.3807650603996) +
                       20.680886082046751))) +
               (xi * (((eta * 119.3234284792137 - t2 * 220.65008209851121) +
                       t3 * 13.45181509591591) -
                      9.7574724278917913) -
                2.6998265706962861);
  sdvals[24] = ((t138 - sfvals_tmp * 36.175349508106173) +
                t6 * (eta * 105.84083539432341 - t2 * 292.00470257623778)) +
               -xi * ((eta * 70.076245119125147 - t2 * 250.5926794650409) +
                      t3 * 29.488103739945341);
  sdvals[25] =
      ((((((eta * -120.708906638514 + t2 * 661.00764858381058) -
           t3 * 1142.553033623682) +
          t4 * 605.8372976103127) -
         t8 * 9.0438373770265414) +
        -t6 * ((eta * -250.5926794650409 + t2 * 44.23215560991801) +
               35.038122559562566)) +
       xi * (((eta * 72.5891346850887 - t2 * 681.74692599765467) +
              t3 * 778.85788453523685) +
             4.3123121299698246)) +
      (t7 * (35.280278464774462 - eta * 194.66980171749191) + 4.48936934184483);
  sdvals[26] = ((t140 + sfvals_tmp * 126.50714563996171) +
                xi * ((eta * 11.9484474662186 + t2 * 694.8632382222105) -
                      t3 * 836.14521014999127)) +
               -t6 * (eta * 157.5381061000555 + t2 * 289.47143367582288);
  sdvals[27] = ((((((eta * 196.9964753251636 - t2 * 868.37232551107729) +
                    t3 * 1280.7961577087481) -
                   t4 * 605.83730251560542) +
                  t8 * 31.626786409990419) +
                 t6 * ((eta * 694.8632382222105 - t2 * 1254.2178152249869) +
                       5.974223733109298)) +
                -xi * (((eta * 691.07565047149433 - t2 * 2187.5615703889962) +
                        t3 * 1644.4912051047411) -
                       22.984066639874129)) +
               (-t7 * (eta * 192.98095578388191 + 52.512702033351843) -
                8.0723747496220071);
  sdvals[28] = ((t135 + sfvals_tmp * 675.5002860720615) -
                t6 * (eta * 1367.169440423178 - t2 * 1923.8108273643011)) +
               xi * ((eta * 864.19379786106549 - t2 * 2521.8964322458742) +
                     t3 * 1752.0939778754021);
  sdvals[29] = (((((eta * -263.16397291601692 + t2 * 899.06359116499561) -
                   t3 * 1153.8436924762541) +
                  t4 * 500.361069123649) +
                 t8 * 168.8750715180154) +
                xi * (((eta * 1516.50582926259 - t2 * 3281.2362915752742) +
                       t3 * 2014.8959939693841) -
                      165.531655671499)) +
               ((t6 * ((eta * -2521.8964322458742 + t2 * 2628.1409668131032) +
                       432.09689893053269) +
                 t7 * (eta * 1282.5405515762 - 455.72314680772593)) +
                20.28283203067684);
  sdvals[30] = ((t137 - sfvals_tmp * 1649.789682405687) +
                t6 * (eta * 3014.3862762683489 - t2 * 3757.1678912455382)) +
               -xi * ((eta * 1592.1310381893711 - t2 * 4049.2757188432361) +
                      t3 * 2504.778531482616);
  sdvals[31] = (t8 * -412.44742060142181 -
                t6 * ((eta * -4049.2757188432361 + t2 * 3757.167797223924) +
                      796.06551909468533)) +
               (-xi * (((eta * 1592.130984786314 - t2 * 3014.38610214215) +
                        t3 * 1649.7895570435351) -
                       203.7175142733243) +
                t7 * (1004.795425422783 - eta * 2504.7785941636921));
  sdvals[32] =
      (((((t17 - t14) - t34) - t106) + sfvals_tmp * 1921.914805475684) +
       xi * ((eta * 1078.4904317363189 - t2 * 2034.28656825647) +
             t3 * 925.89948035872442)) +
      -t6 * (eta * 2882.8722244120572 - t2 * 2882.872283752673);
  sdvals[33] = (t8 * 480.478701368921 -
                xi * (((eta * -229.90471982179039 + t2 * 115.9705933256778) +
                       t3 * 70.115945477097611) +
                      58.766509099728218)) +
               (t6 * ((eta * -2034.28656825647 + t2 * 1388.849220538086) +
                      539.24521586815956) +
                t7 * (eta * 1921.9148558351151 - 960.95740813735233));
  sdvals[34] = ((t144 - sfvals_tmp * 1649.7895061571239) +
                xi * ((eta * -512.72744086880823 + t2 * 404.90532962598451) +
                      t3 * 60.188247259660287)) +
               t6 * (eta * 1934.982509350644 - t2 * 1192.200896046965);
  sdvals[35] = ((t8 * -412.44737653928109 +
                 t6 * ((eta * 404.90532962598451 + t2 * 90.282370889490437) -
                       256.36372043440412)) +
                -xi * (((eta * 17.539753231643459 + t2 * 90.2822890415587) -
                        t3 * 60.188183091483211) -
                       23.816927190137161)) +
               t7 * (644.994169783548 - eta * 794.80059736464364);
  sdvals[36] =
      ((t142 - xi * ((eta * 212.38429354665939 - t2 * 1396.048650408515) +
                     t3 * 1066.1313391224039)) -
       sfvals_tmp * 70.115946180097808) +
      t6 * (eta * 326.3184232362068 - t2 * 1599.1970043731851);
  sdvals[37] = (t8 * -17.528986545024448 -
                xi * (((eta * 212.3842959949225 - t2 * 326.3184312190221) +
                       t3 * 70.115951927325426) -
                      14.948325572951889)) +
               (t7 * (108.7728077454023 - eta * 1066.13133624879) -
                t6 * ((eta * -1396.048650408515 + t2 * 1599.1970086836061) +
                      106.1921467733297));
  sdvals[38] =
      ((t141 - xi * ((eta * 17.53978106570122 - t2 * 404.90554550326328) +
                     t3 * 794.80078540786383)) +
       sfvals_tmp * 60.188183091483218) +
      -t6 * (eta * 90.282261207500667 - t2 * 90.282182846267389);
  sdvals[39] = ((t8 * 15.0470457728708 -
                 t6 * ((eta * -404.90554550326328 + t2 * 1192.201178111796) +
                       8.7698905328506118)) +
                t7 * (eta * 60.188121897511593 - 30.094087069166889)) +
               -xi * (((eta * 512.72752210591875 - t2 * 1934.9827113108879) +
                       t3 * 1649.789631519267) -
                      23.816931829146689);
  sdvals[40] =
      ((t139 + xi * ((eta * 229.9047160974728 - t2 * 2034.28655835956) +
                     t3 * 1921.9148500878739)) -
       t6 * (eta * 115.97058406680731 - t2 * 1388.849207606811)) +
      sfvals_tmp * -70.11595122432584;
  sdvals[41] = (t8 * -17.52898780608146 +
                xi * (((eta * 1078.490430460261 - t2 * 2882.87222313599) +
                       t3 * 1921.9148054756749) -
                      58.766508887052467)) +
               (t6 * ((eta * -2034.28655835956 + t2 * 2882.872275131811) +
                      114.9523580487364) +
                t7 * (eta * 925.89947173787368 - 38.656861355602437));
}

// tri_fek_28_ncoords - Obtain nodal coordinates in master element for
void tri_fek_28_ncoords(double natcoords[56])
{
  static const double dv[56]{0.0,
                             0.0,
                             1.0,
                             0.0,
                             0.0,
                             1.0,
                             0.084888049683767369,
                             0.0,
                             0.26557559901065381,
                             0.0,
                             0.49999999813735491,
                             0.0,
                             0.73442439726405584,
                             0.0,
                             0.9151119465909423,
                             0.0,
                             0.91511195031623271,
                             0.084888049683767369,
                             0.73442439726405584,
                             0.26557560273594411,
                             0.4999999962747097,
                             0.5000000037252903,
                             0.26557560273594411,
                             0.73442439726405584,
                             0.084888049683767369,
                             0.91511195031623271,
                             0.0,
                             0.9151119465909423,
                             0.0,
                             0.73442439726405584,
                             0.0,
                             0.49999999813735491,
                             0.0,
                             0.26557559901065381,
                             0.0,
                             0.084888049683767369,
                             0.1063354596038695,
                             0.1063354633291599,
                             0.31626978882180318,
                             0.1171809132887574,
                             0.56654928788943937,
                             0.1171809132887574,
                             0.7873290670669707,
                             0.1063354596038695,
                             0.56654929788943942,
                             0.31626978882180318,
                             0.31626979882180323,
                             0.56654928788943937,
                             0.1063354596038695,
                             0.7873290670669707,
                             0.11718090956346711,
                             0.56654929788943942,
                             0.11718090956346711,
                             0.31626979882180323,
                             0.33333332875823662,
                             0.33333332875823662};
  std::copy(&dv[0], &dv[56], &natcoords[0]);
}

// tri_fek_28_sfunc - Compute shape functions and their derivatives of
void tri_fek_28_sfunc(double xi, double eta, double sfvals[28])
{
  double sfvals_tmp;
  double t10;
  double t11;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = std::pow(eta, 5.0);
  t7 = xi * xi;
  t8 = std::pow(xi, 3.0);
  t10 = std::pow(xi, 5.0);
  t4 = t2 * t2;
  t6 = std::pow(t2, 3.0);
  t9 = t7 * t7;
  t11 = std::pow(t7, 3.0);
  sfvals[0] = ((((((((eta * -21.00000037073665 + t2 * 140.000003983934) -
                     t3 * 420.0000148801609) +
                    t4 * 630.00002533652253) -
                   t5 * 462.0000201891209) +
                  t6 * 132.0000061195619) +
                 (t11 * 132.0000061195619 +
                  t10 * (eta * 1048.1934069073229 - 462.0000201891209))) +
                (t8 * (((eta * 3250.0875097435451 - t2 * 6781.3714528894607) +
                        t3 * 4172.7330616918307) -
                       420.0000148801609) +
                 (((((eta * 325.92607485546279 + t5 * 1048.193392010169) +
                     t3 * 3250.0874804666219) -
                    t4 * 3032.0350961284139) -
                   t2 * 1570.171850758597) -
                  21.00000037073665) *
                     xi)) +
               t9 * ((eta * -3032.0351328120928 + t2 * 3002.5599395722) +
                     630.00002533652253)) +
              (t7 * ((((eta * -1570.171858248995 + t2 * 5237.654749703468) -
                       t3 * 6781.37141522589) +
                      t4 * 3002.559908797999) +
                     140.000003983934) +
               1.0);
  sfvals[1] = (((t11 * 131.99999628479529 -
                 xi * (((((eta * 8.671383657182167 + t4 * 0.30657565325906222) -
                          t2 * 8.3648022245079776) -
                         t3 * 0.61315937081908445) +
                        t5 * 2.3444904749865271E-6) +
                       0.99999992549419592)) +
                -t8 * (((eta * 403.880863763396 - t2 * 306.85894676995508) +
                        t3 * 4.4271830235682037) +
                       119.99999467250061)) +
               t7 * ((((eta * 109.8138815574714 - t2 * 102.7429251991616) +
                       t3 * 3.8140392696516958) -
                      t4 * 2.213609916882298) +
                     19.999998880620549)) +
              (-t10 * (eta * 256.19331567159082 + 329.99998948264249) +
               t9 * ((eta * 558.9316810182695 - t2 * 258.40688515216328) +
                     299.99998891522148));
  sfvals_tmp = eta * t10;
  sfvals[2] = ((((((eta * -0.99999992549419592 + t2 * 19.999998880620549) -
                   t3 * 119.99999467250061) +
                  t4 * 299.99998891522148) -
                 t5 * 329.99998948264249) +
                ((t6 * 131.99999628479529 -
                  t9 * (eta * 0.3065710434644609 + t2 * 2.213615781946046)) -
                 sfvals_tmp * 4.3135075421904053E-6)) +
               (t7 * (((eta * 8.3648089772031913 - t2 * 102.74299182296009) +
                       t3 * 306.85910925895217) -
                      t4 * 258.40698751743412) -
                xi * ((((-(t2 * 109.81390707850819) + t5 * 256.19335179468391) -
                        t4 * 558.93177394708857) +
                       t3 * 403.88094381286618) +
                      eta * 8.6713859642770874))) +
              t8 * ((eta * 0.6131522546389333 + t2 * 3.8140852475693672) -
                    t3 * 4.4272551287458661);
  sfvals[3] = (((t11 * -318.263670445131 +
                 t10 * (1086.9060613246129 - eta * 2144.9508329317282)) -
                t9 * ((eta * -5877.289530233772 + t2 * 5170.200527782521) +
                      1426.7203547843869)) +
               ((((((t4 * 2044.525649661324 - eta * 346.03389774688537) +
                    t2 * 1387.7749473923229) -
                   t3 * 2478.73789961823) -
                  t5 * 635.93195313199442) +
                 28.40315344346228) *
                    xi -
                t8 * (((eta * 5783.6258204709366 - t2 * 10554.885519308211) +
                       t3 * 5817.65272301495) -
                      891.54561380300618))) +
              -t7 * ((((eta * -2394.686273899863 + t2 * 6843.144259931837) -
                       t3 * 7812.145231392954) +
                      t4 * 3110.0713108510208) +
                     261.87080334156337);
  sfvals[4] = ((((t11 * 397.46366005821722 +
                  t10 * (eta * 1982.358090995197 - 1285.566156897163)) +
                 t9 * ((eta * -4831.59270949642 + t2 * 3336.38036931205) +
                       1555.570636437717)) +
                -xi * (((((t5 * 120.9787104207699 - eta * 57.052415531159312) +
                          t3 * 180.8365713925044) -
                         t4 * 287.03680764175277) +
                        t2 * 30.93597128483972) +
                       11.337970074798079)) +
               t7 * ((((eta * -1146.532790987477 + t2 * 2120.21088817959) -
                       t3 * 1496.7172695423119) +
                      t4 * 323.55829633582022) +
                     195.40531326150781)) +
              t8 * (((eta * 3942.8149236636709 - t2 * 5328.32008010227) +
                     t3 * 2196.02294513166) -
                    851.53548278548055);
  sfvals[5] = (((t11 * -422.39999074262067 +
                 (((((t3 * 184.008369601338 + eta * 1.483201007077666) -
                     t4 * 126.9251895235401) -
                    t2 * 92.208091674668879) +
                   t5 * 27.24171100292072) +
                  6.3999995868725206) *
                     xi) +
                t8 * (((eta * -1475.2659985543071 + t2 * 437.3261831331161) +
                       t3 * 385.13982812140267) +
                      652.79997780212113)) +
               (t10 * (1267.199969080737 - eta * 1267.200033798342) -
                t9 * ((eta * -2523.233044940635 + t2 * 863.43013617002237) +
                      1382.3999612515011))) +
              t7 * ((((eta * 211.34978638890971 + t2 * 395.22883251457768) -
                      t3 * 918.390333284306) +
                     t4 * 431.0116322386246) -
                    121.5999944756086);
  sfvals[6] =
      ((((t11 * 397.46365649899508 -
          xi * (((((eta * 16.819178500689809 - t2 * 68.750078984309724) +
                   t3 * 68.027857680838892) -
                  t4 * 21.657401569321308) +
                 t5 * 1.4605149873586529) +
                4.0999293847436764)) +
         t10 * (eta * 402.42398552948862 - 1099.215787686172)) +
        -t8 * (((eta * 81.245738063948565 - t2 * 1311.431065819535) +
                t3 * 724.80893050947145) +
               464.35868026675172)) +
       t7 * ((((eta * 122.86045607546259 - t2 * 628.37331286851054) +
               t3 * 528.77547996309875) -
              t4 * 107.85419694106) +
             80.516011536914164)) +
      -t9 * ((eta * 415.8815543813401 + t2 * 613.45491952527652) -
             1089.6947293017579);
  sfvals[7] = ((t11 * -318.2636577738179 +
                (-t7 * ((((eta * 207.31645405831409 - t2 * 375.36636075694719) +
                          t3 * 121.09114062431109) +
                         t4 * 2.7631040070869379) +
                        52.450529845804539) +
                 (((((eta * 18.233776814757618 + t3 * 15.37146288022497) -
                     t2 * 34.619698810623063) +
                    t5 * 3.117514826433577) -
                   t4 * 4.7378024362309139) +
                  2.634746725437807) *
                     xi)) +
               (t10 * (eta * 235.36872634414991 + 822.67592384974932) +
                t8 * (((eta * 659.39540023520874 - t2 * 1037.18191947943) +
                       t3 * 221.08534432175281) +
                      311.54858099976627))) +
              -t9 * ((eta * 734.08460251815939 - t2 * 780.598347273241) +
                     766.145063955331);
  sfvals[8] = (-t7 * (((eta * 140.604352625109 + t2 * 87.271936726343284) -
                       t3 * 175.5426275065974) +
                      t4 * 18.350646151093631) +
               ((t8 * ((eta * 659.9547119087789 + t2 * 87.6035954040094) -
                       t3 * 263.31295303737721) +
                 sfvals_tmp * 635.93187054059513) +
                ((((eta * 8.25486604172513 - t3 * 27.595387225284359) +
                   t2 * 14.24302315156161) +
                  t4 * 10.84975227219549) -
                 t5 * 3.1175074843283381) *
                    xi)) +
              -t9 * (eta * 1135.133942686442 - t2 * 69.588397998904043);
  sfvals[9] = (((sfvals_tmp * 120.9787007748926 +
                 ((((t5 * 1.460509052851773 + eta * 4.0755611195914474) +
                    t4 * 14.35484009732564) -
                   t2 * 19.99423271735499) -
                  t3 * 3.996606911555515) *
                     xi) -
                t9 * (eta * 317.85672191409208 - t2 * 928.45181388855542)) +
               -t7 * (((eta * 61.011935580431377 - t2 * 298.83814113303129) +
                       t3 * 39.939367551964253) +
                      t4 * 100.5516465669705)) +
              t8 * ((eta * 242.47642568766241 - t2 * 1068.9428289060349) +
                    t3 * 307.99730918947438);
  sfvals[10] = ((sfvals_tmp * -27.241700656661429 +
                 ((((t4 * 9.283354498866089 + t3 * 51.275283060181692) +
                    eta * 2.400077366758619) -
                   t5 * 27.24170557222828) -
                  t2 * 29.317009606608782) *
                     xi) -
                t7 * (((eta * 29.317011815839521 - t2 * 379.95344634539663) +
                       t3 * 768.5227213317072) -
                      t4 * 294.80308711961789)) +
               (t8 * ((eta * 51.275288805506243 - t2 * 768.52269424987855) +
                      t3 * 1066.489548430148) +
                t9 * (eta * 9.28334604720544 + t2 * 294.80306141726231));
  sfvals[11] = (((sfvals_tmp * 1.460504294981618 +
                  ((((eta * 4.0755611597693218 + t5 * 120.9787002107773) +
                     t3 * 242.47642163095529) -
                    t4 * 317.85671735776072) -
                   t2 * 61.011935747517768) *
                      xi) -
                 t8 * ((eta * 3.9966104831645941 + t2 * 39.939386270622848) -
                       t3 * 307.997286389233)) +
                -t7 * (((eta * 19.994231932867919 - t2 * 298.83813859928091) +
                        t3 * 1068.942783674969) -
                       t4 * 928.4517769839764)) +
               t9 * (eta * 14.35484741074044 - t2 * 100.5516251522513);
  sfvals[12] = ((sfvals_tmp * -3.1175044667845131 +
                 t9 * (eta * 10.8497489060677 - t2 * 18.350660403768948)) +
                (t7 * (((eta * 14.243018973494721 - t2 * 87.271882601249672) +
                        t3 * 87.603426086837842) +
                       t4 * 69.588514951361134) +
                 ((((eta * 8.25486793740524 - t4 * 1135.1340416250521) +
                    t3 * 659.95479397482143) +
                   t5 * 635.93190946076982) -
                  t2 * 140.60437648184561) *
                     xi)) +
               -t8 * ((eta * 27.59538450776342 - t2 * 175.54261316177929) +
                      t3 * 263.31288656300171);
  sfvals[13] = ((((((eta * 2.634746725437807 - t2 * 52.450529845804539) +
                    t3 * 311.54858099976627) -
                   t4 * 766.145063955331) +
                  t5 * 822.67592384974932) +
                 (((t6 * -318.2636577738179 + sfvals_tmp * 3.1175166533020149) +
                   ((((eta * 18.23378199921089 + t3 * 659.39557383437523) +
                      t5 * 235.3688042009351) -
                     t4 * 734.08480266559172) -
                    t2 * 207.31651055128651) *
                       xi) +
                  t8 * ((eta * 15.37147900872638 - t2 * 121.0912639644794) +
                        t3 * 221.085506643802))) +
                -t7 * (((eta * 34.619714574116877 - t2 * 375.36651447556642) +
                        t3 * 1037.1822699635379) -
                       t4 * 780.59856149242717)) +
               -t9 * (eta * 4.7378098125602133 + t2 * 2.7630762205703991);
  sfvals[14] = ((((((eta * -4.0999293847436764 + t2 * 80.516011536914164) -
                    t3 * 464.35868026675172) +
                   t4 * 1089.6947293017579) -
                  t5 * 1099.215787686172) +
                 t6 * 397.46365649899508) +
                ((sfvals_tmp * -1.4605168286570711 -
                  xi * ((((t4 * 415.88131048776842 + eta * 16.819185060112229) -
                          t5 * 402.42388968821808) +
                         t3 * 81.245949254646973) -
                        t2 * 122.86052577328211)) +
                 t7 * (((eta * 68.750100646324313 - t2 * 628.37350730294622) +
                        t3 * 1311.4314758474829) -
                       t4 * 613.455161148747))) +
               (-t8 * ((eta * 68.027883251126383 - t2 * 528.77566023530119) +
                       t3 * 724.80912990273237) +
                t9 * (eta * 21.65741387831504 - t2 * 107.8542523934192));
  sfvals[15] = (((((((eta * 6.3999995868725206 - t2 * 121.5999944756086) +
                     t3 * 652.79997780212113) -
                    t4 * 1382.3999612515011) +
                   t5 * 1267.199969080737) -
                  t6 * 422.39999074262067) +
                 -t9 * (eta * 126.9252184198177 - t2 * 431.01171850151388)) +
                ((-t7 * (((eta * 92.208120997458607 - t2 * 395.22905456055429) -
                          t3 * 437.32576974318681) +
                         t4 * 863.42991308913349) +
                  sfvals_tmp * 27.24171768388749) +
                 ((((t4 * 2523.232845746903 + t2 * 211.34971953373139) -
                    t3 * 1475.26581385022) +
                   eta * 1.483207991314871) -
                  t5 * 1267.1999594377539) *
                     xi)) +
               t8 * ((eta * 184.00841415520139 - t2 * 918.39057491802248) +
                     t3 * 385.14005642362662);
  sfvals[16] = (((((((eta * -11.337970074798079 + t2 * 195.40531326150781) -
                     t3 * 851.53548278548055) +
                    t4 * 1555.570636437717) -
                   t5 * 1285.566156897163) +
                  t6 * 397.46366005821722) +
                 ((t9 * (eta * 287.03688177576532 + t2 * 323.55819154414422) -
                   sfvals_tmp * 120.9787355126963) +
                  ((((eta * 57.052409116386677 + t3 * 3942.8148064572952) +
                     t5 * 1982.3580453270761) -
                    t2 * 1146.532744785912) -
                   t4 * 4831.5925864087167) *
                      xi)) +
                -t7 * (((eta * 30.9359338939282 - t2 * 2120.210705280409) +
                        t3 * 5328.3197888800078) -
                       t4 * 3336.3802219774989)) +
               -t8 * ((eta * 180.8366514107293 + t2 * 1496.717028664227) -
                      t3 * 2196.0227637654812);
  sfvals[17] = ((((((eta * 28.40315344346228 - t2 * 261.87080334156337) +
                    t3 * 891.54561380300618) -
                   t4 * 1426.7203547843869) +
                  t5 * 1086.9060613246129) -
                 t6 * 318.263670445131) +
                ((-t8 * ((eta * 2478.737975343593 - t2 * 7812.1453730480143) +
                         t3 * 5817.6527748319641) -
                  sfvals_tmp * 635.93198379183184) -
                 xi * ((((t3 * 5783.6257952213673 + eta * 346.03390024817378) -
                         t4 * 5877.2894866391443) +
                        t5 * 2144.950812735502) -
                       t2 * 2394.6862745499839))) +
               (t9 * (eta * 2044.5257318336221 - t2 * 3110.0713944336958) +
                t7 * (((eta * 1387.7749741065149 - t2 * 6843.1443195133361) +
                       t3 * 10554.885532023751) -
                      t4 * 5170.2005064804735));
  sfvals[18] = ((sfvals_tmp * 1587.819174363809 -
                 t7 * (((eta * 2500.12827244441 - t2 * 10762.359772764759) +
                        t3 * 14802.08203619065) -
                       t4 * 6566.1048781336349)) +
                ((((-(t2 * 2500.1282323768251) + eta * 422.51411244907769) +
                   t3 * 5294.2788864859931) +
                  t5 * 1587.819101342915) -
                 t4 * 4804.4838679011618) *
                    xi) +
               (t8 * ((eta * 5294.2790370055691 - t2 * 14802.08222351328) +
                      t3 * 9956.5716304520774) -
                t9 * (eta * 4804.4840513740464 - t2 * 6566.1050280251666));
  sfvals[19] = (((t9 * (eta * 5325.7764649481142 - t2 * 6082.90093282478) -
                  sfvals_tmp * 1978.2111911735331) -
                 xi * ((((eta * 124.30174448469469 + t3 * 338.70733435288031) -
                         t2 * 400.917052595231) -
                        t5 * 102.19667108060671) +
                       t4 * 40.104644838262672)) +
                t7 * (((eta * 1671.635774048272 - t2 * 5420.2135047918146) +
                       t3 * 5636.0193710904659) -
                      t4 * 1875.4665066498139)) +
               -t8 * ((eta * 4894.8993033381576 - t2 * 11048.51918254353) +
                      t3 * 6082.3529193816676);
  sfvals[20] = (((-t9 * (eta * 4565.2793797560516 - t2 * 3808.154858697053) +
                  sfvals_tmp * 1978.2111819179249) -
                 xi * ((((-(eta * 53.678187956052838) + t3 * 108.679818094666) -
                         t4 * 157.09467730361291) +
                        t5 * 46.618739455097987) +
                       t2 * 55.474307709901709)) +
                -t7 * (((eta * 840.51516232831273 - t2 * 1349.6541922363319) +
                        t3 * 153.46233291480269) +
                       t4 * 343.70156680200392)) +
               t8 * ((eta * 3373.9051722103868 - t2 * 4978.0329727274784) +
                     t3 * 1532.860849432222);
  sfvals[21] = (t9 * (eta * 3134.6114614983712 - t2 * 1372.990540133439) +
                t8 * ((eta * -1954.5342762170851 + t2 * 1076.1089489285671) +
                      t3 * 429.6568598829702)) +
               ((sfvals_tmp * -1587.819029947193 +
                 t7 * (((eta * 433.99617991681907 - t2 * 110.8602869191362) -
                        t3 * 511.70991757368517) +
                       t4 * 214.82836371515651)) -
                xi * ((((eta * 26.254335250912121 - t3 * 82.053119633529548) +
                        t4 * 41.02654834155657) +
                       t2 * 14.772229687002771) +
                      t5 * 6.3540580719209678E-6));
  sfvals[22] = ((t7 * (((eta * 166.13388398557279 - t2 * 1333.4766218118691) +
                        t3 * 1224.2722824786531) -
                       t4 * 110.6077346584252) -
                 sfvals_tmp * 102.1967068196229) -
                xi * ((((eta * 11.975131280659641 + t4 * 75.9990539682934) -
                        t2 * 94.866895154237142) +
                       t3 * 53.511458182855307) -
                      t5 * 46.618748277571207)) +
               (t9 * (eta * 470.8787734452913 - t2 * 2386.4497730840549) -
                t8 * ((eta * 522.84081933058155 - t2 * 3749.3612381234789) +
                      t3 * 2441.4795492004282));
  sfvals[23] = (t7 * (((eta * 94.866902605343469 - t2 * 1333.4766800007451) +
                       t3 * 3749.361257146727) -
                      t4 * 2386.4497414098491) +
                ((-t8 * ((eta * 53.511471683125457 - t2 * 1224.272447055612) +
                         t3 * 2441.4796505935728) +
                  sfvals_tmp * 46.618756103634723) -
                 xi * ((((t3 * 522.8407767445151 + eta * 11.9751313038326) +
                         t5 * 102.1966757629833) -
                        t4 * 470.87870553555422) -
                       t2 * 166.13387827577691))) +
               -t9 * (eta * 75.999055722020131 + t2 * 110.60782884307309);
  sfvals[24] = (t8 * ((eta * 82.053119722241192 - t2 * 511.70983074170658) +
                      t3 * 429.6566464640826) -
                t9 * (eta * 41.026555740948183 - t2 * 214.8283779238277)) +
               ((sfvals_tmp * -5.1804845841027186E-6 -
                 xi * ((((eta * 26.254341105207359 - t4 * 3134.6117730530809) +
                         t5 * 1587.819153861871) +
                        t3 * 1954.5345337674889) -
                       t2 * 433.99625568148628)) -
                t7 * (((eta * 14.772217695601061 + t2 * 110.860469059509) -
                       t3 * 1076.109469115479) +
                      t4 * 1372.9908905021009));
  sfvals[25] = (((t9 * (eta * 157.0946838168089 - t2 * 343.70149314566783) -
                  sfvals_tmp * 46.618745536817677) +
                 ((((t3 * 3373.905417245478 + t5 * 1978.211279366473) +
                    eta * 53.6781956358675) -
                   t4 * 4565.2796430628287) -
                  t2 * 840.5152491849899) *
                     xi) +
                -t8 * ((eta * 108.67980570776319 + t2 * 153.4625700572644) -
                       t3 * 1532.8611072511169)) +
               -t7 * (((eta * 55.474328208095578 - t2 * 1349.6544420674561) +
                       t3 * 4978.0334745024293) -
                      t4 * 3808.1551342264411);
  sfvals[26] = ((sfvals_tmp * 102.1966762905637 -
                 xi * ((((t3 * 4894.8993316730339 - t2 * 1671.6358010814711) +
                         t5 * 1978.2111800661819) -
                        t4 * 5325.7764607142763) +
                       eta * 124.3017500565313)) +
                t7 * (((eta * 400.917073199764 - t2 * 5420.2136041355561) +
                       t3 * 11048.5192789442) -
                      t4 * 6082.9009483948976)) +
               (-t9 * (eta * 40.10464469690524 + t2 * 1875.46653829629) -
                t8 * ((eta * 338.70735473689109 - t2 * 5636.0194761478961) +
                      t3 * 6082.35298291557));
  sfvals[27] =
      (((sfvals_tmp * -1.770298779578048E-6 -
         xi * ((((-(eta * 31.71506767754061) + t4 * 310.07564828200731) -
                 t3 * 620.15130314132) +
                t2 * 341.790720098438) +
               t5 * 2.4384153625978569E-6)) -
        t9 * (eta * 310.075659378618 - t2 * 2663.3740951890209)) +
       -t7 * (((eta * 341.79072899005757 - t2 * 3593.601064067605) +
               t3 * 5946.899498607464) -
              t4 * 2663.374095114435)) +
      t8 * ((eta * 620.15132246143378 - t2 * 5946.8995084424278) +
            t3 * 5326.74819451217);
}

// tri_fek_28_sfunc - Compute shape functions and their derivatives of
void tri_fek_28_sfunc(double xi, double eta, double sfvals[28],
                      double sdvals[56])
{
  double sfvals_tmp;
  double t10;
  double t100;
  double t101;
  double t102;
  double t104;
  double t105;
  double t106;
  double t107;
  double t11;
  double t111;
  double t112;
  double t121;
  double t123;
  double t127;
  double t129;
  double t131;
  double t132;
  double t134;
  double t139;
  double t140;
  double t141;
  double t145;
  double t146;
  double t15;
  double t153;
  double t154;
  double t16;
  double t160;
  double t168;
  double t174;
  double t175;
  double t176;
  double t177;
  double t18;
  double t183;
  double t189;
  double t19;
  double t191;
  double t199;
  double t2;
  double t20;
  double t203;
  double t215;
  double t218;
  double t219;
  double t22;
  double t220;
  double t224;
  double t225;
  double t226;
  double t229;
  double t231;
  double t232;
  double t233;
  double t239;
  double t241;
  double t242;
  double t245;
  double t246;
  double t248;
  double t249;
  double t26;
  double t3;
  double t32;
  double t38;
  double t39;
  double t4;
  double t41;
  double t42;
  double t46;
  double t48;
  double t5;
  double t50;
  double t53;
  double t55;
  double t58;
  double t59;
  double t6;
  double t61;
  double t7;
  double t71;
  double t74;
  double t78;
  double t79;
  double t8;
  double t80;
  double t81;
  double t83;
  double t88;
  double t9;
  double t91;
  double t92;
  double t97;
  double t98;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = std::pow(eta, 5.0);
  t7 = xi * xi;
  t8 = std::pow(xi, 3.0);
  t10 = std::pow(xi, 5.0);
  t18 = eta * 57.052415531159312;
  t20 = eta * 346.03390024817378;
  t32 = eta * 31.71506767754061;
  t38 = eta * 53.678187956052838;
  t42 = eta * 26.254341105207359;
  t50 = eta * 16.819178500689809;
  t55 = eta * 124.30174448469469;
  t61 = eta * 124.3017500565313;
  t71 = eta * 16.819185060112229;
  t74 = eta * 26.254335250912121;
  t91 = eta * 11.975131280659641;
  t92 = eta * 11.9751313038326;
  t100 = eta * 8.671383657182167;
  t121 = eta * 8.6713859642770874;
  t4 = t2 * t2;
  t6 = std::pow(t2, 3.0);
  t9 = t7 * t7;
  t11 = std::pow(t7, 3.0);
  t15 = t5 * 120.9787104207699;
  t16 = t3 * 4894.8993316730339;
  t19 = t3 * 5783.6257952213673;
  t22 = t2 * 109.81390707850819;
  t26 = t3 * 522.8407767445151;
  t39 = t2 * 1671.6358010814711;
  t48 = t5 * 1978.2111800661819;
  t78 = t5 * 1587.819153861871;
  t79 = t5 * 2144.950812735502;
  t80 = t3 * 1954.5345337674889;
  t81 = t2 * 2394.6862745499839;
  t83 = t3 * 620.15130314132;
  t88 = t5 * 256.19335179468391;
  t97 = t5 * 102.1966757629833;
  t101 = t3 * 338.70733435288031;
  t102 = t2 * 400.917052595231;
  t105 = t5 * 402.42388968821808;
  t107 = t3 * 180.8365713925044;
  t111 = t3 * 403.88094381286618;
  t112 = t3 * 81.245949254646973;
  t123 = t3 * 108.679818094666;
  t127 = t5 * 102.19667108060671;
  t129 = t3 * 82.053119633529548;
  t132 = t2 * 94.866895154237142;
  t134 = t2 * 433.99625568148628;
  t139 = t2 * 122.86052577328211;
  t140 = t5 * 46.618739455097987;
  t141 = t2 * 166.13387827577691;
  t146 = t2 * 341.790720098438;
  t153 = t2 * 30.93597128483972;
  t160 = t2 * 55.474307709901709;
  t168 = t2 * 68.750078984309724;
  t174 = t3 * 68.027857680838892;
  t175 = t3 * 53.511458182855307;
  t183 = t5 * 46.618748277571207;
  t189 = t2 * 14.772229687002771;
  t199 = t2 * 8.3648022245079776;
  t203 = t5 * 1.4605149873586529;
  t215 = t3 * 0.61315937081908445;
  t218 = t5 * 2.4384153625978569E-6;
  t219 = t5 * 6.3540580719209678E-6;
  t220 = t5 * 2.3444904749865271E-6;
  t41 = t4 * 5877.2894866391443;
  t46 = t4 * 3134.6117730530809;
  t53 = t4 * 5325.7764607142763;
  t58 = t4 * 415.88131048776842;
  t59 = t4 * 310.07564828200731;
  t98 = t4 * 470.87870553555422;
  t104 = t4 * 75.9990539682934;
  t106 = t4 * 558.93177394708857;
  t131 = t4 * 157.09467730361291;
  t145 = t4 * 287.03680764175277;
  t154 = t4 * 41.02654834155657;
  t176 = t4 * 21.657401569321308;
  t177 = t4 * 40.104644838262672;
  t191 = t4 * 0.30657565325906222;
  t231 = (((t4 * 2523.232845746903 + t2 * 211.34971953373139) -
           t3 * 1475.26581385022) +
          eta * 1.483207991314871) -
         t5 * 1267.1999594377539;
  t239 = (((t4 * 9.283354498866089 + t3 * 51.275283060181692) +
           eta * 2.400077366758619) -
          t5 * 27.24170557222828) -
         t2 * 29.317009606608782;
  t241 = (((eta * 8.25486604172513 - t3 * 27.595387225284359) +
           t2 * 14.24302315156161) +
          t4 * 10.84975227219549) -
         t5 * 3.1175074843283381;
  t242 = (((t5 * 1.460509052851773 + eta * 4.0755611195914474) +
           t4 * 14.35484009732564) -
          t2 * 19.99423271735499) -
         t3 * 3.996606911555515;
  t246 = ((((t4 * 2044.525649661324 - eta * 346.03389774688537) +
            t2 * 1387.7749473923229) -
           t3 * 2478.73789961823) -
          t5 * 635.93195313199442) +
         28.40315344346228;
  t224 = (((-(t2 * 2500.1282323768251) + eta * 422.51411244907769) +
           t3 * 5294.2788864859931) +
          t5 * 1587.819101342915) -
         t4 * 4804.4838679011618;
  t225 = (((t3 * 3373.905417245478 + t5 * 1978.211279366473) +
           eta * 53.6781956358675) -
          t4 * 4565.2796430628287) -
         t2 * 840.5152491849899;
  t226 = (((eta * 57.052409116386677 + t3 * 3942.8148064572952) +
           t5 * 1982.3580453270761) -
          t2 * 1146.532744785912) -
         t4 * 4831.5925864087167;
  t229 = (((eta * 18.23378199921089 + t3 * 659.39557383437523) +
           t5 * 235.3688042009351) -
          t4 * 734.08480266559172) -
         t2 * 207.31651055128651;
  t232 = (((eta * 8.25486793740524 - t4 * 1135.1340416250521) +
           t3 * 659.95479397482143) +
          t5 * 635.93190946076982) -
         t2 * 140.60437648184561;
  t233 = (((eta * 4.0755611597693218 + t5 * 120.9787002107773) +
           t3 * 242.47642163095529) -
          t4 * 317.85671735776072) -
         t2 * 61.011935747517768;
  t245 = ((((eta * 325.92607485546279 + t5 * 1048.193392010169) +
            t3 * 3250.0874804666219) -
           t4 * 3032.0350961284139) -
          t2 * 1570.171850758597) -
         21.00000037073665;
  t248 = ((((t3 * 184.008369601338 + eta * 1.483201007077666) -
            t4 * 126.9251895235401) -
           t2 * 92.208091674668879) +
          t5 * 27.24171100292072) +
         6.3999995868725206;
  t249 = ((((eta * 18.233776814757618 + t3 * 15.37146288022497) -
            t2 * 34.619698810623063) +
           t5 * 3.117514826433577) -
          t4 * 4.7378024362309139) +
         2.634746725437807;
  sfvals[0] = ((((((((eta * -21.00000037073665 + t2 * 140.000003983934) -
                     t3 * 420.0000148801609) +
                    t4 * 630.00002533652253) -
                   t5 * 462.0000201891209) +
                  t6 * 132.0000061195619) +
                 (t11 * 132.0000061195619 +
                  t10 * (eta * 1048.1934069073229 - 462.0000201891209))) +
                (t8 * (((eta * 3250.0875097435451 - t2 * 6781.3714528894607) +
                        t3 * 4172.7330616918307) -
                       420.0000148801609) +
                 t245 * xi)) +
               t9 * ((eta * -3032.0351328120928 + t2 * 3002.5599395722) +
                     630.00002533652253)) +
              (t7 * ((((eta * -1570.171858248995 + t2 * 5237.654749703468) -
                       t3 * 6781.37141522589) +
                      t4 * 3002.559908797999) +
                     140.000003983934) +
               1.0);
  sfvals[1] = (((t11 * 131.99999628479529 -
                 xi * (((((t100 + t191) - t199) - t215) + t220) +
                       0.99999992549419592)) +
                -t8 * (((eta * 403.880863763396 - t2 * 306.85894676995508) +
                        t3 * 4.4271830235682037) +
                       119.99999467250061)) +
               t7 * ((((eta * 109.8138815574714 - t2 * 102.7429251991616) +
                       t3 * 3.8140392696516958) -
                      t4 * 2.213609916882298) +
                     19.999998880620549)) +
              (-t10 * (eta * 256.19331567159082 + 329.99998948264249) +
               t9 * ((eta * 558.9316810182695 - t2 * 258.40688515216328) +
                     299.99998891522148));
  sfvals_tmp = eta * t10;
  sfvals[2] = ((((((eta * -0.99999992549419592 + t2 * 19.999998880620549) -
                   t3 * 119.99999467250061) +
                  t4 * 299.99998891522148) -
                 t5 * 329.99998948264249) +
                ((t6 * 131.99999628479529 -
                  t9 * (eta * 0.3065710434644609 + t2 * 2.213615781946046)) -
                 sfvals_tmp * 4.3135075421904053E-6)) +
               (t7 * (((eta * 8.3648089772031913 - t2 * 102.74299182296009) +
                       t3 * 306.85910925895217) -
                      t4 * 258.40698751743412) -
                xi * ((((-t22 + t88) - t106) + t111) + t121))) +
              t8 * ((eta * 0.6131522546389333 + t2 * 3.8140852475693672) -
                    t3 * 4.4272551287458661);
  sfvals[3] = (((t11 * -318.263670445131 +
                 t10 * (1086.9060613246129 - eta * 2144.9508329317282)) -
                t9 * ((eta * -5877.289530233772 + t2 * 5170.200527782521) +
                      1426.7203547843869)) +
               (t246 * xi -
                t8 * (((eta * 5783.6258204709366 - t2 * 10554.885519308211) +
                       t3 * 5817.65272301495) -
                      891.54561380300618))) +
              -t7 * ((((eta * -2394.686273899863 + t2 * 6843.144259931837) -
                       t3 * 7812.145231392954) +
                      t4 * 3110.0713108510208) +
                     261.87080334156337);
  sfvals[4] =
      ((((t11 * 397.46366005821722 +
          t10 * (eta * 1982.358090995197 - 1285.566156897163)) +
         t9 * ((eta * -4831.59270949642 + t2 * 3336.38036931205) +
               1555.570636437717)) +
        -xi * (((((t15 - t18) + t107) - t145) + t153) + 11.337970074798079)) +
       t7 * ((((eta * -1146.532790987477 + t2 * 2120.21088817959) -
               t3 * 1496.7172695423119) +
              t4 * 323.55829633582022) +
             195.40531326150781)) +
      t8 * (((eta * 3942.8149236636709 - t2 * 5328.32008010227) +
             t3 * 2196.02294513166) -
            851.53548278548055);
  sfvals[5] = (((t11 * -422.39999074262067 + t248 * xi) +
                t8 * (((eta * -1475.2659985543071 + t2 * 437.3261831331161) +
                       t3 * 385.13982812140267) +
                      652.79997780212113)) +
               (t10 * (1267.199969080737 - eta * 1267.200033798342) -
                t9 * ((eta * -2523.233044940635 + t2 * 863.43013617002237) +
                      1382.3999612515011))) +
              t7 * ((((eta * 211.34978638890971 + t2 * 395.22883251457768) -
                      t3 * 918.390333284306) +
                     t4 * 431.0116322386246) -
                    121.5999944756086);
  sfvals[6] =
      ((((t11 * 397.46365649899508 -
          xi * (((((t50 - t168) + t174) - t176) + t203) + 4.0999293847436764)) +
         t10 * (eta * 402.42398552948862 - 1099.215787686172)) +
        -t8 * (((eta * 81.245738063948565 - t2 * 1311.431065819535) +
                t3 * 724.80893050947145) +
               464.35868026675172)) +
       t7 * ((((eta * 122.86045607546259 - t2 * 628.37331286851054) +
               t3 * 528.77547996309875) -
              t4 * 107.85419694106) +
             80.516011536914164)) +
      -t9 * ((eta * 415.8815543813401 + t2 * 613.45491952527652) -
             1089.6947293017579);
  sfvals[7] = ((t11 * -318.2636577738179 +
                (-t7 * ((((eta * 207.31645405831409 - t2 * 375.36636075694719) +
                          t3 * 121.09114062431109) +
                         t4 * 2.7631040070869379) +
                        52.450529845804539) +
                 t249 * xi)) +
               (t10 * (eta * 235.36872634414991 + 822.67592384974932) +
                t8 * (((eta * 659.39540023520874 - t2 * 1037.18191947943) +
                       t3 * 221.08534432175281) +
                      311.54858099976627))) +
              -t9 * ((eta * 734.08460251815939 - t2 * 780.598347273241) +
                     766.145063955331);
  sfvals[8] = (-t7 * (((eta * 140.604352625109 + t2 * 87.271936726343284) -
                       t3 * 175.5426275065974) +
                      t4 * 18.350646151093631) +
               ((t8 * ((eta * 659.9547119087789 + t2 * 87.6035954040094) -
                       t3 * 263.31295303737721) +
                 sfvals_tmp * 635.93187054059513) +
                t241 * xi)) +
              -t9 * (eta * 1135.133942686442 - t2 * 69.588397998904043);
  sfvals[9] = (((sfvals_tmp * 120.9787007748926 + t242 * xi) -
                t9 * (eta * 317.85672191409208 - t2 * 928.45181388855542)) +
               -t7 * (((eta * 61.011935580431377 - t2 * 298.83814113303129) +
                       t3 * 39.939367551964253) +
                      t4 * 100.5516465669705)) +
              t8 * ((eta * 242.47642568766241 - t2 * 1068.9428289060349) +
                    t3 * 307.99730918947438);
  sfvals[10] = ((sfvals_tmp * -27.241700656661429 + t239 * xi) -
                t7 * (((eta * 29.317011815839521 - t2 * 379.95344634539663) +
                       t3 * 768.5227213317072) -
                      t4 * 294.80308711961789)) +
               (t8 * ((eta * 51.275288805506243 - t2 * 768.52269424987855) +
                      t3 * 1066.489548430148) +
                t9 * (eta * 9.28334604720544 + t2 * 294.80306141726231));
  sfvals[11] = (((sfvals_tmp * 1.460504294981618 + t233 * xi) -
                 t8 * ((eta * 3.9966104831645941 + t2 * 39.939386270622848) -
                       t3 * 307.997286389233)) +
                -t7 * (((eta * 19.994231932867919 - t2 * 298.83813859928091) +
                        t3 * 1068.942783674969) -
                       t4 * 928.4517769839764)) +
               t9 * (eta * 14.35484741074044 - t2 * 100.5516251522513);
  sfvals[12] = ((sfvals_tmp * -3.1175044667845131 +
                 t9 * (eta * 10.8497489060677 - t2 * 18.350660403768948)) +
                (t7 * (((eta * 14.243018973494721 - t2 * 87.271882601249672) +
                        t3 * 87.603426086837842) +
                       t4 * 69.588514951361134) +
                 t232 * xi)) +
               -t8 * ((eta * 27.59538450776342 - t2 * 175.54261316177929) +
                      t3 * 263.31288656300171);
  sfvals[13] = ((((((eta * 2.634746725437807 - t2 * 52.450529845804539) +
                    t3 * 311.54858099976627) -
                   t4 * 766.145063955331) +
                  t5 * 822.67592384974932) +
                 (((t6 * -318.2636577738179 + sfvals_tmp * 3.1175166533020149) +
                   t229 * xi) +
                  t8 * ((eta * 15.37147900872638 - t2 * 121.0912639644794) +
                        t3 * 221.085506643802))) +
                -t7 * (((eta * 34.619714574116877 - t2 * 375.36651447556642) +
                        t3 * 1037.1822699635379) -
                       t4 * 780.59856149242717)) +
               -t9 * (eta * 4.7378098125602133 + t2 * 2.7630762205703991);
  sfvals[14] = ((((((eta * -4.0999293847436764 + t2 * 80.516011536914164) -
                    t3 * 464.35868026675172) +
                   t4 * 1089.6947293017579) -
                  t5 * 1099.215787686172) +
                 t6 * 397.46365649899508) +
                ((sfvals_tmp * -1.4605168286570711 -
                  xi * ((((t58 + t71) - t105) + t112) - t139)) +
                 t7 * (((eta * 68.750100646324313 - t2 * 628.37350730294622) +
                        t3 * 1311.4314758474829) -
                       t4 * 613.455161148747))) +
               (-t8 * ((eta * 68.027883251126383 - t2 * 528.77566023530119) +
                       t3 * 724.80912990273237) +
                t9 * (eta * 21.65741387831504 - t2 * 107.8542523934192));
  sfvals[15] = (((((((eta * 6.3999995868725206 - t2 * 121.5999944756086) +
                     t3 * 652.79997780212113) -
                    t4 * 1382.3999612515011) +
                   t5 * 1267.199969080737) -
                  t6 * 422.39999074262067) +
                 -t9 * (eta * 126.9252184198177 - t2 * 431.01171850151388)) +
                ((-t7 * (((eta * 92.208120997458607 - t2 * 395.22905456055429) -
                          t3 * 437.32576974318681) +
                         t4 * 863.42991308913349) +
                  sfvals_tmp * 27.24171768388749) +
                 t231 * xi)) +
               t8 * ((eta * 184.00841415520139 - t2 * 918.39057491802248) +
                     t3 * 385.14005642362662);
  sfvals[16] = (((((((eta * -11.337970074798079 + t2 * 195.40531326150781) -
                     t3 * 851.53548278548055) +
                    t4 * 1555.570636437717) -
                   t5 * 1285.566156897163) +
                  t6 * 397.46366005821722) +
                 ((t9 * (eta * 287.03688177576532 + t2 * 323.55819154414422) -
                   sfvals_tmp * 120.9787355126963) +
                  t226 * xi)) +
                -t7 * (((eta * 30.9359338939282 - t2 * 2120.210705280409) +
                        t3 * 5328.3197888800078) -
                       t4 * 3336.3802219774989)) +
               -t8 * ((eta * 180.8366514107293 + t2 * 1496.717028664227) -
                      t3 * 2196.0227637654812);
  sfvals[17] = ((((((eta * 28.40315344346228 - t2 * 261.87080334156337) +
                    t3 * 891.54561380300618) -
                   t4 * 1426.7203547843869) +
                  t5 * 1086.9060613246129) -
                 t6 * 318.263670445131) +
                ((-t8 * ((eta * 2478.737975343593 - t2 * 7812.1453730480143) +
                         t3 * 5817.6527748319641) -
                  sfvals_tmp * 635.93198379183184) -
                 xi * ((((t19 + t20) - t41) + t79) - t81))) +
               (t9 * (eta * 2044.5257318336221 - t2 * 3110.0713944336958) +
                t7 * (((eta * 1387.7749741065149 - t2 * 6843.1443195133361) +
                       t3 * 10554.885532023751) -
                      t4 * 5170.2005064804735));
  sfvals[18] = ((sfvals_tmp * 1587.819174363809 -
                 t7 * (((eta * 2500.12827244441 - t2 * 10762.359772764759) +
                        t3 * 14802.08203619065) -
                       t4 * 6566.1048781336349)) +
                t224 * xi) +
               (t8 * ((eta * 5294.2790370055691 - t2 * 14802.08222351328) +
                      t3 * 9956.5716304520774) -
                t9 * (eta * 4804.4840513740464 - t2 * 6566.1050280251666));
  sfvals[19] = (((t9 * (eta * 5325.7764649481142 - t2 * 6082.90093282478) -
                  sfvals_tmp * 1978.2111911735331) -
                 xi * ((((t55 + t101) - t102) - t127) + t177)) +
                t7 * (((eta * 1671.635774048272 - t2 * 5420.2135047918146) +
                       t3 * 5636.0193710904659) -
                      t4 * 1875.4665066498139)) +
               -t8 * ((eta * 4894.8993033381576 - t2 * 11048.51918254353) +
                      t3 * 6082.3529193816676);
  sfvals[20] = (((-t9 * (eta * 4565.2793797560516 - t2 * 3808.154858697053) +
                  sfvals_tmp * 1978.2111819179249) -
                 xi * ((((-t38 + t123) - t131) + t140) + t160)) +
                -t7 * (((eta * 840.51516232831273 - t2 * 1349.6541922363319) +
                        t3 * 153.46233291480269) +
                       t4 * 343.70156680200392)) +
               t8 * ((eta * 3373.9051722103868 - t2 * 4978.0329727274784) +
                     t3 * 1532.860849432222);
  sfvals[21] = (t9 * (eta * 3134.6114614983712 - t2 * 1372.990540133439) +
                t8 * ((eta * -1954.5342762170851 + t2 * 1076.1089489285671) +
                      t3 * 429.6568598829702)) +
               ((sfvals_tmp * -1587.819029947193 +
                 t7 * (((eta * 433.99617991681907 - t2 * 110.8602869191362) -
                        t3 * 511.70991757368517) +
                       t4 * 214.82836371515651)) -
                xi * ((((t74 - t129) + t154) + t189) + t219));
  sfvals[22] = ((t7 * (((eta * 166.13388398557279 - t2 * 1333.4766218118691) +
                        t3 * 1224.2722824786531) -
                       t4 * 110.6077346584252) -
                 sfvals_tmp * 102.1967068196229) -
                xi * ((((t91 + t104) - t132) + t175) - t183)) +
               (t9 * (eta * 470.8787734452913 - t2 * 2386.4497730840549) -
                t8 * ((eta * 522.84081933058155 - t2 * 3749.3612381234789) +
                      t3 * 2441.4795492004282));
  sfvals[23] = (t7 * (((eta * 94.866902605343469 - t2 * 1333.4766800007451) +
                       t3 * 3749.361257146727) -
                      t4 * 2386.4497414098491) +
                ((-t8 * ((eta * 53.511471683125457 - t2 * 1224.272447055612) +
                         t3 * 2441.4796505935728) +
                  sfvals_tmp * 46.618756103634723) -
                 xi * ((((t26 + t92) + t97) - t98) - t141))) +
               -t9 * (eta * 75.999055722020131 + t2 * 110.60782884307309);
  sfvals[24] = (t8 * ((eta * 82.053119722241192 - t2 * 511.70983074170658) +
                      t3 * 429.6566464640826) -
                t9 * (eta * 41.026555740948183 - t2 * 214.8283779238277)) +
               ((sfvals_tmp * -5.1804845841027186E-6 -
                 xi * ((((t42 - t46) + t78) + t80) - t134)) -
                t7 * (((eta * 14.772217695601061 + t2 * 110.860469059509) -
                       t3 * 1076.109469115479) +
                      t4 * 1372.9908905021009));
  sfvals[25] = (((t9 * (eta * 157.0946838168089 - t2 * 343.70149314566783) -
                  sfvals_tmp * 46.618745536817677) +
                 t225 * xi) +
                -t8 * ((eta * 108.67980570776319 + t2 * 153.4625700572644) -
                       t3 * 1532.8611072511169)) +
               -t7 * (((eta * 55.474328208095578 - t2 * 1349.6544420674561) +
                       t3 * 4978.0334745024293) -
                      t4 * 3808.1551342264411);
  sfvals[26] = ((sfvals_tmp * 102.1966762905637 -
                 xi * ((((t16 - t39) + t48) - t53) + t61)) +
                t7 * (((eta * 400.917073199764 - t2 * 5420.2136041355561) +
                       t3 * 11048.5192789442) -
                      t4 * 6082.9009483948976)) +
               (-t9 * (eta * 40.10464469690524 + t2 * 1875.46653829629) -
                t8 * ((eta * 338.70735473689109 - t2 * 5636.0194761478961) +
                      t3 * 6082.35298291557));
  sfvals[27] = (((sfvals_tmp * -1.770298779578048E-6 -
                  xi * ((((-t32 + t59) - t83) + t146) + t218)) -
                 t9 * (eta * 310.075659378618 - t2 * 2663.3740951890209)) +
                -t7 * (((eta * 341.79072899005757 - t2 * 3593.601064067605) +
                        t3 * 5946.899498607464) -
                       t4 * 2663.374095114435)) +
               t8 * ((eta * 620.15132246143378 - t2 * 5946.8995084424278) +
                     t3 * 5326.74819451217);
  sdvals[0] = (((t10 * 792.00003671737159 + t245) +
                xi * ((((eta * -3140.343716497991 + t2 * 10475.30949940694) -
                        t3 * 13562.74283045178) +
                       t4 * 6005.1198175959989) +
                      280.000007967868)) +
               t7 * (((eta * 9750.2625292306348 - t2 * 20344.114358668379) +
                      t3 * 12518.199185075489) -
                     1260.0000446404831)) +
              (t8 * ((eta * -12128.140531248369 + t2 * 12010.2397582888) +
                     2520.00010134609) +
               t9 * (eta * 5240.9670345366167 - 2310.000100945605));
  sdvals[1] = (((((((eta * 280.000007967868 - t2 * 1260.0000446404831) +
                    t3 * 2520.00010134609) -
                   t4 * 2310.000100945605) +
                  t5 * 792.00003671737159) +
                 t10 * 1048.1934069073229) +
                t8 * ((eta * -13562.74290577892 + t2 * 12518.199185075489) +
                      3250.0875097435451)) +
               (t7 * (((eta * 10475.30949940694 - t2 * 20344.114245677669) +
                       t3 * 12010.239635192) -
                      1570.171858248995) +
                t9 * (eta * 6005.1198791444 - 3032.0351328120928))) +
              (xi * ((((eta * -3140.343701517193 + t2 * 9750.2624413998656) -
                       t3 * 12128.140384513659) +
                      t4 * 5240.966960050845) +
                     325.92607485546279) -
               21.00000037073665);
  sdvals[2] =
      (((t10 * 791.999977708772 +
         (((((-t100 + t199) - t191) + t215) - t220) - 0.99999992549419592)) +
        xi * ((((eta * 219.62776311494289 - t2 * 205.48585039832329) +
                t3 * 7.6280785393033916) -
               t4 * 4.4272198337645952) +
              39.99999776124109)) +
       (-t9 * (eta * 1280.9665783579539 + 1649.999947413213) -
        t7 * (((eta * 1211.642591290188 - t2 * 920.57684030986547) +
               t3 * 13.28154907070461) +
              359.99998401750179))) +
      t8 * ((eta * 2235.726724073078 - t2 * 1033.6275406086529) +
            1199.9999556608859);
  sdvals[3] = (((t10 * -256.19331567159082 +
                 t9 * (558.9316810182695 - eta * 516.81377030432668)) +
                -t7 * (((eta * 205.48585039832329 - t2 * 11.442117808955089) +
                        t3 * 8.85443966752919) -
                       109.8138815574714)) +
               -xi * ((((eta * -16.729604449015959 - t2 * 1.839478112457253) +
                        t3 * 1.2263026130362491) +
                       t4 * 1.1722452374932629E-5) +
                      8.671383657182167)) +
              -t8 * ((eta * -613.71789353991028 + t2 * 13.28154907070461) +
                     403.880863763396);
  sfvals_tmp = eta * t9;
  sdvals[4] = (((((((t22 + t106) - t88) - t111) - t121) -
                 t8 * (eta * 1.2262841738578441 + t2 * 8.8544631277841823)) -
                sfvals_tmp * 2.156753771095203E-5) +
               xi * (((eta * 16.729617954406379 - t2 * 205.48598364592019) +
                      t3 * 613.71821851790446) -
                     t4 * 516.81397503486824)) +
              t7 * ((eta * 1.8394567639168 + t2 * 11.4422557427081) -
                    t3 * 13.2817653862376);
  sdvals[5] = (((((((eta * 39.99999776124109 - t2 * 359.99998401750179) +
                    t3 * 1199.9999556608859) -
                   t4 * 1649.999947413213) +
                  t5 * 791.999977708772) +
                 (t10 * -4.3135075421904053E-6 -
                  t9 * (eta * 4.4272315638920912 + 0.3065710434644609))) +
                -xi * ((((eta * -219.6278141570165 + t2 * 1211.6428314385989) -
                         t3 * 2235.7270957883538) +
                        t4 * 1280.96675897342) +
                       8.6713859642770874)) +
               -t7 * (((eta * 205.48598364592019 - t2 * 920.57732777685669) +
                       t3 * 1033.627950069736) -
                      8.3648089772031913)) +
              (t8 * ((eta * 7.6281704951387326 - t2 * 13.2817653862376) +
                     0.6131522546389333) -
               0.99999992549419592);
  sdvals[6] = (((t10 * -1909.582022670786 + t246) -
                t7 * (((eta * 17350.877461412809 - t2 * 31664.656557924649) +
                       t3 * 17452.95816904485) -
                      2674.636841409018)) +
               (-t8 * ((eta * -23509.158120935092 + t2 * 20680.80211113008) +
                       5706.8814191375468) +
                t9 * (5434.5303066230636 - eta * 10724.75416465864))) +
              -xi * ((((eta * -4789.3725477997259 + t2 * 13686.28851986367) -
                       t3 * 15624.29046278591) +
                      t4 * 6220.1426217020426) +
                     523.74160668312675);
  sdvals[7] = (((t10 * -2144.9508329317282 -
                 t7 * (((eta * 13686.28851986367 - t2 * 23436.435694178861) +
                        t3 * 12440.285243404091) -
                       2394.686273899863)) +
                -t8 * ((eta * -21109.771038616429 + t2 * 17452.95816904485) +
                       5783.6258204709366)) +
               -xi * ((((eta * -2775.5498947846472 + t2 * 7436.213698854689) -
                        t3 * 8178.102598645296) +
                       t4 * 3179.659765659972) +
                      346.03389774688537)) +
              t9 * (5877.289530233772 - eta * 10340.40105556504);
  sdvals[8] =
      ((((t10 * 2384.781960349304 +
          (((((t18 - t15) + t145) - t107) - t153) - 11.337970074798079)) +
         t9 * (eta * 9911.7904549759824 - 6427.8307844858173)) +
        t7 * (((eta * 11828.444770991009 - t2 * 15984.960240306809) +
               t3 * 6588.0688353949818) -
              2554.606448356441)) +
       t8 * ((eta * -19326.37083798568 + t2 * 13345.5214772482) +
             6222.2825457508679)) +
      xi * ((((eta * -2293.065581974955 + t2 * 4240.42177635918) -
              t3 * 2993.4345390846238) +
             t4 * 647.11659267164032) +
            390.81062652301569);
  sdvals[9] = ((t10 * 1982.358090995197 +
                t7 * (((eta * 4240.42177635918 - t2 * 4490.1518086269361) +
                       t3 * 1294.2331853432811) -
                      1146.532790987477)) +
               (t9 * (eta * 6672.7607386241007 - 4831.59270949642) +
                t8 * ((eta * -10656.640160204541 + t2 * 6588.0688353949818) +
                      3942.8149236636709))) +
              -xi * ((((eta * 61.871942569679433 + t2 * 542.50971417751327) -
                       t3 * 1148.1472305670111) +
                      t4 * 604.89355210384929) -
                     57.052415531159312);
  sdvals[10] = (((t10 * -2534.3999444557239 + t248) +
                 xi * ((((eta * 422.69957277781953 + t2 * 790.45766502915546) -
                         t3 * 1836.7806665686121) +
                        t4 * 862.0232644772492) -
                       243.19998895121731)) +
                t7 * (((eta * -4425.79799566292 + t2 * 1311.9785493993479) +
                       t3 * 1155.4194843642081) +
                      1958.399933406364)) +
               (-t8 * ((eta * -10092.93217976254 + t2 * 3453.720544680089) +
                       5529.5998450060051) +
                t9 * (6335.999845403685 - eta * 6336.000168991709));
  sdvals[11] = (((t10 * -1267.200033798342 +
                  t9 * (2523.233044940635 - eta * 1726.860272340045)) +
                 t7 * (((eta * 790.45766502915546 - t2 * 2755.1709998529182) +
                        t3 * 1724.0465289544979) +
                       211.34978638890971)) +
                t8 * ((eta * 874.65236626623221 + t2 * 1155.4194843642081) -
                      1475.2659985543071)) +
               xi * ((((eta * -184.41618334933781 + t2 * 552.02510880401417) -
                       t3 * 507.70075809416028) +
                      t4 * 136.2085550146036) +
                     1.483201007077666);
  sdvals[12] =
      ((((t10 * 2384.7819389939709 +
          (((((-t50 + t168) + t176) - t174) - t203) - 4.0999293847436764)) +
         t9 * (eta * 2012.1199276474431 - 5496.07893843086)) +
        xi * ((((eta * 245.7209121509251 - t2 * 1256.7466257370211) +
                t3 * 1057.550959926197) -
               t4 * 215.70839388211991) +
              161.0320230738283)) +
       -t8 * ((eta * 1663.52621752536 + t2 * 2453.8196781011061) -
              4358.7789172070316)) +
      -t7 * (((eta * 243.73721419184571 - t2 * 3934.2931974586049) +
              t3 * 2174.426791528414) +
             1393.076040800255);
  sdvals[13] = (((t10 * 402.42398552948862 -
                  t8 * ((eta * -2622.86213163907 + t2 * 2174.426791528414) +
                        81.245738063948565)) -
                 t9 * (eta * 1226.909839050553 + 415.8815543813401)) +
                -t7 * (((eta * 1256.7466257370211 - t2 * 1586.3264398892959) +
                        t3 * 431.41678776423993) -
                       122.86045607546259)) +
               -xi * ((((eta * -137.50015796861939 + t2 * 204.08357304251669) -
                        t3 * 86.629606277285248) +
                       t4 * 7.3025749367932642) +
                      16.819178500689809);
  sdvals[14] = ((((t10 * -1909.581946642907 + t249) +
                  t7 * (((eta * 1978.1862007056261 - t2 * 3111.5457584382912) +
                         t3 * 663.25603296525844) +
                        934.645742999299)) +
                 t9 * (eta * 1176.84363172075 + 4113.3796192487462)) +
                -xi * ((((eta * 414.63290811662819 - t2 * 750.73272151389449) +
                         t3 * 242.18228124862219) +
                        t4 * 5.5262080141738767) +
                       104.90105969160911)) +
               -t8 * ((eta * 2936.338410072638 - t2 * 3122.3933890929638) +
                      3064.580255821324);
  sdvals[15] = (((t10 * 235.36872634414991 +
                  t8 * ((eta * -2074.3638389588609 + t2 * 663.25603296525844) +
                        659.39540023520874)) +
                 -t7 * (((eta * -750.73272151389449 + t2 * 363.27342187293323) +
                         t3 * 11.05241602834775) +
                        207.31645405831409)) +
                xi * ((((eta * -69.239397621246127 + t2 * 46.114388640674917) -
                        t3 * 18.951209744923659) +
                       t4 * 15.58757413216788) +
                      18.233776814757618)) +
               t9 * (eta * 1561.1966945464819 - 734.08460251815939);
  sdvals[16] =
      ((t241 + t7 * ((eta * 1979.8641357263371 + t2 * 262.81078621202818) -
                     t3 * 789.93885911213147)) +
       (-xi * (((eta * 281.20870525021809 + t2 * 174.5438734526866) -
                t3 * 351.08525501319491) +
               t4 * 36.701292302187262) +
        sfvals_tmp * 3179.6593527029759)) +
      -t8 * (eta * 4540.535770745767 - t2 * 278.35359199561623);
  sdvals[17] = (((t10 * 635.93187054059513 +
                  t9 * (eta * 139.17679599780811 - 1135.133942686442)) +
                 t8 * ((eta * 175.20719080801879 - t2 * 789.93885911213147) +
                       659.9547119087789)) +
                xi * ((((eta * 28.486046303123231 - t2 * 82.786161675853066) +
                        t3 * 43.399009088781959) -
                       t4 * 15.58753742164169) +
                      8.25486604172513)) +
               -t7 * (((eta * 174.5438734526866 - t2 * 526.62788251979237) +
                       t3 * 73.402584604374525) +
                      140.604352625109);
  sdvals[18] = (((t242 + sfvals_tmp * 604.89350387446314) -
                 t8 * (eta * 1271.4268876563681 - t2 * 3713.8072555542221)) +
                t7 * ((eta * 727.42927706298713 - t2 * 3206.8284867181051) +
                      t3 * 923.99192756842319)) +
               -xi * (((eta * 122.0238711608628 - t2 * 597.67628226606269) +
                       t3 * 79.878735103928491) +
                      t4 * 201.103293133941);
  sdvals[19] = ((t10 * 120.9787007748926 -
                 t7 * (((eta * -597.67628226606269 + t2 * 119.8181026558927) +
                        t3 * 402.2065862678819) +
                       61.011935580431377)) +
                xi * ((((eta * -39.988465434709973 - t2 * 11.989820734666541) +
                        t3 * 57.419360389302547) +
                       t4 * 7.302545264258864) +
                      4.0755611195914474)) +
               (t9 * (eta * 1856.9036277771111 - 317.85672191409208) +
                t8 * ((eta * -2137.88565781207 + t2 * 923.99192756842319) +
                      242.47642568766241));
  sdvals[20] = ((t239 - sfvals_tmp * 136.20850328330721) -
                xi * (((eta * 58.634023631679042 - t2 * 759.90689269079314) +
                       t3 * 1537.045442663414) -
                      t4 * 589.60617423923577)) +
               (t7 * ((eta * 153.82586641651869 - t2 * 2305.5680827496358) +
                      t3 * 3199.4686452904448) +
                t8 * (eta * 37.133384188821758 + t2 * 1179.212245669049));
  sdvals[21] =
      (((t10 * -27.241700656661429 +
         xi * ((((eta * -58.634019213217563 + t2 * 153.82584918054511) +
                 t3 * 37.133417995464363) -
                t4 * 136.20852786114139) +
               2.400077366758619)) +
        t9 * (eta * 589.60612283452463 + 9.28334604720544)) +
       t7 * (((eta * 759.90689269079314 - t2 * 2305.5681639951208) +
              t3 * 1179.212348478472) -
             29.317011815839521)) +
      t8 * ((eta * -1537.0453884997571 + t2 * 3199.4686452904448) +
            51.275288805506243);
  sdvals[22] = ((t233 + sfvals_tmp * 7.3025214749080876) -
                xi * (((eta * 39.988463865735852 - t2 * 597.67627719856171) +
                       t3 * 2137.8855673499379) -
                      t4 * 1856.903553967953)) +
               (-t7 * ((eta * 11.98983144949378 + t2 * 119.8181588118686) -
                       t3 * 923.991859167699) +
                t8 * (eta * 57.419389642961747 - t2 * 402.20650060900539));
  sdvals[23] = (((t10 * 1.460504294981618 -
                  t8 * ((eta * 79.8787725412457 - t2 * 923.991859167699) +
                        3.9966104831645941)) +
                 xi * ((((eta * -122.02387149503549 + t2 * 727.429264892866) -
                         t3 * 1271.4268694310431) +
                        t4 * 604.89350105388655) +
                       4.0755611597693218)) +
                t7 * (((eta * 597.67627719856171 - t2 * 3206.8283510249071) +
                       t3 * 3713.8071079359061) -
                      19.994231932867919)) +
               t9 * (14.35484741074044 - eta * 201.10325030450269);
  sdvals[24] = (((t232 - sfvals_tmp * 15.587522333922569) +
                 t8 * (eta * 43.398995624270782 - t2 * 73.402641615075808)) +
                xi * (((eta * 28.48603794698943 - t2 * 174.54376520249929) +
                       t3 * 175.20685217367571) +
                      t4 * 139.1770299027223)) +
               -t7 * ((eta * 82.786153523290253 - t2 * 526.62783948533786) +
                      t3 * 789.93865968900491);
  sdvals[25] = (((t10 * -3.1175044667845131 +
                  t9 * (10.8497489060677 - eta * 36.7013208075379)) +
                 t7 * (((eta * -174.54376520249929 + t2 * 262.81027826051348) +
                        t3 * 278.35405980544448) +
                       14.243018973494721)) +
                xi * ((((eta * -281.20875296369121 + t2 * 1979.8643819244639) -
                        t3 * 4540.5361665002092) +
                       t4 * 3179.6595473038492) +
                      8.25486793740524)) +
               -t8 * ((eta * -351.08522632355857 + t2 * 789.93865968900491) +
                      27.59538450776342);
  sdvals[26] = (((t229 + sfvals_tmp * 15.58758326651008) +
                 t7 * ((eta * 46.114437026179139 - t2 * 363.27379189343822) +
                       t3 * 663.25651993140593)) +
                -xi * (((eta * 69.239429148233754 - t2 * 750.73302895113272) +
                        t3 * 2074.3645399270758) -
                       t4 * 1561.1971229848541)) +
               -t8 * (eta * 18.95123925024085 + t2 * 11.0523048822816);
  sdvals[27] = ((((((((eta * -104.90105969160911 + t2 * 934.645742999299) -
                      t3 * 3064.580255821324) +
                     t4 * 4113.3796192487462) -
                    t5 * 1909.581946642907) +
                   t10 * 3.1175166533020149) +
                  -t9 * (eta * 5.5261524411407983 + 4.7378098125602133)) +
                 t7 * (((eta * 750.73302895113272 - t2 * 3111.546809890614) +
                        t3 * 3122.3942459697091) -
                       34.619714574116877)) +
                xi * ((((eta * -414.63302110257308 + t2 * 1978.1867215031259) -
                        t3 * 2936.3392106623669) +
                       t4 * 1176.8440210046749) +
                      18.23378199921089)) +
               (t8 * ((eta * -242.18252792895879 + t2 * 663.25651993140593) +
                      15.37147900872638) +
                2.634746725437807);
  sdvals[28] = (((((((t105 - t58) - t71) + t139) - t112) -
                  sfvals_tmp * 7.3025841432853547) -
                 t7 * ((eta * 204.08364975337921 - t2 * 1586.3269807059039) +
                       t3 * 2174.4273897081971)) +
                xi * (((eta * 137.5002012926486 - t2 * 1256.747014605892) +
                       t3 * 2622.862951694965) -
                      t4 * 1226.9103222974941)) +
               t8 * (eta * 86.629655513260161 - t2 * 431.41700957367669);
  sdvals[29] = ((((((((eta * 161.0320230738283 - t2 * 1393.076040800255) +
                      t3 * 4358.7789172070316) -
                     t4 * 5496.07893843086) +
                    t5 * 2384.7819389939709) -
                   t10 * 1.4605168286570711) +
                  t9 * (21.65741387831504 - eta * 215.70850478683829)) +
                 -xi * ((((eta * -245.7210515465641 + t2 * 243.73784776394089) +
                          t3 * 1663.525241951073) -
                         t4 * 2012.119448441091) +
                        16.819185060112229)) +
                -t8 * ((eta * -1057.5513204706019 + t2 * 2174.4273897081971) +
                       68.027883251126383)) +
               (-t7 * (((eta * 1256.747014605892 - t2 * 3934.2944275424479) +
                        t3 * 2453.8206445949882) -
                       68.750100646324313) -
                4.0999293847436764);
  sdvals[30] =
      (((t231 - t8 * (eta * 507.70087367927079 - t2 * 1724.046874006056)) +
        sfvals_tmp * 136.20858841943749) +
       -xi * (((eta * 184.41624199491719 - t2 * 790.45810912110869) -
               t3 * 874.65153948637351) +
              t4 * 1726.859826178267)) +
      t7 * ((eta * 552.02524246560426 - t2 * 2755.1717247540678) +
            t3 * 1155.42016927088);
  sdvals[31] = (((((((eta * -243.19998895121731 + t2 * 1958.399933406364) -
                     t3 * 5529.5998450060051) +
                    t4 * 6335.999845403685) -
                   t5 * 2534.3999444557239) +
                  t10 * 27.24171768388749) +
                 (t8 * ((eta * -1836.781149836045 + t2 * 1155.42016927088) +
                        184.00841415520139) +
                  t9 * (eta * 862.02343700302788 - 126.9252184198177))) +
                xi * ((((eta * 422.69943906746278 - t2 * 4425.7974415506606) +
                        t3 * 10092.93138298761) -
                       t4 * 6335.9997971887706) +
                      1.483207991314871)) +
               (t7 * (((eta * 790.45810912110869 + t2 * 1311.97730922956) -
                       t3 * 3453.719652356534) -
                      92.208120997458607) +
                6.3999995868725206);
  sdvals[32] =
      (((t226 + t8 * (eta * 1148.1475271030611 + t2 * 1294.2327661765769)) -
        sfvals_tmp * 604.89367756348167) +
       -t7 * ((eta * 542.509954232188 + t2 * 4490.151085992683) -
              t3 * 6588.0682912964421)) +
      -xi * (((eta * 61.8718677878564 - t2 * 4240.4214105608171) +
              t3 * 10656.639577760019) -
             t4 * 6672.7604439549987);
  sdvals[33] = (((((((eta * 390.81062652301569 - t2 * 2554.606448356441) +
                     t3 * 6222.2825457508679) -
                    t4 * 6427.8307844858173) +
                   t5 * 2384.781960349304) -
                  t10 * 120.9787355126963) +
                 (t9 * (eta * 647.11638308828844 + 287.03688177576532) -
                  t8 * ((eta * 2993.4340573284549 - t2 * 6588.0682912964421) +
                        180.8366514107293))) +
                xi * ((((eta * -2293.065489571823 + t2 * 11828.444419371879) -
                        t3 * 19326.37034563487) +
                       t4 * 9911.79022663538) +
                      57.052409116386677)) +
               (t7 * (((eta * 4240.4214105608171 - t2 * 15984.95936664002) +
                       t3 * 13345.52088791) -
                      30.9359338939282) -
                11.337970074798079);
  sdvals[34] = (((((((-t19 - t20) + t41) + t81) - t79) -
                  sfvals_tmp * 3179.6599189591589) +
                 t8 * (eta * 8178.1029273344884 - t2 * 12440.28557773478)) +
                -t7 * ((eta * 7436.2139260307813 - t2 * 23436.43611914404) +
                       t3 * 17452.958324495889)) +
               xi * (((eta * 2775.54994821303 - t2 * 13686.28863902667) +
                      t3 * 21109.771064047509) -
                     t4 * 10340.401012960951);
  sdvals[35] = ((((((((eta * -523.74160668312675 + t2 * 2674.636841409018) -
                      t3 * 5706.8814191375468) +
                     t4 * 5434.5303066230636) -
                    t5 * 1909.582022670786) -
                   t10 * 635.93198379183184) +
                  -xi * ((((eta * -4789.3725490999677 + t2 * 17350.8773856641) -
                           t3 * 23509.157946556581) +
                          t4 * 10724.75406367751) +
                         346.03390024817378)) +
                 -t8 * ((eta * -15624.29074609603 + t2 * 17452.958324495889) +
                        2478.737975343593)) +
                (-t7 * (((eta * 13686.28863902667 - t2 * 31664.656596071261) +
                         t3 * 20680.80202592189) -
                        1387.7749741065149) +
                 t9 * (2044.5257318336221 - eta * 6220.1427888673916))) +
               28.40315344346228;
  sdvals[36] = ((t224 + sfvals_tmp * 7939.0958718190432) -
                xi * (((eta * 5000.2565448888208 - t2 * 21524.719545529519) +
                       t3 * 29604.1640723813) -
                      t4 * 13132.20975626727)) +
               (t7 * ((eta * 15882.83711101671 - t2 * 44406.246670539833) +
                      t3 * 29869.714891356231) -
                t8 * (eta * 19217.936205496178 - t2 * 26264.42011210067));
  sdvals[37] = (((t10 * 1587.819174363809 +
                  t7 * (((eta * 21524.719545529519 - t2 * 44406.246108571941) +
                         t3 * 26264.41951253454) -
                        2500.12827244441)) +
                 t8 * ((eta * -29604.164447026549 + t2 * 29869.714891356231) +
                       5294.2790370055691)) +
                xi * ((((eta * -5000.2564647536492 + t2 * 15882.83665945798) -
                        t3 * 19217.935471604651) +
                       t4 * 7939.095506714576) +
                      422.51411244907769)) +
               t9 * (eta * 13132.21005605033 - 4804.4840513740464);
  sdvals[38] = (((((((t102 - t55) + t127) - t101) - t177) +
                  t8 * (eta * 21303.10585979246 - t2 * 24331.603731299121)) -
                 sfvals_tmp * 9891.0559558676632) +
                xi * (((eta * 3343.2715480965439 - t2 * 10840.427009583629) +
                       t3 * 11272.03874218093) -
                      t4 * 3750.933013299627)) +
               -t7 * ((eta * 14684.69791001448 - t2 * 33145.557547630589) +
                      t3 * 18247.058758145009);
  sdvals[39] = (((t10 * -1978.2111911735331 -
                  t8 * ((eta * -22097.038365087061 + t2 * 18247.058758145009) +
                        4894.8993033381576)) +
                 t9 * (5325.7764649481142 - eta * 12165.801865649561)) +
                -xi * ((((eta * -801.83410519046208 + t2 * 1016.122003058641) +
                         t3 * 160.41857935305069) -
                        t4 * 510.98335540303339) +
                       124.30174448469469)) +
               -t7 * (((eta * 10840.427009583629 - t2 * 16908.0581132714) +
                       t3 * 7501.8660265992548) -
                      1671.635774048272);
  sdvals[40] = (((((((t38 + t131) - t123) - t140) - t160) -
                  t8 * (eta * 18261.11751902421 - t2 * 15232.61943478821)) +
                 sfvals_tmp * 9891.0559095896224) +
                t7 * ((eta * 10121.71551663116 - t2 * 14934.098918182441) +
                      t3 * 4598.5825482966648)) +
               -xi * (((eta * 1681.030324656625 - t2 * 2699.3083844726648) +
                       t3 * 306.92466582960549) +
                      t4 * 687.40313360400785);
  sdvals[41] = (((t10 * 1978.2111819179249 +
                  t9 * (eta * 7616.3097173941051 - 4565.2793797560516)) +
                 t8 * ((eta * -9956.0659454549568 + t2 * 4598.5825482966648) +
                       3373.9051722103868)) +
                -t7 * (((eta * -2699.3083844726648 + t2 * 460.38699874440829) +
                        t3 * 1374.8062672080159) +
                       840.51516232831273)) +
               -xi * ((((eta * 110.9486154198034 + t2 * 326.03945428399811) -
                        t3 * 628.37870921445153) +
                       t4 * 233.09369727549) -
                      53.678187956052838);
  sdvals[42] = (((((((t129 - t74) - t154) - t189) - t219) +
                  t8 * (eta * 12538.445845993479 - t2 * 5491.9621605337543)) -
                 sfvals_tmp * 7939.0951497359674) +
                xi * (((eta * 867.99235983363826 - t2 * 221.7205738382724) -
                       t3 * 1023.41983514737) +
                      t4 * 429.656727430313)) +
               t7 * ((eta * -5863.6028286512555 + t2 * 3228.326846785701) +
                     t3 * 1288.9705796489111);
  sdvals[43] = (((t10 * -1587.819029947193 +
                  t9 * (3134.6114614983712 - eta * 2745.9810802668771)) +
                 -t7 * (((eta * 221.7205738382724 + t2 * 1535.1297527210561) -
                         t3 * 859.31345486062594) -
                        433.99617991681907)) +
                -xi * ((((eta * 29.544459374005552 - t2 * 246.15935890058859) +
                         t3 * 164.10619336622631) +
                        t4 * 3.1770290359604838E-5) +
                       26.254335250912121)) +
               t8 * ((eta * 2152.2178978571342 + t2 * 1288.9705796489111) -
                     1954.5342762170851);
  sdvals[44] = ((((((t132 - t91) - t104) + t183) - t175) -
                 sfvals_tmp * 510.98353409811432) +
                xi * (((eta * 332.26776797114559 - t2 * 2666.9532436237391) +
                       t3 * 2448.5445649573062) -
                      t4 * 221.2154693168504)) +
               (-t7 * ((eta * 1568.5224579917449 - t2 * 11248.083714370439) +
                       t3 * 7324.4386476012851) +
                t8 * (eta * 1883.515093781165 - t2 * 9545.79909233622));
  sdvals[45] = ((t10 * -102.1967068196229 -
                 t7 * (((eta * 2666.9532436237391 - t2 * 3672.8168474359591) +
                        t3 * 442.43093863370092) -
                       166.13388398557279)) +
                -xi * ((((eta * -189.73379030847431 + t2 * 160.53437454856589) +
                         t3 * 303.99621587317358) -
                        t4 * 233.09374138785611) +
                       11.975131280659641)) +
               (-t8 * ((eta * -7498.7224762469577 + t2 * 7324.4386476012851) +
                       522.84081933058155) +
                t9 * (470.8787734452913 - eta * 4772.89954616811));
  sdvals[46] = ((((((-t26 + t98) + t141) - t92) - t97) +
                 xi * (((eta * 189.73380521068691 - t2 * 2666.9533600014911) +
                        t3 * 7498.722514293454) -
                       t4 * 4772.8994828196983)) +
                sfvals_tmp * 233.09378051817359) +
               (-t7 * ((eta * 160.53441504937641 - t2 * 3672.8173411668381) +
                       t3 * 7324.43895178072) -
                t8 * (eta * 303.99622288808052 + t2 * 442.4313153722922));
  sdvals[47] = (((t10 * 46.618756103634723 -
                  t7 * (((eta * 2666.9533600014911 - t2 * 11248.08377144018) +
                         t3 * 9545.7989656393966) -
                        94.866902605343469)) +
                 -t8 * ((eta * -2448.5448941112249 + t2 * 7324.43895178072) +
                        53.511471683125457)) +
                -xi * ((((eta * -332.26775655155382 + t2 * 1568.5223302335451) -
                         t3 * 1883.5148221422171) +
                        t4 * 510.9833788149167) +
                       11.9751313038326)) +
               -t9 * (eta * 221.2156576861461 + 75.999055722020131);
  sdvals[48] = (((((((t46 - t42) + t134) - t78) - t80) -
                  t8 * (eta * 164.1062229637927 - t2 * 859.31351169531081)) -
                 sfvals_tmp * 2.59024229205136E-5) +
                -xi * (((eta * 29.544435391202121 + t2 * 221.720938119018) -
                        t3 * 2152.218938230958) +
                       t4 * 2745.9817810042018)) +
               t7 * ((eta * 246.15935916672359 - t2 * 1535.12949222512) +
                     t3 * 1288.9699393922481);
  sdvals[49] = (((t10 * -5.1804845841027186E-6 +
                  t8 * ((eta * -1023.4196614834131 + t2 * 1288.9699393922481) +
                        82.053119722241192)) +
                 t9 * (eta * 429.6567558476554 - 41.026555740948183)) +
                -t7 * (((eta * 221.720938119018 - t2 * 3228.328407346437) +
                        t3 * 5491.9635620084046) +
                       14.772217695601061)) +
               -xi * ((((eta * -867.99251136297255 + t2 * 5863.6036013024668) -
                        t3 * 12538.44709221232) +
                       t4 * 7939.0957693093524) +
                      26.254341105207359);
  sdvals[50] =
      (((t225 + t8 * (eta * 628.37873526723558 - t2 * 1374.8059725826711)) -
        sfvals_tmp * 233.09372768408841) +
       -t7 * ((eta * 326.03941712328952 + t2 * 460.38771017179317) -
              t3 * 4598.5833217533518)) +
      -xi * (((eta * 110.9486564161912 - t2 * 2699.3088841349122) +
              t3 * 9956.0669490048585) -
             t4 * 7616.3102684528822);
  sdvals[51] = ((t10 * -46.618745536817677 +
                 xi * ((((eta * -1681.03049836998 + t2 * 10121.71625173643) -
                         t3 * 18261.118572251311) +
                        t4 * 9891.0563968323659) +
                       53.6781956358675)) +
                (t9 * (157.0946838168089 - eta * 687.40298629133554) -
                 t8 * ((eta * 306.9251401145288 - t2 * 4598.5833217533518) +
                       108.67980570776319))) +
               t7 * (((eta * 2699.3088841349122 - t2 * 14934.100423507291) +
                      t3 * 15232.620536905761) -
                     55.474328208095578);
  sdvals[52] = (((((((-t16 + t39) + t53) - t48) - t61) -
                  t7 * ((eta * 1016.122064210673 - t2 * 16908.058428443692) +
                        t3 * 18247.058948746711)) +
                 sfvals_tmp * 510.98338145281838) +
                xi * (((eta * 801.834146399528 - t2 * 10840.42720827111) +
                       t3 * 22097.038557888391) -
                      t4 * 12165.8018967898)) +
               -t8 * (eta * 160.418578787621 + t2 * 7501.8661531851612);
  sdvals[53] = ((t10 * 102.1966762905637 -
                 xi * ((((eta * -3343.2716021629421 + t2 * 14684.6979950191) -
                         t3 * 21303.105842857109) +
                        t4 * 9891.0559003309081) +
                       124.3017500565313)) +
                -t8 * ((eta * -11272.03895229579 + t2 * 18247.058948746711) +
                       338.70735473689109)) +
               (-t7 * (((eta * 10840.42720827111 - t2 * 33145.557836832588) +
                        t3 * 24331.60379357959) -
                       400.917073199764) -
                t9 * (eta * 3750.9330765925811 + 40.10464469690524));
  sdvals[54] = (((((((t32 + t83) - t59) - t146) - t218) -
                  sfvals_tmp * 8.85149389789024E-6) -
                 t8 * (eta * 1240.3026375144721 - t2 * 10653.49638075608)) +
                -xi * (((eta * 683.58145798011526 - t2 * 7187.2021281352108) +
                        t3 * 11893.79899721493) -
                       t4 * 5326.748190228871)) +
               t7 * ((eta * 1860.453967384301 - t2 * 17840.69852532728) +
                     t3 * 15980.244583536511);
  sdvals[55] = ((t10 * -1.770298779578048E-6 +
                 -xi * ((((eta * 683.58144019687609 - t2 * 1860.45390942396) +
                          t3 * 1240.302593128029) +
                         t4 * 1.2192076812989289E-5) -
                        31.71506767754061)) +
                (t7 * (((eta * 7187.2021281352108 - t2 * 17840.698495822391) +
                        t3 * 10653.49638045774) -
                       341.79072899005757) +
                 t9 * (eta * 5326.7481903780417 - 310.075659378618))) +
               t8 * ((eta * -11893.799016884859 + t2 * 15980.244583536511) +
                     620.15132246143378);
}

// tri_gl_10_ncoords - Obtain nodal coordinates in master element for
void tri_gl_10_ncoords(double natcoords[20])
{
  static const double dv[20]{0.0,
                             0.0,
                             1.0,
                             0.0,
                             0.0,
                             1.0,
                             0.276393202250021,
                             0.0,
                             0.72360679774997894,
                             0.0,
                             0.72360679774997894,
                             0.276393202250021,
                             0.276393202250021,
                             0.72360679774997894,
                             0.0,
                             0.72360679774997894,
                             0.0,
                             0.276393202250021,
                             0.33333333333333331,
                             0.33333333333333331};
  std::copy(&dv[0], &dv[20], &natcoords[0]);
}

// tri_gl_10_sfunc - Compute shape functions and their derivatives of
void tri_gl_10_sfunc(double xi, double eta, double sfvals[10])
{
  double sfvals_tmp;
  double t15;
  double t17;
  double t3;
  double t32;
  double t4;
  double t40;
  double t48;
  double t5;
  double t51;
  double t55;
  double t58;
  double t59;
  double t6;
  double t7;
  t3 = eta * 5.0;
  t4 = eta * eta;
  t5 = std::pow(eta, 3.0);
  t6 = xi * xi;
  t7 = std::pow(xi, 3.0);
  t40 = eta * 21.180339887498949;
  t48 = eta * 1.180339887498949;
  t15 = t3 * t4;
  t17 = t7 * 5.0;
  t51 = t4 * 1.9098300562505259;
  t55 = t4 * 13.090169943749469;
  t32 = eta - t4;
  t58 = t6 * (eta * 13.090169943749469);
  t59 = t6 * (eta * 1.9098300562505259);
  sfvals[0] = (((((eta * -6.0 + t4 * 10.0) - t5 * 5.0) - t17) -
                xi * ((-(eta * 21.0) + t4 * 16.0) + 6.0)) +
               t6 * (10.0 - eta * 16.0)) +
              1.0;
  sfvals[1] = (t17 + (t32 + 1.0) * xi) - t6 * (eta + 5.0);
  sfvals_tmp = eta * t6;
  sfvals[2] = (((eta - t4 * 5.0) + t15) - sfvals_tmp) + t32 * xi;
  sfvals[3] = (t6 * (eta * 24.270509831248422 - 19.270509831248422) +
               t17 * 2.23606797749979) +
              ((-t40 + t55) + 8.0901699437494745) * xi;
  sfvals[4] =
      (t7 * 2.23606797749979 * -5.0 + ((t48 + t51) - 3.0901699437494741) * xi) +
      t6 * (14.27050983124842 - eta * 9.2705098312484235);
  sfvals[5] = t58 - xi * (t3 - t51);
  sfvals[6] = t59 - xi * (t3 - t55);
  sfvals[7] = (((eta * -3.0901699437494741 + t4 * 14.27050983124842) + t59) -
               t5 * 2.23606797749979 * 5.0) +
              (t48 - t4 * 9.2705098312484235) * xi;
  sfvals[8] = (((eta * 8.0901699437494745 - t4 * 19.270509831248422) +
                t15 * 2.23606797749979) +
               t58) +
              (-t40 + t4 * 24.270509831248422) * xi;
  sfvals[9] = sfvals_tmp * -27.0 + (eta * 27.0 - t4 * 27.0) * xi;
}

// tri_gl_10_sfunc - Compute shape functions and their derivatives of
void tri_gl_10_sfunc(double xi, double eta, double sfvals[10],
                     double sdvals[20])
{
  double sfvals_tmp;
  double t11;
  double t13;
  double t14;
  double t15;
  double t17;
  double t2;
  double t23;
  double t24;
  double t27;
  double t3;
  double t32;
  double t33;
  double t37;
  double t39;
  double t4;
  double t40;
  double t41;
  double t42;
  double t47;
  double t48;
  double t5;
  double t50;
  double t51;
  double t52;
  double t54;
  double t55;
  double t56;
  double t58;
  double t59;
  double t6;
  double t62;
  double t63;
  double t64;
  double t65;
  double t7;
  t2 = eta * 2.0;
  t3 = eta * 5.0;
  t4 = eta * eta;
  t5 = std::pow(eta, 3.0);
  t6 = xi * xi;
  t7 = std::pow(xi, 3.0);
  t11 = eta * 21.0;
  t13 = eta * 32.0;
  t14 = eta * 54.0;
  t39 = eta * 18.541019662496851;
  t40 = eta * 21.180339887498949;
  t41 = eta * 26.180339887498949;
  t42 = eta * 48.541019662496844;
  t47 = eta * 3.819660112501051;
  t48 = eta * 1.180339887498949;
  t15 = t3 * t4;
  t17 = t7 * 5.0;
  t23 = t4 * 15.0;
  t24 = t4 * 16.0;
  t33 = -xi * (t2 - 1.0);
  t50 = t41 * xi;
  t51 = t4 * 1.9098300562505259;
  t54 = t47 * xi;
  t55 = t4 * 13.090169943749469;
  t27 = t6 * 15.0;
  t32 = eta - t4;
  t52 = t6 * 1.9098300562505259;
  t56 = t6 * 13.090169943749469;
  t58 = t6 * (eta * 13.090169943749469);
  t59 = t6 * (eta * 1.9098300562505259);
  t62 = -t40 + t4 * 24.270509831248422;
  t64 = (-t40 + t55) + 8.0901699437494745;
  t65 = (t48 + t51) - 3.0901699437494741;
  t37 = eta * 27.0 - t4 * 27.0;
  t63 = t48 - t4 * 9.2705098312484235;
  sfvals[0] = (((((eta * -6.0 + t4 * 10.0) - t5 * 5.0) - t17) -
                xi * ((-t11 + t24) + 6.0)) +
               t6 * (10.0 - eta * 16.0)) +
              1.0;
  sfvals[1] = (t17 + (t32 + 1.0) * xi) - t6 * (eta + 5.0);
  sfvals_tmp = eta * t6;
  sfvals[2] = (((eta - t4 * 5.0) + t15) - sfvals_tmp) + t32 * xi;
  sfvals[3] = (t6 * (eta * 24.270509831248422 - 19.270509831248422) +
               t17 * 2.23606797749979) +
              t64 * xi;
  sfvals[4] = (t7 * 2.23606797749979 * -5.0 + t65 * xi) +
              t6 * (14.27050983124842 - eta * 9.2705098312484235);
  sfvals[5] = t58 - xi * (t3 - t51);
  sfvals[6] = t59 - xi * (t3 - t55);
  sfvals[7] = (((eta * -3.0901699437494741 + t4 * 14.27050983124842) + t59) -
               t5 * 2.23606797749979 * 5.0) +
              t63 * xi;
  sfvals[8] = (((eta * 8.0901699437494745 - t4 * 19.270509831248422) +
                t15 * 2.23606797749979) +
               t58) +
              t62 * xi;
  sfvals[9] = sfvals_tmp * -27.0 + t37 * xi;
  sdvals[0] = (-t27 + ((t11 - t24) - 6.0)) - xi * (t13 - 20.0);
  sdvals[1] = (((eta * 20.0 - t6 * 16.0) - t23) - xi * (t13 - 21.0)) - 6.0;
  sdvals[2] = (t27 + (t32 + 1.0)) - xi * (t2 + 10.0);
  sdvals[3] = -t6 + t33;
  sdvals[4] = t32 - t2 * xi;
  sdvals[5] = (((eta * -10.0 + t23) - t6) + t33) + 1.0;
  sdvals[6] = (t64 + 2.23606797749979 * t27) + xi * (t42 - 38.541019662496844);
  sdvals[7] = t6 * 24.270509831248422 + xi * (t41 - 21.180339887498949);
  sdvals[8] =
      (t65 - t6 * 2.23606797749979 * 15.0) - xi * (t39 - 28.541019662496851);
  sdvals[9] = t6 * -9.2705098312484235 + xi * (t47 + 1.180339887498949);
  sdvals[10] = t50 + (-t3 + t51);
  sdvals[11] = t56 + xi * (t47 - 5.0);
  sdvals[12] = t54 + (-t3 + t55);
  sdvals[13] = t52 + xi * (t41 - 5.0);
  sdvals[14] = t54 + t63;
  sdvals[15] =
      (((eta * 28.541019662496851 + t52) - t4 * 2.23606797749979 * 15.0) -
       xi * (t39 - 1.180339887498949)) -
      3.0901699437494741;
  sdvals[16] = t50 + t62;
  sdvals[17] = (((eta * -38.541019662496844 + 2.23606797749979 * t23) + t56) +
                xi * (t42 - 21.180339887498949)) +
               8.0901699437494745;
  sdvals[18] = t37 - t14 * xi;
  sdvals[19] = t6 * -27.0 - xi * (t14 - 27.0);
}

// tri_gl_15_ncoords - Obtain nodal coordinates in master element for
void tri_gl_15_ncoords(double natcoords[30])
{
  static const double dv[30]{0.0,
                             0.0,
                             1.0,
                             0.0,
                             0.0,
                             1.0,
                             0.1726731646460114,
                             0.0,
                             0.5,
                             0.0,
                             0.82732683535398854,
                             0.0,
                             0.82732683535398854,
                             0.1726731646460114,
                             0.5,
                             0.5,
                             0.1726731646460114,
                             0.82732683535398854,
                             0.0,
                             0.82732683535398854,
                             0.0,
                             0.5,
                             0.0,
                             0.1726731646460114,
                             0.2073451756635909,
                             0.2073451756635909,
                             0.58530964867281821,
                             0.2073451756635909,
                             0.2073451756635909,
                             0.58530964867281821};
  std::copy(&dv[0], &dv[30], &natcoords[0]);
}

// tri_gl_15_sfunc - Compute shape functions and their derivatives of
void tri_gl_15_sfunc(double xi, double eta, double sfvals[15])
{
  double sfvals_tmp;
  double t106;
  double t11;
  double t110;
  double t118;
  double t120;
  double t124;
  double t126;
  double t14;
  double t2;
  double t21;
  double t22;
  double t24;
  double t26;
  double t28;
  double t3;
  double t4;
  double t41;
  double t47;
  double t5;
  double t54;
  double t6;
  double t7;
  double t71;
  double t85;
  double t9;
  double t92;
  double t94;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = xi * xi;
  t6 = std::pow(xi, 3.0);
  t41 = eta * 69.69079963456926;
  t47 = eta * 3.2640033791765219;
  t54 = eta * 21.800647943630331;
  t85 = eta * 7.8326771551833918;
  t4 = t2 * t2;
  t7 = t5 * t5;
  t14 = eta * 2.6457513110645907;
  t22 = t3 * 74.666666666666671;
  t26 = t2 * 2.6457513110645907;
  t71 = t2 * 133.0743258427749;
  t92 = t2 * 105.1418142421649;
  t94 = t3 * 105.1418142421649;
  t106 = t3 * 48.838209405489671;
  t110 = t2 * 21.634023469080709;
  t118 = t2 * 30.720691139872361;
  t120 = t2 * 13.440302373694159;
  t124 = t3 * 6.6126421934609754;
  t126 = t3 * 2.7312403651288508;
  t9 = t4 * 14.0;
  t11 = t7 * 14.0;
  t21 = t4 * 32.666666666666664;
  t24 = t7 * 32.666666666666664;
  t28 = t14 * 2.3333333333333335;
  sfvals[0] =
      (((((((eta * -10.0 + t2 * 30.0) - t3 * 35.0) + t9) + t11) +
         (((eta * 66.614378277661473 + t3 * 65.260129588726073) -
           t2 * 120.8745078663875) -
          10.0) *
             xi) +
        t5 * ((eta * -120.8745078663875 + t2 * 102.5202591774521) + 30.0)) +
       t6 * (eta * 65.260129588726073 - 35.0)) +
      1.0;
  sfvals[1] =
      ((t11 - t6 * (t14 * 3.5 + 21.0)) + t5 * ((t14 * 4.5 - t26 * 3.5) + 9.0)) -
      xi * ((t14 + t2 * -2.6457513110645907) + 1.0);
  sfvals[2] =
      ((((-eta + t2 * 9.0) - t3 * 21.0) + t9) + t5 * (t14 - t26 * 3.5)) -
      xi * ((t14 + t3 * 2.6457513110645907 * 3.5) - t26 * 4.5);
  sfvals[3] =
      ((-t24 +
        (((-t41 + t2 * 105.01600406261041) - t106) + 13.51300497744848) * xi) +
       t6 * (76.026009954896963 - eta * 116.9027831039519)) -
      t5 * ((eta * -183.77325438263631 + t71) + 56.872348265678767);
  sfvals[4] =
      ((t7 * 37.333333333333336 +
        (((t85 + t2 * 4.1132983716109166) - t124) - 5.333333333333333) * xi) +
       t5 * ((eta * -77.166010488516719 + t118) + 42.666666666666664)) +
      t6 * (eta * 74.666666666666671 - 74.666666666666671);
  sfvals[5] =
      ((-t24 +
        (((t47 + t126) - t2 * 8.8155721001902254) + 2.820328355884854) * xi) -
       t5 * ((eta * 3.0131247939101931 - t110) + 24.794318400987891)) +
      t6 * (54.640656711769708 - eta * 13.76388356271481);
  sfvals[6] = (t6 * (eta * 48.838209405489671) -
               t5 * (eta * 41.498624153858572 - t120)) -
              xi * ((-t28 + t126) + t2 * 0.621851004803674);
  sfvals[7] = (t6 * (eta * 6.6126421934609754) +
               ((eta * 3.7786526819777 + t124) - t2 * 15.72462820877201) * xi) -
              t5 * (eta * 15.72462820877201 - t2 * 50.558617720255278);
  sfvals_tmp = eta * t6;
  sfvals[8] = (sfvals_tmp * -2.7312403651288508 +
               ((t28 + t106) - t2 * 41.498624153858572) * xi) -
              t5 * (eta * 0.621851004803674 - t120);
  sfvals[9] = (((((eta * 2.820328355884854 - t2 * 24.794318400987891) +
                  t3 * 54.640656711769708) -
                 t21) +
                t6 * (eta * 2.7312403651288508)) -
               t5 * (eta * 8.8155721001902254 - t110)) -
              xi * ((-t47 + t2 * 3.0131247939101931) + t3 * 13.76388356271481);
  sfvals[10] = (((((eta * -5.333333333333333 + t2 * 42.666666666666664) +
                   t4 * 37.333333333333336) -
                  t22) -
                 sfvals_tmp * 6.6126421934609754) +
                ((t22 + t85) - t2 * 77.166010488516719) * xi) +
               t5 * (eta * 4.1132983716109166 + t118);
  sfvals[11] = (((((eta * 13.51300497744848 - t2 * 56.872348265678767) +
                   t3 * 76.026009954896963) -
                  t21) -
                 sfvals_tmp * 48.838209405489671) +
                t5 * (eta * 105.01600406261041 - t71)) -
               xi * ((t41 - t2 * 183.77325438263631) + t3 * 116.9027831039519);
  sfvals[12] = (t6 * (eta * 105.1418142421649) +
                ((t14 * 31.5 + t94) - t2 * 188.48298054069949) * xi) -
               t5 * (eta * 188.48298054069949 - t2 * 210.28362848432991);
  sfvals[13] =
      (t5 * (eta * 126.94246218579531 - t92) - sfvals_tmp * 105.1418142421649) +
      (-t54 + t2 * 21.800647943630331) * xi;
  sfvals[14] =
      -t5 * (-t54 + t92) - xi * ((t54 - t2 * 126.94246218579531) + t94);
}

// tri_gl_15_sfunc - Compute shape functions and their derivatives of
void tri_gl_15_sfunc(double xi, double eta, double sfvals[15],
                     double sdvals[30])
{
  double sfvals_tmp;
  double t10;
  double t104;
  double t106;
  double t107;
  double t108;
  double t11;
  double t110;
  double t111;
  double t118;
  double t119;
  double t12;
  double t120;
  double t121;
  double t124;
  double t126;
  double t127;
  double t128;
  double t13;
  double t130;
  double t131;
  double t139;
  double t14;
  double t140;
  double t141;
  double t142;
  double t146;
  double t147;
  double t149;
  double t15;
  double t150;
  double t151;
  double t16;
  double t2;
  double t20;
  double t21;
  double t22;
  double t23;
  double t24;
  double t25;
  double t26;
  double t28;
  double t3;
  double t34;
  double t36;
  double t39;
  double t4;
  double t40;
  double t41;
  double t42;
  double t43;
  double t45;
  double t46;
  double t47;
  double t48;
  double t5;
  double t50;
  double t51;
  double t53;
  double t54;
  double t55;
  double t57;
  double t59;
  double t6;
  double t62;
  double t63;
  double t7;
  double t70;
  double t71;
  double t72;
  double t74;
  double t82;
  double t84;
  double t85;
  double t88;
  double t89;
  double t9;
  double t90;
  double t92;
  double t93;
  double t94;
  double t95;
  double t96;
  double t97;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = xi * xi;
  t6 = std::pow(xi, 3.0);
  t39 = eta * 367.54650876527251;
  t40 = eta * 376.96596108139909;
  t41 = eta * 69.69079963456926;
  t42 = eta * 253.88492437159061;
  t43 = eta * 82.997248307717143;
  t45 = eta * 210.28362848432991;
  t46 = eta * 61.441382279744722;
  t47 = eta * 3.2640033791765219;
  t48 = eta * 266.14865168554968;
  t50 = eta * 154.33202097703341;
  t51 = eta * 241.74901573277509;
  t53 = eta * 210.0320081252209;
  t54 = eta * 21.800647943630331;
  t55 = eta * 43.601295887260669;
  t57 = eta * 26.880604747388311;
  t59 = eta * 31.449256417544021;
  t62 = eta * 17.631144200380451;
  t63 = eta * 43.268046938161419;
  t82 = eta * 8.226596743221835;
  t85 = eta * 7.8326771551833918;
  t90 = eta * 1.2437020096073479;
  t95 = eta * 6.026249587820387;
  t4 = t2 * t2;
  t7 = t5 * t5;
  t10 = t3 * 56.0;
  t12 = t6 * 56.0;
  t13 = t2 * 224.0;
  t14 = eta * 2.6457513110645907;
  t22 = t3 * 74.666666666666671;
  t23 = t3 * 130.66666666666666;
  t25 = t6 * 130.66666666666666;
  t26 = t2 * 2.6457513110645907;
  t34 = t3 * 2.6457513110645907 * 3.5;
  t70 = t2 * 315.42544272649479;
  t71 = t2 * 133.0743258427749;
  t72 = t2 * 266.14865168554968;
  t74 = t2 * 146.514628216469;
  t84 = t2 * 183.77325438263631;
  t88 = t3 * 116.9027831039519;
  t89 = t2 * 126.94246218579531;
  t92 = t2 * 105.1418142421649;
  t93 = t2 * 210.28362848432991;
  t94 = t3 * 105.1418142421649;
  t96 = t2 * 61.441382279744722;
  t97 = t6 * 105.1418142421649;
  t104 = t2 * 26.880604747388311;
  t106 = t3 * 48.838209405489671;
  t107 = t6 * 48.838209405489671;
  t108 = t2 * 19.837926580382931;
  t110 = t2 * 21.634023469080709;
  t111 = t2 * 43.268046938161419;
  t118 = t2 * 30.720691139872361;
  t119 = t2 * 3.0131247939101931;
  t120 = t2 * 13.440302373694159;
  t121 = t2 * 8.193721095386552;
  t124 = t3 * 6.6126421934609754;
  t126 = t3 * 2.7312403651288508;
  t127 = t6 * 6.6126421934609754;
  t128 = t6 * 2.7312403651288508;
  t130 = t3 * 13.76388356271481;
  t131 = t2 * 0.621851004803674;
  t9 = t4 * 14.0;
  t11 = t7 * 14.0;
  t15 = t14 * 2.0;
  t16 = t14 * 7.0;
  t20 = t14 * 9.0;
  t21 = t4 * 32.666666666666664;
  t24 = t7 * 32.666666666666664;
  t28 = t14 * 2.3333333333333335;
  t36 = t26 * 4.5;
  t139 = -t54 + t2 * 21.800647943630331;
  t140 = (t22 + t85) - t2 * 77.166010488516719;
  t141 = (t14 * 31.5 + t94) - t2 * 188.48298054069949;
  t142 = (t28 + t106) - t2 * 41.498624153858572;
  t146 = ((eta * 66.614378277661473 + t3 * 65.260129588726073) -
          t2 * 120.8745078663875) -
         10.0;
  t147 = (eta * 3.7786526819777 + t124) - t2 * 15.72462820877201;
  t149 = ((t85 + t2 * 4.1132983716109166) - t124) - 5.333333333333333;
  t150 = ((-t41 + t2 * 105.01600406261041) - t106) + 13.51300497744848;
  t151 = ((t47 + t126) - t2 * 8.8155721001902254) + 2.820328355884854;
  sfvals[0] =
      (((((((eta * -10.0 + t2 * 30.0) - t3 * 35.0) + t9) + t11) + t146 * xi) +
        t5 * ((eta * -120.8745078663875 + t2 * 102.5202591774521) + 30.0)) +
       t6 * (eta * 65.260129588726073 - 35.0)) +
      1.0;
  sfvals[1] =
      ((t11 - t6 * (t14 * 3.5 + 21.0)) + t5 * ((t14 * 4.5 - t26 * 3.5) + 9.0)) -
      xi * ((t14 + t2 * -2.6457513110645907) + 1.0);
  sfvals[2] =
      ((((-eta + t2 * 9.0) - t3 * 21.0) + t9) + t5 * (t14 - t26 * 3.5)) -
      xi * ((t14 + t34) - t36);
  sfvals[3] = ((-t24 + t150 * xi) +
               t6 * (76.026009954896963 - eta * 116.9027831039519)) -
              t5 * ((eta * -183.77325438263631 + t71) + 56.872348265678767);
  sfvals[4] = ((t7 * 37.333333333333336 + t149 * xi) +
               t5 * ((eta * -77.166010488516719 + t118) + 42.666666666666664)) +
              t6 * (eta * 74.666666666666671 - 74.666666666666671);
  sfvals[5] = ((-t24 + t151 * xi) -
               t5 * ((eta * 3.0131247939101931 - t110) + 24.794318400987891)) +
              t6 * (54.640656711769708 - eta * 13.76388356271481);
  sfvals[6] = (t6 * (eta * 48.838209405489671) -
               t5 * (eta * 41.498624153858572 - t120)) -
              xi * ((-t28 + t126) + t131);
  sfvals[7] = (t6 * (eta * 6.6126421934609754) + t147 * xi) -
              t5 * (eta * 15.72462820877201 - t2 * 50.558617720255278);
  sfvals_tmp = eta * t6;
  sfvals[8] = (sfvals_tmp * -2.7312403651288508 + t142 * xi) -
              t5 * (eta * 0.621851004803674 - t120);
  sfvals[9] = (((((eta * 2.820328355884854 - t2 * 24.794318400987891) +
                  t3 * 54.640656711769708) -
                 t21) +
                t6 * (eta * 2.7312403651288508)) -
               t5 * (eta * 8.8155721001902254 - t110)) -
              xi * ((-t47 + t119) + t130);
  sfvals[10] = (((((eta * -5.333333333333333 + t2 * 42.666666666666664) +
                   t4 * 37.333333333333336) -
                  t22) -
                 sfvals_tmp * 6.6126421934609754) +
                t140 * xi) +
               t5 * (eta * 4.1132983716109166 + t118);
  sfvals[11] = (((((eta * 13.51300497744848 - t2 * 56.872348265678767) +
                   t3 * 76.026009954896963) -
                  t21) -
                 sfvals_tmp * 48.838209405489671) +
                t5 * (eta * 105.01600406261041 - t71)) -
               xi * ((t41 - t84) + t88);
  sfvals[12] = (t6 * (eta * 105.1418142421649) + t141 * xi) -
               t5 * (eta * 188.48298054069949 - t93);
  sfvals[13] =
      (t5 * (eta * 126.94246218579531 - t92) - sfvals_tmp * 105.1418142421649) +
      t139 * xi;
  sfvals[14] = -t5 * (-t54 + t92) - xi * ((t54 - t89) + t94);
  sdvals[0] = ((t12 + t146) + xi * ((t2 * 205.04051835490429 - t51) + 60.0)) +
              t5 * (eta * 195.78038876617819 - 105.0);
  sdvals[1] = (((((eta * 60.0 - t2 * 105.0) + t6 * 65.260129588726073) + t10) +
                t5 * (eta * 205.04051835490429 - 120.8745078663875)) +
               xi * ((t2 * 195.78038876617819 - t51) + 66.614378277661473)) -
              10.0;
  sdvals[2] = ((t12 + ((-t14 + t26) - 1.0)) - t5 * (t14 * 10.5 + 63.0)) +
              xi * ((t20 - t26 * 7.0) + 18.0);
  sdvals[3] =
      (t6 * 2.6457513110645907 * -3.5 + t5 * (11.905880899790658 - t16)) -
      xi * (2.6457513110645907 - t15);
  sdvals[4] = ((-t14 - t34) + t36) + xi * (t15 - t26 * 7.0);
  sdvals[5] =
      ((((eta * 18.0 - t2 * 63.0) + t10) + t5 * (2.6457513110645907 - t16)) -
       xi * ((2.6457513110645907 - t20) + t26 * 10.5)) -
      1.0;
  sdvals[6] =
      ((-t25 + t150) + t5 * (228.0780298646909 - eta * 350.70834931185561)) -
      xi * ((-t39 + t72) + 113.7446965313575);
  sdvals[7] =
      (t6 * -116.9027831039519 - xi * ((-t53 + t74) + 69.69079963456926)) -
      t5 * (t48 - 183.77325438263631);
  sdvals[8] = ((t6 * 149.33333333333334 + t149) +
               xi * ((-t50 + t96) + 85.333333333333329)) +
              t5 * (eta * 224.0 - 224.0);
  sdvals[9] =
      (t6 * 74.666666666666671 + xi * ((t82 - t108) + 7.8326771551833918)) +
      t5 * (t46 - 77.166010488516719);
  sdvals[10] =
      ((-t25 + t151) + t5 * (163.9219701353091 - eta * 41.291650688144429)) -
      xi * ((t95 - t111) + 49.588636801975788);
  sdvals[11] = (t6 * -13.76388356271481 + t5 * (t63 - 3.0131247939101931)) +
               xi * ((-t62 + t121) + 3.2640033791765219);
  sdvals[12] = (((t28 - t126) - t131) + xi * (-t43 + t104)) +
               t5 * (eta * 146.514628216469);
  sdvals[13] = (t107 + t5 * (t57 - 41.498624153858572)) -
               xi * ((t90 + -6.1734197258173786) + t121);
  sdvals[14] = (t147 + t5 * (eta * 19.837926580382931)) +
               xi * (t2 * 101.1172354405106 - t59);
  sdvals[15] = (t127 + t5 * (eta * 101.1172354405106 - 15.72462820877201)) +
               xi * ((-t59 + t108) + 3.7786526819777);
  sfvals_tmp = eta * t5;
  sdvals[16] = (t142 - sfvals_tmp * 8.193721095386552) - xi * (t90 - t104);
  sdvals[17] = (-t128 + xi * ((6.1734197258173786 - t43) + t74)) +
               t5 * (t57 - 0.621851004803674);
  sdvals[18] = (((t47 - t119) - t130) + xi * (-t62 + t111)) +
               t5 * (eta * 8.193721095386552);
  sdvals[19] =
      (((((eta * -49.588636801975788 + t2 * 163.9219701353091) - t23) + t128) +
        t5 * (t63 - 8.8155721001902254)) -
       xi * ((t2 * 41.291650688144429 + t95) - 3.2640033791765219)) +
      2.820328355884854;
  sdvals[20] = (t140 + xi * (t82 + t96)) - sfvals_tmp * 19.837926580382931;
  sdvals[21] =
      (((((eta * 85.333333333333329 + t3 * 149.33333333333334) - t13) - t127) +
        t5 * (t46 + 4.1132983716109166)) +
       xi * ((t13 - t50) + 7.8326771551833918)) -
      5.333333333333333;
  sdvals[22] =
      (((-t41 + t84) - t88) + xi * (t53 - t72)) - sfvals_tmp * 146.514628216469;
  sdvals[23] =
      (((((eta * -113.7446965313575 + t2 * 228.0780298646909) - t23) - t107) -
        t5 * (t48 - 105.01600406261041)) -
       xi * ((t2 * 350.70834931185561 - t39) + 69.69079963456926)) +
      13.51300497744848;
  sdvals[24] = (t141 + xi * (t2 * 420.56725696865982 - t40)) +
               t5 * (eta * 315.42544272649479);
  sdvals[25] = (t97 + xi * ((83.3411662985346 - t40) + t70)) +
               t5 * (eta * 420.56725696865982 - 188.48298054069949);
  sdvals[26] = (t139 + xi * (t42 - t93)) - sfvals_tmp * 315.42544272649479;
  sdvals[27] = (-t97 - t5 * (t45 - 126.94246218579531)) +
               xi * (t55 - 21.800647943630331);
  sdvals[28] = ((-t54 + t89) - t94) + xi * (t55 - t93);
  sdvals[29] = -xi * ((-t42 + t70) + 21.800647943630331) -
               t5 * (t45 - 21.800647943630331);
}

// tri_gl_21_ncoords - Obtain nodal coordinates in master element for
void tri_gl_21_ncoords(double natcoords[42])
{
  static const double dv[42]{0.0,
                             0.0,
                             1.0,
                             0.0,
                             0.0,
                             1.0,
                             0.1174723380352677,
                             0.0,
                             0.35738424175967748,
                             0.0,
                             0.64261575824032258,
                             0.0,
                             0.88252766196473231,
                             0.0,
                             0.88252766196473231,
                             0.1174723380352677,
                             0.64261575824032258,
                             0.35738424175967748,
                             0.35738424175967748,
                             0.64261575824032258,
                             0.1174723380352677,
                             0.88252766196473231,
                             0.0,
                             0.88252766196473231,
                             0.0,
                             0.64261575824032258,
                             0.0,
                             0.35738424175967748,
                             0.0,
                             0.1174723380352677,
                             0.140828627235979,
                             0.140828627235979,
                             0.42441597651968271,
                             0.15116804696063471,
                             0.718342745528042,
                             0.140828627235979,
                             0.42441597651968271,
                             0.42441597651968271,
                             0.140828627235979,
                             0.718342745528042,
                             0.15116804696063471,
                             0.42441597651968271};
  std::copy(&dv[0], &dv[42], &natcoords[0]);
}

// tri_gl_21_sfunc - Compute shape functions and their derivatives of
void tri_gl_21_sfunc(double xi, double eta, double sfvals[21])
{
  double t10;
  double t11;
  double t123;
  double t128;
  double t132;
  double t146;
  double t150;
  double t152;
  double t156;
  double t18;
  double t180;
  double t181;
  double t189;
  double t194;
  double t2;
  double t201;
  double t205;
  double t218;
  double t227;
  double t231;
  double t234;
  double t240;
  double t246;
  double t252;
  double t252_tmp;
  double t255;
  double t259;
  double t265;
  double t269;
  double t278;
  double t288;
  double t289;
  double t3;
  double t4;
  double t40;
  double t5;
  double t58;
  double t6;
  double t7;
  double t73;
  double t74;
  double t8;
  double t81;
  double t85;
  double t9;
  double t91;
  double t93;
  double t95;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = std::pow(eta, 5.0);
  t6 = xi * xi;
  t7 = std::pow(xi, 3.0);
  t9 = std::pow(xi, 5.0);
  t18 = eta * 3.08454769850681;
  t40 = eta * 25.83708989075333;
  t58 = eta * 172.54443075650971;
  t73 = eta * 5.0520451128222348;
  t91 = eta * 53.765587766506627;
  t93 = eta * 23.005029484075049;
  t132 = eta * 3.501286404027534;
  t156 = eta * 7.4689466124992041;
  t180 = eta * 9.3041397487953272;
  t4 = t2 * t2;
  t8 = t6 * t6;
  t10 = t5 * 42.0;
  t11 = t9 * 42.0;
  t74 = t2 * 966.2852837917294;
  t81 = t2 * 379.22973482941069;
  t95 = t2 * 1330.32403430767;
  t123 = t2 * 119.33996744161431;
  t146 = t2 * 202.99478947428719;
  t152 = t2 * 163.19962960050179;
  t181 = t3 * 915.64738337559254;
  t189 = t2 * 37.490751028871443;
  t194 = t2 * 125.15930225101989;
  t201 = t5 * 100.0722106463179;
  t205 = t9 * 100.0722106463179;
  t227 = t5 * 121.1674570846437;
  t231 = t9 * 121.1674570846437;
  t234 = t3 * 29.127915485569861;
  t240 = t3 * 0.81145648959875016;
  t246 = t2 * 2.817319907247084;
  t85 = t4 * 16.104798226516269;
  t128 = t4 * 414.02101445819852;
  t150 = t4 * 182.87076768155589;
  t218 = t4 * 25.618658403608;
  t252_tmp = eta * t8;
  t252 = t252_tmp * -16.104798226516269;
  t255 = t8 * (eta * 182.87076768155589);
  t259 = t4 * 1.503625018669281;
  t265 = t4 * 6.5479307367573307;
  t269 = t252_tmp * -414.02101445819852;
  t278 = t8 * (eta * 25.618658403608);
  t288 = t252_tmp * -1.503625018669281;
  t289 = t252_tmp * -6.5479307367573307;
  sfvals[0] =
      (((((((eta * -15.0 + t2 * 70.0) - t3 * 140.0) + t4 * 126.0) - t10) -
         t11) +
        t8 * (126.0 - eta * 264.58107075144687)) -
       t7 * ((eta * -629.44100473587059 + t2 * 584.14894049914017) + 140.0)) +
      ((-t6 * (((eta * 512.19084233022272 - t2 * 1007.287737716541) +
                t3 * 584.14894049914017) -
               70.0) -
        xi * ((((-(eta * 161.330908345799) - t3 * 629.44100473587059) +
                t2 * 512.19084233022272) +
               t4 * 264.58107075144687) +
              15.0)) +
       1.0);
  sfvals[1] = (((t11 + ((((t73 + t4 * 0.40572824479937508) - t240) -
                         t2 * 4.6463168680228586) +
                        1.0) *
                           xi) -
                t6 * (((eta * 43.354252631292432 - t189) - t240) + 14.0)) -
               t8 * (eta * 54.581070751446937 + 84.0)) +
              t7 * ((eta * 92.883278269917128 - t2 * 54.17534250664756) + 56.0);
  sfvals[2] =
      (((((((eta - t2 * 14.0) + t3 * 56.0) - t4 * 84.0) + t10) +
         t252_tmp * 0.40572824479937508) -
        t6 * ((eta * 4.6463168680228586 + t3 * 54.17534250664756) - t189)) +
       (((t3 * 92.883278269917128 + t73) - t2 * 43.354252631292432) -
        t4 * 54.581070751446937) *
           xi) +
      -t7 * (eta * 0.81145648959875016 - t2 * 0.81145648959875016);
  sfvals[3] =
      (((t205 + t7 * ((eta * -1127.029968909131 + t2 * 917.42418877868977) +
                      299.68785732601259)) +
        t8 * (eta * 516.63321400870927 - 288.46091538197311)) +
       ((((t2 * 459.6421869641581 - t58) + t150) - t3 * 490.25135576184363) +
        20.282831872639338) *
           xi) +
      t6 * (((eta * 785.64101228531217 + t3 * 683.73395309785428) - t95) -
            131.58198446299679);
  sfvals[4] =
      ((-t231 -
        t6 * (((eta * 357.84783998892817 + t3 * 116.3788441225287) - t81) -
              98.49823568607377)) +
       t8 * (320.1990314777874 - eta * 416.49900583578938)) +
      (-t7 * ((eta * -744.020386637612 + t2 * 437.32905127728242) +
              289.45743553860677) -
       xi * ((((-t40 + t3 * 38.043689593656516) - t218) +
              t2 * 5.3396841600941114) +
             8.0723745406106957));
  sfvals[5] =
      (((t231 +
         ((((t18 + t3 * 28.660434168753671) - t2 * 29.686420426855481) - t265) +
          4.4893692963523337) *
             xi) +
        t6 * (((eta * 36.226926330853267 - t3 * 91.711154458981014) + t123) -
              60.354452909459013)) +
       t8 * (eta * 189.338279587429 - 285.638253945431)) +
      -t7 * ((eta * 220.5773790761784 + t2 * 16.99240121943836) -
             220.335880473894);
  sfvals[6] =
      ((-t205 -
        xi * ((((t180 - t2 * 17.7351877515651) + t3 * 4.2275963557195144) +
               t259) +
              2.699826628380976)) -
       t7 * ((eta * 91.902335727239574 - t2 * 148.38656079296771) +
             146.5663022612998)) +
      (t8 * (eta * 16.2721607771195 + 211.9001378496167) +
       t6 * (((eta * 64.65148282627608 + t3 * 30.53856435086097) - t194) +
             37.438201686382072));
  sfvals[7] =
      ((t255 -
        xi * (((t156 - t3 * 10.242096430396639) + t2 * 3.96935142760913) +
              t259)) -
       t7 * (eta * 241.2317149643799 - t2 * 47.7491176283691)) -
      t6 * ((eta * -86.112725767962573 + t3 * 36.553064425538089) + t246);
  sfvals[8] =
      ((t278 - t7 * (eta * 64.43094402077547 - t2 * 218.85347773696071)) -
       xi * (((t132 - t2 * 17.00729765886155) + t265) +
             t3 * 2.4687112217243512)) +
      t6 * ((eta * 34.241197480584312 + t3 * 65.5194315119517) - t152);
  sfvals[9] =
      ((t289 +
        (((-t132 + t218) + t2 * 34.241197480584312) - t3 * 64.43094402077547) *
            xi) +
       t6 * ((eta * 17.00729765886155 + t3 * 218.85347773696071) - t152)) -
      t7 * (eta * 2.4687112217243512 - t2 * 65.5194315119517);
  sfvals[10] =
      ((t288 +
        (((t150 + t2 * 86.112725767962573) - t156) - t3 * 241.2317149643799) *
            xi) -
       t6 * ((eta * 3.96935142760913 - t3 * 47.7491176283691) + t246)) +
      t7 * (eta * 10.242096430396639 - t2 * 36.553064425538089);
  sfvals[11] =
      ((((((eta * -2.699826628380976 + t2 * 37.438201686382072) -
           t3 * 146.5663022612998) +
          t4 * 211.9001378496167) -
         t201) +
        t288) +
       (((t4 * 16.2721607771195 + t2 * 64.65148282627608) -
         t3 * 91.902335727239574) -
        t180) *
           xi) +
      (t6 * ((eta * 17.7351877515651 + t3 * 148.38656079296771) - t194) -
       t7 * (eta * 4.2275963557195144 - t2 * 30.53856435086097));
  sfvals[12] =
      (((((eta * 4.4893692963523337 - t2 * 60.354452909459013) +
          t3 * 220.335880473894) -
         t4 * 285.638253945431) +
        t227) +
       t289) +
      ((-t6 * ((eta * 29.686420426855481 + t3 * 16.99240121943836) - t123) +
        (((t18 + t2 * 36.226926330853267) + t4 * 189.338279587429) -
         t3 * 220.5773790761784) *
            xi) +
       t7 * (eta * 28.660434168753671 - t2 * 91.711154458981014));
  sfvals[13] =
      ((((((eta * -8.0723745406106957 + t2 * 98.49823568607377) -
           t3 * 289.45743553860677) +
          t4 * 320.1990314777874) -
         t227) +
        t278) +
       (((t40 + t3 * 744.020386637612) - t4 * 416.49900583578938) -
        t2 * 357.84783998892817) *
           xi) +
      (-t6 * ((eta * 5.3396841600941114 + t3 * 437.32905127728242) - t81) -
       t7 * (eta * 38.043689593656516 + t2 * 116.3788441225287));
  sfvals[14] =
      (((((eta * 20.282831872639338 - t2 * 131.58198446299679) +
          t3 * 299.68785732601259) -
         t4 * 288.46091538197311) +
        t201) +
       t255) +
      ((-t7 * (eta * 490.25135576184363 - t2 * 683.73395309785428) +
        xi * (((t2 * 785.64101228531217 - t58) + t4 * 516.63321400870927) -
              t3 * 1127.029968909131)) +
       t6 * ((eta * 459.6421869641581 + t3 * 917.42418877868977) - t95));
  sfvals[15] =
      ((t269 + (((eta * 204.9033389824165 + t3 * 1009.940338414738) - t128) -
                t2 * 800.82266293895634) *
                   xi) -
       t6 * ((eta * 800.82266293895634 - t2 * 2034.444634572262) +
             t3 * 1256.62700111738)) +
      t7 * (eta * 1009.940338414738 - t2 * 1256.62700111738);
  sfvals[16] =
      ((t6 * ((eta * 511.58927945430293 + t3 * 441.71889346128) - t74) +
        t252_tmp * 457.82369168779633) -
       xi * (((-(t2 * 104.4034881826435) + t85) + t91) +
             t3 * 34.533102189620621)) -
      t7 * (eta * 915.64738337559254 - t2 * 915.64738337559254);
  sfvals[17] =
      ((t269 + t7 * (eta * 646.14371941805553 - t2 * 399.45705671541361)) +
       (((t93 + t4 * 14.563957742784931) - t234) - t2 * 8.4410717412901182) *
           xi) +
      t6 * ((eta * -255.1277344439321 + t146) + t234);
  sfvals[18] =
      ((t252 + t7 * (eta * 98.952295095685685 - t2 * 506.13808636734512)) -
       t6 * ((eta * 95.824607745315944 - t2 * 655.72828187916764) +
             t3 * 506.13808636734512)) -
      xi * (((t85 - eta * 12.97711087614652) + t2 * 95.824607745315944) -
            t3 * 98.952295095685685);
  sfvals[19] =
      ((t252_tmp * 14.563957742784931 +
        (((t3 * 646.14371941805553 + t93) - t128) - t2 * 255.1277344439321) *
            xi) -
       t7 * (eta * 29.127915485569861 - t2 * 29.127915485569861)) -
      t6 * ((eta * 8.4410717412901182 + t3 * 399.45705671541361) - t146);
  sfvals[20] =
      ((t252 - t7 * (eta * 34.533102189620621 - t2 * 441.71889346128)) +
       t6 * ((eta * 104.4034881826435 - t74) + t181)) +
      (((-t91 + t2 * 511.58927945430293) + t4 * 457.82369168779633) - t181) *
          xi;
}

// tri_gl_21_sfunc - Compute shape functions and their derivatives of
void tri_gl_21_sfunc(double xi, double eta, double sfvals[21],
                     double sdvals[42])
{
  double t10;
  double t100;
  double t104;
  double t105;
  double t106;
  double t109;
  double t11;
  double t111;
  double t112;
  double t114;
  double t115;
  double t117;
  double t119;
  double t12;
  double t122;
  double t123;
  double t124;
  double t126;
  double t128;
  double t13;
  double t131;
  double t132;
  double t133;
  double t134;
  double t135;
  double t136;
  double t14;
  double t140;
  double t142;
  double t143;
  double t146;
  double t147;
  double t149;
  double t15;
  double t150;
  double t151;
  double t152;
  double t153;
  double t156;
  double t157;
  double t16;
  double t161;
  double t164;
  double t167;
  double t175;
  double t18;
  double t180;
  double t181;
  double t189;
  double t19;
  double t190;
  double t194;
  double t195;
  double t2;
  double t20;
  double t200;
  double t200_tmp;
  double t201;
  double t205;
  double t21;
  double t211;
  double t212;
  double t217;
  double t218;
  double t220;
  double t221;
  double t227;
  double t229;
  double t231;
  double t233;
  double t234;
  double t239;
  double t24;
  double t240;
  double t241;
  double t245;
  double t246;
  double t247;
  double t249;
  double t251;
  double t252;
  double t254;
  double t255;
  double t256;
  double t258;
  double t259;
  double t26;
  double t262;
  double t263;
  double t265;
  double t267;
  double t268;
  double t269;
  double t27;
  double t277;
  double t278;
  double t28;
  double t286;
  double t287;
  double t288;
  double t289;
  double t29;
  double t291;
  double t292;
  double t295;
  double t297;
  double t298;
  double t299;
  double t3;
  double t300;
  double t301;
  double t302;
  double t303;
  double t304;
  double t307;
  double t309;
  double t31;
  double t33;
  double t35;
  double t38;
  double t4;
  double t40;
  double t41;
  double t44;
  double t45;
  double t46;
  double t47;
  double t48;
  double t49;
  double t5;
  double t51;
  double t52;
  double t54;
  double t55;
  double t56;
  double t57;
  double t58;
  double t59;
  double t6;
  double t60;
  double t64;
  double t65;
  double t66;
  double t67;
  double t69;
  double t7;
  double t72;
  double t73;
  double t74;
  double t75;
  double t77;
  double t78;
  double t79;
  double t8;
  double t80;
  double t81;
  double t82;
  double t83;
  double t85;
  double t86;
  double t87;
  double t89;
  double t9;
  double t91;
  double t92;
  double t93;
  double t95;
  double t96;
  double t97;
  double t98;
  double t99;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = std::pow(eta, 5.0);
  t6 = xi * xi;
  t7 = std::pow(xi, 3.0);
  t9 = std::pow(xi, 5.0);
  t14 = eta * 1571.2820245706239;
  t16 = eta * 919.2843739283162;
  t18 = eta * 3.08454769850681;
  t19 = eta * 2660.6480686153409;
  t20 = eta * 208.806976365287;
  t21 = eta * 758.45946965882149;
  t24 = eta * 1024.381684660445;
  t26 = eta * 510.25546888786431;
  t27 = eta * 1601.6453258779129;
  t28 = eta * 1831.2947667511851;
  t33 = eta * 1932.570567583459;
  t35 = eta * 405.98957894857438;
  t38 = eta * 326.39925920100359;
  t40 = eta * 25.83708989075333;
  t45 = eta * 1023.178558908606;
  t46 = eta * 715.69567997785646;
  t47 = eta * 58.255830971139723;
  t48 = eta * 161.330908345799;
  t55 = eta * 129.30296565255219;
  t56 = eta * 172.22545153592509;
  t57 = eta * 72.453852661706549;
  t58 = eta * 172.54443075650971;
  t59 = eta * 250.31860450203979;
  t60 = eta * 238.67993488322861;
  t64 = eta * 86.70850526258485;
  t65 = eta * 191.64921549063189;
  t67 = eta * 34.0145953177231;
  t73 = eta * 5.0520451128222348;
  t77 = eta * 68.482394961168623;
  t83 = eta * 59.372840853710969;
  t86 = eta * 35.4703755031302;
  t91 = eta * 53.765587766506627;
  t93 = eta * 23.005029484075049;
  t99 = eta * 74.981502057742873;
  t100 = eta * 12.97711087614652;
  t104 = eta * 9.292633736045719;
  t109 = eta * 10.679368320188219;
  t111 = eta * 16.88214348258024;
  t119 = eta * 7.938702855218259;
  t132 = eta * 3.501286404027534;
  t156 = eta * 7.4689466124992041;
  t161 = eta * 1.6229129791975;
  t167 = eta * 5.634639814494169;
  t180 = eta * 9.3041397487953272;
  t4 = t2 * t2;
  t8 = t6 * t6;
  t10 = t5 * 42.0;
  t11 = t9 * 42.0;
  t15 = t2 * 785.64101228531217;
  t41 = t2 * 104.4034881826435;
  t44 = t3 * 64.419192906065064;
  t51 = t3 * 629.44100473587059;
  t52 = t2 * 2660.6480686153409;
  t66 = t2 * 656.56043321088214;
  t69 = t2 * 1198.371170146241;
  t72 = t3 * 1656.0840578327941;
  t74 = t2 * 966.2852837917294;
  t75 = t2 * 1932.570567583459;
  t78 = t2 * 1518.414259102035;
  t80 = t2 * 1325.15668038384;
  t81 = t2 * 379.22973482941069;
  t82 = t2 * 758.45946965882149;
  t89 = t2 * 2746.942150126778;
  t92 = t2 * 512.19084233022272;
  t95 = t2 * 1330.32403430767;
  t96 = t2 * 3769.8810033521409;
  t97 = t2 * 1752.4468214974211;
  t98 = t2 * 2752.2725663360688;
  t105 = t3 * 1127.029968909131;
  t106 = t2 * 2051.2018592935628;
  t112 = t2 * 349.13653236758609;
  t114 = t3 * 1831.2947667511851;
  t115 = t2 * 1311.9871538318471;
  t117 = t3 * 38.043689593656516;
  t122 = t2 * 250.31860450203979;
  t123 = t2 * 119.33996744161431;
  t124 = t2 * 238.67993488322861;
  t126 = t2 * 445.15968237890309;
  t133 = t2 * 109.6591932766143;
  t135 = t2 * 143.24735288510729;
  t136 = t3 * 34.533102189620621;
  t140 = t2 * 95.824607745315944;
  t142 = t3 * 98.952295095685685;
  t143 = t2 * 162.52602751994269;
  t146 = t2 * 202.99478947428719;
  t147 = t2 * 405.98957894857438;
  t149 = t3 * 731.48307072622345;
  t151 = t2 * 275.133463376943;
  t152 = t2 * 163.19962960050179;
  t153 = t2 * 326.39925920100359;
  t164 = t2 * 196.55829453585511;
  t175 = t3 * 58.255830971139723;
  t181 = t3 * 915.64738337559254;
  t189 = t2 * 37.490751028871443;
  t190 = t2 * 74.981502057742873;
  t194 = t2 * 125.15930225101989;
  t195 = t2 * 50.977203658315076;
  t200_tmp = eta * t7;
  t200 = t200_tmp * -64.419192906065064;
  t201 = t5 * 100.0722106463179;
  t205 = t9 * 100.0722106463179;
  t211 = t2 * 17.00729765886155;
  t212 = t2 * 87.383746456709574;
  t217 = t3 * 102.474633614432;
  t221 = t2 * 91.6156930525829;
  t227 = t5 * 121.1674570846437;
  t229 = t2 * 17.7351877515651;
  t231 = t9 * 121.1674570846437;
  t233 = t3 * 26.191722947029319;
  t234 = t3 * 29.127915485569861;
  t239 = t200_tmp * -1656.0840578327941;
  t240 = t3 * 0.81145648959875016;
  t241 = t3 * 1.6229129791975;
  t245 = t3 * 4.2275963557195144;
  t246 = t2 * 2.817319907247084;
  t247 = t2 * 5.634639814494169;
  t249 = t3 * 10.242096430396639;
  t251 = t2 * 5.3396841600941114;
  t254 = t7 * (eta * 731.48307072622345);
  t256 = t2 * 3.96935142760913;
  t258 = t3 * 6.0145000746771249;
  t263 = t2 * 2.43436946879625;
  t268 = t3 * 2.4687112217243512;
  t277 = t7 * (eta * 102.474633614432);
  t286 = t200_tmp * -26.191722947029319;
  t287 = t200_tmp * -6.0145000746771249;
  t12 = t4 * 210.0;
  t13 = t8 * 210.0;
  t29 = t4 * 605.83728542321842;
  t31 = t8 * 605.83728542321842;
  t49 = t4 * 500.36105323158972;
  t54 = t8 * 500.36105323158972;
  t79 = t4 * 516.63321400870927;
  t85 = t4 * 16.104798226516269;
  t87 = t8 * 16.104798226516269;
  t128 = t4 * 414.02101445819852;
  t131 = t4 * 264.58107075144687;
  t134 = t8 * 414.02101445819852;
  t150 = t4 * 182.87076768155589;
  t157 = t8 * 182.87076768155589;
  t218 = t4 * 25.618658403608;
  t220 = t8 * 25.618658403608;
  t200_tmp = eta * t8;
  t252 = t200_tmp * -16.104798226516269;
  t255 = t8 * (eta * 182.87076768155589);
  t259 = t4 * 1.503625018669281;
  t262 = t8 * 1.503625018669281;
  t265 = t4 * 6.5479307367573307;
  t267 = t8 * 6.5479307367573307;
  t269 = t200_tmp * -414.02101445819852;
  t278 = t8 * (eta * 25.618658403608);
  t288 = t200_tmp * -1.503625018669281;
  t289 = t200_tmp * -6.5479307367573307;
  t291 = ((t18 + t2 * 36.226926330853267) + t4 * 189.338279587429) -
         t3 * 220.5773790761784;
  t299 = ((-t91 + t2 * 511.58927945430293) + t4 * 457.82369168779633) - t181;
  t300 = ((t4 * 16.2721607771195 + t2 * 64.65148282627608) -
          t3 * 91.902335727239574) -
         t180;
  t301 = ((t150 + t2 * 86.112725767962573) - t156) - t3 * 241.2317149643799;
  t302 = ((t93 + t4 * 14.563957742784931) - t234) - t2 * 8.4410717412901182;
  t303 = ((-t132 + t218) + t2 * 34.241197480584312) - t3 * 64.43094402077547;
  t304 = (((t73 + t4 * 0.40572824479937508) - t240) - t2 * 4.6463168680228586) +
         1.0;
  t307 = (((t2 * 459.6421869641581 - t58) + t150) - t3 * 490.25135576184363) +
         20.282831872639338;
  t292 = ((eta * 204.9033389824165 + t3 * 1009.940338414738) - t128) -
         t2 * 800.82266293895634;
  t295 = ((t3 * 646.14371941805553 + t93) - t128) - t2 * 255.1277344439321;
  t297 = ((t40 + t3 * 744.020386637612) - t4 * 416.49900583578938) -
         t2 * 357.84783998892817;
  t298 = ((t3 * 92.883278269917128 + t73) - t2 * 43.354252631292432) -
         t4 * 54.581070751446937;
  t309 = (((t18 + t3 * 28.660434168753671) - t2 * 29.686420426855481) - t265) +
         4.4893692963523337;
  sfvals[0] =
      (((((((eta * -15.0 + t2 * 70.0) - t3 * 140.0) + t4 * 126.0) - t10) -
         t11) +
        t8 * (126.0 - eta * 264.58107075144687)) -
       t7 * ((eta * -629.44100473587059 + t2 * 584.14894049914017) + 140.0)) +
      ((-t6 * (((eta * 512.19084233022272 - t2 * 1007.287737716541) +
                t3 * 584.14894049914017) -
               70.0) -
        xi * ((((-t48 - t51) + t92) + t131) + 15.0)) +
       1.0);
  sfvals[1] = (((t11 + t304 * xi) -
                t6 * (((eta * 43.354252631292432 - t189) - t240) + 14.0)) -
               t8 * (eta * 54.581070751446937 + 84.0)) +
              t7 * ((eta * 92.883278269917128 - t2 * 54.17534250664756) + 56.0);
  sfvals[2] =
      (((((((eta - t2 * 14.0) + t3 * 56.0) - t4 * 84.0) + t10) +
         t200_tmp * 0.40572824479937508) -
        t6 * ((eta * 4.6463168680228586 + t3 * 54.17534250664756) - t189)) +
       t298 * xi) +
      -t7 * (eta * 0.81145648959875016 - t2 * 0.81145648959875016);
  sfvals[3] =
      (((t205 + t7 * ((eta * -1127.029968909131 + t2 * 917.42418877868977) +
                      299.68785732601259)) +
        t8 * (eta * 516.63321400870927 - 288.46091538197311)) +
       t307 * xi) +
      t6 * (((eta * 785.64101228531217 + t3 * 683.73395309785428) - t95) -
            131.58198446299679);
  sfvals[4] =
      ((-t231 -
        t6 * (((eta * 357.84783998892817 + t3 * 116.3788441225287) - t81) -
              98.49823568607377)) +
       t8 * (320.1990314777874 - eta * 416.49900583578938)) +
      (-t7 * ((eta * -744.020386637612 + t2 * 437.32905127728242) +
              289.45743553860677) -
       xi * ((((-t40 + t117) - t218) + t251) + 8.0723745406106957));
  sfvals[5] =
      (((t231 + t309 * xi) +
        t6 * (((eta * 36.226926330853267 - t3 * 91.711154458981014) + t123) -
              60.354452909459013)) +
       t8 * (eta * 189.338279587429 - 285.638253945431)) +
      -t7 * ((eta * 220.5773790761784 + t2 * 16.99240121943836) -
             220.335880473894);
  sfvals[6] =
      ((-t205 - xi * ((((t180 - t229) + t245) + t259) + 2.699826628380976)) -
       t7 * ((eta * 91.902335727239574 - t2 * 148.38656079296771) +
             146.5663022612998)) +
      (t8 * (eta * 16.2721607771195 + 211.9001378496167) +
       t6 * (((eta * 64.65148282627608 + t3 * 30.53856435086097) - t194) +
             37.438201686382072));
  sfvals[7] =
      ((t255 - xi * (((t156 - t249) + t256) + t259)) -
       t7 * (eta * 241.2317149643799 - t2 * 47.7491176283691)) -
      t6 * ((eta * -86.112725767962573 + t3 * 36.553064425538089) + t246);
  sfvals[8] =
      ((t278 - t7 * (eta * 64.43094402077547 - t2 * 218.85347773696071)) -
       xi * (((t132 - t211) + t265) + t268)) +
      t6 * ((eta * 34.241197480584312 + t3 * 65.5194315119517) - t152);
  sfvals[9] =
      ((t289 + t303 * xi) +
       t6 * ((eta * 17.00729765886155 + t3 * 218.85347773696071) - t152)) -
      t7 * (eta * 2.4687112217243512 - t2 * 65.5194315119517);
  sfvals[10] =
      ((t288 + t301 * xi) -
       t6 * ((eta * 3.96935142760913 - t3 * 47.7491176283691) + t246)) +
      t7 * (eta * 10.242096430396639 - t2 * 36.553064425538089);
  sfvals[11] =
      ((((((eta * -2.699826628380976 + t2 * 37.438201686382072) -
           t3 * 146.5663022612998) +
          t4 * 211.9001378496167) -
         t201) +
        t288) +
       t300 * xi) +
      (t6 * ((eta * 17.7351877515651 + t3 * 148.38656079296771) - t194) -
       t7 * (eta * 4.2275963557195144 - t2 * 30.53856435086097));
  sfvals[12] =
      (((((eta * 4.4893692963523337 - t2 * 60.354452909459013) +
          t3 * 220.335880473894) -
         t4 * 285.638253945431) +
        t227) +
       t289) +
      ((-t6 * ((eta * 29.686420426855481 + t3 * 16.99240121943836) - t123) +
        t291 * xi) +
       t7 * (eta * 28.660434168753671 - t2 * 91.711154458981014));
  sfvals[13] =
      ((((((eta * -8.0723745406106957 + t2 * 98.49823568607377) -
           t3 * 289.45743553860677) +
          t4 * 320.1990314777874) -
         t227) +
        t278) +
       t297 * xi) +
      (-t6 * ((eta * 5.3396841600941114 + t3 * 437.32905127728242) - t81) -
       t7 * (eta * 38.043689593656516 + t2 * 116.3788441225287));
  sfvals[14] =
      (((((eta * 20.282831872639338 - t2 * 131.58198446299679) +
          t3 * 299.68785732601259) -
         t4 * 288.46091538197311) +
        t201) +
       t255) +
      ((-t7 * (eta * 490.25135576184363 - t2 * 683.73395309785428) +
        xi * (((t15 - t58) + t79) - t105)) +
       t6 * ((eta * 459.6421869641581 + t3 * 917.42418877868977) - t95));
  sfvals[15] = ((t269 + t292 * xi) -
                t6 * ((eta * 800.82266293895634 - t2 * 2034.444634572262) +
                      t3 * 1256.62700111738)) +
               t7 * (eta * 1009.940338414738 - t2 * 1256.62700111738);
  sfvals[16] =
      ((t6 * ((eta * 511.58927945430293 + t3 * 441.71889346128) - t74) +
        t200_tmp * 457.82369168779633) -
       xi * (((-t41 + t85) + t91) + t136)) -
      t7 * (eta * 915.64738337559254 - t2 * 915.64738337559254);
  sfvals[17] =
      ((t269 + t7 * (eta * 646.14371941805553 - t2 * 399.45705671541361)) +
       t302 * xi) +
      t6 * ((eta * -255.1277344439321 + t146) + t234);
  sfvals[18] =
      ((t252 + t7 * (eta * 98.952295095685685 - t2 * 506.13808636734512)) -
       t6 * ((eta * 95.824607745315944 - t2 * 655.72828187916764) +
             t3 * 506.13808636734512)) -
      xi * (((t85 - t100) + t140) - t142);
  sfvals[19] =
      ((t200_tmp * 14.563957742784931 + t295 * xi) -
       t7 * (eta * 29.127915485569861 - t2 * 29.127915485569861)) -
      t6 * ((eta * 8.4410717412901182 + t3 * 399.45705671541361) - t146);
  sfvals[20] =
      ((t252 - t7 * (eta * 34.533102189620621 - t2 * 441.71889346128)) +
       t6 * ((eta * 104.4034881826435 - t74) + t181)) +
      t299 * xi;
  sdvals[0] = (((-t13 + ((((t48 + t51) - t92) - t131) - 15.0)) +
                t7 * (504.0 - eta * 1058.3242830057879)) +
               xi * (((t2 * 2014.575475433081 - t3 * 1168.29788099828) - t24) +
                     140.0)) -
              t6 * ((eta * -1888.323014207612 + t97) + 420.0);
  sdvals[1] =
      ((((((eta * 140.0 - t2 * 420.0) + t3 * 504.0) - t8 * 264.58107075144687) -
         t12) -
        t6 * ((eta * -2014.575475433081 + t97) + 512.19084233022272)) +
       t7 * (629.44100473587059 - eta * 1168.29788099828)) +
      (xi * (((t2 * 1888.323014207612 - t3 * 1058.3242830057879) - t24) +
             161.330908345799) -
       15.0);
  sdvals[2] = (((t13 + t304) - t7 * (eta * 218.32428300578769 + 336.0)) +
               xi * (((-t64 + t190) + t241) - 28.0)) +
              t6 * ((eta * 278.64983480975138 - t143) + 168.0);
  sdvals[3] = ((t8 * -54.581070751446937 +
                t7 * (92.883278269917128 - eta * 108.35068501329511)) +
               t6 * ((t99 + t263) - 43.354252631292432)) -
              xi * (((t104 - t241) + t263) - 5.0520451128222348);
  sdvals[4] = ((t298 + t7 * t161) - t6 * (eta * 2.43436946879625 - t263)) -
              xi * ((t3 * 108.35068501329511 + t104) - t190);
  sdvals[5] =
      ((((((eta * -28.0 + t2 * 168.0) - t3 * 336.0) +
          t8 * 0.40572824479937508) +
         t12) -
        t6 * ((-t99 + t143) + 4.6463168680228586)) +
       t7 * (t161 - 0.81145648959875016)) +
      (xi * (((t2 * 278.64983480975138 - t3 * 218.32428300578769) - t64) +
             5.0520451128222348) +
       1.0);
  sdvals[6] =
      (((t54 + t307) + t7 * (eta * 2066.5328560348371 - 1153.843661527892)) +
       xi * (((t3 * 1367.467906195709 + t14) - t52) - 263.16396892599357)) +
      t6 * ((eta * -3381.0899067273922 + t98) + 899.06357197803788);
  sdvals[7] =
      ((t8 * 516.63321400870927 + t6 * ((-t19 + t106) + 785.64101228531217)) -
       xi * (((t2 * 1470.7540672855309 - t16) - t149) + 172.54443075650971)) +
      t7 * (eta * 1834.84837755738 - 1127.029968909131);
  sdvals[8] =
      (((-t31 + ((((t40 - t117) + t218) - t251) - 8.0723745406106957)) -
        xi * (((t3 * 232.75768824505741 + t46) - t82) - 196.99647137214751)) +
       t7 * (1280.79612591115 - eta * 1665.996023343158)) +
      -t6 * ((eta * -2232.061159912836 + t115) + 868.37230661582043);
  sdvals[9] =
      ((t8 * -416.49900583578938 - t6 * ((-t21 + t112) + 357.84783998892817)) -
       xi * (((t2 * 114.1310687809696 + t109) - t217) - 25.83708989075333)) +
      t7 * (744.020386637612 - eta * 874.65810255456483);
  sdvals[10] =
      (((t31 + t309) + t7 * (eta * 757.353118349716 - 1142.5530157817241)) -
       t6 * ((eta * 661.73213722853518 + t195) - 661.007641421682)) +
      -xi * (((t3 * 183.422308917962 - t57) - t124) + 120.708905818918);
  sdvals[11] =
      ((t8 * 189.338279587429 + t6 * ((t60 - t151) + 36.226926330853267)) +
       xi * (((t2 * 85.981302506261017 - t83) - t233) + 3.08454769850681)) +
      -t7 * (eta * 33.98480243887672 + 220.5773790761784);
  sdvals[12] =
      (((-t54 + ((((t229 - t180) - t245) - t259) - 2.699826628380976)) -
        t6 * ((eta * 275.70700718171872 - t126) + 439.69890678389942)) +
       t7 * (eta * 65.088643108477982 + 847.60055139846668)) +
      xi * (((t3 * 61.077128701721932 + t55) - t122) + 74.87640337276413);
  sdvals[13] =
      ((t8 * 16.2721607771195 -
        xi * (((t2 * 12.68278906715854 - t86) + t258) + 9.3041397487953272)) +
       t7 * (eta * 296.77312158593543 - 91.902335727239574)) +
      t6 * ((-t59 + t221) + 64.65148282627608);
  sdvals[14] = ((t254 + (((-t156 + t249) - t256) - t259)) -
                xi * ((t3 * 73.106128851076178 - t56) + t247)) -
               t6 * (eta * 723.69514489313963 - t135);
  sdvals[15] =
      ((t157 - t6 * ((t133 + t167) - 86.112725767962573)) -
       xi * (((t2 * -30.726289291189911 + t119) + t258) + 7.4689466124992041)) +
      t7 * (eta * 95.4982352567382 - 241.2317149643799);
  sdvals[16] = ((t277 + (((-t132 + t211) - t265) - t268)) +
                xi * ((t3 * 131.03886302390339 + t77) - t153)) -
               t6 * (eta * 193.2928320623264 - t66);
  sdvals[17] = ((t220 - xi * (((t2 * 7.4061336651730523 - t67) + t233) +
                              3.501286404027534)) +
                t7 * (eta * 437.70695547392143 - 64.43094402077547)) +
               t6 * ((-t38 + t164) + 34.241197480584312);
  sdvals[18] = ((t286 + t303) - t6 * (eta * 7.4061336651730523 - t164)) +
               xi * ((t3 * 437.70695547392143 + t67) - t153);
  sdvals[19] = ((-t267 - xi * (((t2 * 193.2928320623264 - t77) - t217) +
                               3.501286404027534)) +
                t6 * ((t66 - t38) + 17.00729765886155)) +
               t7 * (eta * 131.03886302390339 - 2.4687112217243512);
  sdvals[20] = ((t287 + t301) - xi * ((t3 * -95.4982352567382 + t119) + t247)) +
               t6 * (eta * 30.726289291189911 - t133);
  sdvals[21] = ((-t262 - xi * (((t2 * 723.69514489313963 - t56) - t149) +
                               7.4689466124992041)) -
                t6 * ((-t135 + t167) + 3.96935142760913)) +
               t7 * (10.242096430396639 - eta * 73.106128851076178);
  sdvals[22] = ((t287 + t300) - t6 * (eta * 12.68278906715854 - t221)) +
               xi * ((t3 * 296.77312158593543 + t86) - t122);
  sdvals[23] =
      (((((eta * 74.87640337276413 - t2 * 439.69890678389942) +
          t3 * 847.60055139846668) -
         t49) -
        t262) +
       (-xi * (((t2 * 275.70700718171872 - t3 * 65.088643108477982) - t55) +
               9.3041397487953272) +
        t6 * ((-t59 + t126) + 17.7351877515651))) +
      (t7 * (eta * 61.077128701721932 - 4.2275963557195144) -
       2.699826628380976);
  sdvals[24] = ((t286 + t291) + t6 * (eta * 85.981302506261017 - t151)) -
               xi * ((t3 * 33.98480243887672 + t83) - t124);
  sdvals[25] =
      ((((((eta * -120.708905818918 + t2 * 661.007641421682) -
           t3 * 1142.5530157817241) +
          t29) -
         t267) -
        t6 * ((-t60 + t195) + 29.686420426855481)) +
       (xi * (((t2 * -661.73213722853518 + t3 * 757.353118349716) + t57) +
              3.08454769850681) +
        t7 * (28.660434168753671 - eta * 183.422308917962))) +
      4.4893692963523337;
  sdvals[26] = ((t277 + t297) - xi * ((t3 * 874.65810255456483 - t82) + t109)) -
               t6 * (eta * 114.1310687809696 + t112);
  sdvals[27] =
      (((((eta * 196.99647137214751 - t2 * 868.37230661582043) +
          t3 * 1280.79612591115) -
         t29) +
        t220) +
       (xi * (((t2 * 2232.061159912836 - t3 * 1665.996023343158) - t46) +
              25.83708989075333) -
        t6 * ((-t21 + t115) + 5.3396841600941114))) +
      (-t7 * (eta * 232.75768824505741 + 38.043689593656516) -
       8.0723745406106957);
  sdvals[28] = ((t254 + (((t15 + t79) - t58) - t105)) +
                xi * ((t3 * 1834.84837755738 + t16) - t52)) -
               t6 * (eta * 1470.7540672855309 - t106);
  sdvals[29] =
      ((((((eta * -263.16396892599357 + t2 * 899.06357197803788) -
           t3 * 1153.843661527892) +
          t49) +
         t157) +
        t6 * ((-t19 + t98) + 459.6421869641581)) +
       (t7 * (eta * 1367.467906195709 - 490.25135576184363) -
        xi * (((t2 * 3381.0899067273922 - t3 * 2066.5328560348371) - t14) +
              172.54443075650971))) +
      20.282831872639338;
  sdvals[30] =
      ((t239 + t292) -
       xi * ((t2 * -4068.889269144523 + t3 * 2513.2540022347612) + t27)) +
      t6 * (eta * 3029.8210152442148 - t96);
  sdvals[31] =
      ((-t134 - t6 * ((eta * -4068.889269144523 + t96) + 800.82266293895634)) +
       xi * (((t2 * 3029.8210152442148 - t27) - t72) + 204.9033389824165)) +
      t7 * (1009.940338414738 - eta * 2513.2540022347612);
  sdvals[32] = (((((t41 - t85) - t91) - t136) +
                 xi * ((t3 * 883.43778692256 + t45) - t75)) -
                t6 * (eta * 2746.942150126778 - t89)) +
               t7 * t28;
  sdvals[33] =
      ((t8 * 457.82369168779633 + t7 * (t28 - 915.64738337559254)) -
       xi * (((t2 * 103.59930656886191 - t20) + t44) + 53.765587766506627)) +
      t6 * ((-t33 + t80) + 511.58927945430293);
  sdvals[34] = ((t239 + t302) + xi * ((-t26 + t147) + t175)) +
               t6 * (eta * 1938.431158254167 - t69);
  sdvals[35] = ((-t134 + t7 * (646.14371941805553 - eta * 798.91411343082711)) +
                t6 * ((t35 + t212) - 255.1277344439321)) -
               xi * (((t111 - t175) + t212) - 23.005029484075049);
  sdvals[36] = ((t200 + (((t100 + t142) - t85) - t140)) +
                t6 * (eta * 296.85688528705708 - t78)) -
               xi * ((t2 * -1311.4565637583351 + t3 * 1012.27617273469) + t65);
  sdvals[37] =
      ((-t87 - t6 * ((eta * -1311.4565637583351 + t78) + 95.824607745315944)) +
       t7 * (98.952295095685685 - eta * 1012.27617273469)) +
      xi * (((t2 * 296.85688528705708 - t44) - t65) + 12.97711087614652);
  sdvals[38] = ((t295 - t6 * (eta * 87.383746456709574 - t212)) + t7 * t47) -
               xi * ((t3 * 798.91411343082711 + t111) - t147);
  sdvals[39] =
      ((t8 * 14.563957742784931 +
        xi * (((t2 * 1938.431158254167 - t26) - t72) + 23.005029484075049)) +
       t7 * (t47 - 29.127915485569861)) -
      t6 * ((-t35 + t69) + 8.4410717412901182);
  sdvals[40] = ((t200 + t299) - t6 * (eta * 103.59930656886191 - t80)) +
               xi * ((t20 + t114) - t75);
  sdvals[41] = ((-t87 + t7 * (eta * 883.43778692256 - 34.533102189620621)) +
                t6 * ((-t33 + t89) + 104.4034881826435)) +
               xi * (((t45 - t89) + t114) - 53.765587766506627);
}

// tri_leb_15_ncoords - Obtain nodal coordinates in master element for
void tri_leb_15_ncoords(double natcoords[30])
{
  static const double dv[30]{0.0,
                             0.0,
                             1.0,
                             0.0,
                             0.0,
                             1.0,
                             0.17267316464601151,
                             0.0,
                             0.5,
                             0.0,
                             0.82732683535398854,
                             0.0,
                             0.82732683535398854,
                             0.17267316464601151,
                             0.5,
                             0.5,
                             0.17267316464601151,
                             0.82732683535398843,
                             0.0,
                             0.82732683535398854,
                             0.0,
                             0.5,
                             0.0,
                             0.17267316464601151,
                             0.250646411460718,
                             0.22206512551486521,
                             0.52713337628873258,
                             0.250420352808094,
                             0.22213227970507091,
                             0.527018976287263};
  std::copy(&dv[0], &dv[30], &natcoords[0]);
}

// tri_leb_15_sfunc - Compute shape functions and their derivatives of
void tri_leb_15_sfunc(double xi, double eta, double sfvals[15])
{
  double sfvals_tmp;
  double t10;
  double t12;
  double t14;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = xi * xi;
  t6 = std::pow(xi, 3.0);
  t4 = t2 * t2;
  t7 = t5 * t5;
  t8 = t4 * 14.0;
  t10 = t7 * 14.0;
  t12 = t4 * 32.666666666666664;
  t14 = t7 * 32.666666666666664;
  sfvals[0] =
      (((((((eta * -10.0 + t2 * 30.0) - t3 * 35.0) + t8) + t10) +
         t6 * (eta * 61.1006026200217 - 35.0)) +
        t5 * ((eta * -113.7248594768035 + t2 * 96.375549956871112) + 30.0)) +
       (((eta * 63.624256856781777 + t3 * 63.274947336849387) -
         t2 * 115.89920419363121) -
        10.0) *
           xi) +
      1.0;
  sfvals[1] =
      ((t10 - t6 * (eta * 7.2489174887530714 + 21.0)) +
       t5 * ((eta * 10.891764407332371 - t2 * 9.43450213095457) + 9.0)) -
      xi * (((-(t2 * 5.8284315607808) + eta * 3.6428469185793011) +
             t3 * 2.1855846422015) +
            1.0);
  sfvals_tmp = eta * t6;
  sfvals[2] = (((((-eta + t2 * 9.0) - t3 * 21.0) + t8) +
                sfvals_tmp * 2.1687757643211971) -
               t5 * (eta * 0.71028689144306933 + t2 * 2.883464808337191)) -
              xi * ((eta * 1.458488872878126 - t2 * 6.5107294455365086) +
                    t3 * 5.0522405726583788);
  sfvals[3] = ((-t14 + (((-(eta * 63.110048518693723) + t2 * 91.8891476587129) -
                         t3 * 42.292104117467673) +
                        13.51300497744848) *
                           xi) +
               t6 * (76.026009954896963 - eta * 108.6792460425348)) -
              t5 * ((eta * -168.96896620534361 + t2 * 118.3046834933358) +
                    56.872348265678767);
  sfvals[4] = ((t7 * 37.333333333333336 +
                t6 * (eta * 68.893178260776381 - 74.666666666666671)) +
               (((eta * 2.3786383353058849 + t2 * 17.839897596347232) -
                 t3 * 14.88520259831977) -
                5.333333333333333) *
                   xi) +
              t5 * ((eta * -65.938483262748932 + t2 * 16.674642329123259) +
                    42.666666666666664);
  sfvals[5] = ((-t14 + t6 * (54.640656711769722 - eta * 18.59479019360198)) +
               (((eta * 5.3214662366213332 + t3 * 7.9012844225917362) -
                 t2 * 16.04307901509792) +
                2.8203283558848549) *
                   xi) -
              t5 * ((eta * 0.2396810204678364 - t2 * 21.973160895656431) +
                    24.7943184009879);
  sfvals[6] = (sfvals_tmp * 42.236540033833727 -
               t5 * (eta * 34.919647674159172 - t2 * 8.5458465968670367)) -
              xi * ((-(eta * 6.1961126177739159) + t3 * 1.02402677030002) +
                    t2 * 2.351757491589042);
  sfvals[7] = (sfvals_tmp * 14.814447305871671 +
               ((eta * 6.5620318101480777 + t3 * 9.0441506729106518) -
                t2 * 20.93951581639207) *
                   xi) -
              t5 * (eta * 26.70981244935308 - t2 * 61.19193131211567);
  sfvals[8] = (sfvals_tmp * -7.8601691610473479 +
               ((eta * 3.064658036689953 + t3 * 38.808959426832359) -
                t2 * 28.36061248607383) *
                   xi) +
              t5 * (eta * 7.6158394802422507 - t2 * 1.7178764008816649);
  sfvals[9] = (((((eta * 2.8203283558848549 - t2 * 24.7943184009879) +
                  t3 * 54.640656711769722) -
                 t12) +
                sfvals_tmp * 1.036691719993222) +
               ((eta * 1.5782704900713791 - t3 * 22.085884495344061) +
                t2 * 6.994609027824203) *
                   xi) +
              -t5 * (eta * 5.4352905659494564 - t2 * 11.617473891315839);
  sfvals[10] = (((((eta * -5.333333333333333 + t2 * 42.666666666666664) -
                   t3 * 74.666666666666671) +
                  t4 * 37.333333333333336) -
                 sfvals_tmp * 9.04606149176167) +
                ((eta * 8.2062452642100823 + t3 * 80.532780863457475) -
                 t2 * 83.405692794334215) *
                    xi) +
               t5 * (eta * 6.1731495608849256 + t2 * 34.153386038362463);
  sfvals[11] = ((((eta * 13.51300497744848 - t2 * 56.872348265678767) +
                  t3 * 76.026009954896963) -
                 t12) -
                sfvals_tmp * 38.877530098801927) +
               (t5 * (eta * 88.1879453233296 - t2 * 118.32002700771071) -
                xi * ((eta * 62.823420201976163 + t3 * 112.10916357557549) -
                      t2 * 172.1122554216667));
  sfvals[12] = (sfvals_tmp * 110.7149824526205 +
                ((eta * 88.933812691632212 + t3 * 122.0837277913396) -
                 t2 * 211.01754048297181) *
                    xi) -
               t5 * (eta * 199.64879514425269 - t2 * 232.7987102439601);
  sfvals[13] = (sfvals_tmp * -122.0015518468889 -
                xi * ((eta * 33.112464377110953 - t2 * 44.519988220290678) +
                      t3 * 11.40752384317973)) +
               t5 * (eta * 155.11401622399981 - t2 * 133.40907569006859);
  sfvals[14] = (sfvals_tmp * 11.34304816595122 +
                t5 * (eta * 10.375175284045159 - t2 * 99.261071732983453)) -
               xi * ((eta * 21.718223449996369 - t2 * 132.322343348931) +
                     t3 * 110.6041198989347);
}

// tri_leb_15_sfunc - Compute shape functions and their derivatives of
void tri_leb_15_sfunc(double xi, double eta, double sfvals[15],
                      double sdvals[30])
{
  double sfvals_tmp;
  double t10;
  double t100;
  double t101;
  double t11;
  double t12;
  double t13;
  double t14;
  double t15;
  double t2;
  double t22;
  double t26;
  double t29;
  double t3;
  double t32;
  double t33;
  double t35;
  double t37;
  double t38;
  double t4;
  double t44;
  double t45;
  double t48;
  double t49;
  double t5;
  double t51;
  double t56;
  double t6;
  double t68;
  double t7;
  double t71;
  double t74;
  double t76;
  double t8;
  double t87;
  double t88;
  double t9;
  double t91;
  double t92;
  double t94;
  double t95;
  double t99;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = xi * xi;
  t6 = std::pow(xi, 3.0);
  t22 = eta * 21.718223449996369;
  t26 = eta * 33.112464377110953;
  t29 = eta * 62.823420201976163;
  t33 = eta * 1.458488872878126;
  t38 = eta * 6.1961126177739159;
  t44 = eta * 3.6428469185793011;
  t4 = t2 * t2;
  t7 = t5 * t5;
  t9 = t3 * 56.0;
  t11 = t6 * 56.0;
  t13 = t3 * 130.66666666666666;
  t15 = t6 * 130.66666666666666;
  t32 = t2 * 5.8284315607808;
  t35 = t3 * 112.10916357557549;
  t37 = t2 * 132.322343348931;
  t45 = t2 * 172.1122554216667;
  t48 = t2 * 44.519988220290678;
  t49 = t3 * 11.40752384317973;
  t51 = t3 * 110.6041198989347;
  t56 = t2 * 6.5107294455365086;
  t68 = t3 * 1.02402677030002;
  t71 = t3 * 2.1855846422015;
  t74 = t2 * 2.351757491589042;
  t76 = t3 * 5.0522405726583788;
  t8 = t4 * 14.0;
  t10 = t7 * 14.0;
  t12 = t4 * 32.666666666666664;
  t14 = t7 * 32.666666666666664;
  t87 = (eta * 8.2062452642100823 + t3 * 80.532780863457475) -
        t2 * 83.405692794334215;
  t88 = (eta * 88.933812691632212 + t3 * 122.0837277913396) -
        t2 * 211.01754048297181;
  t91 = (eta * 1.5782704900713791 - t3 * 22.085884495344061) +
        t2 * 6.994609027824203;
  t92 = (eta * 3.064658036689953 + t3 * 38.808959426832359) -
        t2 * 28.36061248607383;
  t94 = (eta * 6.5620318101480777 + t3 * 9.0441506729106518) -
        t2 * 20.93951581639207;
  t95 = ((eta * 63.624256856781777 + t3 * 63.274947336849387) -
         t2 * 115.89920419363121) -
        10.0;
  t99 = ((eta * 2.3786383353058849 + t2 * 17.839897596347232) -
         t3 * 14.88520259831977) -
        5.333333333333333;
  t100 = ((eta * 5.3214662366213332 + t3 * 7.9012844225917362) -
          t2 * 16.04307901509792) +
         2.8203283558848549;
  t101 = ((-(eta * 63.110048518693723) + t2 * 91.8891476587129) -
          t3 * 42.292104117467673) +
         13.51300497744848;
  sfvals[0] =
      (((((((eta * -10.0 + t2 * 30.0) - t3 * 35.0) + t8) + t10) +
         t6 * (eta * 61.1006026200217 - 35.0)) +
        t5 * ((eta * -113.7248594768035 + t2 * 96.375549956871112) + 30.0)) +
       t95 * xi) +
      1.0;
  sfvals[1] =
      ((t10 - t6 * (eta * 7.2489174887530714 + 21.0)) +
       t5 * ((eta * 10.891764407332371 - t2 * 9.43450213095457) + 9.0)) -
      xi * (((-t32 + t44) + t71) + 1.0);
  sfvals_tmp = eta * t6;
  sfvals[2] = (((((-eta + t2 * 9.0) - t3 * 21.0) + t8) +
                sfvals_tmp * 2.1687757643211971) -
               t5 * (eta * 0.71028689144306933 + t2 * 2.883464808337191)) -
              xi * ((t33 - t56) + t76);
  sfvals[3] = ((-t14 + t101 * xi) +
               t6 * (76.026009954896963 - eta * 108.6792460425348)) -
              t5 * ((eta * -168.96896620534361 + t2 * 118.3046834933358) +
                    56.872348265678767);
  sfvals[4] = ((t7 * 37.333333333333336 +
                t6 * (eta * 68.893178260776381 - 74.666666666666671)) +
               t99 * xi) +
              t5 * ((eta * -65.938483262748932 + t2 * 16.674642329123259) +
                    42.666666666666664);
  sfvals[5] = ((-t14 + t6 * (54.640656711769722 - eta * 18.59479019360198)) +
               t100 * xi) -
              t5 * ((eta * 0.2396810204678364 - t2 * 21.973160895656431) +
                    24.7943184009879);
  sfvals[6] = (sfvals_tmp * 42.236540033833727 -
               t5 * (eta * 34.919647674159172 - t2 * 8.5458465968670367)) -
              xi * ((-t38 + t68) + t74);
  sfvals[7] = (sfvals_tmp * 14.814447305871671 + t94 * xi) -
              t5 * (eta * 26.70981244935308 - t2 * 61.19193131211567);
  sfvals[8] = (sfvals_tmp * -7.8601691610473479 + t92 * xi) +
              t5 * (eta * 7.6158394802422507 - t2 * 1.7178764008816649);
  sfvals[9] = (((((eta * 2.8203283558848549 - t2 * 24.7943184009879) +
                  t3 * 54.640656711769722) -
                 t12) +
                sfvals_tmp * 1.036691719993222) +
               t91 * xi) +
              -t5 * (eta * 5.4352905659494564 - t2 * 11.617473891315839);
  sfvals[10] = (((((eta * -5.333333333333333 + t2 * 42.666666666666664) -
                   t3 * 74.666666666666671) +
                  t4 * 37.333333333333336) -
                 sfvals_tmp * 9.04606149176167) +
                t87 * xi) +
               t5 * (eta * 6.1731495608849256 + t2 * 34.153386038362463);
  sfvals[11] = ((((eta * 13.51300497744848 - t2 * 56.872348265678767) +
                  t3 * 76.026009954896963) -
                 t12) -
                sfvals_tmp * 38.877530098801927) +
               (t5 * (eta * 88.1879453233296 - t2 * 118.32002700771071) -
                xi * ((t29 + t35) - t45));
  sfvals[12] = (sfvals_tmp * 110.7149824526205 + t88 * xi) -
               t5 * (eta * 199.64879514425269 - t2 * 232.7987102439601);
  sfvals[13] = (sfvals_tmp * -122.0015518468889 - xi * ((t26 - t48) + t49)) +
               t5 * (eta * 155.11401622399981 - t2 * 133.40907569006859);
  sfvals[14] = (sfvals_tmp * 11.34304816595122 +
                t5 * (eta * 10.375175284045159 - t2 * 99.261071732983453)) -
               xi * ((t22 - t37) + t51);
  sdvals[0] =
      ((t11 + t95) +
       xi * ((eta * -227.449718953607 + t2 * 192.75109991374219) + 60.0)) +
      t5 * (eta * 183.30180786006511 - 105.0);
  sdvals[1] = ((((eta * 60.0 - t2 * 105.0) + t6 * 61.1006026200217) + t9) +
               t5 * (eta * 192.75109991374219 - 113.7248594768035)) +
              (xi * ((eta * -231.79840838726241 + t2 * 189.8248420105482) +
                     63.624256856781777) -
               10.0);
  sdvals[2] =
      ((t11 + (((t32 - t44) - t71) - 1.0)) +
       xi * ((eta * 21.783528814664741 - t2 * 18.86900426190914) + 18.0)) -
      t5 * (eta * 21.74675246625921 + 63.0);
  sdvals[3] = (t6 * -7.2489174887530714 +
               t5 * (10.891764407332371 - eta * 18.86900426190914)) +
              -xi * ((eta * -11.6568631215616 + t2 * 6.5567539266044976) +
                     3.6428469185793011);
  sfvals_tmp = eta * t5;
  sdvals[4] = (((-t33 + t56) - t76) + sfvals_tmp * 6.5063272929635909) -
              xi * (eta * 1.4205737828861389 + t2 * 5.766929616674382);
  sdvals[5] = ((((eta * 18.0 - t2 * 63.0) + t6 * 2.1687757643211971) + t9) -
               xi * ((eta * -13.021458891073021 + t2 * 15.156721717975129) +
                     1.458488872878126)) +
              (-t5 * (eta * 5.766929616674382 + 0.71028689144306933) - 1.0);
  sdvals[6] =
      ((-t15 + t101) + t5 * (228.0780298646909 - eta * 326.03773812760431)) -
      xi * ((eta * -337.93793241068732 + t2 * 236.60936698667149) +
            113.7446965313575);
  sdvals[7] = (t6 * -108.6792460425348 -
               xi * ((eta * -183.7782953174258 + t2 * 126.876312352403) +
                     63.110048518693723)) +
              t5 * (168.96896620534361 - eta * 236.60936698667149);
  sdvals[8] = ((t6 * 149.33333333333334 + t99) +
               xi * ((eta * -131.87696652549789 + t2 * 33.349284658246518) +
                     85.333333333333329)) +
              t5 * (eta * 206.67953478232911 - 224.0);
  sdvals[9] = (t6 * 68.893178260776381 +
               xi * ((eta * 35.679795192694463 - t2 * 44.655607794959323) +
                     2.3786383353058849)) +
              t5 * (eta * 33.349284658246518 - 65.938483262748932);
  sdvals[10] =
      ((-t15 + t100) + t5 * (163.92197013530921 - eta * 55.784370580805927)) -
      xi * ((eta * 0.47936204093567281 - t2 * 43.946321791312862) +
            49.5886368019758);
  sdvals[11] = (t6 * -18.59479019360198 +
                t5 * (eta * 43.946321791312862 - 0.2396810204678364)) +
               xi * ((eta * -32.086158030195847 + t2 * 23.703853267775209) +
                     5.3214662366213332);
  sdvals[12] = (((t38 - t68) - t74) + sfvals_tmp * 126.7096201015012) -
               xi * (eta * 69.839295348318331 - t2 * 17.09169319373407);
  sdvals[13] = (t6 * 42.236540033833727 -
                xi * ((eta * 4.7035149831780831 + t2 * 3.0720803109000592) -
                      6.1961126177739159)) +
               t5 * (eta * 17.09169319373407 - 34.919647674159172);
  sdvals[14] = (t94 + sfvals_tmp * 44.443341917615008) -
               xi * (eta * 53.419624898706168 - t2 * 122.3838626242313);
  sdvals[15] = (t6 * 14.814447305871671 +
                t5 * (eta * 122.3838626242313 - 26.70981244935308)) +
               xi * ((eta * -41.879031632784127 + t2 * 27.132452018731961) +
                     6.5620318101480777);
  sdvals[16] = (t92 - sfvals_tmp * 23.580507483142039) +
               xi * (eta * 15.2316789604845 - t2 * 3.43575280176333);
  sdvals[17] = (t6 * -7.8601691610473479 +
                xi * ((eta * -56.72122497214766 + t2 * 116.42687828049711) +
                      3.064658036689953)) +
               t5 * (7.6158394802422507 - eta * 3.43575280176333);
  sdvals[18] = (t91 + sfvals_tmp * 3.1100751599796652) -
               xi * (eta * 10.870581131898909 - t2 * 23.234947782631671);
  sdvals[19] = ((((eta * -49.5886368019758 + t2 * 163.92197013530921) +
                  t6 * 1.036691719993222) -
                 t13) +
                t5 * (eta * 23.234947782631671 - 5.4352905659494564)) +
               (xi * ((eta * 13.98921805564841 - t2 * 66.2576534860322) +
                      1.5782704900713791) +
                2.8203283558848549);
  sdvals[20] =
      (t87 + xi * (eta * 12.346299121769849 + t2 * 68.306772076724911)) -
      sfvals_tmp * 27.138184475285009;
  sdvals[21] =
      ((((eta * 85.333333333333329 - t2 * 224.0) + t3 * 149.33333333333334) -
        t6 * 9.04606149176167) +
       t5 * (eta * 68.306772076724911 + 6.1731495608849256)) +
      (xi * ((eta * -166.8113855886684 + t2 * 241.5983425903724) +
             8.2062452642100823) -
       5.333333333333333);
  sdvals[22] = (((-t29 + t45) - t35) - sfvals_tmp * 116.63259029640579) +
               xi * (eta * 176.3758906466592 - t2 * 236.64005401542141);
  sdvals[23] = ((((eta * -113.7446965313575 + t2 * 228.0780298646909) -
                  t6 * 38.877530098801927) -
                 t13) +
                t5 * (88.1879453233296 - eta * 236.64005401542141)) +
               (-xi * ((eta * -344.22451084333352 + t2 * 336.32749072672641) +
                       62.823420201976163) +
                13.51300497744848);
  sdvals[24] = (t88 + sfvals_tmp * 332.1449473578615) -
               xi * (eta * 399.29759028850538 - t2 * 465.59742048792032);
  sdvals[25] = (t6 * 110.7149824526205 +
                t5 * (eta * 465.59742048792032 - 199.64879514425269)) +
               xi * ((eta * -422.03508096594368 + t2 * 366.25118337401892) +
                     88.933812691632212);
  sdvals[26] = (((-t26 + t48) - t49) - sfvals_tmp * 366.00465554066659) +
               xi * (eta * 310.22803244799962 - t2 * 266.81815138013718);
  sdvals[27] = (t6 * -122.0015518468889 +
                t5 * (155.11401622399981 - eta * 266.81815138013718)) +
               -xi * ((eta * -89.03997644058137 + t2 * 34.2225715295392) +
                      33.112464377110953);
  sdvals[28] = (((-t22 + t37) - t51) + sfvals_tmp * 34.029144497853643) +
               xi * (eta * 20.750350568090312 - t2 * 198.52214346596691);
  sdvals[29] = (t6 * 11.34304816595122 +
                t5 * (10.375175284045159 - eta * 198.52214346596691)) +
               -xi * ((eta * -264.64468669786208 + t2 * 331.812359696804) +
                      21.718223449996369);
}

// tri_leb_21_ncoords - Obtain nodal coordinates in master element for
void tri_leb_21_ncoords(double natcoords[42])
{
  static const double dv[42]{0.0,
                             0.0,
                             1.0,
                             0.0,
                             0.0,
                             1.0,
                             0.1174723380352677,
                             0.0,
                             0.35738424175967748,
                             0.0,
                             0.64261575824032258,
                             0.0,
                             0.88252766196473242,
                             0.0,
                             0.88252766196473242,
                             0.1174723380352676,
                             0.64261575824032258,
                             0.35738424175967742,
                             0.35738424175967748,
                             0.64261575824032247,
                             0.1174723380352677,
                             0.88252766196473231,
                             0.0,
                             0.88252766196473242,
                             0.0,
                             0.64261575824032258,
                             0.0,
                             0.35738424175967748,
                             0.0,
                             0.1174723380352677,
                             0.17253420630624239,
                             0.17579824177976619,
                             0.41208046019357558,
                             0.17359751549075919,
                             0.65277296395854245,
                             0.17390610719231461,
                             0.41216359270868008,
                             0.41115982426654851,
                             0.17584125722114929,
                             0.65072062351987736,
                             0.175965967109042,
                             0.41519137386566818};
  std::copy(&dv[0], &dv[42], &natcoords[0]);
}

// tri_leb_21_sfunc - Compute shape functions and their derivatives of
void tri_leb_21_sfunc(double xi, double eta, double sfvals[21])
{
  double sfvals_tmp;
  double t10;
  double t11;
  double t2;
  double t3;
  double t4;
  double t40;
  double t43;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = std::pow(eta, 5.0);
  t6 = xi * xi;
  t7 = std::pow(xi, 3.0);
  t9 = std::pow(xi, 5.0);
  t4 = t2 * t2;
  t8 = t6 * t6;
  t10 = t5 * 42.0;
  t11 = t9 * 42.0;
  t40 = t5 * 121.1674570846437;
  t43 = t9 * 121.1674570846437;
  sfvals[0] =
      ((((((eta * -15.0 + t2 * 70.0) - t3 * 140.0) + t4 * 126.0) - t10) - t11) -
       t7 * ((eta * -573.87156997640716 + t2 * 512.86249985055485) + 140.0)) +
      (((-t6 * (((eta * 465.43131766797359 - t2 * 886.58227853050619) +
                 t3 * 511.0946373393362) -
                70.0) -
         xi * ((((-(eta * 149.08123289859711) - t3 * 570.64480181341742) +
                 t2 * 463.97241201620261) +
                t4 * 241.753622695812) +
               15.0)) +
        t8 * (126.0 - eta * 243.52148520703071)) +
       1.0);
  sfvals[1] = (((t11 + ((((eta * 6.1376795934069763 + t3 * 13.04088839247013) -
                          t2 * 12.48692717906057) -
                         t4 * 6.6916408068165429) +
                        1.0) *
                           xi) -
                t8 * (eta * 33.0310196317052 + 84.0)) -
               t6 * (((eta * 35.976538494169077 - t2 * 42.19018104886797) +
                      t3 * 12.69371536926883) +
                     14.0)) +
              t7 * ((eta * 62.8698785324673 - t2 * 39.033094194157478) + 56.0);
  sfvals_tmp = eta * t8;
  sfvals[2] = (((((((eta - t2 * 14.0) + t3 * 56.0) - t4 * 84.0) + t10) -
                 t6 * ((eta * 15.32047540416468 - t2 * 50.078776570135418) +
                       t3 * 43.792770840056058)) -
                sfvals_tmp * 8.1393156647471141) +
               (((eta * 6.7550513601308912 + t3 * 65.5567214716615) -
                 t4 * 33.918069892807942) -
                t2 * 38.393702938984447) *
                   xi) +
              t7 * (eta * 16.7047397087809 - t2 * 18.014016611995171);
  sfvals[3] = (((t9 * 100.0722106463179 +
                 t8 * (eta * 470.10573940137277 - 288.460915381973)) +
                ((((-(eta * 145.47467978768159) + t2 * 352.304756220001) +
                   t4 * 127.95809300363049) -
                  t3 * 355.07100130858919) +
                 20.282831872639338) *
                    xi) +
               t7 * ((eta * -1004.343338869077 + t2 * 759.74556622982425) +
                     299.68785732601248)) +
              t6 * (((eta * 682.41210588376623 - t2 * 1062.746051158095) +
                     t3 * 517.67013047839987) -
                    131.58198446299679);
  sfvals[4] = ((-t43 + ((((eta * 16.53057457873075 + t4 * 46.915913947453433) +
                          t2 * 33.041767990553019) -
                         t3 * 88.4158819761265) -
                        8.0723745406107) *
                           xi) -
               t6 * (((eta * 321.19675990012229 - t2 * 278.2871655382873) +
                      t3 * 50.558520902967743) -
                     98.498235686073784)) +
              (-t7 * ((eta * -704.52832656132978 + t2 * 380.658488302068) +
                      289.45743553860677) +
               t8 * (320.1990314777874 - eta * 404.3515105362905));
  sfvals[5] =
      (((t43 - t7 * ((eta * 236.21148501708529 + t2 * 19.24291507768455) -
                     220.335880473894)) +
        t8 * (eta * 204.87081900936789 - 285.638253945431)) +
       ((((eta * 8.32807278623044 + t3 * 56.178312343489587) -
          t2 * 52.196089582506879) -
         t4 * 16.799664843565481) +
        4.4893692963523364) *
           xi) +
      t6 * (((eta * 31.084967762097691 + t2 * 154.2875982707591) -
             t3 * 119.7459418459742) -
            60.354452909459013);
  sfvals[6] = ((t9 * -100.072210646318 -
                xi * ((((-(t2 * 33.38923789334487) + eta * 11.52988472799267) +
                        t3 * 27.62795363843291) -
                       t4 * 8.468427101461689) +
                      2.6998266283809782)) +
               t6 * (((eta * 48.347155383862528 - t2 * 135.112549108798) +
                      t3 * 55.5656305877985) +
                     37.438201686382079)) +
              (-t7 * ((eta * 25.95573082214489 - t2 * 116.0250424262905) +
                      146.56630226129991) +
               t8 * (211.9001378496167 - eta * 31.144371706364311));
  sfvals[7] = ((-t7 * (eta * 160.891047648857 + t2 * 0.57557651225707351) +
                sfvals_tmp * 130.085366503938) +
               (((t4 * 10.02547788863612 - eta * 6.1554524084309259) -
                 t3 * 8.3735682720423874) +
                t2 * 1.8037161634562171) *
                   xi) +
              t6 * ((eta * 57.243965425989273 + t2 * 13.19067739853261) -
                    t3 * 20.563254481240971);
  sfvals[8] = ((-t7 * (eta * 100.78850934254579 - t2 * 236.1830770601818) +
                sfvals_tmp * 48.309029742946691) +
               (((-(eta * 4.8159845854699768) + t2 * 12.58031728262397) +
                 t3 * 16.648350723576179) -
                t4 * 19.923314124377828) *
                   xi) +
              t6 * ((eta * 49.223089644458433 - t2 * 165.76437300913591) +
                    t3 * 46.783276108213649);
  sfvals[9] = ((sfvals_tmp * -18.9005559845755 +
                (((t2 * 51.502499881379222 - eta * 5.1865896375786074) +
                  t4 * 50.852620565777627) -
                 t3 * 105.2409053501889) *
                    xi) +
               t7 * (eta * 14.96944771380775 + t2 * 48.057533790853832)) +
              t6 * ((eta * 13.607067204698691 - t2 * 168.580822606752) +
                    t3 * 238.9781674258507);
  sfvals[10] = ((sfvals_tmp * 10.922305551208909 +
                 (((-(eta * 6.6098383755195762) + t4 * 130.23365287901279) -
                   t3 * 162.28698343099069) +
                  t2 * 58.946000800136787) *
                     xi) +
                t6 * ((eta * 4.0959760313955886 + t2 * 6.1450564055783321) +
                      t3 * 3.5328075478624852)) +
               -t7 * (eta * 11.1082698354659 + t2 * 15.706329133623541);
  sfvals[11] = (((((eta * -2.6998266283809782 + t2 * 37.438201686382079) -
                   t3 * 146.56630226129991) +
                  t4 * 211.9001378496167) -
                 t5 * 100.072210646318) +
                ((sfvals_tmp * 11.75568365115139 -
                  xi * (((eta * 12.839328152052479 + t3 * 31.65555607628821) -
                         t2 * 53.41983510822002) +
                        t4 * 29.207782752518661)) +
                 t6 * ((eta * 39.308461124813 - t2 * 150.9798531888317) +
                       t3 * 125.45591935246379))) +
               -t7 * (eta * 35.524989995530923 - t2 * 66.347175109815865);
  sfvals[12] = ((((((eta * 4.4893692963523364 - t2 * 60.354452909459013) +
                    t3 * 220.335880473894) -
                   t4 * 285.638253945431) +
                  t40) -
                 sfvals_tmp * 20.60934569458021) +
                (((eta * 9.9715655911499947 + t4 * 200.57493165610151) -
                  t3 * 226.53923632311529) +
                 t2 * 24.06511361647447) *
                    xi) +
               (t7 * (eta * 65.034280251479927 - t2 * 131.03296888578689) -
                t6 * ((eta * 58.885869444402047 - t2 * 172.1875928572363) +
                      t3 * 31.01614861974889));
  sfvals[13] = (((((eta * -8.0723745406107 + t2 * 98.498235686073784) -
                   t3 * 289.45743553860677) +
                  t4 * 320.1990314777874) -
                 t40) +
                ((-t7 * (eta * 97.286347857098761 + t2 * 35.921108274276378) +
                  sfvals_tmp * 50.284610591558923) +
                 (((eta * 14.273239864932149 - t2 * 309.634551026804) +
                   t3 * 687.22549488456923) -
                  t4 * 396.35355301904963) *
                     xi)) +
               t6 * ((eta * 40.800871941218382 + t2 * 252.211806157315) -
                     t3 * 361.39181480024132);
  sfvals[14] = (((((eta * 20.282831872639338 - t2 * 131.58198446299679) +
                   t3 * 299.68785732601248) -
                  t4 * 288.460915381973) +
                 t5 * 100.0722106463179) +
                sfvals_tmp * 130.39375800241709) +
               ((t6 * ((eta * 354.39985319747262 - t2 * 1061.860561535851) +
                       t3 * 756.20736092442235) -
                 t7 * (eta * 359.57302973358941 - t2 * 519.60722237719813)) -
                xi * (((eta * 145.50341333893971 - t2 * 679.98755948655526) +
                       t3 * 998.850426715194) -
                      t4 * 467.06610719595932));
  sfvals[15] = ((sfvals_tmp * -445.515038619672 +
                 (((eta * 214.45418104121879 + t3 * 1055.8128184800751) -
                   t2 * 834.73841747013842) -
                  t4 * 435.52858205115552) *
                     xi) -
                t6 * ((eta * 843.0074360522849 - t2 * 2135.96888568651) +
                      t3 * 1322.65997629768)) +
               t7 * (eta * 1074.068293630738 - t2 * 1332.6464328661959);
  sfvals[16] = ((sfvals_tmp * 584.33710828540256 -
                 xi * (((eta * 82.38018411198351 + t3 * 85.503453195847868) -
                        t2 * 176.257536758331) +
                       t4 * 8.3738994504996676)) -
                t7 * (eta * 1168.17975064098 - t2 * 1168.56484543958)) +
               t6 * ((eta * 666.22282646756116 - t2 * 1261.947732156103) +
                     t3 * 575.85383770367832);
  sfvals[17] = ((sfvals_tmp * -439.65403144507309 +
                 (((eta * 30.5561219580918 - t3 * 7.8111112709064274) +
                   t4 * 3.250772866214751) -
                  t2 * 25.99578355340012) *
                     xi) +
                t7 * (eta * 695.5254906377213 - t2 * 433.11221137574393)) +
               t6 * ((eta * -286.42758115074 + t2 * 244.76930071862731) +
                     t3 * 9.7925929355439827);
  sfvals[18] = ((sfvals_tmp * 0.71637836367440033 +
                 xi * (((eta * 18.172759804336351 + t3 * 105.35333240940039) -
                        t2 * 123.1651907872983) -
                       t4 * 0.3609014264384528)) -
                t6 * ((eta * 121.1219205953568 - t2 * 803.2738638143436) +
                      t3 * 595.69317346679964)) +
               t7 * (eta * 102.23278242734609 - t2 * 594.61589367668671);
  sfvals[19] = ((sfvals_tmp * -2.3598780744807519 -
                 t6 * ((eta * 38.000762288671019 - t2 * 284.4753682803368) +
                       t3 * 462.22814682536568)) -
                xi * (((t2 * 301.8297880508278 - eta * 33.574007962706581) +
                       t4 * 450.43531295911453) -
                      t3 * 718.69109304723577)) +
               t7 * (eta * 6.7866324004451846 - t2 * 14.15271194073185);
  sfvals[20] = ((sfvals_tmp * 5.4457534614806633 +
                 (((t4 * 594.00034691790847 - eta * 87.339132313882786) -
                   t3 * 1191.775736008173) +
                  t2 * 685.11452140414724) *
                     xi) +
                t6 * ((eta * 198.62232093055081 - t2 * 1316.65660851347) +
                      t3 * 1201.598377724446)) +
               -t7 * (eta * 116.72894207814861 - t2 * 613.0437842680177);
}

// tri_leb_21_sfunc - Compute shape functions and their derivatives of
void tri_leb_21_sfunc(double xi, double eta, double sfvals[21],
                      double sdvals[42])
{
  double b_sfvals_tmp;
  double sfvals_tmp;
  double t10;
  double t11;
  double t12;
  double t120;
  double t13;
  double t143;
  double t144;
  double t146;
  double t148;
  double t149;
  double t15;
  double t150;
  double t152;
  double t153;
  double t155;
  double t156;
  double t158;
  double t159;
  double t160;
  double t161;
  double t17;
  double t18;
  double t2;
  double t21;
  double t26;
  double t3;
  double t34;
  double t36;
  double t39;
  double t4;
  double t40;
  double t43;
  double t46;
  double t47;
  double t5;
  double t52;
  double t53;
  double t55;
  double t6;
  double t62;
  double t64;
  double t65;
  double t66;
  double t69;
  double t7;
  double t71;
  double t77;
  double t8;
  double t88;
  double t9;
  double t90;
  double t99;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = std::pow(eta, 5.0);
  t6 = xi * xi;
  t7 = std::pow(xi, 3.0);
  t9 = std::pow(xi, 5.0);
  t15 = eta * 145.50341333893971;
  t18 = eta * 82.38018411198351;
  t21 = eta * 149.08123289859711;
  t36 = eta * 33.574007962706581;
  t39 = eta * 12.839328152052479;
  t66 = eta * 11.52988472799267;
  t4 = t2 * t2;
  t8 = t6 * t6;
  t10 = t5 * 42.0;
  t11 = t9 * 42.0;
  t17 = t2 * 679.98755948655526;
  t26 = t3 * 570.64480181341742;
  t34 = t2 * 301.8297880508278;
  t40 = t5 * 121.1674570846437;
  t43 = t9 * 121.1674570846437;
  t46 = t2 * 463.97241201620261;
  t52 = t3 * 85.503453195847868;
  t53 = t3 * 31.65555607628821;
  t55 = t3 * 718.69109304723577;
  t62 = t2 * 33.38923789334487;
  t64 = t3 * 998.850426715194;
  t69 = t2 * 176.257536758331;
  t88 = t2 * 53.41983510822002;
  t99 = t3 * 27.62795363843291;
  t12 = t4 * 210.0;
  t13 = t8 * 210.0;
  t47 = t4 * 450.43531295911453;
  t65 = t4 * 241.753622695812;
  t71 = t4 * 467.06610719595932;
  t77 = t4 * 8.3738994504996676;
  t90 = t4 * 29.207782752518661;
  t120 = t4 * 8.468427101461689;
  t144 = ((t4 * 594.00034691790847 - eta * 87.339132313882786) -
          t3 * 1191.775736008173) +
         t2 * 685.11452140414724;
  t148 = ((-(eta * 6.6098383755195762) + t4 * 130.23365287901279) -
          t3 * 162.28698343099069) +
         t2 * 58.946000800136787;
  t149 = ((eta * 9.9715655911499947 + t4 * 200.57493165610151) -
          t3 * 226.53923632311529) +
         t2 * 24.06511361647447;
  t152 = ((t4 * 10.02547788863612 - eta * 6.1554524084309259) -
          t3 * 8.3735682720423874) +
         t2 * 1.8037161634562171;
  t153 = ((t2 * 51.502499881379222 - eta * 5.1865896375786074) +
          t4 * 50.852620565777627) -
         t3 * 105.2409053501889;
  t155 = ((eta * 30.5561219580918 - t3 * 7.8111112709064274) +
          t4 * 3.250772866214751) -
         t2 * 25.99578355340012;
  t159 = (((-(eta * 145.47467978768159) + t2 * 352.304756220001) +
           t4 * 127.95809300363049) -
          t3 * 355.07100130858919) +
         20.282831872639338;
  t160 = (((eta * 16.53057457873075 + t4 * 46.915913947453433) +
           t2 * 33.041767990553019) -
          t3 * 88.4158819761265) -
         8.0723745406107;
  t143 = ((eta * 214.45418104121879 + t3 * 1055.8128184800751) -
          t2 * 834.73841747013842) -
         t4 * 435.52858205115552;
  t146 = ((eta * 14.273239864932149 - t2 * 309.634551026804) +
          t3 * 687.22549488456923) -
         t4 * 396.35355301904963;
  t150 = ((-(eta * 4.8159845854699768) + t2 * 12.58031728262397) +
          t3 * 16.648350723576179) -
         t4 * 19.923314124377828;
  t156 = ((eta * 6.7550513601308912 + t3 * 65.5567214716615) -
          t4 * 33.918069892807942) -
         t2 * 38.393702938984447;
  t158 = (((eta * 6.1376795934069763 + t3 * 13.04088839247013) -
           t2 * 12.48692717906057) -
          t4 * 6.6916408068165429) +
         1.0;
  t161 = (((eta * 8.32807278623044 + t3 * 56.178312343489587) -
           t2 * 52.196089582506879) -
          t4 * 16.799664843565481) +
         4.4893692963523364;
  sfvals[0] =
      ((((((eta * -15.0 + t2 * 70.0) - t3 * 140.0) + t4 * 126.0) - t10) - t11) -
       t7 * ((eta * -573.87156997640716 + t2 * 512.86249985055485) + 140.0)) +
      (((-t6 * (((eta * 465.43131766797359 - t2 * 886.58227853050619) +
                 t3 * 511.0946373393362) -
                70.0) -
         xi * ((((-t21 - t26) + t46) + t65) + 15.0)) +
        t8 * (126.0 - eta * 243.52148520703071)) +
       1.0);
  sfvals[1] = (((t11 + t158 * xi) - t8 * (eta * 33.0310196317052 + 84.0)) -
               t6 * (((eta * 35.976538494169077 - t2 * 42.19018104886797) +
                      t3 * 12.69371536926883) +
                     14.0)) +
              t7 * ((eta * 62.8698785324673 - t2 * 39.033094194157478) + 56.0);
  sfvals_tmp = eta * t8;
  sfvals[2] = (((((((eta - t2 * 14.0) + t3 * 56.0) - t4 * 84.0) + t10) -
                 t6 * ((eta * 15.32047540416468 - t2 * 50.078776570135418) +
                       t3 * 43.792770840056058)) -
                sfvals_tmp * 8.1393156647471141) +
               t156 * xi) +
              t7 * (eta * 16.7047397087809 - t2 * 18.014016611995171);
  sfvals[3] = (((t9 * 100.0722106463179 +
                 t8 * (eta * 470.10573940137277 - 288.460915381973)) +
                t159 * xi) +
               t7 * ((eta * -1004.343338869077 + t2 * 759.74556622982425) +
                     299.68785732601248)) +
              t6 * (((eta * 682.41210588376623 - t2 * 1062.746051158095) +
                     t3 * 517.67013047839987) -
                    131.58198446299679);
  sfvals[4] = ((-t43 + t160 * xi) -
               t6 * (((eta * 321.19675990012229 - t2 * 278.2871655382873) +
                      t3 * 50.558520902967743) -
                     98.498235686073784)) +
              (-t7 * ((eta * -704.52832656132978 + t2 * 380.658488302068) +
                      289.45743553860677) +
               t8 * (320.1990314777874 - eta * 404.3515105362905));
  sfvals[5] =
      (((t43 - t7 * ((eta * 236.21148501708529 + t2 * 19.24291507768455) -
                     220.335880473894)) +
        t8 * (eta * 204.87081900936789 - 285.638253945431)) +
       t161 * xi) +
      t6 * (((eta * 31.084967762097691 + t2 * 154.2875982707591) -
             t3 * 119.7459418459742) -
            60.354452909459013);
  sfvals[6] = ((t9 * -100.072210646318 -
                xi * ((((-t62 + t66) + t99) - t120) + 2.6998266283809782)) +
               t6 * (((eta * 48.347155383862528 - t2 * 135.112549108798) +
                      t3 * 55.5656305877985) +
                     37.438201686382079)) +
              (-t7 * ((eta * 25.95573082214489 - t2 * 116.0250424262905) +
                      146.56630226129991) +
               t8 * (211.9001378496167 - eta * 31.144371706364311));
  sfvals[7] = ((-t7 * (eta * 160.891047648857 + t2 * 0.57557651225707351) +
                sfvals_tmp * 130.085366503938) +
               t152 * xi) +
              t6 * ((eta * 57.243965425989273 + t2 * 13.19067739853261) -
                    t3 * 20.563254481240971);
  sfvals[8] = ((-t7 * (eta * 100.78850934254579 - t2 * 236.1830770601818) +
                sfvals_tmp * 48.309029742946691) +
               t150 * xi) +
              t6 * ((eta * 49.223089644458433 - t2 * 165.76437300913591) +
                    t3 * 46.783276108213649);
  sfvals[9] = ((sfvals_tmp * -18.9005559845755 + t153 * xi) +
               t7 * (eta * 14.96944771380775 + t2 * 48.057533790853832)) +
              t6 * ((eta * 13.607067204698691 - t2 * 168.580822606752) +
                    t3 * 238.9781674258507);
  sfvals[10] = ((sfvals_tmp * 10.922305551208909 + t148 * xi) +
                t6 * ((eta * 4.0959760313955886 + t2 * 6.1450564055783321) +
                      t3 * 3.5328075478624852)) +
               -t7 * (eta * 11.1082698354659 + t2 * 15.706329133623541);
  sfvals[11] =
      (((((eta * -2.6998266283809782 + t2 * 37.438201686382079) -
          t3 * 146.56630226129991) +
         t4 * 211.9001378496167) -
        t5 * 100.072210646318) +
       ((sfvals_tmp * 11.75568365115139 - xi * (((t39 + t53) - t88) + t90)) +
        t6 * ((eta * 39.308461124813 - t2 * 150.9798531888317) +
              t3 * 125.45591935246379))) +
      -t7 * (eta * 35.524989995530923 - t2 * 66.347175109815865);
  sfvals[12] = ((((((eta * 4.4893692963523364 - t2 * 60.354452909459013) +
                    t3 * 220.335880473894) -
                   t4 * 285.638253945431) +
                  t40) -
                 sfvals_tmp * 20.60934569458021) +
                t149 * xi) +
               (t7 * (eta * 65.034280251479927 - t2 * 131.03296888578689) -
                t6 * ((eta * 58.885869444402047 - t2 * 172.1875928572363) +
                      t3 * 31.01614861974889));
  sfvals[13] = (((((eta * -8.0723745406107 + t2 * 98.498235686073784) -
                   t3 * 289.45743553860677) +
                  t4 * 320.1990314777874) -
                 t40) +
                ((-t7 * (eta * 97.286347857098761 + t2 * 35.921108274276378) +
                  sfvals_tmp * 50.284610591558923) +
                 t146 * xi)) +
               t6 * ((eta * 40.800871941218382 + t2 * 252.211806157315) -
                     t3 * 361.39181480024132);
  sfvals[14] = (((((eta * 20.282831872639338 - t2 * 131.58198446299679) +
                   t3 * 299.68785732601248) -
                  t4 * 288.460915381973) +
                 t5 * 100.0722106463179) +
                sfvals_tmp * 130.39375800241709) +
               ((t6 * ((eta * 354.39985319747262 - t2 * 1061.860561535851) +
                       t3 * 756.20736092442235) -
                 t7 * (eta * 359.57302973358941 - t2 * 519.60722237719813)) -
                xi * (((t15 - t17) + t64) - t71));
  sfvals[15] = ((sfvals_tmp * -445.515038619672 + t143 * xi) -
                t6 * ((eta * 843.0074360522849 - t2 * 2135.96888568651) +
                      t3 * 1322.65997629768)) +
               t7 * (eta * 1074.068293630738 - t2 * 1332.6464328661959);
  sfvals[16] =
      ((sfvals_tmp * 584.33710828540256 - xi * (((t18 + t52) - t69) + t77)) -
       t7 * (eta * 1168.17975064098 - t2 * 1168.56484543958)) +
      t6 * ((eta * 666.22282646756116 - t2 * 1261.947732156103) +
            t3 * 575.85383770367832);
  sfvals[17] = ((sfvals_tmp * -439.65403144507309 + t155 * xi) +
                t7 * (eta * 695.5254906377213 - t2 * 433.11221137574393)) +
               t6 * ((eta * -286.42758115074 + t2 * 244.76930071862731) +
                     t3 * 9.7925929355439827);
  b_sfvals_tmp = ((eta * 18.172759804336351 + t3 * 105.35333240940039) -
                  t2 * 123.1651907872983) -
                 t4 * 0.3609014264384528;
  sfvals[18] = ((sfvals_tmp * 0.71637836367440033 + xi * b_sfvals_tmp) -
                t6 * ((eta * 121.1219205953568 - t2 * 803.2738638143436) +
                      t3 * 595.69317346679964)) +
               t7 * (eta * 102.23278242734609 - t2 * 594.61589367668671);
  sfvals[19] = ((sfvals_tmp * -2.3598780744807519 -
                 t6 * ((eta * 38.000762288671019 - t2 * 284.4753682803368) +
                       t3 * 462.22814682536568)) -
                xi * (((t34 - t36) + t47) - t55)) +
               t7 * (eta * 6.7866324004451846 - t2 * 14.15271194073185);
  sfvals[20] = ((sfvals_tmp * 5.4457534614806633 + t144 * xi) +
                t6 * ((eta * 198.62232093055081 - t2 * 1316.65660851347) +
                      t3 * 1201.598377724446)) +
               -t7 * (eta * 116.72894207814861 - t2 * 613.0437842680177);
  sdvals[0] =
      (((-t13 + ((((t21 + t26) - t46) - t65) - 15.0)) -
        t6 * ((eta * -1721.614709929222 + t2 * 1538.5874995516649) + 420.0)) -
       xi * (((eta * 930.86263533594718 - t2 * 1773.1645570610119) +
              t3 * 1022.1892746786719) -
             140.0)) +
      t7 * (504.0 - eta * 974.08594082812272);
  sdvals[1] =
      ((((((eta * 140.0 - t2 * 420.0) + t3 * 504.0) - t8 * 243.52148520703071) -
         t12) +
        t7 * (573.87156997640716 - eta * 1025.72499970111)) +
       -xi * (((eta * 927.94482403240511 - t2 * 1711.934405440252) +
               t3 * 967.01449078324788) -
              149.08123289859711)) +
      (-t6 * ((eta * -1773.1645570610119 + t2 * 1533.283912018009) +
              465.43131766797359) -
       15.0);
  sdvals[2] =
      (((t13 + t158) +
        t6 * ((eta * 188.6096355974019 - t2 * 117.0992825824725) + 168.0)) -
       t7 * (eta * 132.1240785268208 + 336.0)) +
      -xi * (((eta * 71.953076988338154 - t2 * 84.38036209773594) +
              t3 * 25.387430738537649) +
             28.0);
  sdvals[3] = (t8 * -33.0310196317052 -
               xi * (((eta * 24.97385435812113 - t2 * 39.1226651774104) +
                      t3 * 26.766563227266172) -
                     6.1376795934069763)) +
              (t7 * (62.8698785324673 - eta * 78.06618838831497) -
               t6 * ((eta * -84.38036209773594 + t2 * 38.081146107806482) +
                     35.976538494169077));
  sfvals_tmp = eta * t7;
  sdvals[4] =
      ((t156 - xi * ((eta * 30.64095080832935 - t2 * 100.15755314027081) +
                     t3 * 87.585541680112129)) -
       sfvals_tmp * 32.557262658988463) +
      t6 * (eta * 50.114219126342682 - t2 * 54.042049835985523);
  sdvals[5] =
      ((((((eta * -28.0 + t2 * 168.0) - t3 * 336.0) - t8 * 8.1393156647471141) +
         t12) -
        t6 * ((eta * -100.15755314027081 + t2 * 131.37831252016821) +
              15.32047540416468)) +
       -xi * (((eta * 76.7874058779689 - t2 * 196.6701644149845) +
               t3 * 135.6722795712318) -
              6.7550513601308912)) +
      (t7 * (16.7047397087809 - eta * 36.028033223990349) + 1.0);
  sdvals[6] = (((t8 * 500.36105323158961 + t159) +
                t7 * (eta * 1880.4229576054911 - 1153.843661527892)) +
               xi * (((eta * 1364.824211767532 - t2 * 2125.4921023161892) +
                      t3 * 1035.3402609568) -
                     263.16396892599357)) +
              t6 * ((eta * -3013.03001660723 + t2 * 2279.2366986894731) +
                    899.06357197803766);
  sdvals[7] = ((t8 * 470.10573940137277 +
                t7 * (eta * 1519.491132459648 - 1004.343338869077)) +
               xi * (((eta * 704.60951244000194 - t2 * 1065.2130039257679) +
                      t3 * 511.83237201452192) -
                     145.47467978768159)) +
              t6 * ((eta * -2125.4921023161892 + t2 * 1553.0103914352) +
                    682.41210588376623);
  sdvals[8] = (((t8 * -605.83728542321842 + t160) -
                t6 * ((eta * -2113.5849796839889 + t2 * 1141.975464906204) +
                      868.37230661582043)) +
               -xi * (((eta * 642.39351980024469 - t2 * 556.57433107657459) +
                       t3 * 101.1170418059355) -
                      196.9964713721476)) +
              t7 * (1280.79612591115 - eta * 1617.406042145162);
  sdvals[9] = ((t8 * -404.3515105362905 -
                t6 * ((eta * -556.57433107657459 + t2 * 151.67556270890319) +
                      321.19675990012229)) +
               t7 * (704.52832656132978 - eta * 761.3169766041359)) +
              xi * (((eta * 66.083535981106039 - t2 * 265.24764592837948) +
                     t3 * 187.6636557898137) +
                    16.53057457873075);
  sdvals[10] = (((t8 * 605.8372854232183 + t161) +
                 t7 * (eta * 819.48327603747146 - 1142.5530157817241)) +
                -t6 * ((eta * 708.63445505125594 + t2 * 57.728745233053651) -
                       661.007641421682)) +
               xi * (((eta * 62.169935524195388 + t2 * 308.57519654151821) -
                      t3 * 239.49188369194849) -
                     120.708905818918);
  sdvals[11] = (t8 * 204.87081900936789 -
                xi * (((eta * 104.3921791650138 - t2 * 168.5349370304688) +
                       t3 * 67.198659374261936) -
                      8.32807278623044)) +
               (-t7 * (eta * 38.4858301553691 + 236.21148501708529) +
                t6 * ((eta * 308.57519654151821 - t2 * 359.23782553792267) +
                      31.084967762097691));
  sdvals[12] = (((t8 * -500.36105323158978 +
                  ((((t62 - t66) + t120) - t99) - 2.6998266283809782)) -
                 t6 * ((eta * 77.867192466434659 - t2 * 348.07512727887138) +
                       439.69890678389959)) +
                xi * (((eta * 96.694310767725057 - t2 * 270.225098217596) +
                       t3 * 111.131261175597) +
                      74.876403372764159)) +
               t7 * (847.60055139846691 - eta * 124.5774868254572);
  sdvals[13] = (t8 * -31.144371706364311 +
                xi * (((eta * 66.778475786689739 - t2 * 82.88386091529874) +
                       t3 * 33.873708405846763) -
                      11.52988472799267)) +
               (t7 * (eta * 232.05008485258091 - 25.95573082214489) +
                t6 * ((eta * -270.225098217596 + t2 * 166.69689176339551) +
                      48.347155383862528));
  sdvals[14] = ((t152 + sfvals_tmp * 520.341466015752) +
                xi * ((eta * 114.4879308519785 + t2 * 26.38135479706521) -
                      t3 * 41.12650896248195)) +
               -t6 * (eta * 482.673142946571 + t2 * 1.726729536771221);
  sdvals[15] = ((t8 * 130.085366503938 +
                 t6 * ((eta * 26.38135479706521 - t2 * 61.689763443722917) +
                       57.243965425989273)) +
                -t7 * (eta * 1.151153024514147 + 160.891047648857)) +
               xi * (((eta * 3.6074323269124342 - t2 * 25.120704816127159) +
                      t3 * 40.101911554544472) -
                     6.1554524084309259);
  sdvals[16] =
      ((t150 + xi * ((eta * 98.446179288916852 - t2 * 331.52874601827182) +
                     t3 * 93.5665522164273)) +
       sfvals_tmp * 193.23611897178679) +
      -t6 * (eta * 302.36552802763748 - t2 * 708.54923118054546);
  sdvals[17] = ((t8 * 48.309029742946691 +
                 t7 * (eta * 472.36615412036372 - 100.78850934254579)) +
                t6 * ((eta * -331.52874601827182 + t2 * 140.349828324641) +
                      49.223089644458433)) +
               xi * (((eta * 25.160634565247928 + t2 * 49.945052170728523) -
                      t3 * 79.693256497511314) -
                     4.8159845854699768);
  sdvals[18] = ((t153 - sfvals_tmp * 75.602223938302) +
                t6 * (eta * 44.908343141423273 + t2 * 144.1726013725615)) +
               xi * ((eta * 27.214134409397371 - t2 * 337.16164521350407) +
                     t3 * 477.9563348517014);
  sdvals[19] = ((t8 * -18.9005559845755 +
                 t6 * ((eta * -337.16164521350407 + t2 * 716.93450227755216) +
                       13.607067204698691)) +
                t7 * (eta * 96.115067581707663 + 14.96944771380775)) +
               xi * (((eta * 103.0049997627584 - t2 * 315.72271605056682) +
                      t3 * 203.41048226311051) -
                     5.1865896375786074);
  sdvals[20] = ((t148 + sfvals_tmp * 43.689222204835659) +
                xi * ((eta * 8.1919520627911773 + t2 * 12.290112811156661) +
                      t3 * 7.06561509572497)) +
               -t6 * (eta * 33.3248095063977 + t2 * 47.118987400870608);
  sdvals[21] = ((t8 * 10.922305551208909 -
                 t7 * (eta * 31.412658267247071 + 11.1082698354659)) +
                xi * (((eta * 117.8920016002736 - t2 * 486.86095029297212) +
                       t3 * 520.93461151605129) -
                      6.6098383755195762)) +
               t6 * ((eta * 12.290112811156661 + t2 * 10.598422643587449) +
                     4.0959760313955886);
  sdvals[22] =
      (((((-t39 + t88) - t53) - t90) + sfvals_tmp * 47.022734604605553) +
       xi * ((eta * 78.616922249626 - t2 * 301.95970637766328) +
             t3 * 250.91183870492759)) +
      -t6 * (eta * 106.57496998659281 - t2 * 199.04152532944761);
  sdvals[23] = ((((((eta * 74.876403372764159 - t2 * 439.69890678389959) +
                    t3 * 847.60055139846691) -
                   t4 * 500.36105323158978) +
                  t8 * 11.75568365115139) +
                 t6 * ((eta * -301.95970637766328 + t2 * 376.36775805739143) +
                       39.308461124813)) +
                -xi * (((eta * -106.83967021644 + t2 * 94.96666822886462) +
                        t3 * 116.8311310100747) +
                       12.839328152052479)) +
               (t7 * (eta * 132.6943502196317 - 35.524989995530923) -
                2.6998266283809782);
  sdvals[24] = ((t149 - sfvals_tmp * 82.437382778320824) +
                t6 * (eta * 195.1028407544398 - t2 * 393.09890665736083)) +
               -xi * ((eta * 117.77173888880409 - t2 * 344.37518571447259) +
                      t3 * 62.03229723949778);
  sdvals[25] = (((((eta * -120.708905818918 + t2 * 661.007641421682) -
                   t3 * 1142.5530157817241) +
                  t4 * 605.8372854232183) -
                 t8 * 20.60934569458021) +
                (-t6 * ((eta * -344.37518571447259 + t2 * 93.048445859246669) +
                        58.885869444402047) +
                 t7 * (65.034280251479927 - eta * 262.06593777157377))) +
               (xi * (((eta * 48.13022723294894 - t2 * 679.61770896934581) +
                       t3 * 802.29972662440593) +
                      9.9715655911499947) +
                4.4893692963523364);
  sdvals[26] = ((t146 + sfvals_tmp * 201.13844236623569) +
                xi * ((eta * 81.601743882436764 + t2 * 504.42361231463) -
                      t3 * 722.78362960048264)) +
               -t6 * (eta * 291.8590435712963 + t2 * 107.76332482282911);
  sdvals[27] = (((((eta * 196.9964713721476 - t2 * 868.37230661582043) +
                   t3 * 1280.79612591115) -
                  t4 * 605.83728542321842) +
                 t8 * 50.284610591558923) +
                (-t7 * (eta * 71.84221654855277 + 97.286347857098761) +
                 t6 * ((eta * 504.42361231463 - t2 * 1084.175444400724) +
                       40.800871941218382))) +
               (-xi * (((eta * 619.26910205360809 - t2 * 2061.676484653708) +
                        t3 * 1585.414212076199) -
                       14.273239864932149) -
                8.0723745406107);
  sdvals[28] =
      (((((t17 - t15) + t71) - t64) + sfvals_tmp * 521.57503200966858) +
       xi * ((eta * 708.79970639494525 - t2 * 2123.7211230717012) +
             t3 * 1512.4147218488449)) +
      -t6 * (eta * 1078.7190892007679 - t2 * 1558.821667131594);
  sdvals[29] = (((((eta * -263.16396892599357 + t2 * 899.06357197803766) -
                   t3 * 1153.843661527892) +
                  t4 * 500.36105323158961) +
                 t8 * 130.39375800241709) +
                (xi * (((eta * 1359.975118973111 - t2 * 2996.551280145582) +
                        t3 * 1868.264428783837) -
                       145.50341333893971) +
                 t7 * (eta * 1039.214444754396 - 359.57302973358941))) +
               (t6 * ((eta * -2123.7211230717012 + t2 * 2268.6220827732668) +
                      354.39985319747262) +
                20.282831872639338);
  sdvals[30] = ((t143 - sfvals_tmp * 1782.060154478688) -
                xi * ((eta * 1686.01487210457 - t2 * 4271.93777137302) +
                      t3 * 2645.3199525953592)) +
               t6 * (eta * 3222.2048808922141 - t2 * 3997.9392985985878);
  sdvals[31] = (t8 * -445.515038619672 -
                xi * (((eta * 1669.4768349402771 - t2 * 3167.438455440225) +
                       t3 * 1742.1143282046221) -
                      214.45418104121879)) +
               (-t6 * ((eta * -4271.93777137302 + t2 * 3967.979928893039) +
                       843.0074360522849) +
                t7 * (1074.068293630738 - eta * 2665.2928657323919));
  sdvals[32] = (((((-t18 + t69) - t52) - t77) + sfvals_tmp * 2337.34843314161) -
                t6 * (eta * 3504.5392519229408 - t2 * 3505.694536318741)) +
               xi * ((eta * 1332.4456529351221 - t2 * 2523.895464312207) +
                     t3 * 1151.7076754073571);
  sdvals[33] = ((t8 * 584.33710828540256 +
                 t7 * (eta * 2337.129690879161 - 1168.17975064098)) +
                -xi * (((eta * -352.51507351666208 + t2 * 256.51035958754358) +
                        t3 * 33.49559780199867) +
                       82.38018411198351)) +
               t6 * ((eta * -2523.895464312207 + t2 * 1727.5615131110351) +
                     666.22282646756116);
  sdvals[34] = ((t155 - sfvals_tmp * 1758.616125780293) +
                xi * ((eta * -572.85516230147994 + t2 * 489.53860143725461) +
                      t3 * 19.585185871087969)) +
               t6 * (eta * 2086.5764719131639 - t2 * 1299.3366341272319);
  sdvals[35] = (t8 * -439.65403144507309 -
                xi * (((eta * 51.991567106800247 + t2 * 23.43333381271928) -
                       t3 * 13.003091464859) -
                      30.5561219580918)) +
               (t6 * ((eta * 489.53860143725461 + t2 * 29.377778806631952) -
                      286.42758115074) +
                t7 * (695.5254906377213 - eta * 866.22442275148785));
  sdvals[36] = ((b_sfvals_tmp + sfvals_tmp * 2.8655134546976009) +
                t6 * (eta * 306.69834728203813 - t2 * 1783.84768103006)) +
               -xi * ((eta * 242.2438411907136 - t2 * 1606.547727628687) +
                      t3 * 1191.386346933599);
  sdvals[37] = (t8 * 0.71637836367440033 -
                xi * (((eta * 246.33038157459669 - t2 * 316.05999722820133) +
                       t3 * 1.443605705753811) -
                      18.172759804336351)) +
               (-t6 * ((eta * -1606.547727628687 + t2 * 1787.0795204003989) +
                       121.1219205953568) +
                t7 * (102.23278242734609 - eta * 1189.231787353373));
  sdvals[38] = (((((t36 + t55) - t34) - t47) - sfvals_tmp * 9.43951229792301) -
                xi * ((eta * 76.001524577342039 - t2 * 568.95073656067359) +
                      t3 * 924.45629365073137)) +
               t6 * (eta * 20.35989720133556 - t2 * 42.458135822195537);
  sdvals[39] = ((t8 * -2.3598780744807519 +
                 t7 * (6.7866324004451846 - eta * 28.3054238814637)) +
                -t6 * ((eta * -568.95073656067359 + t2 * 1386.6844404760971) +
                       38.000762288671019)) +
               -xi * (((eta * 603.6595761016556 - t2 * 2156.0732791417072) +
                       t3 * 1801.7412518364581) -
                      33.574007962706581);
  sdvals[40] = ((t144 + sfvals_tmp * 21.78301384592265) -
                t6 * (eta * 350.18682623444579 - t2 * 1839.131352804053)) +
               xi * ((eta * 397.24464186110151 - t2 * 2633.3132170269391) +
                     t3 * 2403.1967554488911);
  sdvals[41] = ((t8 * 5.4457534614806633 +
                 t7 * (eta * 1226.087568536035 - 116.72894207814861)) +
                t6 * ((eta * -2633.3132170269391 + t2 * 3604.795133173337) +
                      198.62232093055081)) +
               xi * (((eta * 1370.229042808294 - t2 * 3575.3272080245192) +
                      t3 * 2376.0013876716339) -
                     87.339132313882786);
}

// tri_leb_28_ncoords - Obtain nodal coordinates in master element for
void tri_leb_28_ncoords(double natcoords[56])
{
  static const double dv[56]{0.0,
                             0.0,
                             1.0,
                             0.0,
                             0.0,
                             1.0,
                             0.084888051860716462,
                             0.0,
                             0.2655756032646428,
                             0.0,
                             0.5,
                             0.0,
                             0.7344243967353572,
                             0.0,
                             0.91511194813928332,
                             0.0,
                             0.91511194813928332,
                             0.084888051860716685,
                             0.7344243967353572,
                             0.2655756032646428,
                             0.5,
                             0.5,
                             0.2655756032646428,
                             0.7344243967353572,
                             0.084888051860716462,
                             0.91511194813928354,
                             0.0,
                             0.91511194813928332,
                             0.0,
                             0.7344243967353572,
                             0.0,
                             0.5,
                             0.0,
                             0.2655756032646428,
                             0.0,
                             0.084888051860716462,
                             0.12722227928154689,
                             0.1200049166269066,
                             0.3249850806922307,
                             0.13627277086369061,
                             0.54646952078678912,
                             0.12732893408538551,
                             0.75271127399216808,
                             0.1272611907264726,
                             0.538673337271117,
                             0.32504414231257972,
                             0.32619161439757732,
                             0.54650094974932839,
                             0.1199689529318439,
                             0.75279618524932379,
                             0.13629899825536371,
                             0.53869622819612584,
                             0.12732523903869941,
                             0.326198455394284,
                             0.333335144726689,
                             0.33335513526117649};
  std::copy(&dv[0], &dv[56], &natcoords[0]);
}

// tri_leb_28_sfunc - Compute shape functions and their derivatives of
void tri_leb_28_sfunc(double xi, double eta, double sfvals[28])
{
  double sfvals_tmp;
  double t10;
  double t11;
  double t12;
  double t13;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = std::pow(eta, 5.0);
  t7 = xi * xi;
  t8 = std::pow(xi, 3.0);
  t10 = std::pow(xi, 5.0);
  t4 = t2 * t2;
  t6 = std::pow(t2, 3.0);
  t9 = t7 * t7;
  t11 = std::pow(t7, 3.0);
  t12 = t6 * 132.0;
  t13 = t11 * 132.0;
  sfvals[0] =
      ((((((((eta * -21.0 + t2 * 140.0) - t3 * 420.0) + t4 * 630.0) -
           t5 * 462.0) +
          t12) +
         t13) +
        t9 * ((eta * -2782.524522362035 + t2 * 2662.5483632534661) + 630.0)) +
       (t7 * ((((eta * -1442.8597841751589 + t2 * 4680.0498986318889) -
                t3 * 6016.7023975761022) +
               t4 * 2672.2312856435919) +
              140.0) +
        (((((eta * 306.27259559598082 + t3 * 3006.3642014402708) +
            t5 * 985.8500798475261) -
           t2 * 1452.025455452454) -
          t4 * 2824.4614214313242) -
         21.0) *
            xi)) +
      ((t8 * (((eta * 2974.088898167463 - t2 * 6002.7371102642364) +
               t3 * 3645.90675627578) -
              420.0) +
        t10 * (eta * 967.02281277375164 - 462.0)) +
       1.0);
  sfvals[1] =
      ((t13 +
        t9 * ((eta * 454.469525936803 - t2 * 276.77749045276732) + 300.0)) +
       (t7 * ((((eta * 118.71455325510711 - t2 * 237.440368317872) +
                t3 * 246.67391105541731) -
               t4 * 120.1344044067089) +
              20.0) -
        xi * (((((-(t4 * 79.893794089367248) + t3 * 80.686155096060446) +
                 eta * 12.709966379110771) +
                t5 * 27.99923595861377) -
               t2 * 41.501563344417733) +
              1.0))) +
      (-t8 * (((eta * 366.768180733714 - t2 * 446.47933670796817) +
               t3 * 175.2067268217771) +
              120.0) -
       t10 * (eta * 193.70593207908539 + 330.0));
  sfvals_tmp = eta * t10;
  sfvals[2] =
      (((((((((-eta + t2 * 20.0) - t3 * 120.0) + t4 * 300.0) - t5 * 330.0) +
           t12) -
          t8 * ((eta * -40.888635805741352 + t2 * 5.90959878120213) +
                t3 * 25.71004800165041)) +
         sfvals_tmp * 27.94515152282553) -
        xi * ((((-(t4 * 402.41308973255758) + t3 * 314.05189411459918) +
                t5 * 174.96255654717311) +
               eta * 7.8309178815200067) -
              t2 * 94.432278810734729)) +
       -t7 * (((eta * 1.0891560510154761 + t2 * 95.3374496331251) -
               t3 * 262.41394336792268) +
              t4 * 192.26980409326529)) +
      -t9 * (eta * 59.913713396031412 - t2 * 19.54235106726771);
  sfvals[3] = ((t11 * -318.26366118956548 -
                t7 * ((((eta * -2126.5521690908822 + t2 * 5691.5703167977827) -
                        t3 * 6236.8526231368014) +
                       t4 * 2419.3032595968721) +
                      261.8707992013255)) +
               (-t9 * ((eta * -5350.6406228199066 + t2 * 4460.3083707889764) +
                       1426.72032006643) +
                (((((-(eta * 304.49665027054482) + t2 * 1141.6361977478321) +
                    t4 * 1587.486894854605) -
                   t3 * 1963.542534838411) -
                  t5 * 489.48706069932041) +
                 28.40315320583964) *
                    xi)) +
              (-t8 * (((eta * 5201.3465100136864 - t2 * 8939.9017782785813) +
                       t3 * 4734.4038523781319) -
                      891.5455952644437) +
               t10 * (1086.906031987038 - eta * 1973.9843784979621));
  sfvals[4] = (((t11 * 397.46366118956519 +
                 t8 * (((eta * 3511.6516811691158 - t2 * 4216.3381417735409) +
                        t3 * 1491.138497307996) -
                       851.53549091544346)) +
                (t10 * (eta * 1849.2360406211151 - 1285.566162567286) +
                 (((((eta * 33.146170823472389 + t2 * 95.786563892274785) +
                     t4 * 496.91579358048159) -
                    t5 * 186.87049888689819) -
                   t3 * 427.64005895823959) -
                  11.337970451091) *
                     xi)) +
               -t7 * ((((eta * 962.70797257455126 - t2 * 1398.3573743740949) +
                        t3 * 570.34559486998955) +
                       t4 * 65.599321536019715) -
                      195.40531622720391)) +
              t9 * ((eta * -4427.2259904129987 + t2 * 2821.6396993886669) +
                    1555.570646517051);
  sfvals[5] =
      (((t11 * -422.4 +
         (((((t5 * 67.049920417044234 + t3 * 341.47975924673273) +
             eta * 15.308617105477881) -
            t4 * 258.63728726483271) -
           t2 * 171.60100950442219) +
          6.4) *
             xi) +
        t7 * ((((eta * 142.63985809114291 + t2 * 716.6069760016245) -
                t3 * 1366.4501511265589) +
               t4 * 626.04964589651388) -
              121.6)) +
       t10 * (1267.2 - eta * 1264.857473405837)) +
      (t8 * (((eta * -1369.028298699777 + t2 * 60.653885924960747) +
              t3 * 664.76260425836449) +
             652.8) -
       t9 * ((eta * -2469.537296908994 + t2 * 736.69459462694283) + 1382.4));
  sfvals[6] = (((t11 * 397.46366118956553 +
                 t7 * ((((eta * 171.5842698898046 - t2 * 915.81040671231483) +
                         t3 * 964.48576526016518) -
                        t4 * 307.1360547601094) +
                       80.516014753801159)) +
                (-t9 * ((eta * 473.5202007198497 + t2 * 668.46704224842676) -
                        1089.6947515241011) -
                 xi * (((((eta * 28.710965498033829 - t4 * 159.68247127749851) +
                          t3 * 221.77642188268041) -
                         t2 * 141.85809805980611) +
                        t5 * 46.953252330436882) +
                       4.0999296261534823))) +
               -t8 * (((eta * 108.03888000113319 - t2 * 1593.392899974024) +
                       t3 * 981.20993026883707) +
                      464.358693271208)) +
              t10 * (eta * 450.02374678030321 - 1099.215804570106);
  sfvals[7] = (((t11 * -318.26366118956543 +
                 t10 * (eta * 91.631756200602354 + 822.6759351503548)) +
                -t9 * ((eta * 488.19728678162159 - t2 * 779.729361792409) +
                       766.14507797472311)) +
               (-t7 * ((((eta * 222.0728524357165 - t2 * 632.6609441490923) +
                         t3 * 568.18306259406961) -
                        t4 * 205.94582286947141) +
                       52.450531779679757) +
                (((((eta * 26.51376650840033 + t3 * 165.9093467782287) -
                    t4 * 147.23825609933891) +
                   t5 * 52.083581960252367) -
                  t2 * 99.903186018947324) +
                 2.6347468714048672) *
                    xi)) +
              t8 * (((eta * 563.72146330249586 - t2 * 1271.7142353002489) +
                     t3 * 523.69618531146034) +
                    311.54858892220858);
  sfvals[8] = ((-t7 * (((eta * 118.8376548633473 - t2 * 28.345003417177271) +
                        t3 * 101.711436911027) -
                       t4 * 121.9121479226683) +
                sfvals_tmp * 489.24198929358067) +
               ((((t5 * 26.924323352650731 + eta * 9.3323913491114059) -
                  t4 * 75.567574616293285) +
                 t3 * 56.5836681260871) -
                t2 * 14.638061340151079) *
                   xi) +
              (t8 * ((eta * 508.10749863123789 + t2 * 0.97144398299674339) -
                     t3 * 48.11444963028449) -
               t9 * (eta * 859.44107120474314 - t2 * 27.876053903713231));
  sfvals[9] = (((sfvals_tmp * 186.98087284999079 -
                 xi * ((((t2 * 9.1975389109998389 - eta * 4.8875816611612466) -
                         t4 * 46.955024097471743) +
                        t3 * 39.1432627136413) +
                       t5 * 7.60173376014533)) +
                t8 * ((eta * 308.79639725626782 - t2 * 916.86893104431749) +
                      t3 * 115.02119893913751)) +
               -t7 * (((eta * 74.365733369903012 - t2 * 219.6763440295922) -
                       t3 * 130.912305861572) +
                      t4 * 176.832758480062)) +
              -t9 * (eta * 437.6370888486079 - t2 * 868.69675769861055);
  sfvals[10] = ((sfvals_tmp * -67.181151820763091 -
                 t7 * (((eta * 28.4565391695202 - t2 * 441.41887241782882) +
                        t3 * 899.02524497874106) -
                       t4 * 355.08266616397981)) +
                ((((eta * 2.755793486476795 + t3 * 68.530774972163684) -
                   t5 * 33.676666676341057) -
                  t2 * 37.747288270741137) +
                 t4 * 6.53738648844172) *
                    xi) +
               (t9 * (eta * 76.86287632641627 + t2 * 290.840256625612) +
                t8 * ((eta * 22.419021177390221 - t2 * 831.466315891243) +
                      t3 * 1169.180741286696));
  sfvals[11] = (((-t9 * (eta * 75.239641525644572 + t2 * 72.448719715075626) +
                  sfvals_tmp * 47.043972335556589) +
                 ((((t5 * 162.806879381404 + t3 * 292.22837731396049) +
                    eta * 6.3620602507886579) -
                   t4 * 398.0491520444624) -
                  t2 * 74.686135352781747) *
                     xi) +
                -t7 * (((eta * 34.93634799092559 - t2 * 292.6195205713575) +
                        t3 * 1008.790867495405) -
                       t4 * 902.02572135845355)) +
               t8 * ((eta * 52.670027304071432 - t2 * 36.207908993342521) +
                     t3 * 222.26248873685211);
  sfvals[12] = (t9 * (eta * 113.1163199541253 - t2 * 54.194236994735761) -
                t8 * ((eta * 97.677286700767 - t2 * 196.60259039713881) +
                      t3 * 220.47958971946329)) +
               ((sfvals_tmp * -52.088438638009478 +
                 ((((eta * 4.1133803376950979 + t5 * 460.381080709891) +
                    t3 * 443.21920644494833) -
                   t4 * 787.1651298400883) -
                  t2 * 92.145384446606442) *
                     xi) +
                t7 * (((eta * 35.170771918361 - t2 * 129.26735003690669) +
                       t3 * 211.20726572806061) -
                      t4 * 76.256371842411554));
  sfvals[13] = ((((((eta * 2.6347468714048672 - t2 * 52.450531779679757) +
                    t3 * 311.54858892220858) -
                   t4 * 766.14507797472311) +
                  t5 * 822.6759351503548) +
                 (((t6 * -318.26366118956543 - sfvals_tmp * 26.77628360075342) +
                   ((((eta * 17.878792850430361 + t3 * 473.76420154410368) +
                      t5 * 64.321716470983645) -
                     t2 * 178.7353878410627) -
                    t4 * 405.63247623029469) *
                       xi) -
                  t8 * ((eta * 23.09514788883644 + t2 * 150.91109287086721) -
                        t3 * 267.22874438131828))) +
                t9 * (eta * 58.612665739426483 - t2 * 12.12472330575677)) +
               -t7 * (((eta * 29.254773971671838 - t2 * 384.87478199188268) +
                       t3 * 948.13247133140032) -
                      t4 * 635.16256174687067);
  sfvals[14] = (((((((eta * -4.0999296261534823 + t2 * 80.516014753801159) -
                     t3 * 464.358693271208) +
                    t4 * 1089.6947515241011) -
                   t5 * 1099.215804570106) +
                  t6 * 397.46366118956553) +
                 ((sfvals_tmp * 7.41462021463943 -
                   t8 * ((eta * 73.197007822663693 - t2 * 613.52313186381286) +
                         t3 * 747.17252661488453)) +
                  ((((t2 * 107.9874395319994 + t5 * 535.87148977383322) -
                     eta * 18.910549943948041) -
                    t4 * 677.88504573841328) +
                   t3 * 64.274636827619688) *
                      xi)) +
                t9 * (eta * 9.47362468185478 - t2 * 139.4421189147296)) +
               t7 * (((eta * 79.319242496271016 - t2 * 667.47995585366459) +
                      t3 * 1212.36886154986) -
                     t4 * 461.90795890124781);
  sfvals[15] = (((((((((eta * 6.4 - t2 * 121.6) + t3 * 652.8) - t4 * 1382.4) +
                     t5 * 1267.2) -
                    t6 * 422.4) +
                   t8 * ((eta * 242.53612432248579 - t2 * 1169.885999579705) +
                         t3 * 588.80195763913594)) +
                  sfvals_tmp * 33.818454135514941) +
                 ((((eta * 9.4202150784337917 + t4 * 2481.5175700959971) +
                    t2 * 162.6977629709159) -
                   t5 * 1269.6544031253759) -
                  t3 * 1390.381145019971) *
                     xi) +
                -t7 * (((eta * 129.913545491676 - t2 * 602.06182938326151) -
                        t3 * 139.53146096320941) +
                       t4 * 748.609174137333)) +
               -t9 * (eta * 162.2612480447585 - t2 * 523.97518278660766);
  sfvals[16] = ((((((eta * -11.337970451091 + t2 * 195.40531622720391) -
                    t3 * 851.53549091544346) +
                   t4 * 1555.570646517051) -
                  t5 * 1285.566162567286) +
                 t6 * 397.46366118956519) +
                ((-t8 * ((eta * 328.48893361829357 + t2 * 933.8266445755944) -
                         t3 * 1756.4017601639659) -
                  sfvals_tmp * 162.89925189390149) +
                 ((((eta * 44.4405399553986 + t3 * 3724.4126339525992) +
                    t5 * 1934.89572652599) -
                   t4 * 4651.546752059764) -
                  t2 * 1048.10221874807) *
                     xi)) +
               (t9 * (eta * 416.29260485837949 + t2 * 87.402766727737912) +
                t7 * (((eta * 41.993011149508021 + t2 * 1692.754701732267) -
                       t3 * 4669.0299058063783) +
                      t4 * 3043.531806878751));
  sfvals[17] = ((((((eta * 28.40315320583964 - t2 * 261.8707992013255) +
                    t3 * 891.5455952644437) -
                   t4 * 1426.72032006643) +
                  t5 * 1086.906031987038) -
                 t6 * 318.26366118956548) +
                (t9 * (eta * 1514.8759295076841 - t2 * 2378.1250679212621) +
                 t7 * (((eta * 1118.30704053725 - t2 * 5647.7633947387139) +
                        t3 * 8903.7884722687122) -
                       t4 * 4453.3177955953242))) +
               ((sfvals_tmp * -460.446691245608 -
                 xi * ((((eta * 302.70923892207122 + t5 * 2001.5073297428451) -
                         t4 * 5405.3039212896383) +
                        t3 * 5234.9618078377589) -
                       t2 * 2131.2397083416322)) -
                t8 * ((eta * 1898.430193083095 - t2 * 6152.4040782255106) +
                      t3 * 4687.7525037176983));
  sfvals[18] = (((sfvals_tmp * 1504.798114366019 +
                  t8 * ((eta * 5059.52119083203 - t2 * 14115.190069450529) +
                        t3 * 9477.8913023834575)) +
                 ((((eta * 417.5743736558706 + t5 * 1569.164123179256) +
                    t3 * 5178.6824996335) -
                   t4 * 4715.8530413037424) -
                  t2 * 2449.567955164885) *
                     xi) +
                -t9 * (eta * 4566.4032443502329 - t2 * 6251.18040640343)) +
               -t7 * (((eta * 2415.4904345036871 - t2 * 10337.112289785729) +
                       t3 * 14185.400575899441) -
                      t4 * 6300.6731335253025);
  sfvals[19] = (((sfvals_tmp * -2386.8473873811372 +
                  ((((t2 * 669.73023948548462 - eta * 182.059089406699) +
                     t4 * 290.55416948275808) -
                    t3 * 791.18408712728) +
                   t5 * 12.95876756573632) *
                      xi) +
                 t9 * (eta * 6433.7315289940252 - t2 * 7432.1719356297872)) +
                -t8 * ((eta * 5957.1530083308062 - t2 * 13605.3693263397) +
                       t3 * 7550.9868976793)) +
               t7 * (((eta * 2092.3279561246159 - t2 * 6911.1006532748606) +
                      t3 * 7322.3359229573034) -
                     t4 * 2492.7035818649142);
  sfvals[20] = (((sfvals_tmp * 2295.397800510586 +
                  ((((eta * 84.258054549746035 + t3 * 145.5527138572009) +
                     t5 * 38.684675494216428) -
                    t2 * 190.779911884214) -
                   t4 * 77.715532016949439) *
                      xi) +
                 t8 * ((eta * 4073.9253500606692 - t2 * 6476.1737985991431) +
                       t3 * 2323.8471110956539)) +
                -t7 * (((eta * 1090.76434478091 - t2 * 2139.9824243421549) +
                        t3 * 1008.031782401796) +
                       t4 * 19.268675403243972)) +
               -t9 * (eta * 5362.8168603400909 - t2 * 4677.1982625037008);
  sfvals[21] =
      ((t7 * (((eta * 482.92090936997317 - t2 * 435.21056088076227) +
               t3 * 45.406667433405772) -
              t4 * 69.636693146959658) -
        sfvals_tmp * 1569.2125426203829) -
       xi * ((((-(t2 * 60.696287970998362) + eta * 36.882275988453422) +
               t5 * 79.310916689679487) -
              t4 * 169.0338921491076) +
             t3 * 113.5369874419731)) +
      (t9 * (eta * 3130.001232709682 - t2 * 1545.1246097152639) +
       t8 * ((eta * -2006.8273234708181 + t2 * 1502.0586727008781) +
             t3 * 33.762156447838187));
  sfvals[22] = (((t9 * (eta * 354.62110245394359 - t2 * 2557.7642640870922) -
                  sfvals_tmp * 12.547976471478879) +
                 ((((t5 * 140.29565842386609 + t3 * 97.3298473256452) -
                    t4 * 298.57250692376459) +
                   t2 * 71.795565093397485) -
                  eta * 10.84856391914418) *
                     xi) +
                -t8 * ((eta * 500.261321506592 - t2 * 4070.8653700289451) +
                       t3 * 2550.54826184201)) +
               t7 * (((eta * 169.03675944327151 - t2 * 1402.7111531292469) +
                      t3 * 1030.631082157365) +
                     t4 * 134.96368419746969);
  sfvals[23] =
      (((sfvals_tmp * -38.687920089656338 -
         t8 * ((eta * 221.2570953359365 - t2 * 1546.55028929769) +
               t3 * 2787.054632972347)) -
        xi * ((((-(t4 * 719.10722942476241) + eta * 21.92972433940859) +
                t3 * 758.35388915820363) -
               t2 * 245.08597510125321) +
              t5 * 183.90959102840341)) +
       t9 * (eta * 115.5288302152458 - t2 * 211.84987403523311)) +
      t7 * (((eta * 166.34590954975559 - t2 * 1664.1198611987161) +
             t3 * 4445.6377426496529) -
            t4 * 2797.8022700551728);
  sfvals[24] = (t8 * ((eta * 229.84989620136429 - t2 * 675.06151480760582) +
                      t3 * 479.70477647492282) +
                ((-t7 * (((eta * 58.54816259526374 + t2 * 26.339917216669949) -
                          t3 * 938.7905779509972) +
                         t4 * 1271.4571871213459) +
                  sfvals_tmp * 79.119987275028308) -
                 xi * ((((eta * 23.516487010876968 - t4 * 2956.4606554304009) +
                         t3 * 1840.9795268693249) +
                        t5 * 1504.3376533282119) -
                       t2 * 412.37301177801311))) +
               -t9 * (eta * 226.90523387025189 - t2 * 325.944297543085);
  sfvals[25] = (-t7 * (((eta * 25.247270779987058 - t2 * 1582.928065171551) +
                        t3 * 5876.8988032603966) -
                       t4 * 4501.34752406983) +
                ((t9 * (eta * 401.51489559670381 - t2 * 564.88200929555671) -
                  sfvals_tmp * 139.79772449389509) +
                 ((((eta * 68.152697075135762 - t2 * 1045.089181601204) +
                    t3 * 4090.6118659473382) +
                   t5 * 2387.0211091713331) -
                  t4 * 5500.6964905926015) *
                     xi)) +
               t8 * ((eta * -304.62259739795729 + t2 * 37.90444896383945) +
                     t3 * 1689.2421300968349);
  sfvals[26] = ((sfvals_tmp * 183.2642611498967 -
                 xi * ((((eta * 150.17123941190181 - t2 * 1907.793278255001) +
                         t5 * 2295.4185842957609) -
                        t4 * 6113.9900306802529) +
                       t3 * 5576.1934852275908)) -
                t8 * ((eta * 280.84583306587871 - t2 * 5947.9869096794291) +
                      t3 * 6567.0919958623244)) +
               (t7 * (((eta * 446.34929059689892 - t2 * 5953.4823186098947) +
                       t3 * 12221.708771611869) -
                      t4 * 6798.8736809413358) -
                t9 * (eta * 198.596479269015 + t2 * 1880.372638066852));
  sfvals[27] = (-t7 * (((eta * 556.717168759509 - t2 * 4628.184680401022) +
                        t3 * 7094.0430797010067) -
                       t4 * 2972.1829916094239) +
                ((t8 * ((eta * 1148.8614334396241 - t2 * 7912.3728004338982) +
                        t3 * 6626.8830047092952) +
                  sfvals_tmp * 136.09357220905909) -
                 xi * ((((-(eta * 50.3586386881329) + t5 * 136.619649204777) -
                         t3 * 603.48752287533682) +
                        t2 * 420.39525584722122) +
                       t4 * 96.831256511471608))) +
               -t9 * (eta * 778.59647557730659 - t2 * 3654.1739361041532);
}

// tri_leb_28_sfunc - Compute shape functions and their derivatives of
void tri_leb_28_sfunc(double xi, double eta, double sfvals[28],
                      double sdvals[56])
{
  double sfvals_tmp;
  double t10;
  double t100;
  double t103;
  double t109;
  double t11;
  double t117;
  double t12;
  double t123;
  double t127;
  double t128;
  double t13;
  double t130;
  double t131;
  double t133;
  double t134;
  double t137;
  double t139;
  double t14;
  double t143;
  double t15;
  double t157;
  double t159;
  double t16;
  double t165;
  double t167;
  double t174;
  double t179;
  double t184;
  double t189;
  double t19;
  double t192;
  double t2;
  double t200;
  double t210;
  double t22;
  double t224;
  double t225;
  double t226;
  double t228;
  double t23;
  double t230;
  double t232;
  double t234;
  double t236;
  double t237;
  double t238;
  double t239;
  double t24;
  double t241;
  double t242;
  double t245;
  double t246;
  double t247;
  double t249;
  double t25;
  double t250;
  double t26;
  double t28;
  double t29;
  double t3;
  double t33;
  double t37;
  double t39;
  double t4;
  double t45;
  double t46;
  double t49;
  double t5;
  double t52;
  double t58;
  double t6;
  double t66;
  double t69;
  double t7;
  double t70;
  double t71;
  double t72;
  double t77;
  double t79;
  double t8;
  double t88;
  double t9;
  t2 = eta * eta;
  t3 = std::pow(eta, 3.0);
  t5 = std::pow(eta, 5.0);
  t7 = xi * xi;
  t8 = std::pow(xi, 3.0);
  t10 = std::pow(xi, 5.0);
  t16 = eta * 23.516487010876968;
  t23 = eta * 150.17123941190181;
  t24 = eta * 302.70923892207122;
  t25 = eta * 36.882275988453422;
  t46 = eta * 21.92972433940859;
  t72 = eta * 28.710965498033829;
  t79 = eta * 50.3586386881329;
  t127 = eta * 12.709966379110771;
  t157 = eta * 7.8309178815200067;
  t159 = eta * 4.8875816611612466;
  t4 = t2 * t2;
  t6 = std::pow(t2, 3.0);
  t9 = t7 * t7;
  t11 = std::pow(t7, 3.0);
  t14 = t5 * 792.0;
  t15 = t10 * 792.0;
  t22 = t2 * 60.696287970998362;
  t28 = t3 * 314.05189411459918;
  t37 = t5 * 2001.5073297428451;
  t45 = t3 * 1840.9795268693249;
  t49 = t3 * 5234.9618078377589;
  t52 = t2 * 1907.793278255001;
  t58 = t2 * 9.1975389109998389;
  t66 = t5 * 2295.4185842957609;
  t69 = t2 * 2131.2397083416322;
  t70 = t3 * 758.35388915820363;
  t77 = t3 * 5576.1934852275908;
  t88 = t5 * 1504.3376533282119;
  t100 = t3 * 80.686155096060446;
  t103 = t5 * 79.310916689679487;
  t109 = t2 * 245.08597510125321;
  t117 = t5 * 136.619649204777;
  t123 = t5 * 174.96255654717311;
  t128 = t5 * 183.90959102840341;
  t133 = t3 * 603.48752287533682;
  t134 = t3 * 221.77642188268041;
  t137 = t2 * 420.39525584722122;
  t139 = t3 * 113.5369874419731;
  t143 = t2 * 141.85809805980611;
  t165 = t2 * 412.37301177801311;
  t167 = t5 * 27.99923595861377;
  t179 = t5 * 46.953252330436882;
  t189 = t3 * 39.1432627136413;
  t192 = t2 * 94.432278810734729;
  t200 = t2 * 41.501563344417733;
  t210 = t5 * 7.60173376014533;
  t12 = t6 * 132.0;
  t13 = t11 * 132.0;
  t19 = t4 * 402.41308973255758;
  t26 = t4 * 79.893794089367248;
  t29 = t4 * 2956.4606554304009;
  t33 = t4 * 719.10722942476241;
  t39 = t4 * 5405.3039212896383;
  t71 = t4 * 6113.9900306802529;
  t130 = t4 * 159.68247127749851;
  t131 = t4 * 169.0338921491076;
  t174 = t4 * 46.955024097471743;
  t184 = t4 * 96.831256511471608;
  t230 = (((eta * 9.4202150784337917 + t4 * 2481.5175700959971) +
           t2 * 162.6977629709159) -
          t5 * 1269.6544031253759) -
         t3 * 1390.381145019971;
  t234 = (((t2 * 669.73023948548462 - eta * 182.059089406699) +
           t4 * 290.55416948275808) -
          t3 * 791.18408712728) +
         t5 * 12.95876756573632;
  t246 = (((eta * 2.755793486476795 + t3 * 68.530774972163684) -
           t5 * 33.676666676341057) -
          t2 * 37.747288270741137) +
         t4 * 6.53738648844172;
  t247 = ((((-(eta * 304.49665027054482) + t2 * 1141.6361977478321) +
            t4 * 1587.486894854605) -
           t3 * 1963.542534838411) -
          t5 * 489.48706069932041) +
         28.40315320583964;
  t249 = ((((eta * 33.146170823472389 + t2 * 95.786563892274785) +
            t4 * 496.91579358048159) -
           t5 * 186.87049888689819) -
          t3 * 427.64005895823959) -
         11.337970451091;
  t224 = (((eta * 68.152697075135762 - t2 * 1045.089181601204) +
           t3 * 4090.6118659473382) +
          t5 * 2387.0211091713331) -
         t4 * 5500.6964905926015;
  t225 = (((eta * 417.5743736558706 + t5 * 1569.164123179256) +
           t3 * 5178.6824996335) -
          t4 * 4715.8530413037424) -
         t2 * 2449.567955164885;
  t226 = (((t2 * 107.9874395319994 + t5 * 535.87148977383322) -
           eta * 18.910549943948041) -
          t4 * 677.88504573841328) +
         t3 * 64.274636827619688;
  t228 = (((eta * 44.4405399553986 + t3 * 3724.4126339525992) +
           t5 * 1934.89572652599) -
          t4 * 4651.546752059764) -
         t2 * 1048.10221874807;
  t232 = ((((eta * 306.27259559598082 + t3 * 3006.3642014402708) +
            t5 * 985.8500798475261) -
           t2 * 1452.025455452454) -
          t4 * 2824.4614214313242) -
         21.0;
  t236 = (((eta * 4.1133803376950979 + t5 * 460.381080709891) +
           t3 * 443.21920644494833) -
          t4 * 787.1651298400883) -
         t2 * 92.145384446606442;
  t237 = (((eta * 17.878792850430361 + t3 * 473.76420154410368) +
           t5 * 64.321716470983645) -
          t2 * 178.7353878410627) -
         t4 * 405.63247623029469;
  t238 = (((t5 * 140.29565842386609 + t3 * 97.3298473256452) -
           t4 * 298.57250692376459) +
          t2 * 71.795565093397485) -
         eta * 10.84856391914418;
  t239 = (((t5 * 162.806879381404 + t3 * 292.22837731396049) +
           eta * 6.3620602507886579) -
          t4 * 398.0491520444624) -
         t2 * 74.686135352781747;
  t241 = (((t5 * 26.924323352650731 + eta * 9.3323913491114059) -
           t4 * 75.567574616293285) +
          t3 * 56.5836681260871) -
         t2 * 14.638061340151079;
  t242 = (((eta * 84.258054549746035 + t3 * 145.5527138572009) +
           t5 * 38.684675494216428) -
          t2 * 190.779911884214) -
         t4 * 77.715532016949439;
  t245 = ((((t5 * 67.049920417044234 + t3 * 341.47975924673273) +
            eta * 15.308617105477881) -
           t4 * 258.63728726483271) -
          t2 * 171.60100950442219) +
         6.4;
  t250 = ((((eta * 26.51376650840033 + t3 * 165.9093467782287) -
            t4 * 147.23825609933891) +
           t5 * 52.083581960252367) -
          t2 * 99.903186018947324) +
         2.6347468714048672;
  sfvals[0] =
      ((((((((eta * -21.0 + t2 * 140.0) - t3 * 420.0) + t4 * 630.0) -
           t5 * 462.0) +
          t12) +
         t13) +
        t9 * ((eta * -2782.524522362035 + t2 * 2662.5483632534661) + 630.0)) +
       (t7 * ((((eta * -1442.8597841751589 + t2 * 4680.0498986318889) -
                t3 * 6016.7023975761022) +
               t4 * 2672.2312856435919) +
              140.0) +
        t232 * xi)) +
      ((t8 * (((eta * 2974.088898167463 - t2 * 6002.7371102642364) +
               t3 * 3645.90675627578) -
              420.0) +
        t10 * (eta * 967.02281277375164 - 462.0)) +
       1.0);
  sfvals[1] = ((t13 + t9 * ((eta * 454.469525936803 - t2 * 276.77749045276732) +
                            300.0)) +
               (t7 * ((((eta * 118.71455325510711 - t2 * 237.440368317872) +
                        t3 * 246.67391105541731) -
                       t4 * 120.1344044067089) +
                      20.0) -
                xi * (((((-t26 + t100) + t127) + t167) - t200) + 1.0))) +
              (-t8 * (((eta * 366.768180733714 - t2 * 446.47933670796817) +
                       t3 * 175.2067268217771) +
                      120.0) -
               t10 * (eta * 193.70593207908539 + 330.0));
  sfvals_tmp = eta * t10;
  sfvals[2] =
      (((((((((-eta + t2 * 20.0) - t3 * 120.0) + t4 * 300.0) - t5 * 330.0) +
           t12) -
          t8 * ((eta * -40.888635805741352 + t2 * 5.90959878120213) +
                t3 * 25.71004800165041)) +
         sfvals_tmp * 27.94515152282553) -
        xi * ((((-t19 + t28) + t123) + t157) - t192)) +
       -t7 * (((eta * 1.0891560510154761 + t2 * 95.3374496331251) -
               t3 * 262.41394336792268) +
              t4 * 192.26980409326529)) +
      -t9 * (eta * 59.913713396031412 - t2 * 19.54235106726771);
  sfvals[3] = ((t11 * -318.26366118956548 -
                t7 * ((((eta * -2126.5521690908822 + t2 * 5691.5703167977827) -
                        t3 * 6236.8526231368014) +
                       t4 * 2419.3032595968721) +
                      261.8707992013255)) +
               (-t9 * ((eta * -5350.6406228199066 + t2 * 4460.3083707889764) +
                       1426.72032006643) +
                t247 * xi)) +
              (-t8 * (((eta * 5201.3465100136864 - t2 * 8939.9017782785813) +
                       t3 * 4734.4038523781319) -
                      891.5455952644437) +
               t10 * (1086.906031987038 - eta * 1973.9843784979621));
  sfvals[4] =
      (((t11 * 397.46366118956519 +
         t8 * (((eta * 3511.6516811691158 - t2 * 4216.3381417735409) +
                t3 * 1491.138497307996) -
               851.53549091544346)) +
        (t10 * (eta * 1849.2360406211151 - 1285.566162567286) + t249 * xi)) +
       -t7 * ((((eta * 962.70797257455126 - t2 * 1398.3573743740949) +
                t3 * 570.34559486998955) +
               t4 * 65.599321536019715) -
              195.40531622720391)) +
      t9 * ((eta * -4427.2259904129987 + t2 * 2821.6396993886669) +
            1555.570646517051);
  sfvals[5] =
      (((t11 * -422.4 + t245 * xi) +
        t7 * ((((eta * 142.63985809114291 + t2 * 716.6069760016245) -
                t3 * 1366.4501511265589) +
               t4 * 626.04964589651388) -
              121.6)) +
       t10 * (1267.2 - eta * 1264.857473405837)) +
      (t8 * (((eta * -1369.028298699777 + t2 * 60.653885924960747) +
              t3 * 664.76260425836449) +
             652.8) -
       t9 * ((eta * -2469.537296908994 + t2 * 736.69459462694283) + 1382.4));
  sfvals[6] =
      (((t11 * 397.46366118956553 +
         t7 * ((((eta * 171.5842698898046 - t2 * 915.81040671231483) +
                 t3 * 964.48576526016518) -
                t4 * 307.1360547601094) +
               80.516014753801159)) +
        (-t9 * ((eta * 473.5202007198497 + t2 * 668.46704224842676) -
                1089.6947515241011) -
         xi * (((((t72 - t130) + t134) - t143) + t179) + 4.0999296261534823))) +
       -t8 * (((eta * 108.03888000113319 - t2 * 1593.392899974024) +
               t3 * 981.20993026883707) +
              464.358693271208)) +
      t10 * (eta * 450.02374678030321 - 1099.215804570106);
  sfvals[7] = (((t11 * -318.26366118956543 +
                 t10 * (eta * 91.631756200602354 + 822.6759351503548)) +
                -t9 * ((eta * 488.19728678162159 - t2 * 779.729361792409) +
                       766.14507797472311)) +
               (-t7 * ((((eta * 222.0728524357165 - t2 * 632.6609441490923) +
                         t3 * 568.18306259406961) -
                        t4 * 205.94582286947141) +
                       52.450531779679757) +
                t250 * xi)) +
              t8 * (((eta * 563.72146330249586 - t2 * 1271.7142353002489) +
                     t3 * 523.69618531146034) +
                    311.54858892220858);
  sfvals[8] = ((-t7 * (((eta * 118.8376548633473 - t2 * 28.345003417177271) +
                        t3 * 101.711436911027) -
                       t4 * 121.9121479226683) +
                sfvals_tmp * 489.24198929358067) +
               t241 * xi) +
              (t8 * ((eta * 508.10749863123789 + t2 * 0.97144398299674339) -
                     t3 * 48.11444963028449) -
               t9 * (eta * 859.44107120474314 - t2 * 27.876053903713231));
  sfvals[9] = (((sfvals_tmp * 186.98087284999079 -
                 xi * ((((t58 - t159) - t174) + t189) + t210)) +
                t8 * ((eta * 308.79639725626782 - t2 * 916.86893104431749) +
                      t3 * 115.02119893913751)) +
               -t7 * (((eta * 74.365733369903012 - t2 * 219.6763440295922) -
                       t3 * 130.912305861572) +
                      t4 * 176.832758480062)) +
              -t9 * (eta * 437.6370888486079 - t2 * 868.69675769861055);
  sfvals[10] = ((sfvals_tmp * -67.181151820763091 -
                 t7 * (((eta * 28.4565391695202 - t2 * 441.41887241782882) +
                        t3 * 899.02524497874106) -
                       t4 * 355.08266616397981)) +
                t246 * xi) +
               (t9 * (eta * 76.86287632641627 + t2 * 290.840256625612) +
                t8 * ((eta * 22.419021177390221 - t2 * 831.466315891243) +
                      t3 * 1169.180741286696));
  sfvals[11] = (((-t9 * (eta * 75.239641525644572 + t2 * 72.448719715075626) +
                  sfvals_tmp * 47.043972335556589) +
                 t239 * xi) +
                -t7 * (((eta * 34.93634799092559 - t2 * 292.6195205713575) +
                        t3 * 1008.790867495405) -
                       t4 * 902.02572135845355)) +
               t8 * ((eta * 52.670027304071432 - t2 * 36.207908993342521) +
                     t3 * 222.26248873685211);
  sfvals[12] = (t9 * (eta * 113.1163199541253 - t2 * 54.194236994735761) -
                t8 * ((eta * 97.677286700767 - t2 * 196.60259039713881) +
                      t3 * 220.47958971946329)) +
               ((sfvals_tmp * -52.088438638009478 + t236 * xi) +
                t7 * (((eta * 35.170771918361 - t2 * 129.26735003690669) +
                       t3 * 211.20726572806061) -
                      t4 * 76.256371842411554));
  sfvals[13] = ((((((eta * 2.6347468714048672 - t2 * 52.450531779679757) +
                    t3 * 311.54858892220858) -
                   t4 * 766.14507797472311) +
                  t5 * 822.6759351503548) +
                 (((t6 * -318.26366118956543 - sfvals_tmp * 26.77628360075342) +
                   t237 * xi) -
                  t8 * ((eta * 23.09514788883644 + t2 * 150.91109287086721) -
                        t3 * 267.22874438131828))) +
                t9 * (eta * 58.612665739426483 - t2 * 12.12472330575677)) +
               -t7 * (((eta * 29.254773971671838 - t2 * 384.87478199188268) +
                       t3 * 948.13247133140032) -
                      t4 * 635.16256174687067);
  sfvals[14] = (((((((eta * -4.0999296261534823 + t2 * 80.516014753801159) -
                     t3 * 464.358693271208) +
                    t4 * 1089.6947515241011) -
                   t5 * 1099.215804570106) +
                  t6 * 397.46366118956553) +
                 ((sfvals_tmp * 7.41462021463943 -
                   t8 * ((eta * 73.197007822663693 - t2 * 613.52313186381286) +
                         t3 * 747.17252661488453)) +
                  t226 * xi)) +
                t9 * (eta * 9.47362468185478 - t2 * 139.4421189147296)) +
               t7 * (((eta * 79.319242496271016 - t2 * 667.47995585366459) +
                      t3 * 1212.36886154986) -
                     t4 * 461.90795890124781);
  sfvals[15] = (((((((((eta * 6.4 - t2 * 121.6) + t3 * 652.8) - t4 * 1382.4) +
                     t5 * 1267.2) -
                    t6 * 422.4) +
                   t8 * ((eta * 242.53612432248579 - t2 * 1169.885999579705) +
                         t3 * 588.80195763913594)) +
                  sfvals_tmp * 33.818454135514941) +
                 t230 * xi) +
                -t7 * (((eta * 129.913545491676 - t2 * 602.06182938326151) -
                        t3 * 139.53146096320941) +
                       t4 * 748.609174137333)) +
               -t9 * (eta * 162.2612480447585 - t2 * 523.97518278660766);
  sfvals[16] = ((((((eta * -11.337970451091 + t2 * 195.40531622720391) -
                    t3 * 851.53549091544346) +
                   t4 * 1555.570646517051) -
                  t5 * 1285.566162567286) +
                 t6 * 397.46366118956519) +
                ((-t8 * ((eta * 328.48893361829357 + t2 * 933.8266445755944) -
                         t3 * 1756.4017601639659) -
                  sfvals_tmp * 162.89925189390149) +
                 t228 * xi)) +
               (t9 * (eta * 416.29260485837949 + t2 * 87.402766727737912) +
                t7 * (((eta * 41.993011149508021 + t2 * 1692.754701732267) -
                       t3 * 4669.0299058063783) +
                      t4 * 3043.531806878751));
  sfvals[17] = ((((((eta * 28.40315320583964 - t2 * 261.8707992013255) +
                    t3 * 891.5455952644437) -
                   t4 * 1426.72032006643) +
                  t5 * 1086.906031987038) -
                 t6 * 318.26366118956548) +
                (t9 * (eta * 1514.8759295076841 - t2 * 2378.1250679212621) +
                 t7 * (((eta * 1118.30704053725 - t2 * 5647.7633947387139) +
                        t3 * 8903.7884722687122) -
                       t4 * 4453.3177955953242))) +
               ((sfvals_tmp * -460.446691245608 -
                 xi * ((((t24 + t37) - t39) + t49) - t69)) -
                t8 * ((eta * 1898.430193083095 - t2 * 6152.4040782255106) +
                      t3 * 4687.7525037176983));
  sfvals[18] = (((sfvals_tmp * 1504.798114366019 +
                  t8 * ((eta * 5059.52119083203 - t2 * 14115.190069450529) +
                        t3 * 9477.8913023834575)) +
                 t225 * xi) +
                -t9 * (eta * 4566.4032443502329 - t2 * 6251.18040640343)) +
               -t7 * (((eta * 2415.4904345036871 - t2 * 10337.112289785729) +
                       t3 * 14185.400575899441) -
                      t4 * 6300.6731335253025);
  sfvals[19] = (((sfvals_tmp * -2386.8473873811372 + t234 * xi) +
                 t9 * (eta * 6433.7315289940252 - t2 * 7432.1719356297872)) +
                -t8 * ((eta * 5957.1530083308062 - t2 * 13605.3693263397) +
                       t3 * 7550.9868976793)) +
               t7 * (((eta * 2092.3279561246159 - t2 * 6911.1006532748606) +
                      t3 * 7322.3359229573034) -
                     t4 * 2492.7035818649142);
  sfvals[20] = (((sfvals_tmp * 2295.397800510586 + t242 * xi) +
                 t8 * ((eta * 4073.9253500606692 - t2 * 6476.1737985991431) +
                       t3 * 2323.8471110956539)) +
                -t7 * (((eta * 1090.76434478091 - t2 * 2139.9824243421549) +
                        t3 * 1008.031782401796) +
                       t4 * 19.268675403243972)) +
               -t9 * (eta * 5362.8168603400909 - t2 * 4677.1982625037008);
  sfvals[21] = ((t7 * (((eta * 482.92090936997317 - t2 * 435.21056088076227) +
                        t3 * 45.406667433405772) -
                       t4 * 69.636693146959658) -
                 sfvals_tmp * 1569.2125426203829) -
                xi * ((((-t22 + t25) + t103) - t131) + t139)) +
               (t9 * (eta * 3130.001232709682 - t2 * 1545.1246097152639) +
                t8 * ((eta * -2006.8273234708181 + t2 * 1502.0586727008781) +
                      t3 * 33.762156447838187));
  sfvals[22] = (((t9 * (eta * 354.62110245394359 - t2 * 2557.7642640870922) -
                  sfvals_tmp * 12.547976471478879) +
                 t238 * xi) +
                -t8 * ((eta * 500.261321506592 - t2 * 4070.8653700289451) +
                       t3 * 2550.54826184201)) +
               t7 * (((eta * 169.03675944327151 - t2 * 1402.7111531292469) +
                      t3 * 1030.631082157365) +
                     t4 * 134.96368419746969);
  sfvals[23] = (((sfvals_tmp * -38.687920089656338 -
                  t8 * ((eta * 221.2570953359365 - t2 * 1546.55028929769) +
                        t3 * 2787.054632972347)) -
                 xi * ((((-t33 + t46) + t70) - t109) + t128)) +
                t9 * (eta * 115.5288302152458 - t2 * 211.84987403523311)) +
               t7 * (((eta * 166.34590954975559 - t2 * 1664.1198611987161) +
                      t3 * 4445.6377426496529) -
                     t4 * 2797.8022700551728);
  sfvals[24] = (t8 * ((eta * 229.84989620136429 - t2 * 675.06151480760582) +
                      t3 * 479.70477647492282) +
                ((-t7 * (((eta * 58.54816259526374 + t2 * 26.339917216669949) -
                          t3 * 938.7905779509972) +
                         t4 * 1271.4571871213459) +
                  sfvals_tmp * 79.119987275028308) -
                 xi * ((((t16 - t29) + t45) + t88) - t165))) +
               -t9 * (eta * 226.90523387025189 - t2 * 325.944297543085);
  sfvals[25] = (-t7 * (((eta * 25.247270779987058 - t2 * 1582.928065171551) +
                        t3 * 5876.8988032603966) -
                       t4 * 4501.34752406983) +
                ((t9 * (eta * 401.51489559670381 - t2 * 564.88200929555671) -
                  sfvals_tmp * 139.79772449389509) +
                 t224 * xi)) +
               t8 * ((eta * -304.62259739795729 + t2 * 37.90444896383945) +
                     t3 * 1689.2421300968349);
  sfvals[26] = ((sfvals_tmp * 183.2642611498967 -
                 xi * ((((t23 - t52) + t66) - t71) + t77)) -
                t8 * ((eta * 280.84583306587871 - t2 * 5947.9869096794291) +
                      t3 * 6567.0919958623244)) +
               (t7 * (((eta * 446.34929059689892 - t2 * 5953.4823186098947) +
                       t3 * 12221.708771611869) -
                      t4 * 6798.8736809413358) -
                t9 * (eta * 198.596479269015 + t2 * 1880.372638066852));
  sfvals[27] = (-t7 * (((eta * 556.717168759509 - t2 * 4628.184680401022) +
                        t3 * 7094.0430797010067) -
                       t4 * 2972.1829916094239) +
                ((t8 * ((eta * 1148.8614334396241 - t2 * 7912.3728004338982) +
                        t3 * 6626.8830047092952) +
                  sfvals_tmp * 136.09357220905909) -
                 xi * ((((-t79 + t117) - t133) + t137) + t184))) +
               -t9 * (eta * 778.59647557730659 - t2 * 3654.1739361041532);
  sdvals[0] =
      ((((t15 + t232) +
         t8 * ((eta * -11130.09808944814 + t2 * 10650.193453013861) + 2520.0)) +
        t9 * (eta * 4835.1140638687584 - 2310.0)) +
       xi * ((((eta * -2885.7195683503178 + t2 * 9360.0997972637779) -
               t3 * 12033.4047951522) +
              t4 * 5344.4625712871839) +
             280.0)) +
      t7 * (((eta * 8922.2666945023866 - t2 * 18008.21133079271) +
             t3 * 10937.720268827339) -
            1260.0);
  sdvals[1] = (((((((eta * 280.0 - t2 * 1260.0) + t3 * 2520.0) - t4 * 2310.0) +
                  t10 * 967.02281277375164) +
                 t14) +
                xi * ((((eta * -2904.0509109049081 + t2 * 9019.0926043208128) -
                        t3 * 11297.84568572529) +
                       t4 * 4929.2503992376314) +
                      306.27259559598082)) +
               (t7 * (((eta * 9360.0997972637779 - t2 * 18050.1071927283) +
                       t3 * 10688.92514257437) -
                      1442.8597841751589) +
                t9 * (eta * 5325.0967265069312 - 2782.524522362035))) +
              (t8 * ((eta * -12005.474220528469 + t2 * 10937.720268827339) +
                     2974.088898167463) -
               21.0);
  sdvals[2] =
      (((t15 + (((((t26 - t100) - t127) + t200) - t167) - 1.0)) +
        t8 * ((eta * 1817.878103747212 - t2 * 1107.1099618110691) + 1200.0)) +
       (xi * ((((eta * 237.4291065102143 - t2 * 474.880736635744) +
                t3 * 493.34782211083473) -
               t4 * 240.26880881341779) +
              40.0) -
        t9 * (eta * 968.52966039542684 + 1650.0))) +
      -t7 * (((eta * 1100.3045422011421 - t2 * 1339.4380101239051) +
              t3 * 525.62018046533126) +
             360.0);
  sdvals[3] = (((t10 * -193.70593207908539 -
                 t7 * (((eta * 474.880736635744 - t2 * 740.02173316625192) +
                        t3 * 480.53761762683558) -
                       118.71455325510711)) +
                t9 * (454.469525936803 - eta * 553.55498090553465)) +
               -xi * ((((eta * -83.003126688835465 + t2 * 242.05846528818131) -
                        t3 * 319.575176357469) +
                       t4 * 139.99617979306879) +
                      12.709966379110771)) +
              -t8 * ((eta * -892.95867341593646 + t2 * 525.62018046533126) +
                     366.768180733714);
  sfvals_tmp = eta * t9;
  sdvals[4] = ((((((t19 - t28) - t123) + t192) - t157) +
                sfvals_tmp * 139.72575761412759) -
               xi * (((eta * 2.1783121020309522 + t2 * 190.67489926625021) -
                      t3 * 524.82788673584548) +
                     t4 * 384.5396081865307)) +
              (-t7 * ((eta * -122.6659074172241 + t2 * 17.72879634360639) +
                      t3 * 77.130144004951234) -
               t8 * (eta * 239.65485358412559 - t2 * 78.169404269070824));
  sdvals[5] = (((((((eta * 40.0 - t2 * 360.0) + t3 * 1200.0) - t4 * 1650.0) +
                  t10 * 27.94515152282553) +
                 t14) +
                -xi * ((((eta * -188.86455762146949 + t2 * 942.15568234379771) -
                         t3 * 1609.652358930231) +
                        t4 * 874.81278273586565) +
                       7.8309178815200067)) +
               (-t8 * ((eta * 11.819197562404259 + t2 * 77.130144004951234) -
                       40.888635805741352) +
                t9 * (eta * 39.084702134535412 - 59.913713396031412))) +
              (-t7 * (((eta * 190.67489926625021 - t2 * 787.24183010376828) +
                       t3 * 769.0792163730614) +
                      1.0891560510154761) -
               1.0);
  sdvals[6] = (((t10 * -1909.5819671373929 + t247) -
                xi * ((((eta * -4253.1043381817644 + t2 * 11383.140633595571) -
                        t3 * 12473.7052462736) +
                       t4 * 4838.6065191937441) +
                      523.741598402651)) +
               -t8 * ((eta * -21402.56249127963 + t2 * 17841.233483155909) +
                      5706.8812802657212)) +
              (-t7 * (((eta * 15604.03953004106 - t2 * 26819.705334835751) +
                       t3 * 14203.211557134389) -
                      2674.636785793331) +
               t9 * (5434.5301599351887 - eta * 9869.92189248981));
  sdvals[7] = ((t10 * -1973.9843784979621 -
                t7 * (((eta * 11383.140633595571 - t2 * 18710.5578694104) +
                       t3 * 9677.2130383874883) -
                      2126.5521690908822)) +
               (-t8 * ((eta * -17879.803556557159 + t2 * 14203.211557134389) +
                       5201.3465100136864) +
                t9 * (5350.6406228199066 - eta * 8920.6167415779528))) +
              -xi * ((((eta * -2283.2723954956632 + t2 * 5890.6276045152317) -
                       t3 * 6349.9475794184191) +
                      t4 * 2447.435303496602) +
                     304.49665027054482);
  sdvals[8] = ((((t10 * 2384.7819671373909 + t249) +
                 t9 * (eta * 9246.1802031055759 - 6427.8308128364279)) +
                t7 * (((eta * 10534.955043507351 - t2 * 12649.01442532062) +
                       t3 * 4473.4154919239872) -
                      2554.60647274633)) +
               -xi * ((((eta * 1925.415945149103 - t2 * 2796.7147487481911) +
                        t3 * 1140.6911897399791) +
                       t4 * 131.1986430720394) -
                      390.81063245440771)) +
              t8 * ((eta * -17708.903961651991 + t2 * 11286.55879755467) +
                    6222.2825860682042);
  sdvals[9] = (((t10 * 1849.2360406211151 +
                 t8 * ((eta * -8432.6762835470818 + t2 * 4473.4154919239872) +
                       3511.6516811691158)) +
                -t7 * (((eta * -2796.7147487481911 + t2 * 1711.0367846099689) +
                        t3 * 262.39728614407892) +
                       962.70797257455126)) +
               xi * ((((eta * 191.5731277845496 - t2 * 1282.9201768747189) +
                       t3 * 1987.663174321927) -
                      t4 * 934.35249443449084) +
                     33.146170823472389)) +
              t9 * (eta * 5643.2793987773348 - 4427.2259904129987);
  sdvals[10] =
      (((t10 * -2534.4 + t245) +
        xi * ((((eta * 285.27971618228588 + t2 * 1433.213952003249) -
                t3 * 2732.9003022531192) +
               t4 * 1252.099291793028) -
              243.2)) +
       t9 * (6336.0 - eta * 6324.2873670291874)) +
      (t7 * (((eta * -4107.0848960993317 + t2 * 181.96165777488221) +
              t3 * 1994.287812775093) +
             1958.4) -
       t8 * ((eta * -9878.149187635976 + t2 * 2946.7783785077709) + 5529.6));
  sdvals[11] = (((t10 * -1264.857473405837 +
                  t9 * (2469.537296908994 - eta * 1473.3891892538859)) +
                 xi * ((((eta * -343.20201900884427 + t2 * 1024.4392777401979) -
                         t3 * 1034.5491490593311) +
                        t4 * 335.24960208522123) +
                       15.308617105477881)) +
                t8 * ((eta * 121.30777184992149 + t2 * 1994.287812775093) -
                      1369.028298699777)) +
               t7 * (((eta * 1433.213952003249 - t2 * 4099.3504533796777) +
                      t3 * 2504.198583586056) +
                     142.63985809114291);
  sdvals[12] =
      ((((t10 * 2384.7819671373932 +
          (((((t130 - t72) + t143) - t134) - t179) - 4.0999296261534823)) +
         t9 * (eta * 2250.118733901516 - 5496.0790228505311)) +
        -t7 * (((eta * 324.11664000339971 - t2 * 4780.1786999220731) +
                t3 * 2943.6297908065112) +
               1393.0760798136239)) +
       xi * ((((eta * 343.16853977960909 - t2 * 1831.62081342463) +
               t3 * 1928.97153052033) -
              t4 * 614.27210952021881) +
             161.03202950760229)) +
      -t8 * ((eta * 1894.080802879399 + t2 * 2673.8681689937071) -
             4358.7790060964044);
  sdvals[13] = ((t10 * 450.02374678030321 -
                 t7 * (((eta * 1831.62081342463 - t2 * 2893.4572957804949) +
                        t3 * 1228.5442190404381) -
                       171.5842698898046)) +
                -xi * ((((eta * -283.71619611961222 + t2 * 665.32926564804109) -
                         t3 * 638.7298851099938) +
                        t4 * 234.7662616521844) +
                       28.710965498033829)) +
               (-t9 * (eta * 1336.934084496854 + 473.5202007198497) -
                t8 * ((eta * -3186.785799948048 + t2 * 2943.6297908065112) +
                      108.03888000113319));
  sdvals[14] = (((t10 * -1909.581967137392 + t250) -
                 t8 * ((eta * 1952.789147126487 - t2 * 3118.917447169636) +
                       3064.580311898892)) +
                -xi * ((((eta * 444.145704871433 - t2 * 1265.3218882981851) +
                         t3 * 1136.366125188139) -
                        t4 * 411.89164573894283) +
                       104.9010635593595)) +
               (t9 * (eta * 458.15878100301182 + 4113.3796757517739) +
                t7 * (((eta * 1691.164389907487 - t2 * 3815.142705900746) +
                       t3 * 1571.088555934381) +
                      934.6457667666258));
  sdvals[15] = ((t10 * 91.631756200602354 +
                 xi * ((((eta * -199.80637203789459 + t2 * 497.72804033468589) -
                         t3 * 588.95302439735565) +
                        t4 * 260.41790980126183) +
                       26.51376650840033)) +
                t8 * ((eta * -2543.4284706004969 + t2 * 1571.088555934381) +
                      563.72146330249586)) +
               (t7 * (((eta * 1265.3218882981851 - t2 * 1704.5491877822089) +
                       t3 * 823.78329147788565) -
                      222.0728524357165) +
                t9 * (eta * 1559.458723584818 - 488.19728678162159));
  sdvals[16] =
      ((t241 - xi * (((eta * 237.67530972669451 - t2 * 56.690006834354548) +
                      t3 * 203.422873822054) -
                     t4 * 243.82429584533659)) +
       sfvals_tmp * 2446.209946467904) +
      (-t8 * (eta * 3437.764284818973 - t2 * 111.5042156148529) +
       t7 * ((eta * 1524.3224958937139 + t2 * 2.91433194899023) -
             t3 * 144.34334889085349));
  sdvals[17] = (((t10 * 489.24198929358067 +
                  t7 * (((eta * 56.690006834354548 - t2 * 305.13431073308112) +
                         t3 * 487.64859169067307) -
                        118.8376548633473)) +
                 t8 * ((eta * 1.942887965993487 - t2 * 144.34334889085349) +
                       508.10749863123789)) +
                xi * ((((eta * -29.276122680302159 + t2 * 169.75100437826131) -
                        t3 * 302.27029846517308) +
                       t4 * 134.62161676325371) +
                      9.3323913491114059)) +
               t9 * (eta * 55.752107807426462 - 859.44107120474314);
  sdvals[18] = (((((((-t58 + t159) + t174) - t189) - t210) +
                  sfvals_tmp * 934.90436424995426) +
                 t7 * ((eta * 926.38919176880324 - t2 * 2750.606793132953) +
                       t3 * 345.06359681741259)) +
                -xi * (((eta * 148.731466739806 - t2 * 439.35268805918452) -
                        t3 * 261.8246117231439) +
                       t4 * 353.665516960124)) +
               -t8 * (eta * 1750.5483553944321 - t2 * 3474.7870307944422);
  sdvals[19] = (((t10 * 186.98087284999079 +
                  t7 * (((eta * 439.35268805918452 + t2 * 392.7369175847158) -
                         t3 * 707.331033920248) -
                        74.365733369903012)) +
                 t8 * ((eta * -1833.737862088635 + t2 * 345.06359681741259) +
                       308.79639725626782)) +
                -xi * ((((eta * 18.395077821999681 + t2 * 117.4297881409239) -
                         t3 * 187.82009638988691) +
                        t4 * 38.008668800726653) -
                       4.8875816611612466)) +
               t9 * (eta * 1737.3935153972211 - 437.6370888486079);
  sdvals[20] = ((t246 - sfvals_tmp * 335.90575910381551) -
                xi * (((eta * 56.9130783390404 - t2 * 882.83774483565765) +
                       t3 * 1798.0504899574819) -
                      t4 * 710.1653323279595)) +
               (t7 * ((eta * 67.257063532170676 - t2 * 2494.3989476737288) +
                      t3 * 3507.5422238600868) +
                t8 * (eta * 307.45150530566508 + t2 * 1163.3610265024481));
  sdvals[21] = (((t10 * -67.181151820763091 +
                  t9 * (eta * 581.68051325122394 + 76.86287632641627)) +
                 xi * ((((eta * -75.494576541482289 + t2 * 205.592324916491) +
                         t3 * 26.149545953766879) -
                        t4 * 168.38333338170531) +
                       2.755793486476795)) +
                t7 * (((eta * 882.83774483565765 - t2 * 2697.0757349362229) +
                       t3 * 1420.330664655919) -
                      28.4565391695202)) +
               t8 * ((eta * -1662.9326317824859 + t2 * 3507.5422238600868) +
                     22.419021177390221);
  sdvals[22] =
      (((t239 - t8 * (eta * 300.95856610257829 + t2 * 289.7948788603025)) +
        sfvals_tmp * 235.21986167778289) +
       -xi * (((eta * 69.87269598185118 - t2 * 585.239041142715) +
               t3 * 2017.5817349908091) -
              t4 * 1804.0514427169071)) +
      t7 * ((eta * 158.0100819122143 - t2 * 108.6237269800276) +
            t3 * 666.78746621055632);
  sdvals[23] = (((t10 * 47.043972335556589 -
                  t9 * (eta * 144.89743943015131 + 75.239641525644572)) +
                 xi * ((((eta * -149.37227070556349 + t2 * 876.68513194188142) -
                         t3 * 1592.19660817785) +
                        t4 * 814.0343969070201) +
                       6.3620602507886579)) +
                t7 * (((eta * 585.239041142715 - t2 * 3026.372602486214) +
                       t3 * 3608.1028854338142) -
                      34.93634799092559)) +
               t8 * ((eta * -72.415817986685042 + t2 * 666.78746621055632) +
                     52.670027304071432);
  sdvals[24] =
      (((t236 + t8 * (eta * 452.465279816501 - t2 * 216.776947978943)) -
        sfvals_tmp * 260.44219319004742) +
       xi * (((eta * 70.341543836722 - t2 * 258.53470007381338) +
              t3 * 422.41453145612121) -
             t4 * 152.51274368482311)) +
      -t7 * ((eta * 293.031860102301 - t2 * 589.80777119141635) +
             t3 * 661.43876915839007);
  sdvals[25] = (((t10 * -52.088438638009478 -
                  t8 * ((eta * -393.20518079427762 + t2 * 661.43876915839007) +
                        97.677286700767)) +
                 -t7 * (((eta * 258.53470007381338 - t2 * 633.62179718418167) +
                         t3 * 305.02548736964621) -
                        35.170771918361)) +
                t9 * (113.1163199541253 - eta * 108.38847398947151)) +
               xi * ((((eta * -184.29076889321291 + t2 * 1329.6576193348451) -
                       t3 * 3148.6605193603532) +
                      t4 * 2301.9054035494551) +
                     4.1133803376950979);
  sdvals[26] =
      (((t237 - t7 * ((eta * 69.285443666509337 + t2 * 452.73327861260168) -
                      t3 * 801.686233143955)) -
        sfvals_tmp * 133.8814180037671) +
       t8 * (eta * 234.4506629577059 - t2 * 48.498893223027082)) +
      -xi * (((eta * 58.509547943343676 - t2 * 769.74956398376537) +
              t3 * 1896.2649426628011) -
             t4 * 1270.3251234937411);
  sdvals[27] = (((((((eta * -104.9010635593595 + t2 * 934.6457667666258) -
                     t3 * 3064.580311898892) +
                    t4 * 4113.3796757517739) -
                   t5 * 1909.581967137392) -
                  t10 * 26.77628360075342) +
                 t7 * (((eta * 769.74956398376537 - t2 * 2844.3974139942011) +
                        t3 * 2540.6502469874831) -
                       29.254773971671838)) +
                (t9 * (58.612665739426483 - eta * 24.249446611513541) -
                 t8 * ((eta * 301.82218574173447 - t2 * 801.686233143955) +
                       23.09514788883644))) +
               (xi * ((((eta * -357.47077568212552 + t2 * 1421.2926046323109) -
                        t3 * 1622.529904921179) +
                       t4 * 321.60858235491821) +
                      17.878792850430361) +
                2.6347468714048672);
  sdvals[28] = (((t226 + sfvals_tmp * 37.073101073197151) +
                 t8 * (eta * 37.894498727419119 - t2 * 557.76847565891853)) +
                -t7 * ((eta * 219.59102346799111 - t2 * 1840.569395591438) +
                       t3 * 2241.517579844653)) +
               xi * (((eta * 158.638484992542 - t2 * 1334.959911707329) +
                      t3 * 2424.73772309972) -
                     t4 * 923.81591780249551);
  sdvals[29] = (((((((eta * 161.03202950760229 - t2 * 1393.0760798136239) +
                     t3 * 4358.7790060964044) -
                    t4 * 5496.0790228505311) +
                   t5 * 2384.7819671373932) +
                  t10 * 7.41462021463943) +
                 (-t8 * ((eta * -1227.046263727626 + t2 * 2241.517579844653) +
                         73.197007822663693) +
                  t9 * (9.47362468185478 - eta * 278.88423782945932))) +
                xi * ((((eta * 215.97487906399871 + t2 * 192.823910482859) -
                        t3 * 2711.5401829536531) +
                       t4 * 2679.3574488691661) -
                      18.910549943948041)) +
               (-t7 * (((eta * 1334.959911707329 - t2 * 3637.1065846495808) +
                        t3 * 1847.631835604991) -
                       79.319242496271016) -
                4.0999296261534823);
  sdvals[30] = ((t230 + sfvals_tmp * 169.0922706775747) -
                xi * (((eta * 259.82709098335209 - t2 * 1204.123658766523) -
                       t3 * 279.06292192641888) +
                      t4 * 1497.2183482746659)) +
               (-t8 * (eta * 649.04499217903413 - t2 * 2095.9007311464311) +
                t7 * ((eta * 727.60837296745751 - t2 * 3509.657998739116) +
                      t3 * 1766.405872917408));
  sdvals[31] =
      (((((((eta * -243.2 + t2 * 1958.4) - t3 * 5529.6) + t4 * 6336.0) -
          t5 * 2534.4) +
         t10 * 33.818454135514941) +
        (t7 * (((eta * 1204.123658766523 + t2 * 418.59438288962832) -
                t3 * 2994.4366965493318) -
               129.913545491676) +
         t9 * (eta * 1047.9503655732151 - 162.2612480447585))) +
       xi * ((((eta * 325.39552594183169 - t2 * 4171.1434350599129) +
               t3 * 9926.0702803839886) -
              t4 * 6348.27201562688) +
             9.4202150784337917)) +
      (t8 * ((eta * -2339.7719991594108 + t2 * 1766.405872917408) +
             242.53612432248579) +
       6.4);
  sdvals[32] = ((t228 - sfvals_tmp * 814.49625946950732) -
                t7 * ((eta * 985.466800854881 + t2 * 2801.4799337267832) -
                      t3 * 5269.2052804918994)) +
               (t8 * (eta * 1665.170419433518 + t2 * 349.61106691095159) +
                xi * (((eta * 83.986022299016042 + t2 * 3385.5094034645331) -
                       t3 * 9338.0598116127567) +
                      t4 * 6087.063613757502));
  sdvals[33] = (((((((eta * 390.81063245440771 - t2 * 2554.60647274633) +
                     t3 * 6222.2825860682042) -
                    t4 * 6427.8308128364279) +
                   t5 * 2384.7819671373909) -
                  t10 * 162.89925189390149) +
                 (-t8 * ((eta * 1867.653289151189 - t2 * 5269.2052804918994) +
                         328.48893361829357) +
                  t9 * (eta * 174.8055334554758 + 416.29260485837949))) +
                xi * ((((eta * -2096.2044374961388 + t2 * 11173.2379018578) -
                        t3 * 18606.18700823906) +
                       t4 * 9674.4786326299472) +
                      44.4405399553986)) +
               (t7 * (((eta * 3385.5094034645331 - t2 * 14007.08971741914) +
                       t3 * 12174.127227515) +
                      41.993011149508021) -
                11.337970451091);
  sdvals[34] = ((((((t39 - t24) + t69) - t37) - t49) +
                 t8 * (eta * 6059.5037180307372 - t2 * 9512.5002716850468)) +
                xi * (((eta * 2236.614081074501 - t2 * 11295.52678947743) +
                       t3 * 17807.576944537421) -
                      t4 * 8906.6355911906485)) +
               (sfvals_tmp * -2302.23345622804 -
                t7 * ((eta * 5695.2905792492847 - t2 * 18457.212234676532) +
                      t3 * 14063.2575111531));
  sdvals[35] = (((((((eta * -523.741598402651 + t2 * 2674.636785793331) -
                     t3 * 5706.8812802657212) +
                    t4 * 5434.5301599351887) -
                   t5 * 1909.5819671373929) -
                  t10 * 460.446691245608) +
                 (-t8 * ((eta * -12304.808156451019 + t2 * 14063.2575111531) +
                         1898.430193083095) +
                  t9 * (1514.8759295076841 - eta * 4756.2501358425234))) +
                -t7 * (((eta * 11295.52678947743 - t2 * 26711.365416806129) +
                        t3 * 17813.2711823813) -
                       1118.30704053725)) +
               (-xi * ((((eta * -4262.4794166832626 + t2 * 15704.88542351328) -
                         t3 * 21621.21568515855) +
                        t4 * 10007.536648714229) +
                       302.70923892207122) +
                28.40315320583964);
  sdvals[36] = (((t225 + sfvals_tmp * 7523.9905718300979) -
                 t8 * (eta * 18265.612977400931 - t2 * 25004.721625613722)) +
                t7 * ((eta * 15178.56357249609 - t2 * 42345.570208351593) +
                      t3 * 28433.673907150369)) +
               -xi * (((eta * 4830.9808690073742 - t2 * 20674.22457957147) +
                       t3 * 28370.801151798871) -
                      t4 * 12601.346267050611);
  sdvals[37] = ((t10 * 1504.798114366019 +
                 xi * ((((eta * -4899.1359103297691 + t2 * 15536.0474989005) -
                         t3 * 18863.41216521497) +
                        t4 * 7845.82061589628) +
                       417.5743736558706)) +
                (t9 * (eta * 12502.360812806861 - 4566.4032443502329) +
                 t7 * (((eta * 20674.22457957147 - t2 * 42556.20172769831) +
                        t3 * 25202.69253410121) -
                       2415.4904345036871))) +
               t8 * ((eta * -28230.380138901059 + t2 * 28433.673907150369) +
                     5059.52119083203);
  sdvals[38] =
      (((t234 - t7 * ((eta * 17871.459024992419 - t2 * 40816.107979019092) +
                      t3 * 22652.9606930379)) -
        sfvals_tmp * 11934.236936905691) +
       t8 * (eta * 25734.9261159761 - t2 * 29728.687742519149)) +
      xi * (((eta * 4184.6559122492326 - t2 * 13822.201306549719) +
             t3 * 14644.67184591461) -
            t4 * 4985.4071637298284);
  sdvals[39] = (((t10 * -2386.8473873811372 -
                  t7 * (((eta * 13822.201306549719 - t2 * 21967.00776887191) +
                         t3 * 9970.8143274596569) -
                        2092.3279561246159)) +
                 t9 * (6433.7315289940252 - eta * 14864.343871259571)) +
                xi * ((((eta * 1339.460478970969 - t2 * 2373.55226138184) +
                        t3 * 1162.216677931033) +
                       t4 * 64.793837828681589) -
                      182.059089406699)) +
               -t8 * ((eta * -27210.738652679389 + t2 * 22652.9606930379) +
                      5957.1530083308062);
  sdvals[40] = ((t242 + sfvals_tmp * 11476.989002552929) -
                xi * (((eta * 2181.52868956182 - t2 * 4279.96484868431) +
                       t3 * 2016.063564803592) +
                      t4 * 38.537350806487943)) +
               (t7 * ((eta * 12221.77605018201 - t2 * 19428.52139579743) +
                      t3 * 6971.541333286963) -
                t8 * (eta * 21451.26744136036 - t2 * 18708.7930500148));
  sdvals[41] = ((t10 * 2295.397800510586 -
                 t7 * (((eta * -4279.96484868431 + t2 * 3024.095347205388) +
                        t3 * 77.074701612975872) +
                       1090.76434478091)) +
                xi * ((((eta * -381.55982376842792 + t2 * 436.65814157160281) -
                        t3 * 310.86212806779781) +
                       t4 * 193.42337747108209) +
                      84.258054549746035)) +
               (t8 * ((eta * -12952.34759719829 + t2 * 6971.541333286963) +
                      4073.9253500606692) +
                t9 * (eta * 9354.3965250074016 - 5362.8168603400909));
  sdvals[42] = ((((((t22 - t25) + t131) - t103) - t139) +
                 xi * (((eta * 965.84181873994646 - t2 * 870.42112176152455) +
                        t3 * 90.813334866811545) -
                       t4 * 139.27338629391929)) -
                sfvals_tmp * 7846.0627131019137) +
               (t8 * (eta * 12520.00493083873 - t2 * 6180.4984388610574) +
                t7 * ((eta * -6020.4819704124548 + t2 * 4506.176018102633) +
                      t3 * 101.2864693435146));
  sdvals[43] = ((t10 * -1569.2125426203829 -
                 t7 * (((eta * 870.42112176152455 - t2 * 136.22000230021729) +
                        t3 * 278.54677258783857) -
                       482.92090936997317)) +
                (t8 * ((eta * 3004.1173454017548 + t2 * 101.2864693435146) -
                       2006.8273234708181) +
                 t9 * (3130.001232709682 - eta * 3090.2492194305291))) +
               -xi * ((((eta * -121.3925759419967 + t2 * 340.61096232591922) -
                        t3 * 676.1355685964304) +
                       t4 * 396.55458344839752) +
                      36.882275988453422);
  sdvals[44] =
      (((t238 + t8 * (eta * 1418.4844098157751 - t2 * 10231.057056348371)) -
        sfvals_tmp * 62.739882357394379) +
       xi * (((eta * 338.073518886543 - t2 * 2805.4223062584952) +
              t3 * 2061.262164314729) +
             t4 * 269.92736839493938)) +
      -t7 * ((eta * 1500.783964519776 - t2 * 12212.596110086841) +
             t3 * 7651.6447855260294);
  sdvals[45] = ((t10 * -12.547976471478879 -
                 t8 * ((eta * -8141.7307400578893 + t2 * 7651.6447855260294) +
                       500.261321506592)) +
                xi * ((((eta * 143.591130186795 + t2 * 291.98954197693558) -
                        t3 * 1194.2900276950591) +
                       t4 * 701.4782921193306) -
                      10.84856391914418)) +
               (t9 * (354.62110245394359 - eta * 5115.5285281741844) +
                t7 * (((eta * -2805.4223062584952 + t2 * 3091.8932464720938) +
                       t3 * 539.85473678987887) +
                      169.03675944327151));
  sdvals[46] = (((((((t33 - t46) + t109) - t70) - t128) -
                  sfvals_tmp * 193.43960044828171) +
                 t8 * (eta * 462.1153208609831 - t2 * 847.39949614093234)) +
                xi * (((eta * 332.69181909951129 - t2 * 3328.2397223974322) +
                       t3 * 8891.2754852993057) -
                      t4 * 5595.6045401103474)) +
               -t7 * ((eta * 663.77128600780941 - t2 * 4639.6508678930713) +
                      t3 * 8361.16389891704);
  sdvals[47] = ((t10 * -38.687920089656338 -
                 t7 * (((eta * 3328.2397223974322 - t2 * 13336.91322794896) +
                        t3 * 11191.209080220689) -
                       166.34590954975559)) +
                (-t8 * ((eta * -3093.1005785953812 + t2 * 8361.16389891704) +
                        221.2570953359365) +
                 t9 * (115.5288302152458 - eta * 423.69974807046623))) +
               -xi * ((((eta * -490.17195020250642 + t2 * 2275.0616674746111) -
                        t3 * 2876.42891769905) +
                       t4 * 919.547955142017) +
                      21.92972433940859);
  sdvals[48] = ((((((-t16 + t29) - t45) - t88) + t165) -
                 xi * (((eta * 117.09632519052749 + t2 * 52.6798344333399) -
                        t3 * 1877.581155901994) +
                       t4 * 2542.9143742426918)) +
                (t7 * ((eta * 689.549688604093 - t2 * 2025.184544422817) +
                       t3 * 1439.114329424769) +
                 sfvals_tmp * 395.59993637514162)) +
               -t8 * (eta * 907.62093548100779 - t2 * 1303.77719017234);
  sdvals[49] = (((t10 * 79.119987275028308 -
                  t7 * (((eta * 52.6798344333399 - t2 * 2816.3717338529909) +
                         t3 * 5085.8287484853836) +
                        58.54816259526374)) +
                 t8 * ((eta * -1350.1230296152121 + t2 * 1439.114329424769) +
                       229.84989620136429)) +
                -xi * ((((eta * -824.74602355602622 + t2 * 5522.9385806079736) -
                         t3 * 11825.8426217216) +
                        t4 * 7521.688266641062) +
                       23.516487010876968)) +
               t9 * (eta * 651.88859508617 - 226.90523387025189);
  sdvals[50] =
      ((t224 - xi * (((eta * 50.494541559974117 - t2 * 3165.856130343102) +
                      t3 * 11753.797606520789) -
                     t4 * 9002.69504813966)) +
       (t8 * (eta * 1606.059582386815 - t2 * 2259.5280371822269) -
        sfvals_tmp * 698.98862246947533)) +
      t7 * ((eta * -913.86779219387211 + t2 * 113.7133468915184) +
            t3 * 5067.7263902905052);
  sdvals[51] = ((t10 * -139.79772449389509 +
                 xi * ((((eta * -2090.1783632024089 + t2 * 12271.83559784201) -
                         t3 * 22002.78596237041) +
                        t4 * 11935.10554585667) +
                       68.152697075135762)) +
                (t9 * (401.51489559670381 - eta * 1129.764018591113) +
                 t7 * (((eta * 3165.856130343102 - t2 * 17630.696409781191) +
                        t3 * 18005.39009627932) -
                       25.247270779987058))) +
               t8 * ((eta * 75.8088979276789 + t2 * 5067.7263902905052) -
                     304.62259739795729);
  sdvals[52] =
      ((((((-t23 + t52) + t71) - t66) - t77) + sfvals_tmp * 916.3213057494836) -
       t7 * ((eta * 842.53749919763618 - t2 * 17843.960729038281) +
             t3 * 19701.275987586971)) +
      (xi * (((eta * 892.69858119379774 - t2 * 11906.964637219789) +
              t3 * 24443.417543223732) -
             t4 * 13597.74736188267) -
       t8 * (eta * 794.3859170760602 + t2 * 7521.490552267408));
  sdvals[53] = ((t10 * 183.2642611498967 -
                 xi * ((((eta * -3815.5865565100021 + t2 * 16728.580455682779) -
                         t3 * 24455.960122721011) +
                        t4 * 11477.0929214788) +
                       150.17123941190181)) +
                (-t9 * (eta * 3760.745276133704 + 198.596479269015) -
                 t7 * (((eta * 11906.964637219789 - t2 * 36665.126314835587) +
                        t3 * 27195.49472376534) -
                       446.34929059689892))) +
               -t8 * ((eta * -11895.97381935886 + t2 * 19701.275987586971) +
                      280.84583306587871);
  sdvals[54] = (((((t79 + t133) - t117) - t137) - t184) -
                xi * (((eta * 1113.4343375190181 - t2 * 9256.369360802044) +
                       t3 * 14188.08615940201) -
                      t4 * 5944.3659832188487)) +
               ((t7 * ((eta * 3446.5843003188711 - t2 * 23737.11840130169) +
                       t3 * 19880.649014127881) +
                 sfvals_tmp * 680.46786104529576) -
                t8 * (eta * 3114.3859023092259 - t2 * 14616.695744416609));
  sdvals[55] = ((t10 * 136.09357220905909 +
                 t8 * ((eta * -15824.7456008678 + t2 * 19880.649014127881) +
                       1148.8614334396241)) +
                -xi * ((((eta * 840.79051169444233 - t2 * 1810.462568626011) +
                         t3 * 387.32502604588637) +
                        t4 * 683.09824602388494) -
                       50.3586386881329)) +
               (t7 * (((eta * 9256.369360802044 - t2 * 21282.129239103018) +
                       t3 * 11888.7319664377) -
                      556.717168759509) +
                t9 * (eta * 7308.3478722083046 - 778.59647557730659));
}

} // namespace sfe_sfuncs

// End of code generation (sfe_shapefuncs_rowmajor.cpp)
